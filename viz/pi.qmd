---
format:
  html:
    code-fold: show
    code-summary: "Ocultar código"
    code-line-numbers: false
    code-annotations: false
    code-link: true
    code-tools:
        source: true
        toggle: true
        caption: "Código"
    code-overflow: scroll
    page-layout: full
editor_options:
  chunk_output_type: console
categories: ["geom_point"]
execute:
  eval: false
  echo: true
  warning: false
title: "Día pi"
date: 2025-03-14
author: Víctor Gauto
---

# {{< iconify hugeicons:pi >}}

El 14 de marzo se celebra el día {{< iconify hugeicons:pi >}}.

Existen muchas formas de expresar este número.

## Paquetes
```{r}
library(glue)
library(showtext)
library(ggtext)
library(tidyverse)
```

## Función

Función que genera un `tibble` a partir de la cantidad de puntos dada.

```{r}
f_pi <- function(z) {

  set.seed(2025)

  d <- tibble(
    x = runif(n = z, min = -1, max = 1),
    y = runif(n = z, min = -1, max = 1),
    r = sqrt(x^2 + y^2),
    estado = if_else(r <= 1, "in", "out"),
    grupo = paste0("p", format(z, scientific = FALSE))
  )

  return(d)
}
```

<!-- # https://en.wikipedia.org/wiki/Pi#Monte_Carlo_methods -->

## Colores y fuentes

```{r}
c1 <- "#E88934"
c2 <- "#1E466E"
c3 <- "grey60"
c4 <- "black"

c5 <- "#637B31"
c6 <- "#208CC0"
c7 <- "#7528AF"

c8 <- "grey90"
```

Fuentes: Ubuntu y JetBrains Mono.

```{r}
font_add(
  family = "ubuntu",
  regular = "./fuente/Ubuntu-Regular.ttf",
  bold = "./fuente/Ubuntu-Bold.ttf",
  italic = "./fuente/Ubuntu-Italic.ttf"
)

# monoespacio & íconos
font_add(
  family = "jet",
  regular = "./fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf"
)

showtext_auto()
showtext_opts(dpi = 300)
```

## Epígrafe

```{r}
autor <- glue("<span style='color:{c2};'>**Víctor Gauto**</span>")
icon_twitter <- glue("<span style='font-family:jet;'>&#xf099;</span>")
icon_instagram <- glue("<span style='font-family:jet;'>&#xf16d;</span>")
icon_github <- glue("<span style='font-family:jet;'>&#xf09b;</span>")
icon_mastodon <- glue("<span style='font-family:jet;'>&#xf0ad1;</span>")
icon_bsky <- glue("<span style='font-family:jet;'>&#xe28e;</span>")
usuario <- glue("<span style='color:{c2};'>**vhgauto**</span>")
sep <- glue("**|**")

mi_caption <- glue(
  "{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} ",
  "{icon_mastodon} {icon_bsky} {usuario}"
)
```


## Datos

Símbolos útiles
```{r}
pi_etq <- "&#xe22c;"
punto_etq <- "&#xf444;"
sep_etq <- glue(" <b style='color: {c3}'>|</b> ")
```

Genero la base de datos.

```{r}
d <- map(c(1e3, 1e4, 1e5, 1e6), f_pi) |>
  list_rbind() |>
  mutate(
    grupo = fct_inorder(grupo)
  )

# calculo el valor de pi, error y genero el título para cada panel
titulo_tbl <- d |>
  reframe(
    pi_aprox = sum(estado == "in")/n()*4,
    .by = grupo
  ) |>
  mutate(
    prob = round(abs((pi_aprox - pi)/pi*100), 3),
    .by = grupo
  ) |>
  mutate(
    p = as.numeric(sub("p", "", grupo))
  ) |>
  mutate(
    etq1 = paste0(
      format(
        p, big.mark = ".", decimal.mark = ",", scientific = FALSE, trim = TRUE
      ),
      punto_etq),
    etq2 = paste0(
      pi_etq, " ≈ ",
      format(
        round(pi_aprox, 5),
        nsmall = 5, big.mark = ".", decimal.mark = ",", trim = TRUE
      )
    ),
    etq3 = paste0(
      format(
        round(prob, 3),
        nsmall = 3, big.mark = "", decimal.mark = ",", trim = TRUE
      ),
      "%"
    )
  ) |>
  mutate(
    etq1 = glue("<span style='color: {c5}'>{etq1}</span>"),
    etq2 = glue("<span style='color: {c6}'>{etq2}</span>"),
    etq3 = glue("<span style='color: {c7}'>{etq3}</span>")
  ) |>
  mutate(
    etq = glue("{etq1}{sep_etq}{etq2}{sep_etq}{etq3}")
  )

strip_titulo <- set_names(
  x = titulo_tbl$etq,
  nm = titulo_tbl$grupo
)
```

## Figura

Ecuación para el título utilizo una expresión en `LaTeX`.

```{r}
eq <- latex2exp::TeX(r"($\lim_{n\to\infty} \frac{t}{n} = \frac{\pi}{4} $)")
```

Subtítulo y figura.

```{r}
mi_subtitulo <- glue(
  "*t* es el número de <b style='color: {c1}'>puntos dentro del círculo</b> y
  <span style='color: {c5}'>*n* es el total</span>,
  aleatoriamente ubicados.<br>
  Para cada panel se indican <b style='color: {c5}'>n</b>, el
  <b style='color: {c6}'>valor aproximado de
  <span style='font-family: jet'>{pi_etq}</span></b>
  y el <b style='color: {c7}'>error porcentual</b>."
)

g <- ggplot(d, aes(x, y, color = estado)) +
  geom_point(
    size = .1, alpha = .5, show.legend = FALSE
  ) +
  facet_wrap(vars(grupo), ncol = 2,
             labeller = as_labeller(strip_titulo)
             ) +
  scale_color_manual(
    breaks = c("in", "out"),
    values = c(c1, c2)
  ) +
  coord_equal(clip = "off", expand = FALSE) +
  labs(
    title = eq, subtitle = mi_subtitulo, caption = mi_caption
  ) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = c8, color = NA),
    plot.margin = margin(r = 15, l = 15),
    plot.title = element_text(
      family = "sans serif", size = 40, hjust = .5, margin = margin(t = 20),
      color = c2
    ),
    plot.subtitle = element_markdown(
      size = 22, hjust = .5, margin = margin(t = 15, b = 25), lineheight = 1.4
    ),
    plot.caption = element_markdown(
      family = "ubuntu", color = c1, size = 15, margin = margin(t = 20, b = 15)
    ),
    panel.spacing.x = unit(1, "cm"),
    strip.text = element_markdown(
      family = "jet", size = 15, margin = margin(t = 10, b = 5), color = c4
    )
  )
```

Guardo la figura creada.

```{r}
ggsave(
  plot = g,
  filename = paste0(getwd(), "/viz/pi.png"),
  width = 30,
  height = 37,
  units = "cm"
)
```
