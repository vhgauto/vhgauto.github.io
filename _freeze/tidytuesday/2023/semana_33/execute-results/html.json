{
  "hash": "93c17585bdb5a6c68f6f652c397fca65",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 33\"\nsubtitle: \"Figura semana 33\"\nauthor: Víctor Gauto\ndate: \"2023-08-20\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_hline, geom_text, geom_freqpoly]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_33/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores, Nord\nc1 <- \"#AD8CAE\"\nc2 <- \"#EDDAEB\"\nc3 <- \"#222B4C\"\nc4 <- \"white\"\nc5 <- \"black\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# números, porcentajes, cantidades\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# eje horizontal, temporadas\nfont_add_google(name = \"Tilt Prism\", family = \"tilt\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\"Datos: <span style='color:{c3};'><span style='font-family:mono;'>{{<b>tidytuesdayR</b>}}</span> semana 33. *spam* dataset en {{kernlab}}</span>\")\nautor <- glue(\"Autor: <span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:fa-brands;'>&#xf099;</span>\")\nicon_github <- glue(\"<span style='font-family:fa-brands;'>&#xf09b;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-08-15/readme.md\")\n\nspam <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-15/spam.csv')\n\n# me interesan los elementos relativos al dinero: money, dollar, n000\n# cómo se diferencian los e-mails que son o NO son spam\n\n# tiene que tener los elementos: porcentajes > 0\nd <- spam |> \n  select(dollar, money, n000, yesno) |> \n  pivot_longer(cols = -yesno, names_to = \"param\", values_to = \"valor\") |> \n  filter(valor != 0)\n\n# figura ------------------------------------------------------------------\n\n# líneas de referencia horizontales\nlineas_tbl <- tibble(\n  y = c(120, 60, 80, 40, 80, 40),\n  param = c(\"dollar\", \"dollar\", \"money\", \"money\", \"n000\", \"n000\")\n)\n\n# cantidad de datos, para agregar en las esquinas\nd_cantidad <- d |> \n  count(yesno, param) |> \n  inner_join(\n    slice_max(\n      lineas_tbl, \n      order_by = y, \n      n = 3), \n    by = join_by(param))\n\n# cantidad de e-mails que SÍ son spam\nd_yes <- d_cantidad |> \n  filter(yesno == \"y\") |> \n  mutate(label = glue(\"n = {n}\"))\n\n# cantidad de e-mails que NO son spam\nd_no <- d_cantidad |> \n  filter(yesno == \"n\") |> \n  mutate(label = glue(\"n = {n}\"))\n\n# etiquetas para los strips\netiq <- c(\n  dollar = \"**$**\",\n  money = \"**money**\",\n  n000 = \"**000**\"\n)\n\n# colores para representar SÍ/NO es spam\nyesno_colores <- c(SÍ = alpha(\"white\", .9), NO = alpha(\"black\", .9))\n\n# título y subtítulo\n# palabra SPAM en blanco y negro\nspam_blanco <- \"<b style='color:white;'>SPAM</b>\"\nspam_negro <- \"<b style='color:black;'>SPAM</b>\"\n\nmi_title <- glue(\"{spam_blanco}{spam_negro}{spam_blanco}{spam_negro}\")\n\nmi_subt <- glue(\n  \"¿Qué caracteriza al **spam**? Por lo visto, hablar de plata. \n  Al analizar {nrow(d)} e-mails, se\n  contabilizó el porcentaje de términos relativos al dinero: \n  el signo **$**, la palabra **money** y tres ceros **000**.\n  Se indican las cantidades (n) de e-mails en cada panel.\")\n\n# figura\ng <- d |> \n  mutate(yesno = if_else(yesno == \"y\", \"SÍ\", \"NO\")) |> \n  mutate(yesno = factor(yesno, levels = c(\"SÍ\", \"NO\"))) |>\n  ggplot(aes(valor, fill = yesno, color = yesno)) +\n  # horizontales\n  geom_hline(\n    data = lineas_tbl, aes(yintercept = y), \n    linetype = 3, color = c2) +\n  # cantidad, eje vertical, línea horizontal\n  geom_text(\n    data = lineas_tbl, aes(x = 0, y = y, label = y), inherit.aes = FALSE,\n    hjust = 0, vjust = 0, nudge_y = 1, family = \"victor\", color = c2, size = 3) +\n  # línea de frecuencia\n  geom_freqpoly(\n    binwidth = .075, alpha = .9) +\n  # cantidades, n, YES\n  geom_text(\n    data = d_yes, aes(2, y, label = label), inherit.aes = FALSE,\n    hjust = 0, vjust = 0, color = yesno_colores[\"SÍ\"], nudge_y = +1,\n    family = \"victor\", size = 4, fontface = \"bold\") +\n  # cantidades, n, NO\n  geom_text(\n    data = d_no, aes(2, y, label = label), inherit.aes = FALSE,\n    hjust = 0, vjust = 1, color = yesno_colores[\"NO\"], nudge_y = -1,\n    family = \"victor\", size = 4, fontface = \"bold\") +\n  # facetas\n  facet_wrap(vars(param), scales = \"free\", labeller = as_labeller(etiq)) +\n  # escalas\n  scale_x_log10(\n    breaks = c(.01, .1, 1, 10),\n    labels = c(\"0,01%\", \"0,1%\", \"1%\", \"10%\")) +\n  scale_y_continuous(expand = c(0, 0)) +\n  scale_color_manual(\n    values = yesno_colores, \n    labels = c(\"<b style='color:white;'>SÍ</b>\", \"<b style='color:black;'>NO</b>\")) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = mi_title,\n    subtitle = mi_subt,\n    x = \"Porcentaje del total de caracteres del e-mail<br><span style='font-size:10pt'>*escala logarítmica*</span>\",\n    y = \"Cantidad\",\n    color = \"¿Es spam?    \",\n    caption = mi_caption) +\n  guides(\n    color = guide_legend(\n      override.aes = list(linewidth = 4))\n  ) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    plot.background = element_rect(\n      fill = c1, color = c2, linewidth = 3),\n    plot.margin = margin(15, 20, 10, 15),\n    plot.title = element_markdown(size = 76, family = \"tilt\"),\n    plot.subtitle = element_textbox_simple(\n      family = \"ubuntu\", size = 14, color = c3),\n    plot.caption = element_markdown(\n      hjust = 1, color = c2, margin = margin(10, 0, 0, 0)),\n    axis.text.x = element_text(color = c2, family = \"victor\"),\n    axis.text.y = element_blank(),\n    axis.title.x = element_markdown(\n      color = c3, margin = margin(10, 0, 5, 0), family = \"ubuntu\", size = 17),\n    axis.title.y = element_markdown(color = c3, family = \"ubuntu\", size = 17),\n    axis.ticks.x = element_line(color = c2),\n    panel.spacing.x = unit(1, \"cm\"),\n    panel.grid = element_blank(),\n    strip.text = element_markdown(\n      color = c3, family = \"ubuntu\", size = 15,\n      margin = margin(5, 0, 30, 0)),\n    legend.position = \"top\",\n    legend.margin = margin(10, 0, 5, 0),\n    legend.title = element_text(family = \"ubuntu\", color = c3, size = 14),\n    legend.text = element_markdown(family = \"ubuntu\", size = 12)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_33/viz.png\",\n  width = 30,\n  height = 19.17,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_33/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_33/viz.png)\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}