{
  "hash": "3ba1a4eb4d3865bed181928c9ccd0196",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 24\"\nsubtitle: \"Figura semana 24\"\nauthor: Víctor Gauto\ndate: \"2023-06-18\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_text, geom_textbox, geom_point]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_24/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nEncuestas a granjeros de Tanzania y Mozambique muestran sus pertenencias.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(fontawesome)\nlibrary(ggtext)\nlibrary(glue)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores\n# paleta 'Kandinsky' de MetBrewer\nc1 <- \"#3B3A3E\"\nc2 <- \"#898E9F\"\nc3 <- \"#CE9642\"\nc4 <- \"#3B7C70\"\n\nfont_add_google(name = \"DM Serif Display\", family = \"dmserif\") # título\nfont_add_google(name = \"Inconsolata\", family = \"inconsolata\") # números\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\", db_cache = FALSE) # texto gral\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# íconos\nfont_add(\"fa-reg\", \"icon/Font Awesome 6 Free-Regular-400.otf\")\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solid\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\n# caption\nfuente <- glue(\"Datos: <span style='color:{c3};'><span style='font-family:mono;'>{{<b>tidytuesdayR</b>}}</span> semana 24</span>\")\nautor <- glue(\"Autor: <span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:fa-brands;'>&#xf099;</span>\")\nicon_github <- glue(\"<span style='font-family:fa-brands;'>&#xf09b;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-06-13/readme.md\")\n\nsafi <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-06-13/safi_data.csv')\n\n# traducción de los ítems\ntraduccion <- c(\n  mobile_phone = \"celular\", radio = \"radio\", cow_plough = \"arado\", \n  solar_panel = \"panel solar\", bicycle = \"bicicleta\", \n  solar_torch = \"linterna solar\", table = \"mesa\", motorcyle = \"motocicleta\",\n  television = \"televisión\", cow_cart = \"carro\", sterio = \"estéreo\", \n  sofa_set = \"juego de sofás\", electricity = \"electricidad\", fridge = \"heladera\",\n  lorry = \"camión\", car = \"auto\", computer = \"PC\")\n\n# arreglo los datos\nd <- safi |> \n  # selecciono la columna de ítems\n  select(items_owned) |> \n  # remuevo las celdas vacías\n  filter(items_owned != \"NULL\") |> \n  # separo el contenido de las celdas de ítems, y agrego filas\n  separate_longer_delim(cols = items_owned, delim = \";\") |> \n  # cuento la cantidad de ítems\n  count(items_owned) |> \n  # ordeno\n  arrange(desc(n)) |> \n  # traduzco\n  mutate(items_owned = traduccion[items_owned]) |> \n  # convierto a factor los ítems individuales\n  mutate(items_owned = fct_reorder(items_owned, n)) \n\n\n# figura ------------------------------------------------------------------\n\n# título\ntit <- \"Granjas en África\"\n\n# subtítulos\nsub1 <- glue(\n  \"A partir de encuestas a <b>{length(unique(safi$key_ID))}</b> granjeros en \n  <b style='color:{c2}'>Tanzania</b> y <b style='color:{c2}'>Mozambique</b>, se \n  recolectó informacón sobre los artículos que poseían en el hogar.\")\nsub2 <- glue(\n  \"Pueden observarse elementos tecnológicos, de transporte y trabajo de campo.\")\n\n# figura\ng <- ggplot(data = d, aes(x = n, y = items_owned, fill = items_owned)) +\n  # título\n  geom_text(\n    x = 1, y = 17, label = tit,\n    color = c3, size = 25, hjust = 0, vjust = 1, family = \"dmserif\") +\n  # subtítulo I\n  geom_textbox(\n    x = 1, y = 14.5, label = sub1,\n    color = c4, size = 8, box.color = NA, fill = NA, hjust = 0,\n    width = unit(14, \"cm\"), family = \"ubuntu\") +\n  # subtítulo II\n  geom_textbox(\n    x = 60, y = 5, label = sub2,\n    color = c4, size = 8, box.color = NA, fill = NA, hjust = 0,\n    width = unit(12, \"cm\"), family = \"ubuntu\") +\n  # puntos\n  geom_point(\n    show.legend = FALSE, color = c4, size = 10, shape = 16) +\n  geom_point(\n    show.legend = FALSE, color = c3, size = 5,shape = 16) +\n  geom_point(\n    show.legend = FALSE, color = c1, size = 2, shape = 16) +\n  # ítems\n  geom_text(\n    aes(label = str_to_sentence(items_owned)),\n    hjust = 0, nudge_x = 3, color = c3, size = 6, family = \"ubuntu\") +\n  # ejes\n  labs(\n    x = \"Cantidad\", y = NULL, caption = mi_caption) +\n  scale_x_continuous(\n    limits = c(0, 100), expand = c(0, 0), breaks = seq(0, 100, 20)) +\n  coord_cartesian(clip = \"off\") +\n  # tema\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(5, 21.5, 5, 21.5),\n    plot.background = element_rect(\n      fill = c1, color = c2, linewidth = 3),\n    plot.caption = element_markdown(\n      color = c4, size = 12, family = \"ubuntu\", margin = margin(10, 0, 5, 0)),\n    panel.grid.major.x = element_line(\n      color = c2, linewidth = .07, linetype = \"ff\"),\n    axis.text.x = element_text(\n      size = 20, family = \"inconsolata\", color = c2),\n    axis.text.y = element_blank(),\n    axis.title.x = element_text(\n      color = c3, size = 30, family = \"ubuntu\", margin = margin(15, 0, 5, 0)))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_24/viz.png\",\n  width = 30,\n  height = 32,\n  units = \"cm\",\n  dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_24/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_24/viz.png)\n\n\n",
    "supporting": [
      "semana_24_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}