{
  "hash": "b5fd3b13a0f21fbda6bf95faaec279b3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 39\"\nsubtitle: \"Figura semana 39\"\nauthor: Víctor Gauto\ndate: \"2023-10-01\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_rect, geom_hline, geom_text, geom_richtext, geom_step, geom_from_path]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_39/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nCantidad de veces que los personajes de **Ted Lasso** dicen *fuck*.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(showtext)\nlibrary(ggtext)\nlibrary(ggpath)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"#E1C8AF\"\nc2 <- \"#E1E1E1\"\nc3 <- \"#EDDAEB\"\nc4 <- \"#647D96\"\nc5 <- \"#3B4252\"\nc6 <- \"#2E87C9\"\nc7 <- \"#4C566A\"\n\n# texto gral, títulos de eje\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# eje horizontal & vertical\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# temporada\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = FALSE)\n# fuck's\nfont_add_google(name = \"Permanent Marker\", family = \"marker\")\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\"Datos: <span style='color:{c3};'><span style='font-family:victor;'>{{<b>tidytuesdayR</b>}}</span> semana 39. <span style='font-family:victor;'>{{richmondway}}</span>, **Deepsha Menghani**</span>\")\nautor <- glue(\"Autor: <span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:fa-brands;'>&#xf099;</span>\")\nicon_github <- glue(\"<span style='font-family:fa-brands;'>&#xf09b;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-09-26/readme.md\")\n\ndatos <- richmondway::richmondway\n\nfuck <- \"<b style='font-family:marker'>FUCK</b>\"\n\n# me interesa el conteo acumulado de 'fuck' a lo largo de todos los episodios\n\n# posición de los finales de temporada, para indicar los límites de las áreas\nv <- datos |> \n  group_by(Season) |> \n  slice_max(Episode) |> \n  mutate(Episode_order = if_else(\n    Episode_order != max(datos$Episode_order), \n    Episode_order + 1, \n    Episode_order)) |> \n  pull(Episode_order)\n\n# ubicación de texto 'Temporada' en la parte superior\ne <- datos |> \n  mutate(m = median(Episode), ult = max(Episode), .by = Season) |> \n  slice_min(Episode) |> \n  mutate(eje_x = Episode_order + m - 1) |> \n  select(eje_x, Episode_order) |> \n  mutate(label = glue(\"Temporada {c('I', 'II', 'III')}\")) |> \n  mutate(v1 = v)\n\n# promedio de 'fuck' por episodio, por temporada\nh <- datos |> \n  summarise(prom = sum(F_count_total)/n(), .by = Season) |> \n  mutate(prom = gt::vec_fmt_number(prom, decimals = 1, sep_mark = \"\", dec_mark = \",\")) |> \n  mutate(eje_x = e$eje_x) |> \n  mutate(label = glue(\"{prom} {fuck}<br>por episodio\"))\n\n# figura ------------------------------------------------------------------\n\n# logo de Ted Lasso\nlogo <- \"2023/semana_39/logo.png\"\n\n# tibble para ubicar el logo\nl <- tibble(\n  x = 22,\n  y = 80,\n  path = logo\n)\n\n# límite del eje vertical, para ubicar el texto de 'Temporada' y los promedios\nlim_eje_y <- 750\n\n# título del eje vertical\ntit_eje_y <- glue(\n  \"Suma acumulada de {fuck}<br>\",\n  \"<span style='font-size:15px'>*Incluyendo todos los personajes*</span>\")\n\n# figura\ng <- ggplot(datos, aes(Episode_order, cum_total_overall)) +\n  # rectángulos que delimitan las temporadas\n  geom_rect(\n    data = e, \n    aes(xmin = Episode_order, xmax = v1, ymin = 1, ymax = lim_eje_y, fill = label), \n    show.legend = FALSE, inherit.aes = FALSE) +\n  # líneas horizontales\n  geom_hline(\n    yintercept = seq(50, lim_eje_y, 50), linetype = \"8f\", color = c4, \n    linewidth = .25) +\n  # texto 'Temporada' en la parte superior\n  geom_text(\n    data = e, aes(x = eje_x, y = lim_eje_y - 5, label = label),\n    vjust = 1, hjust = .5, color = c3, family = \"bebas\", size = 10) +\n  # texto de promedio de 'fuck' por episodio, por temporada\n  geom_richtext(\n    data = h, aes(x = eje_x, y = lim_eje_y - 33, label = label),\n    color = c3, family = \"ubuntu\", size = 5, fill = NA, label.color = NA,\n    vjust = 1) +\n  # escalera\n  geom_step(color = c6, direction = \"vh\", linewidth = 2) +\n  # logo\n  geom_from_path(data = l, aes(x, y, path = path), width = .7) +\n  # recuadro del panel\n  geom_rect(\n    aes(xmin = 1, xmax = 34, ymin = 1, ymax = lim_eje_y), color = c6,\n    fill = NA, linewidth = 1) +\n  # manual\n  scale_x_continuous(labels = datos$Episode, breaks = seq(1, 34, 1)) +\n  scale_y_continuous(\n    breaks = c(1, seq(50, lim_eje_y, 50))) +\n  nord::scale_fill_nord(palette = \"polarnight\", reverse = TRUE) +\n  coord_cartesian(expand = FALSE, clip = \"on\", ylim = c(1, lim_eje_y)) +\n  labs(\n    x = \"Episodio\",\n    y = tit_eje_y,\n    caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(30, 22.7, 10, 22.7),\n    axis.ticks.x = element_line(color = c3),\n    axis.ticks.y = element_line(color = c1),\n    axis.ticks.length = unit(1, \"line\"),\n    plot.background = element_rect(fill = c5, color = c7, linewidth = 3),\n    plot.caption = element_markdown(\n      color = c1, family = \"ubuntu\", size = 11, margin = margin(10, 0, 5, 0)),\n    axis.text.x = element_text(\n      family = \"victor\", color = c3, size = 14, margin = margin(5, 0, 0, 0),\n      face = \"bold\"),\n    axis.text.y = element_text(\n      color = c1, family = \"victor\", vjust = c(rep(c(0, .5, .5), 5), 0), hjust = 1,\n      margin = margin(0, 5, 0, 0), size = c(rep(c(15, 8, 8), 5), 15)),\n    axis.title.x = element_text(\n      color = c3, family = \"ubuntu\", size = 20, margin = margin(10, 0, 0, 0)),\n    axis.title.y = element_markdown(\n      color = c1, family = \"ubuntu\", size = 20, angle = 90, \n      margin = margin(0, 10, 0, 0))\n  ); ggsave(\n    plot = g,\n    filename = \"2023/semana_39/viz.png\",\n    width = 30,\n    height = 30,\n    units = \"cm\"\n  ); browseURL(\"2023/semana_39/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_39/viz.png)\n\n\n",
    "supporting": [
      "semana_39_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}