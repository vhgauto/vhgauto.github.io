{
  "hash": "70c837b60511b92e4a556160153a148f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 21\"\nsubtitle: \"Figura semana 21\"\nauthor: Víctor Gauto\ndate: \"2023-05-28\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_rot, geom_sf, geom_text]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_21/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nArdillas en Central Park.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuentes -----------------------------------------------------------------\n\n# título\nfont_add_google(name = \"Playfair Display\", family = \"playfair\", db_cache = TRUE)\n# resto del texto\nfont_add_google(name = \"Schibsted Grotesk\", family = \"grotesk\", db_cache = FALSE)\n# cantidad (n)\nfont_add_google(name = \"Inconsolata\", family = \"inconsolata\", db_cache = FALSE)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# MetBrewer: Manet\nc1 <- \"#ede2cc\"\nc2 <- \"#7ec5f4\"\nc3 <- \"#4585b7\"\nc4 <- \"#215e92\"\nc5 <- \"#d29c44\"\n\n# caption\nfuente <- glue(\"Datos: <span style='color:{c3};'><span style='font-family:mono;'>{{<b>tidytuesdayR</b>}}</span> semana 21</span>\")\nautor <- glue(\"Autor: <span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:fa-brands;'>&#xf099;</span>\")\nicon_github <- glue(\"<span style='font-family:fa-brands;'>&#xf09b;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-05-23/readme.md\")\n\nardillas <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-23/squirrel_data.csv')\n\n# convierto tibble a sf\nardillas_sf <- ardillas |> \n  st_as_sf(coords = c(\"X\", \"Y\")) |> \n  st_set_crs(value = 4326)\n\n# función que permite la rotación de las geometrías\nbrowseURL(\"https://r-spatial.github.io/sf/articles/sf3.html#affine-transformations\")\n\nrot = function(a) matrix(c(cos(a), sin(a), -sin(a), cos(a)*2), 2, 2)\n\n# rotación de los datos\nardillas_sf_rot <- ardillas_sf %>% \n  mutate(geom_rot = st_geometry(.)*rot(-36.5*pi/180)) %>%\n  st_drop_geometry() %>%\n  rename(geometry = geom_rot) %>%\n  st_set_geometry(\"geometry\")\n\n# colores\ncolores <- MetBrewer::met.brewer(\n  palette_name = \"Wissing\", n = 5, override.order = TRUE) |> \n  as.character()\n\n# traducciones de las actividades\ntr <- c(Chasing = \"Persiguiendo\", Eating = \"Comiendo\", Climbing = \"Escalando\",\n        Running = \"Corriendo\", Foraging = \"Recolectando<br>comida\")\n\n# asigno los colores a cada actividad\nnames(colores) <- names(tr)\n\n# quito los nombres del vector p/usar en ggplot()\ncolores2 <- colores\nnames(colores2) <- NULL\n\n# acomodo datos\ndatos <- ardillas_sf_rot |> \n  # selecciono actividades\n  select(ends_with(\"ing\")) |> \n  # tabla larga\n  pivot_longer(cols = -geometry, \n               names_to = \"actividad\") |> \n  # sólo las actividades que sí estaban sucediendo\n  filter(value == TRUE) |> \n  select(-value) |> \n  # agrego traducciones\n  mutate(ac = tr[actividad]) |> \n  # agrego colores\n  mutate(col = colores[actividad]) |> \n  # agrego color a las actividades (strip)\n  mutate(accion = glue(\"<b style='color:{col};'>{ac}</span>\")) |> \n  select(-actividad, -ac)\n\n# cantidad de observaciones por actividad\nn_datos <- datos |> \n  count(accion, col)\n\n# leo .geojson con mapa de Central Park, de Open Street Map\njs <- st_read(\"2023/semana_21/OSM_central_park.geojson\")\n\n# selecciono únicamente los cuerpos de agua\nw <- js |> \n  filter(landcover_class == \"water\")\n\n# rotación de los polígonos\nw_rot <- w %>% \n  mutate(geom_rot = st_geometry(.)*rot(-36.5*pi/180)) %>%\n  st_drop_geometry() %>%\n  rename(geometry = geom_rot) %>%\n  st_set_geometry(\"geometry\")\n\n# región de interés de Central Park\nroi <- st_bbox(datos) |> \n  st_as_sfc()\n\n# incorporo el color al roi, p/las facetas\nroi2 <- distinct(datos, col, accion) |> \n  mutate(geometry = roi) |> \n  st_as_sf()\n\n# recordo polígonos de agua a la región de interés\nw_rot_crop <- st_crop(w_rot, roi)\n\n# figura ------------------------------------------------------------------\n\ng <- ggplot() +\n  geom_sf(data = roi2, aes(color = I(col)), fill = NA, linewidth = .25) +\n  # polígonos de agua\n  geom_sf(data = w_rot_crop, fill = \"grey60\", color = \"grey40\") +\n  # ardillas\n  geom_sf(\n    data = datos, aes(color = I(col)), \n    alpha = .4, show.legend = FALSE, size = 4) +\n  # cantidad de observaciones\n  geom_text(\n    data = n_datos, aes(label = glue(\"n = {n}\"), x = -Inf, y = -Inf, color = col),\n    hjust = 0, vjust = 0, family = \"inconsolata\", size = 7) +\n  # faceta\n  facet_wrap(~ accion, nrow = 1) +\n  # ejes\n  labs(title = \"¿Qué hacen las ardillas en **Central Park**?\",\n       subtitle = glue(\n         \"Distribución espacial de {nrow(datos)} **ardillas** en \n         Central Park de acuerdo a las actividades que estaban \n         llevando a cabo al momento de ser avistadas. En la parte \n         inferior de cada panel se indica la cantidad de \n         observaciones. Las superficies en gris representan **cuerpos \n         de agua**.\"),\n       caption = mi_caption) +\n  scale_y_continuous(limits = c(21.53485, 21.60479), expand = c(0, 0)) +\n  # scale_y_continuous(expand = c(0, .0005)) +\n  # coord_sf(expand = FALSE) +\n  # tema\n  theme_void() +\n  theme(panel.background = element_rect(color = NA, linewidth = 2),\n    plot.background = element_rect(\n      fill = c1, color = c5, linewidth = 3),\n    plot.margin = margin(5, 25, 5, 25),\n    plot.title = element_markdown(\n      size = 45, family = \"playfair\", margin = margin(10, 5, 5, -5), color = c4),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_textbox_simple(\n      color = c4, size = 18, margin = margin(25, 0, 25, 0)),\n    plot.caption = element_markdown(\n      size = 15, hjust = .5, color = c2, margin = margin(25, 0, 5, 0)),\n    panel.spacing.x = unit(2, \"line\"),\n    strip.text = element_markdown(size = 20, vjust = 1))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_21/viz.png\",\n  width = 30,\n  height = 40.84,\n  units = \"cm\",\n  dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_21/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_21/viz.png)\n\n\n",
    "supporting": [
      "semana_21_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}