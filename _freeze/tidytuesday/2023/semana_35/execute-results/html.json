{
  "hash": "d31c03f3fcbf86362335a00491138817",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 35\"\nsubtitle: \"Figura semana 35\"\nauthor: Víctor Gauto\ndate: \"2023-09-03\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_vline, geom_segment, geom_point]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_35/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores, Nord, afternoon praire\nc1 <- \"#009B9F\"\nc2 <- \"#C75DAA\"\nc3 <- \"#7DC5C7\"\nc4 <- \"#DEA9CC\"\nc5 <- \"grey90\"\nc6 <- \"grey30\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# cantidad, eje vertical\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# título\nfont_add_google(name = \"Playfair Display SC\", family = \"playfair\")\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\"Datos: <span style='color:{c3};'><span style='font-family:mono;'>{{<b>tidytuesdayR</b>}}</span> semana 35.  U.S. Copyright Office Fair Use Index</span>\")\nautor <- glue(\"Autor: <span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:fa-brands;'>&#xf099;</span>\")\nicon_github <- glue(\"<span style='font-family:fa-brands;'>&#xf09b;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-08-29/readme.md\")\n\nfair_use_cases <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-29/fair_use_cases.csv')\n\n# máxima cantidad de categorías por observación\n# sirve p/definir la cantidad de columnas en las que voy a separar 'categories'\nfair_use_cases |> \n  select(categories, fair_use_found) |> \n  mutate(cantidad = str_count(categories, \";\")) |> \n  slice_max(cantidad, n = 1, with_ties = FALSE) |> \n  pull(cantidad)\n# son 4, así que son 4+1 = 5 categorías\n\n# 10 categorías más frecuentes\ntop_cat <- fair_use_cases |> \n  select(categories, fair_use_found) |> \n  separate_wider_delim(\n    cols = categories,\n    delim = \"; \", \n    names = glue(\"a{1:5}\"), \n    too_few = \"align_start\") |> \n  pivot_longer(\n    cols = starts_with(\"a\"),\n    names_to = \"n\",\n    values_to = \"cat\"\n  ) |> \n  select(-n) |> \n  drop_na(cat) |> \n  mutate(cat = str_to_lower(cat)) |> \n  count(cat, sort = TRUE) |> \n  slice_max(order_by = n, n = 10) |> \n  pull(cat)\n\n# traducción\ntop_cat_trad <- c(\n  \"texto\", \"film/audiovisual\", \"educación/becas/investigación\", \"fotografía\",\n  \"internet/digitalización\", \"revisión/comentario\", \"reporte de noticias\",\n  \"parodia/sátira\", \"pintura/dibujo/gráfico\", \"música\"\n)\n\nnames(top_cat_trad) <- top_cat\n\n# resolución VERDADERO/FALSO por las 10 categorías más frecuentes\nd <- fair_use_cases |> \n  select(categories, fair_use_found) |> \n  separate_wider_delim(\n    cols = categories,\n    delim = \"; \", \n    names = glue(\"a{1:5}\"), \n    too_few = \"align_start\") |> \n  pivot_longer(\n    cols = starts_with(\"a\"),\n    names_to = \"n\",\n    values_to = \"cat\"\n  ) |> \n  select(-n) |> \n  drop_na(cat) |> \n  mutate(cat = str_to_lower(cat)) |> \n  filter(cat %in% top_cat) |> \n  count(cat, fair_use_found) |> \n  mutate(n = if_else(fair_use_found == FALSE, -n, n)) |> \n  pivot_wider(names_from = fair_use_found, values_from = n) |> \n  rename(falso = `FALSE`, verdadero = `TRUE`) |> \n  mutate(cat = top_cat_trad[cat]) |> \n  mutate(cat = str_to_sentence(cat)) |> \n  mutate(cat = fct_reorder(cat, verdadero))\n\n# totales\nd_tot_v <- sum(d$verdadero)\nd_tot_f <- abs(sum(d$falso))\nd_tot <- d_tot_v + d_tot_f\n\n# figura ------------------------------------------------------------------\n\n# título y subtítulo\ng_tit <- \"legítimo <span style='font-size:40pt'>v</span> no legítimo\"\n\ng_sub <- glue(\"El derecho de autor permite el uso de obras protegidas en caso de \n**uso legítimo**. Sin embargo,<br>muchas veces eso lleva a conflictos que se resuelven\nen la Justicia. Se muestran las 10 categorías<br>más frecuentes de {d_tot} casos en EEUU,\ny si el veredicto fue de uso <span style='color:{c2};'>**legítimo**</span> ({d_tot_v}) o \n<span style='color:{c1};'>**no legítimo**</span> ({d_tot_f}).\")\n\n# tamaño de los puntos\nt_grande <- 7\nt_pequeño <- 6\n\n# figura\ng <- ggplot(d, aes(x = 0, y = cat, yend = cat)) +\n  geom_vline(xintercept = 0, color = \"grey90\", linewidth = .1, linetype = \"8f\") +\n  geom_segment(aes(xend = falso), color = c6) +\n  geom_segment(aes(xend = verdadero), color = c6) +\n  geom_point(aes(x = falso), size = t_grande, color = c5) +\n  geom_point(aes(x = verdadero), size = t_grande, color = c5) +\n  geom_point(aes(x = falso, color = \"f\"), size = t_pequeño) +\n  geom_point(aes(x = verdadero, color = \"v\"), size = t_pequeño) +\n  scale_x_continuous(\n    breaks = seq(-50, 50, 25),\n    limits = c(-55, 50),\n    labels = abs(seq(-50, 50, 25))) +\n  scale_y_discrete(expand = c(0, 0)) +\n  scale_color_manual(values = c(c1, c2)) +\n  coord_cartesian(ylim = c(.75, 10.25)) +\n  labs(\n    x = \"Cantidad de casos\",\n    y = NULL,\n    color = NULL,\n    title = g_tit,\n    subtitle = g_sub,\n    caption = mi_caption) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"grey20\", color = c5, linewidth = 3),\n    plot.margin = margin(19, 19, 10, 19),\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(\n      size = 55, family = \"playfair\", color = \"white\", hjust = .5),\n    plot.subtitle = element_markdown(\n      color = c5, family = \"ubuntu\", size = 15, margin = margin(5, 70, 25, 70),\n      hjust = .5, lineheight = 1.25),\n    plot.caption = element_markdown(\n      color = c4, family = \"ubuntu\", size = 12, margin = margin(10, 0, 5, 0)),\n    panel.grid.major.y = element_blank(),\n    panel.grid.major.x = element_line(linewidth = .05, color = \"grey40\"),\n    panel.grid.minor.x = element_line(linewidth = .05, color = \"grey30\"),\n    axis.text.y = element_text(color = c3, family = \"ubuntu\", size = 15),\n    axis.text.x = element_text(color = c4, family = \"victor\", size = 12),\n    axis.title.x = element_text(\n      family = \"ubuntu\", color = c4, size = 20, margin = margin(15, 0, 0, 0))\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_35/viz.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_35/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_35/viz.png)\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}