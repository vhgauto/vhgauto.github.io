{
  "hash": "7aeeb1f209e8498d34bfde82138da383",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 41\"\nsubtitle: \"Figura semana 41\"\nauthor: Víctor Gauto\ndate: \"2023-10-15\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_sf, geom_richtext, geom_curve]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_41/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nUniversidades y cementerios embrujados en EEUU.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"#E78429\"\nc2 <- \"#F6C200\"\nc3 <- \"#BAD6F9\"\nc4 <- \"grey30\"\nc5 <- \"grey10\"\nc6 <- \"grey15\"\nc7 <- \"grey90\"\nc8 <- \"white\"\n\n# texto gral, ubicación, ciudad\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# descripción\nfont_add_google(name = \"Creepster\", family = \"creepster\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\"Datos: <span style='color:{c3};'><span style='font-family:mono;'>{{<b>tidytuesdayR</b>}}</span> semana 41. Haunted Places in USA, **Tim Renner**</span>\")\nautor <- glue(\"Autor: <span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:fa-brands;'>&#xf099;</span>\")\nicon_github <- glue(\"<span style='font-family:fa-brands;'>&#xf09b;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-10-10/readme.md\")\n\nhaunted_places <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-10-10/haunted_places.csv')\n\n# me interesan los sitios relacionados a cementerios y universidades\n# incluyo una (breve) descripción de c/u, ubicados en lados opuestos\n\n# mapa de EEUU, sacando algunos territorios\nus <- rgeoboundaries::gb_adm1(country = \"USA\")\n\nus_otros <- c(\n  \"Puerto Rico\", \"Alaska\", \"American Samoa\", \"United States Virgin Islands\",\n  \"Commonwealth of the Northern Mariana Islands\", \"Guam\", \"Hawaii\", \n  \"Commonwealth of the Northern Mariana Islands\")\n\nus_cont <- us |> \n  filter(!shapeName %in% us_otros)\n\n# hay un sitio por fuera de EEUU? Lo remuevo\nlawrence <- haunted_places |> \n  filter(between(longitude, -82, -78) & between(latitude, 44, 46)) |> \n  pull(location)\n\n# creo un objeto sf, y remuevo el sitio sospechoso\nhaunted_places_sf <- haunted_places |> \n  drop_na(longitude, latitude) |> \n  st_as_sf(coords = c(\"longitude\", \"latitude\")) |> \n  st_set_crs(value = 4326) |> \n  st_crop(st_bbox(us_cont)) |> \n  filter(location != lawrence)\n\n# convierto a EPGS:5070, para un mapa más agradable\nbrowseURL(\"https://epsg.io/5070\")\n\nd <- st_transform(haunted_places_sf, crs = 5070)\nus_cont_trans <- st_transform(us_cont, crs = 5070)\n\n# contorno de EEUU\ncontorno <- st_union(us_cont_trans)\n\n# simplifico los sitios: otros, cementerio y universidad\nd_lugares <- d |> \n  select(location) |> \n  mutate(location = str_to_lower(location)) |> \n  mutate(location = case_when(\n    str_detect(location, \"cemetery\") ~ \"cemetery\",\n    str_detect(location, \"university\") ~ \"university\",\n    .default = \"otros\"))\n\n# divido los datos en otros, y universidades & cementerios\nd_otros <- d_lugares |> \n  filter(location == \"otros\")\n\nd_interes <- d_lugares |> \n  filter(location != \"otros\")\n\n# cantidades de universidades, cementerios y sitios en gral\nn_uni <- d_interes |> \n  filter(location == \"university\") |> \n  nrow()\n\nn_cem <- d_interes |> \n  filter(location == \"cemetery\") |> \n  nrow()\n\nn_sitios <- nrow(haunted_places) |> \n  gt::vec_fmt_number(sep_mark = \".\", dec_mark = \",\", decimals = 0)\n\n# descripción BREVE de cementerio y universidad\n# elijo una descripción de cementerio de Florida, y una descripción de \n# universidad de Montana (lados opuestos)\nej_cem <- haunted_places |> \n  filter(state_abbrev == \"FL\") |> \n  mutate(location = str_to_lower(location)) |> \n  filter(str_detect(location, \"cemetery\")) |> \n  mutate(n = nchar(description)) |> \n  slice_min(order_by = n, n = 1) |> \n  mutate(description = str_wrap(description, 35))\n\nej_uni <- haunted_places |> \n  filter(state_abbrev == \"MT\") |> \n  mutate(location = str_to_lower(location)) |> \n  filter(str_detect(location, \"university\")) |> \n  mutate(n = nchar(description)) |> \n  slice_min(order_by = n, n = 1) |> \n  mutate(description = str_remove(description, \"Main Hall - \")) |> \n  mutate(description = str_wrap(description, 35))\n\n# unifico ambas descripciones y creo la etiqueta\nej_ambos <- bind_rows(ej_uni, ej_cem) |> \n  mutate(description = str_replace_all(description, \"\\n\", \"<br>\")) |> \n  mutate(location = str_to_title(location)) |> \n  mutate(label = glue(\n    \"<b style='font-size:25px;font-family:creepster;'>{description}</b><br>\",\n    \"<span style='font-family:ubuntu; color:white'>*{location}*, *{city}*, *{state_abbrev}*</span>\"))\n\n# ubicación de las cajas de las descripciones\ncaja_longitud <- c(-110, -90)\ncaja_latitud <- c(50, 25)\n\n# modifico las coordenadas de las descripciones a EPSG:5070\nej_label <- ej_ambos |> \n  mutate(location = str_to_lower(location)) |> \n  mutate(location = if_else(\n    str_detect(location, \"cemetery\"), \"cemetery\", \"university\")) |> \n  # mutate(location = case_when(\n  #   str_detect(location, \"cemetery\") ~ \"cemetery\",\n  #   str_detect(location, \"university\") ~ \"university\",\n  #   .default = \"otros\")) |> \n  mutate(latitude = caja_latitud) |> \n  mutate(longitude = caja_longitud) |> \n  st_as_sf(coords = c(\"longitude\", \"latitude\")) |> \n  st_set_crs(value = 4326) |> \n  st_transform(crs = 5070) |> \n  mutate(vjust = c(0, 1)) |> \n  mutate(hjust = c(0, 0))\n\n# ubicación de los sitios que corresponden a las descripciones\nej_puntos <- bind_rows(ej_uni, ej_cem) |> \n  mutate(location = str_to_lower(location)) |> \n  mutate(location = case_when(\n    str_detect(location, \"cemetery\") ~ \"cemetery\",\n    str_detect(location, \"university\") ~ \"university\",\n    .default = \"otros\")) |> \n  st_as_sf(coords = c(\"longitude\", \"latitude\")) |> \n  st_set_crs(value = 4326) |> \n  st_transform(crs = 5070)\n\n# figura ------------------------------------------------------------------\n\n# flechas que unen las descripciones con los sitios\n# inicio de la flecha\nflecha <- tibble(\n  x = caja_longitud, y = caja_latitud) |> \n  st_as_sf(coords = c(\"x\", \"y\")) |> \n  st_set_crs(value = 4326) |> \n  st_transform(crs = 5070) |> \n  st_coordinates() |> \n  as_tibble() |> \n  rename(x = X, y = Y)\n\n# final de la flecha\nflecha_end <- ej_puntos |> \n  st_coordinates() |> \n  as_tibble() |>\n  st_as_sf(coords = c(\"X\", \"Y\")) |> \n  st_set_crs(value = 5070) |> \n  st_coordinates() |> \n  as_tibble() |> \n  rename(xend = X, yend = Y)\n\nflecha_tbl <- bind_cols(flecha, flecha_end)\n\n# ubicación de la caja con el título\ncaja_tit <- tibble(x = -110, y = 26) |> \n  st_as_sf(coords = c(\"x\", \"y\")) |> \n  st_set_crs(value = 4326) |> \n  st_transform(crs = 5070) |> \n  st_coordinates() |> \n  as_tibble() |> \n  rename(x = X, y = Y)\n\n# figura\ng <- ggplot() +\n  # mapa de EEUU, con los Estados\n  geom_sf(data = us_cont_trans, fill = c4, color = c5) +\n  # contorno de EEUU\n  geom_sf(data = contorno, fill = NA, color = c8) +\n  # sitios 'otros'\n  geom_sf(data = d_otros, alpha = 1/2, color = c5, size = .25) +\n  # universidades y cementerios\n  geom_sf(data = d_interes, aes(color = location), alpha = 1/3, size = 4) +\n  # títulos\n  annotate(\n    geom = \"richtext\", x = caja_tit$x, y = caja_tit$y, hjust = .5, vjust = 1,\n    label = glue(\n      \"En **EEUU** hay {n_sitios} sitios embrujados,<br>\",\n      \"de los cuales hay {n_uni} en <b style='color:{c3};'>universidades</b> y<br>\",\n      \"{n_cem} en <b style='color:{c1};'>cementerios</b>.\"),\n    label.color = NA, fill = NA, family = \"ubuntu\", size = 6, color = c7) +\n  # descripciones\n  geom_richtext(\n    data = ej_label, \n    aes(label = label, hjust = hjust, vjust = vjust, geometry = geometry), \n    stat = \"sf_coordinates\", family = \"ubuntu\", color = c2, fill = c6,\n    lineheight = unit(2, \"line\"),\n    label.color = NA) +\n  # flechas\n  geom_curve(\n    data = flecha_tbl[1, ], aes(x, y, xend = xend, yend = yend), \n    inherit.aes = FALSE, color = c7, curvature = .25,\n    arrow = arrow(angle = 15, length = unit(.5, \"line\"), type = \"closed\")) +\n  geom_curve(\n    data = flecha_tbl[2, ], aes(x, y, xend = xend, yend = yend), \n    inherit.aes = FALSE, color = c7, curvature = -.25,\n    arrow = arrow(angle = 15, length = unit(.5, \"line\"), type = \"closed\")) +\n  scale_color_manual(values = c(c1, c3)) +\n  coord_sf(clip = \"off\") +\n  labs(x = NULL, y = NULL, caption = mi_caption) +\n  theme_minimal() +\n  theme(\n    plot.margin = margin(41, 6, 11, 6),\n    plot.background = element_rect(fill = c5, color = c4, linewidth = 3),\n    plot.caption = element_markdown(\n      color = c7, family = \"ubuntu\", size = 10, margin = margin(70, 15, 5, 0)),\n    legend.position = \"none\",\n    panel.grid = element_blank(),\n    axis.text = element_blank()\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_41/viz.png\",\n  width = 30,\n  height = 24,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_41/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_41/viz.png)\n\n\n",
    "supporting": [
      "semana_41_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}