{
  "hash": "4b7b0b4f07fd421fecc10720b2ffeefe",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 44\"\nsubtitle: \"Figura semana 44\"\nauthor: Víctor Gauto\ndate: \"2023-11-05\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_sf, geom_sf_text, geom_richtext]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_44/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nHistorias verdaderas y falsas de [Snopes.com](https://www.snopes.com/).\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tidytext)\nlibrary(ggVennDiagram)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(ggpath)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"#1F78B4\"\nc2 <- \"#E31A1C\"\nc3 <- \"#6A3D9A\"\nc4 <- \"#FF7F00\"\nc5 <- \"#A6CEE3\"\nc6 <- \"#CAB2D6\"\nc7 <- \"#FB9A99\"\nc8 <- \"#FEE0B6\"\nc9 <- \"white\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# título\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\")\n# palabras verdadero/falso\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\nfont_add(\"fa-regular\", \"icon/Font Awesome 6 Free-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c3};'><span style='font-family:mono;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana 44, \",\n  \"**Snopes.com**</span>\")\nautor <- glue(\"Autor: <span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:fa-brands;'>&#xf099;</span>\")\nicon_github <- glue(\"<span style='font-family:fa-brands;'>&#xf09b;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-10-31/readme.md\")\n\nhorror_articles <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-10-31/horror_articles.csv')\n\n# me interesan las palabras más comunes entre notas falsas y verdaderas, y con\n# un diagrama de Venn para ver cuales coinciden\n\n# palabras comunes (inglés)\nsw <- tm::stopwords()\n\np <- horror_articles |> \n  unnest_tokens(input = title, output = palabra) |> \n  filter(rating %in% c(\"false\", \"true\")) |> \n  count(palabra, rating, sort = TRUE) |> \n  filter(!palabra %in% sw) |> \n  filter(!str_detect(palabra, \"'\")) |> \n  filter(palabra != \"deaths\") |> \n  slice_max(order_by = n, n = 15, by = rating, with_ties = FALSE)\n\n# creo una lista para el diagrama de Venn\np_lista <- list(\n  FALSO = p |> filter(rating == \"false\") |> pull(palabra),\n  VERDADERO = p |> filter(rating == \"true\") |> pull(palabra))\n\nvenn <- Venn(p_lista)\ndata <- process_data(venn)\n\n# obtengo las coordenadas del centro de cada porción del diagrama de Venn\nvv <- venn_region(data) |> \n  unnest(item) |> \n  mutate(cent = st_centroid(geometry)) |> \n  st_drop_geometry() |> \n  st_as_sf() %>%\n  mutate(eje_x = st_coordinates(.)[, 1]) %>%\n  mutate(eje_y = st_coordinates(.)[, 2])\n\n# agrego un movimiento horizontal aleatorio, \n# por cada región del diagrama de Venn\nset.seed(2023)\nvv_falso <- vv |> \n  filter(name == \"FALSO\") %>%\n  mutate(eje_y = seq(300, 700, length.out = nrow(.))) |> \n  mutate(eje_x = eje_x + runif(n(), -40, 40)) |> \n  st_drop_geometry() |> \n  st_as_sf(coords = c(\"eje_x\", \"eje_y\"))\n  \nvv_verdadero <- vv |> \n  filter(name == \"VERDADERO\") %>%\n  mutate(eje_y = seq(300, 700, length.out = nrow(.))) |> \n  mutate(eje_x = eje_x + runif(n(), -40, 40)) |> \n  st_drop_geometry() |> \n  st_as_sf(coords = c(\"eje_x\", \"eje_y\"))\n\nvv_vf <- vv |> \n  filter(name == \"FALSO..VERDADERO\") %>%\n  mutate(eje_y = seq(400, 600, length.out = nrow(.))) |> \n  mutate(eje_x = eje_x + runif(n(), -20, 20)) |> \n  st_drop_geometry() |> \n  st_as_sf(coords = c(\"eje_x\", \"eje_y\"))\n\n# corrijo HIV\nvv2 <- bind_rows(vv_falso, vv_verdadero, vv_vf) |> \n  mutate(item = str_to_sentence(item)) |> \n  mutate(name = str_to_upper(name)) |> \n  mutate(item = if_else(item == \"Hiv\", \"HIV\", item))\n\n\n# figura ------------------------------------------------------------------\n\n# título y subtítulo\nmi_tit <- glue(\n  \"Historias de terror<br>\",\n  \"*¿verdaderas o falsas?*\")\n\nmi_sub <- glue(\n  \"El sitio web **Snopes.com** cataloga sus notas en<br>\",\n  \"*verdaderas* o *falsas*, ¿pero qué las diferencian?<br>\",\n  \"Se tomaron las 15 palabras más comunes de los<br>\",\n  \"titulares y se armó el siguiente diagrama de Venn.\")\n\n# logo\nlogo <- \"2023/semana_44/logo.png\"\nlogo_tbl <- tibble(x = 210, y = -Inf, label = glue(\"<img src={logo} width='100'>\"))\n\n# figura\ng <- ggplot() +\n  # regiones\n  geom_sf(\n    aes(fill = name), data = venn_region(data), color = NA,\n    show.legend = FALSE) +\n  # línea punteada\n  geom_sf(\n    size = 2, lty = \"dashed\", color = c9, data = venn_setedge(data),\n    show.legend = FALSE) +\n  # título de cada región\n  geom_sf_text(\n    aes(label = name), data = venn_setlabel(data), family = \"ubuntu\", \n    color = c(c1, c2), size = 10, nudge_y = -20) +\n  # verdadero/falso\n  geom_sf_text(\n    data = vv2, aes(label = item, color = name), show.legend = FALSE, size = 7,\n    family = \"victor\", fontface = \"bold\") +\n  geom_richtext(\n    data = logo_tbl, aes(x, y, label = label), vjust = 0, fill = NA, \n    label.color = NA) +\n  annotate(\n    geom = \"richtext\", x = 510, y = 800, hjust = 0, vjust = -.45, label = mi_sub,\n    size = 6, family = \"ubuntu\", fill = c4, label.color = NA, \n    color = c9) +\n  scale_fill_manual(values = c(c5, c6, c7)) +\n  scale_color_manual(values = c(c1, c3, c2)) +\n  labs(title = mi_tit, caption = mi_caption) +\n  coord_sf(clip = \"off\") +\n  theme_void() +\n  theme(\n    plot.margin = margin(2.8, 0, 2.8, 0),\n    plot.background = element_rect(\n      fill = c8, color = c3, linewidth = 3),\n    plot.title = element_markdown(\n      size = 50, family = \"bebas\", hjust = 0, color = c4,\n      margin = margin(15, 0, 5, 15)),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 12, color = c1, margin = margin(5, 10, 5, 0))\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_44/viz.png\",\n  width = 30,\n  height = 27,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_44/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_44/viz.png)\n\n\n",
    "supporting": [
      "semana_44_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}