{
  "hash": "c2b1563b35a5c7c6fca35d6c278c1dce",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 51\"\nsubtitle: \"Figura semana 51\"\nauthor: Víctor Gauto\ndate: \"2023-12-24\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_point, geom_curve, geom_richtext]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_51/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nRelación entre popularidad y calificación en episodios de Navidad.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"#E1C59A\"\nc2 <- \"#E59A52\"\nc3 <- \"#660B1F\"\nc4 <- \"#094568\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# calificación IMDB\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c3};'><span style='font-family:mono;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana 51. \",\n  \"Internet Movie Database</span>\")\nautor <- glue(\"<span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:fa-brands;'>&#xf099;</span>\")\nicon_github <- glue(\"<span style='font-family:fa-brands;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:fa-brands;'>&#xf4f6;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\nimdb_logo <- glue(\n  \"<span style='font-family:fa-brands; font-size:30pt'>\",\n  \"&#xf2d8;</span>\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-12-19/readme.md\")\n\nholiday_episodes <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-19/holiday_episodes.csv')\nholiday_episode_genres <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-19/holiday_episode_genres.csv')\n\n# me interesa ver la relación entre la popularidad de los episodios y su \n# calificación\n\nd <- holiday_episodes |> \n  select(year, num_votes, primary_title, parent_primary_title, average_rating) |> \n  drop_na(year) |> \n  mutate(decada = year - year %% 10) |> \n  mutate(decada = factor(decada))\n\n# destaco el episodio más popular\nd_pop <- d |> \n  slice_max(order_by = num_votes, n = 1) |> \n  mutate(\n    x = 8.5, y = num_votes*.8, xend = average_rating*.99, yend = num_votes) |> \n  mutate(label = glue(\n    \"<span style = 'family-font:ubuntu; font-size: 15pt'>\",\n    \"**{parent_primary_title}**</span><br>\",\n    \"<span style = 'family-font:ubuntu; font-size: 12pt'>\",\n    \"*{primary_title}*</span>\"))\n\n# porcentaje de episodios con puntaje >= a 7\nporcentaje_7 <- d |> \n  mutate(es_bueno = average_rating >= 7) |> \n  reframe(es_bueno_prop = mean(es_bueno)) |> \n  pull() |> \n  gt::vec_fmt_percent(decimals = 0)\n\n# figura ------------------------------------------------------------------\n\n# título y subtítulo\nmi_titulo <- \"Especiales navideños<br>en las series\"\nmi_subtitulo <- glue(\n  \"El **{porcentaje_7}** de los episodios de Navidad<br>\",\n  \"de las series tiene un puntaje<br>\",\n  \"en IMDb de **7** o superior.\")\n\n# figura\ng <- ggplot(d, aes(average_rating, num_votes)) +\n  geom_point(size = 5, alpha = .4, color = c3) +\n  geom_curve(\n    data = d_pop, aes(x, y, xend = xend, yend = yend), curvature = -.1,\n    arrow = arrow(angle = 10, length = unit(.7, \"line\"), type = \"closed\"),\n    color = c3) +\n  geom_richtext(\n    data = d_pop, aes(x-.8, y, label = label), color = c4,\n    family = \"ubuntu\", hjust = 0, vjust = 1, fill = c1, label.color = NA) +\n  annotate(\n    geom = \"richtext\", x = 1, y = 9e4, label = mi_titulo, family = \"serif\",\n    color = c3, size = 20, hjust = 0, vjust = 1, lineheight = unit(.8, \"line\"),\n    label.color = NA, fill = alpha(c1, .6)) +\n  annotate(\n    geom = \"richtext\", x = 1, y = 2e4, label = mi_subtitulo, family = \"ubuntu\",\n    color = c4, size = 7, hjust = 0, vjust = 1, lineheight = unit(.9, \"line\"),\n    label.color = NA, fill = alpha(c1, .6)) +\n  scale_x_continuous(\n    breaks = seq(1, 10, 1), limits = c(.9, 10.1), expand = c(0, 0)) +\n  scale_y_log10(\n    breaks = 10^((seq(0, 6, 1))),\n    labels = scales::label_number(big.mark = \".\", decimal.mark = \",\"),\n    limits = c(9, 1.1e5), expand = c(0, 0)) +\n  labs(\n    x = glue(\"Calificación {imdb_logo}\"), y = glue(\"Popularidad {imdb_logo}\"),\n    caption = mi_caption) +\n  coord_cartesian(clip = \"off\") +\n  theme_minimal() +\n  theme(\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    plot.caption = element_markdown(family = \"ubuntu\", size = 12, color = c4),\n    panel.grid = element_line(\n      color = c2, linetype = \"ff\", linewidth = .3),\n    panel.grid.minor = element_blank(),\n    axis.title.x = element_markdown(\n      size = 20, hjust = .5, family = \"ubuntu\", color = c4, \n      margin = margin(t = 10)),\n    axis.title.y = element_markdown(\n      size = 20, hjust = .5, family = \"ubuntu\", color = c4, \n      margin = margin(t = 10)),\n    axis.text = element_text(family = \"victor\", size = 15, color = c4))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_51/viz.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_51/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_51/viz.png)\n\n\n",
    "supporting": [
      "semana_51_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}