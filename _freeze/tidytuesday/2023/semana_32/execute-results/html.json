{
  "hash": "dd5e00f3f76e0991b21ae951f652cbaf",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 32\"\nsubtitle: \"Figura semana 32\"\nauthor: Víctor Gauto\ndate: \"2023-08-13\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_point, geom_from_path, geom_richtext, geom_text]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_32/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nDistribución de intensidad del picante de las salsas de **Hot Ones**.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggpath)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"#cc2c29\"\nc2 <- \"#E4332F\"\nc3 <- \"#FFCE00\"\nc4 <- \"white\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# eje vertical, scoville\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# eje horizontal, temporadas\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\"Datos: <span style='color:{c3};'><span style='font-family:mono;'>{{<b>tidytuesdayR</b>}}</span> semana 32. **List of Hot Ones episodes**, Wikipedia</span>\")\nautor <- glue(\"Autor: <span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:fa-brands;'>&#xf099;</span>\")\nicon_github <- glue(\"<span style='font-family:fa-brands;'>&#xf09b;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-08-08/readme.md\")\n\nsauces <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-08/sauces.csv')\n\n# me interesa la distribución de la escala Scoville para cada salsa\n#  (del 1 al 10), en todas las temporadas\nd <- sauces |> \n  mutate(sauce_number = factor(sauce_number)) |> \n  select(sauce_number, scoville)\n\n# figura ------------------------------------------------------------------\n\n# tibble con la ubicación del logo\n\ncamino_logo <- \"2023/semana_32/logo.png\"\n\nlogo_tbl <- tibble(\n  x = 1, \n  y = 1e6, \n  path = camino_logo)\n\n# subtítulo\nsub_tbl <- tibble(\n  x = 10,\n  y = 1000,\n  label = glue(\n    \"<b style='color:{c3}'>Hot Ones</b> es un programa de **YouTube** donde celebridades son<br>\n    entrevistadas mientras *disfrutan* comida picante,  con 10 salsas<br>\n    en orden creciente de picor. Se muestra la intensidad de las<br>\n    salsas para las 21 temporadas del programa.\"))\n\n# explicación escala Scoville\nscoville_tbl <- tibble(\n  x = 10,\n  y = 300,\n  label = glue(\n    \"<sup style='color:white;'>**U2020**</sup>La **escala Scoville** mide la\n    intensidad de un picante.<br>El valor más bajo (1) corresponde al \n    morrón verde.\"))\n\n# valores MIN y MAX de la escala Scoville\nd_min <- d |> \n  slice_min(order_by = scoville, n = 1) |> \n  mutate(label = glue(\"← {scoville}nMIN\"))\n\nd_max <- d |> \n  slice_max(order_by = scoville, n = 1, with_ties = FALSE) |> \n  mutate(label = gt::vec_fmt_number(\n    scoville, \n    decimals = 0,\n    sep_mark = \".\",\n    dec_mark = \",\")) |> \n  mutate(label = glue(\"{label} →nMAX\"))\n\n# figura\ng <- ggplot(data = d, aes(sauce_number, scoville, color = sauce_number)) +\n  # puntos\n  geom_point(alpha = 1/1, size = 7, shape = 1, \n             position = position_jitter(width = .1, seed = 2023)) +\n  # logo\n  geom_from_path(\n    data = logo_tbl, aes(x, y, path = path),\n    width = .4, inherit.aes = FALSE, hjust = 0, vjust = .5) +\n  # subtítulo\n  geom_richtext(\n    data = sub_tbl, aes(x, y, label = label), \n    label.color = NA, fill = NA, color = c4, family = \"ubuntu\", size = 6,\n    hjust = 1, vjust = 1) +\n  # explicación escala Scoville\n  geom_richtext(\n    data = scoville_tbl, aes(x, y, label = label),\n    label.color = NA, fill = NA, color = c3, family = \"ubuntu\", size = 5,\n    hjust = 1, vjust = 1) +\n  # mínimo\n  geom_text(\n    data = d_min, aes(label = label), \n    family = \"victor\", nudge_x = .6, size = 3.5, fontface = \"bold\", \n    hjust = 1, vjust = .75) +\n  # máximo\n  geom_text(\n    data = d_max, aes(label = label), \n    family = \"victor\", nudge_x = -1.3, size = 3.5, fontface = \"bold\",\n    hjust = 0, vjust = .6) +\n  # ejes\n  scale_y_log10(\n    labels = scales::label_number(big.mark = \".\", decimal.mark = \",\"),\n    limits = c(100, NA),\n    expand = c(0, .1)) +\n  scale_color_manual(values = rep(c(c3, c4), length.out = 10)) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    x = \"\\# de salsa\",\n    y = \"Escala Scoville<sup style='color:white;'>**U2020**</sup><br>\n    <span style='font-size:15pt'>*logarítmica*</style>\",\n    caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    legend.position = \"none\",\n    plot.margin = margin(70.3, 10, 5.3, 10),\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    plot.caption = element_markdown(\n      color = c4, family = \"ubuntu\", margin = margin(10, 0, 10, 0), \n      size = 12),\n    panel.grid.major.y = element_line(\n      color = c4,linetype = \"f8\", linewidth = .1),\n    axis.title.x = element_markdown(\n      size = 26, color = c3, family = \"ubuntu\", margin = margin(20, 0, 0, 0)),\n    axis.title.y = element_markdown(\n      size = 26, color = c3, family = \"ubuntu\", angle = 90, lineheight = .2),\n    axis.text.x = element_text(\n      family = \"bebas\",\n      color = rep(c(c3, c4), length.out = 10),\n      size = 30),\n    axis.text.y = element_text(\n      family = \"victor\", color = c4, size = 16, hjust = 1)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_32/viz.png\",\n  width = 30,\n  height = 31,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_32/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_32/viz.png)\n\n\n",
    "supporting": [
      "semana_32_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}