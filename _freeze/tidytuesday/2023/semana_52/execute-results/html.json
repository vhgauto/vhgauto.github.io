{
  "hash": "a02277d02418e09e932dde9caad110f2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 52\"\nsubtitle: \"Figura semana 52\"\nauthor: Víctor Gauto\ndate: \"2023-12-31\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_tile]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_52/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nDías y horas sin actividad en CRAN.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"#E05E35\"\nc2 <- \"#AF141F\"\nc3 <- \"#F7BD6E\"\nc4 <- \"#EF9352\"\nc5 <- \"#FFE98C\"\nc6 <- \"#2E141E\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# horas, días\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# títulos de eje, título\nfont_add_google(name = \"Source Serif 4\", family = \"source\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c3};'><span style='font-family:mono;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana 52. \",\n  \"Historical Trends in R Package Structure and Interdependency on CRAN,<br>\",\n  \"**Mark Padgham** & **Noam Ross**</span>\")\nautor <- glue(\"<span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:fa-brands;'>&#xf099;</span>\")\nicon_github <- glue(\"<span style='font-family:fa-brands;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:fa-brands;'>&#xf4f6;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-12-26/readme.md\")\n\ncran_20221122 <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-26/cran_20221122.csv')\n\n# me interesa saber los días y horarios en los que NO hay paquetes subidos a \n# CRAN, los momentos en el año en los que los desarrolladores descansan (?)\n\nd <- cran_20221122 |>\n  select(date) |>\n  mutate(\n    mes = month(date),\n    dia = day(date),\n    hora = hour(date)) |>\n  mutate(fecha = ymd(glue(\"2020-{mes}-{dia}\"))) |>\n  count(fecha, hora) |>\n  mutate(\n    mes = format(fecha, \"%B\") |> str_to_upper(),\n    dia = day(fecha)) |>\n  mutate(mes = fct_reorder(mes, month(fecha)))\n\nd_na <- d |> \n  complete(mes, dia, hora) |> \n  filter(is.na(n)) |> \n  mutate(n = if_else(is.na(n), 1, 0)) |> \n  mutate(fecha = ymd(glue(\"2020-{mes}-{dia}\"))) |> \n  drop_na(fecha)\n\n# figura ------------------------------------------------------------------\n\n# título y subtítulo\nmi_title <- glue(\"El descanso de <span style='color:white'>CRAN</span>\")\n\nmi_subtitle <- glue(\n  \"Días y horas con actividad nula en **CRAN**, el repositorio central de \",\n  \"<b style='font-family:victor;'>R</b>. Durante la madrugada<br>\",\n  \"y a fin de año son los momentos en los que los \",\n  \"desarrolladores no publican sus productos.\")\n\n# función que agrega ceros delante de los números\nf_ceros <- function(x) {\n  if (nchar(x) == 1) {\n    y <- glue(\"0{x}\")\n  } else {y <- glue(\"{x}\")}\n  \n  return(as.character(y))\n}\n\n# valores de ejes\nrango_x <- seq(0, 24, 3)\nrango_y <- c(1, seq(3, 30, 3))\n\n# figura\ng <- ggplot(d_na, aes(hora, dia, fill = n)) +\n  geom_tile(color = c1, linewidth = .5) +\n  facet_wrap(vars(mes), nrow = 3, scales = \"free\") +\n  scale_x_continuous(\n    expand = c(0, 0), breaks = rango_x, \n    labels = list_c(map(rango_x, f_ceros)),\n    sec.axis = dup_axis(guide = guide_axis(position = \"top\"))) +\n  scale_y_continuous(\n    expand = c(0, 0), limits = c(.5, 31.5), breaks = rango_y,\n    labels = list_c(map(rango_y, f_ceros)),\n    sec.axis = dup_axis()) +\n  scale_fill_gradient(low = c2, high = c2) +\n  labs(\n    x = \"Hora <span style='font-size:30pt'>→</span>\", \n    y = \"<span style='font-size:30pt'>↑</span><br>Día\", \n    title = mi_title,\n    subtitle = mi_subtitle,\n    caption = mi_caption) +\n  coord_cartesian(clip = \"off\") +\n  theme_void() +\n  theme(\n    plot.background = element_rect(\n      fill = c6, color = scales::muted(c2, l = 2), linewidth = 3),\n    plot.margin = margin(rep(10, 4)),\n    plot.title = element_markdown(\n      size = 75, family = \"source\", color = c5, hjust = .5),\n    plot.subtitle = element_markdown(\n      color = c3, family = \"ubuntu\", margin = margin(b = 15), size = 18, \n      hjust = .5),\n    plot.caption = element_markdown(\n      color = c4, family = \"ubuntu\", size = 12),\n    panel.grid = element_blank(),\n    panel.background = element_blank(),\n    panel.spacing.x = unit(0, \"line\"),\n    panel.spacing.y = unit(.3, \"line\"),\n    panel.ontop = FALSE,\n    legend.position = \"none\",\n    axis.title.x.bottom = element_markdown(\n      hjust = 0, color = c4, size = 20, family = \"source\", \n      margin = margin(t = 10)),\n    axis.title.y.left = element_markdown(\n      vjust = 0, color = c4, size = 20, family = \"source\",\n      margin = margin(r = 10)),\n    axis.line = element_line(color = c1, linewidth = .5),\n    axis.text.x.bottom = element_text(\n      color = c5, family = \"victor\", hjust = .5, size = 11, \n      margin = margin(t = 3)),\n    axis.text.y.left = element_text(\n      color = c5, family = \"victor\", hjust = .5, size = 11, \n      margin = margin(r = 3, l = 3)),\n    axis.text.x.top = element_blank(),\n    axis.text.y.right = element_blank(),\n    strip.text = element_text(\n      color = c5, size = 25, family = \"ubuntu\", margin = margin(b = 5),\n      hjust = 0),\n    strip.placement = \"outside\")\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_52/viz.png\",\n  width = 30,\n  height = 37,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_52/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_52/viz.png)\n\n\n",
    "supporting": [
      "semana_52_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}