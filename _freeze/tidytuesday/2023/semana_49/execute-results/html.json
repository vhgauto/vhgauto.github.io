{
  "hash": "6cbf4ee4172c9a2cbd4a4f69a7fcc7ed",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 49\"\nsubtitle: \"Figura semana 49\"\nauthor: Víctor Gauto\ndate: \"2023-12-10\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_line, geom_point, geom_flag, geom_richtext, geom_curve]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_49/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(patchwork)\nlibrary(ggflags) # https://github.com/jimjam-slam/ggflags\nlibrary(ggh4x)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"grey80\"\nc2 <- \"grey60\"\nc3 <- \"black\"\nc4 <- \"white\"\nc5 <- \"grey30\"\nc6 <- \"grey90\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# números, fechas, ranking\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# números, fechas, ranking\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c3};'><span style='font-family:mono;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana 49. \",\n  \"Our World in Data</span>\")\nautor <- glue(\"<span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:fa-brands;'>&#xf099;</span>\")\nicon_github <- glue(\"<span style='font-family:fa-brands;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:fa-brands;'>&#xf4f6;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-12-05/readme.md\")\n\nlife_expectancy <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-05/life_expectancy.csv') |> \n  janitor::clean_names()\n\n# me interesa ver la evolución de otros países comparados con Argentina,\n# en dos períodos, 1950 y 2020\n\n# rango de edades en 1950 y 2020, para Argentina\nrango <- life_expectancy |> \n  filter(code == \"ARG\" & (year == 1950 | year == 2020)) |> \n  pull(life_expectancy)\n\n# factor para aplicar a las edades de Argentina, y obtener otros países con \n# espectativas de vida cercanas, en 1950 y 2020\nfactor <- .01\n\n# valores de edad en 1950\nmin_inf <- rango[1]*(1-factor)\nmin_sup <- rango[1]*(1+factor)\n\nlife_expectancy |> \n  filter(year == 1950 & between(life_expectancy, min_inf, min_sup)) |> \n  drop_na()\n\n# países a comparar en 1950\np_1950 <- c(\"Argentina\", \"Bulgaria\", \"Malta\", \"Spain\", \"Slovakia\")\n\n# valores de edad en 2020\nmax_inf <- rango[2]*(1-factor)\nmax_sup <- rango[2]*(1+factor)\n\nlife_expectancy |> \n  filter(year == 2020 & between(life_expectancy, max_inf, max_sup)) |> \n  drop_na() |> \n  print(n = 30)\n\n# países a comparar en 2020\np_2020 <- c(\"Argentina\", \"Turkey\", \"Hungary\", \"Malaysia\", \"Saudi Arabia\")\n\n# tibble para 1950\ntbl_1950 <- life_expectancy |> \n  filter(year >= 1950 & entity %in% p_1950) |> \n  mutate(estado = \"inicio\")\n\n# tibble para 2020\ntbl_2020 <- life_expectancy |> \n  filter(year >= 1950 & entity %in% p_2020) |> \n  mutate(estado = \"final\")\n\n# combino y selecciono décadas\nd <- bind_rows(tbl_1950, tbl_2020) |> \n  mutate(estado = fct(estado, levels = c(\"inicio\", \"final\"))) |> \n  filter(year %% 10 == 0)\n\n# figura ------------------------------------------------------------------\n\n# ubicación de las banderas\nd_bandera <- d |> \n  filter(\n    (year == 2020 & estado == \"inicio\") | (year == 1960 & estado == \"final\"))\n\n# países involucrados\npaises <- sort(unique(d_bandera$entity))\n\n# traducción de los nombres de los países \npaises_trad <- c(\n  \"Argentina\", \"Bulgaria\", \"Hungría\", \"Malasia\", \"Malta\", \"Arabia Saudita\",\n  \"Eslovaquia\", \"España\", \"Turquía\")|> str_c(\"    \")\n\n# obtengo el código ISO2C de los países, para poder usar {ggflags}\niso2 <- countrycode::codelist |> \n  select(contains(\"iso\")) |> \n  filter(iso.name.en %in% paises) |> \n  pull(iso2c) |> \n  str_to_lower()\n\n# vector con nombres\nnames(iso2) <- paises\n\n# agrego los códigos de país y muevo a la derecha las banderas del 1er panel\nd_bandera_tbl <- d_bandera |> \n  mutate(bandera = iso2[entity]) |> \n  mutate(year = if_else(estado == \"inicio\", year+4, year))\n\n# ejes verticales\neje_vertical <- list(\n  scale_y_continuous(\n    limits = c(60, 85), expand = c(0, 0), breaks = seq(60, 90, 5)),\n  scale_y_continuous(\n    limits = c(40, 80), expand = c(0, 0), breaks = seq(40, 80, 5)))\n\n# rango de edades, Argentina 1950-2020\nrango_label <- gt::vec_fmt_number(\n  rango, decimals = 1, sep_mark = \"\", dec_mark = \",\")\n\n# descripciones\ndesc_tbl <- tibble(\n  x = c(1975, 2020),\n  y = c(rango[1], 62),\n  label = c(\n    glue(\n      \"Cuatro países que en **1950**<br>\",\n      \"tenían casi la misma esperanza<br>\",\n      \"de vida que **Argentina**,<br>\",\n      \"alrededor de {rango_label[1]} años.\"),\n    glue(\n      \"Cuatro países con<br>\",\n      \"similar esperanza de<br>\",\n      \"vida que **Argentina** en<br>\",\n      \"**2020**, aproximadamente<br>\",\n      \"{rango_label[2]} años.\")),\n  estado = c(\"inicio\", \"final\")) |> \n  mutate(estado = fct(estado, levels = c(\"inicio\", \"final\"))) |> \n  mutate(hjust = c(0, 1), vjust = c(0, 1)) |> \n  mutate(xend = c(1953, 2020), yend = c(rango[1], 75))\n\n# edades en 1875 y 1975\nexp_100 <- life_expectancy |> \n  filter(code == \"ARG\" & (year == 1875 | year == 1975)) |> \n  arrange(life_expectancy) |> \n  pull(life_expectancy) |> \n  gt::vec_fmt_number(decimals = 1, sep_mark = \"\", dec_mark = \",\")\n\n# subtítulo\nmi_sub <- glue(\n  \"En 1875, la espectativa de vida al nacer en **Argentina** \",\n  \"era de {exp_100[1]} años.<br>\",\n  \"100 años después, en 1975, se duplicaba alcanzando los \",\n  \"{exp_100[2]} años.<br>\")\n\n# figura\ng <- ggplot(d, aes(year, life_expectancy, color = entity, fill = entity)) +\n  # puntos y líneas de expectativa de vida\n  geom_line(show.legend = FALSE, linewidth = 2, alpha = 1) +\n  geom_point(size = 2, shape = 23, show.legend = FALSE, stroke = 1,alpha = 1) +\n  geom_point(size = 1.7, show.legend = FALSE, color = c1, shape = 18) +\n  # contorno de las banderas\n  geom_point(\n    data = d_bandera_tbl, aes(year, life_expectancy), size = 14, \n    show.legend = FALSE) +\n  # banderas\n  geom_flag(data = d_bandera_tbl, aes(country = bandera), size = 12) +\n  # aclaraciones\n  geom_richtext(\n    data = desc_tbl, aes(x, y, label = label, hjust = hjust, vjust = vjust), \n    inherit.aes = FALSE, fill = c2, label.color = NA, family = \"ubuntu\",\n    color = c4, size = 5) +\n  # flechas\n  geom_curve(\n    data = desc_tbl, aes(x, y, xend = xend, yend = yend), inherit.aes = FALSE,\n    curvature = .1, arrow = arrow(angle = 20,length = unit(.3, \"line\")),\n    color = c2, arrow.fill = c2) +\n  # punto en la esquina de las aclaraciones\n  geom_point(\n    data = desc_tbl, aes(x, y), inherit.aes = FALSE, size = 2, color = c2) +\n  facet_wrap(vars(estado), nrow = 1, scales = \"free\") +\n  facetted_pos_scales(y = eje_vertical) +\n  scale_x_continuous(breaks = seq(1950, 2020, 10)) +\n  scale_country(labels = paises_trad, breaks = iso2) +\n  MetBrewer::scale_color_met_d(name = \"Redon\") +\n  MetBrewer::scale_fill_met_d(name = \"Redon\") +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    country = NULL, x = NULL, y = NULL, caption = mi_caption, \n    subtitle = mi_sub) +\n  guides(country = guide_legend(nrow = 1)) +\n  theme_minimal() +\n  theme(\n    plot.margin = margin(6.5, 50, 6.5, 40),\n    plot.background = element_rect(\n      fill = c1, color = c5, linewidth = 3),\n    plot.subtitle = element_markdown(\n      size = 22, family = \"ubuntu\", lineheight = unit(1.3, \"line\")),\n    plot.caption.position = \"plot\",\n    plot.caption = element_markdown(color = c4, family = \"ubuntu\", size = 12),\n    panel.background = element_blank(),\n    panel.spacing.x = unit(2,\"line\"),\n    panel.grid.minor = element_blank(),\n    panel.grid = element_line(color = c6, linewidth = .3),\n    aspect.ratio = 2,\n    legend.position = \"bottom\",\n    legend.background = element_rect(fill = c5, color = NA),\n    legend.key = element_blank(),\n    legend.text = element_text(family = \"ubuntu\", color = c4, size = 10),\n    strip.text = element_blank(),\n    axis.text.y = element_text(family = \"victor\", size = 12, color = c5),\n    axis.text.x = element_text(family = \"bebas\", size = 20, color = c5),\n    axis.ticks.x = element_blank())\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_49/viz.png\",\n  width = 30,\n  height = 31.5,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_49/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2023/semana_49/viz.png)\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}