{
  "hash": "a5185efa2d6347632a395a7141c53181",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-summary: \"Ocultar código\"\n    code-line-numbers: false\n    code-annotations: false\n    code-link: true\n    code-tools:\n        source: true\n        toggle: true\n        caption: \"Código\"\n    code-overflow: scroll\n    page-layout: full\neditor_options:\n  chunk_output_type: console\ncategories: [\"geom_vline\", \"geom_point\", \"geom_segment\", \"geom_label\"]\nexecute:\n  eval: false\n  echo: true\n  warning: false\ntitle: \"Semana 14\"\ndate: 2025-04-08\nauthor: Víctor Gauto\n---\n\n\n\n\nTiempo de espera en EE.UU. en caso de atención de una emergencia médica.\n\n![Semana 14, 2025](semana_14.png)\n\n## Paquetes\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n```\n:::\n\n\n\n\n## Estilos\n\nColores.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncol <- MoMAColors::moma.colors(palette_name = \"Panton\", 7)\nc1 <- \"#DFD3D1\"\nc2 <- \"#DFAE9C\"\n```\n:::\n\n\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n```\n:::\n\n\n\n\n## Epígrafe\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfuente <- glue(\n    \"Datos: <span style='color:{col[5]};'><span style='font-family:jet;'>\",\n    \"{{<b>tidytuesdayR</b>}}</span> semana 14, \",\n    \"<b><br>Centers for Medicare and Medicaid Services</b>.</span>\"\n)\n\nautor <- glue(\"<span style='color:{col[5]};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{col[5]};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n    \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n```\n:::\n\n\n\n\n## Datos\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2025, 14)\ncare_state <- tuesdata$care_state\n```\n:::\n\n\n\n\n## Procesamiento\n\nMe interesa agrupar los estados por tiempo promedio de espera en caso de emergencias.\n\nLos colores se asignan aleatoriamente.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(111)\n\nd <- care_state |>\n  filter(condition == \"Emergency Department\") |>\n  select(state, score) |>\n  reframe(\n    m = mean(score, na.rm = TRUE),\n    .by = state\n  ) |>\n  mutate(tiempo = hms::hms(minute = m)) |>\n  mutate(\n    hora = hour(tiempo),\n    minuto = minute(tiempo)\n  ) |>\n  mutate(label = paste0(hora, \"H \", minuto, \"M\")) %>%\n  mutate(\n    col = rep(sample(col), length.out = nrow(.))\n  )\n```\n:::\n\n\n\n\n## Figura\n\nEtiquetas del tiempo de espera en el centro de la figura. Agrego subtítulo y nivel de transparencia.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\neje_v <- map(\n  .x = 0:7,\n  ~hms::hms(period(c(2, 30*.x), c(\"hour\", \"minute\")))\n) |>\n  list_c()\n\neje_v_label <- paste0(\n  \"0\",\n  hour(eje_v), \":\",\n  if_else(minute(eje_v) == 0, \"00\", as.character(minute(eje_v)))\n)\n\nmi_subtitulo <- glue(\n  \"Tiempos de espera en<br><b style='color: {col[1]}'>emergencias médicas</b>\n  <br>en **EE.UU.**\"\n)\n\nalfa <- .8\n```\n:::\n\n\n\n\nFigura.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- d |>\n  arrange(tiempo) %>%\n  mutate(\n    x = rep(sample(c(-3:-1, 1:3)), length.out = nrow(.))\n  ) |>\n  mutate(\n    hjust = if_else(x < 0, 1, 0)\n  ) |>\n  ggplot(aes(0, tiempo, color = col)) +\n  geom_vline(\n    xintercept = 0, linewidth = 2, linetype = 1, color = c2, alpha = alfa\n  ) +\n  geom_point(alpha = alfa) +\n  geom_segment(\n    aes(x = 0, xend = x), alpha = alfa, linewidth = 1\n  ) +\n  geom_label(\n    aes(x = x, label = state, hjust = hjust), size = 6, family = \"jet\",\n    fill = alpha(c1, alfa), label.size = .6\n  ) +\n  annotate(\n    geom = \"label\", x = 0, y = eje_v, label = eje_v_label, fill = col[5],\n    label.size = unit(0, \"mm\"), label.padding = unit(0.5, \"lines\"), size = 7,\n    family = \"jet\", color = \"white\", label.r = unit(0, \"mm\")\n  ) +\n  scale_y_continuous(expand = c(0, 0)) +\n  scale_color_identity() +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    subtitle = mi_subtitulo, caption = mi_caption\n  ) +\n  theme_void() +\n  theme(\n    aspect.ratio = 2.4,\n    text = element_text(family = \"ubuntu\"),\n    plot.background = element_rect(fill = c1, color = NA),\n    plot.subtitle = element_markdown(\n      color = col[7], size = 30, margin = margin(b = 30, t = 10), hjust = .5,\n      lineheight = 1.2\n    ),\n    plot.caption = element_markdown(\n      color = col[6], size = 14, margin = margin(t = 35, b = 10, r = -75),\n      lineheight = 1.2\n    ),\n    panel.background = element_blank()\n  )\n```\n:::\n\n\n\n\nGuardo.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_14.png\",\n  width = 20,\n  height = 40,\n  units = \"cm\"\n)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}