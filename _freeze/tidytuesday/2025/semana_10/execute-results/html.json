{
  "hash": "5251bb96c30fe434189e24796acbbed7",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-summary: \"Ocultar código\"\n    code-line-numbers: false\n    code-annotations: false\n    code-link: true\n    code-tools:\n        source: true\n        toggle: true\n        caption: \"Código\"\n    code-overflow: scroll\n    page-layout: full\neditor_options:\n  chunk_output_type: console\ncategories: [\"---GEOM---\"]\nexecute:\n  eval: false\n  echo: true\n  warning: false\ntitle: \"Semana 10\"\ndate: 2025-03-11\nauthor: Víctor Gauto\n---\n\n\n\n\n![Semana 10, 2025](semana_10.png)\n\n## Paquetes\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n```\n:::\n\n\n\n\n## Estilos\n\nColores.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc1 <- \"#000000\"\nc2 <- \"#000000\"\nc3 <- \"#000000\"\n```\n:::\n\n\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n```\n:::\n\n\n\n\n## Epígrafe\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfuente <- glue(\n    \"Datos: <span style='color:{c1};'><span style='font-family:jet;'>\",\n    \"{{<b>tidytuesdayR</b>}}</span> semana 10, \",\n    \"<b>---FUENTE---</b>.</span>\"\n)\n\nautor <- glue(\"<span style='color:{c1};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{c1};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n    \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n```\n:::\n\n\n\n\n## Datos\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2025, 10)\npixar_films <- tuesdata$pixar_films\npublic_response <- tuesdata$public_response\n```\n:::\n\n\n\n\n## Procesamiento\n\nMe interesa...\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- pixar_films |>\n  drop_na() |>\n  select(film, release_date, run_time, film_rating) |>\n  mutate(\n    franq = case_when(\n      str_detect(film, \"Toy\") ~ \"Toy Story\",\n      str_detect(film, \"Cars\") ~ \"Cars\",\n      str_detect(film, \"Finding\") ~ \"Finding\",\n      str_detect(film, \"Incredibles\") ~ \"Incredibles\",\n      str_detect(film, \"Monsters\") ~ \"Monsters\",\n      .default = film\n    )\n  ) |>\n  arrange(release_date) |>\n  mutate(franq = fct_reorder(franq, release_date))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfranquicias <- d |>\n  count(franq) |>\n  filter(n > 1) |>\n  pull(franq)\n\nd2 <- d |>\n  select(-film_rating) |>\n  filter(franq %in% franquicias) |>\n  nest(.by = franq) |>\n  mutate(\n    dif_fecha = map(.x = data, ~ .x |> mutate(l_fecha = lag(release_date))),\n    dif_time = map(.x = data, ~ .x |> mutate(l_time = lag(run_time)))\n  ) |>\n  unnest(dif_fecha, dif_time) |>\n  select(-data, -ends_with(\"1\")) |>\n  mutate(\n    fecha_m = release_date + (l_fecha - release_date)/2,\n    time_m = run_time - l_time\n  ) |>\n  mutate(\n    time_m = if_else(time_m > 0, paste0(\"+\", time_m), paste0(time_m))\n  )\n```\n:::\n\n\n\n\n## Figura\n\nFigura.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(d, aes(release_date, franq, fill = run_time)) +\n  geom_segment(aes(\n    x = release_date, xend = release_date,\n    y = franq, yend = franq\n  )) +\n  geom_point(shape = 21, size = 7) +\n  geom_point(data = d2, aes(fecha_m), size = 1) +\n  geom_text(data = d2, aes(fecha_m, label = time_m), size = 1, vjust = -1) +\n  scale_fill_gradient2(\n    low = \"darkblue\",\n    mid = \"white\",\n    high = \"darkred\",\n    midpoint = mean(d$run_time)\n  ) +\n  labs(x = NULL, y = NULL) +\n  ggthemes::theme_par(base_size = 5) +\n  theme(\n    aspect.ratio = 1.4,\n    axis.text.y = element_text(hjust = 1),\n    panel.grid.major.y = element_line(linetype = \"44\", linewidth = .1)\n  )\n```\n:::\n\n\n\n\nGuardo.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_10.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\"\n)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}