{
  "hash": "621798231bdc7cdf806f70f8f86a2eeb",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-summary: \"Ocultar código\"\n    code-line-numbers: false\n    code-annotations: false\n    code-link: true\n    code-tools:\n        source: true\n        toggle: true\n        caption: \"Código\"\n    code-overflow: scroll\n    page-layout: full\neditor_options:\n  chunk_output_type: console\ncategories:\n  - geom_text\n  - geom_rect\n  - geom_point\n  - geom_smooth\nexecute:\n  eval: false\n  echo: true\n  warning: false\ntitle: \"Semana 21\"\ndate: 2025-05-27\nauthor: Víctor Gauto\n---\n\nTendencia entre tamaño de monstruos y sus propiedades.\n\n![Semana 21, 2025](semana_21.png)\n\n## Paquetes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n```\n:::\n\n\n## Estilos\n\nColores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc1 <- \"#A41400\"\nc2 <- \"#007E2E\"\nc3 <- \"#00B7A7\"\n```\n:::\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n```\n:::\n\n\n## Epígrafe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfuente <- glue(\n  \"Datos: <span style='color:{c1};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana 21, \",\n  \"<b>Dungeons & Dragons System Reference Document</b>.</span>\"\n)\n\nautor <- glue(\"<span style='color:{c1};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{c1};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n```\n:::\n\n\n## Datos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2025, 21)\nmonsters <- tuesdata$monsters\n```\n:::\n\n\n## Procesamiento\n\nMe interesa la relación entre el tamaño de los monstruos y el puntaje de las propiedades.\n\nTraducciones y orden correcto de tamaños y propiedades.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntamaños_v <- unique(monsters$size)\ntamaños_trad <- c(\n  \"Grande\",\n  \"Medio\",\n  \"Pequeño\",\n  \"Medio/Pequeño\",\n  \"Enorme\",\n  \"Gigantesco\",\n  \"Diminuto\"\n)\n\ntamaños_v <- set_names(tamaños_trad, tamaños_v)\ntamaños_orden <- c(\n  \"Diminuto\",\n  \"Pequeño\",\n  \"Medio/Pequeño\",\n  \"Medio\",\n  \"Grande\",\n  \"Enorme\",\n  \"Gigantesco\"\n)\n\nprop_v <- c(\"str\", \"dex\", \"con\", \"int\", \"wis\", \"cha\")\nprop_trad <- c(\n  \"Fuerza\",\n  \"Destreza\",\n  \"Constitución\",\n  \"Inteligencia\",\n  \"Sabiduría\",\n  \"Carisma\"\n)\nprop_v <- set_names(prop_trad, prop_v)\n```\n:::\n\n\nSelecciono columnas de interés e incorporo traducciones.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- monsters |>\n  select(size, str, dex, con, int, wis, cha) |>\n  pivot_longer(\n    cols = -size,\n    names_to = \"param\",\n    values_to = \"valor\"\n  ) |>\n  mutate(\n    tamaño = tamaños_v[size]\n  ) |>\n  mutate(\n    tamaño = fct(tamaño, tamaños_orden)\n  ) |>\n  mutate(\n    parametro = prop_v[param]\n  )\n```\n:::\n\n\n## Figura\n\nLa figura final está compuesta de los paneles de puntos para cada propiedad, y la leyenda indicando el tamaño de los monstruos. Ambas figuras está combinadas con `{patchwork}`.\n\n### Figura leyenda de tamaños\n\nCreo un tibble con las posiciones y etiquetas de texto para la leyenda de tamaños.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nabrev_v <- c(\"DI\", \"PE\", \"MP\", \"ME\", \"GR\", \"EN\", \"GI\")\nabrev_tbl <- tibble(\n  abr = abrev_v,\n  ext = tamaños_orden\n) |>\n  mutate(\n    x = 1:length(tamaños_orden),\n    y = 1\n  )\n```\n:::\n\n\nFigura mostrando la leyenda.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng_legend <- ggplot(abrev_tbl, aes(x, y)) +\n  geom_text(aes(label = abr), size = 4, family = \"jet\", color = c1) +\n  geom_text(aes(y = .4, label = ext), size = 4, family = \"ubuntu\", color = c2) +\n  coord_cartesian(\n    clip = \"off\",\n    expand = FALSE,\n    ylim = c(0, 1),\n    xlim = c(1.25, 7)\n  ) +\n  theme_void() +\n  theme(\n    aspect.ratio = .05,\n    plot.margin = margin(t = 16),\n    plot.background = element_rect(color = NA, fill = \"grey90\")\n  )\n```\n:::\n\n\n### Figura de puntos\n\nCada panel corresponde a una propiedad y tiene un color de fondo específico.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncuadro_tbl <- distinct(d, parametro) |>\n  mutate(\n    xmin = 0,\n    xmax = 7.5,\n    ymin = 0,\n    ymax = 30.5\n  )\n```\n:::\n\n\nFigura de puntos por panel.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng_points <- ggplot(d, aes(as.numeric(tamaño), valor, color = parametro)) +\n  geom_rect(\n    data = cuadro_tbl,\n    aes(\n      xmin = xmin,\n      xmax = xmax,\n      ymin = ymin,\n      ymax = ymax,\n      fill = parametro\n    ),\n    inherit.aes = FALSE,\n    show.legend = FALSE\n  ) +\n  geom_rect(\n    data = cuadro_tbl,\n    aes(\n      xmin = xmin,\n      xmax = xmax,\n      ymin = ymin,\n      ymax = ymax\n    ),\n    inherit.aes = FALSE,\n    fill = alpha(\"white\", .9)\n  ) +\n  geom_point(\n    alpha = 1 / 4,\n    show.legend = FALSE,\n    position = position_jitter(\n      seed = 2025,\n      width = .1\n    )\n  ) +\n  geom_smooth(\n    se = FALSE,\n    method = \"lm\",\n    formula = y ~ x,\n    show.legend = FALSE,\n    linewidth = 2,\n    lineend = \"round\"\n  ) +\n  geom_smooth(\n    se = FALSE,\n    method = \"lm\",\n    formula = y ~ x,\n    show.legend = FALSE,\n    color = \"white\",\n    linewidth = .6,\n    lineend = \"round\"\n  ) +\n  facet_wrap(vars(parametro), nrow = 2, scales = \"free\") +\n  scale_x_continuous(\n    breaks = 1:length(tamaños_orden),\n    labels = abrev_v\n  ) +\n  scale_y_continuous(breaks = scales::breaks_width(5)) +\n  MetBrewer::scale_fill_met_d(\n    name = \"Austria\"\n  ) +\n  MetBrewer::scale_color_met_d(\n    name = \"Austria\"\n  ) +\n  coord_cartesian(ylim = c(0, 30), xlim = c(.5, 7.5), expand = FALSE) +\n  labs(x = NULL, y = NULL) +\n  ggthemes::theme_par(base_size = 15, base_family = \"ubuntu\") +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(),\n    plot.background = element_blank(),\n    panel.background = element_rect(fill = \"grey95\"),\n    panel.spacing = unit(1, \"cm\"),\n    axis.text = element_text(size = rel(.8), family = \"jet\"),\n    axis.ticks.length = unit(3, \"pt\"),\n    axis.ticks = element_line(linewidth = .3),\n    strip.text = element_text(face = \"bold\"),\n    strip.background = element_blank(),\n    strip.clip = \"off\"\n  )\n```\n:::\n\n\n### Composición final\n\nDefino el logo de **Dungeons & Dragons** como título y agrego subtítulo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlink <- \"https://upload.wikimedia.org/wikipedia/en/thumb/8/8e/Dungeons_%26_Dragons_5th_Edition_logo.svg/1280px-Dungeons_%26_Dragons_5th_Edition_logo.svg.png\"\n\nlogo <- glue(\"<img src='{link}' width=120 />\")\n\nmi_subtitulo <- \"Características de los monstruos de acuerdo al tamaño.\"\n```\n:::\n\n\nCombino ambas figuras y agrego los elementos restantes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- g_points /\n  g_legend +\n  plot_layout(heights = c(20, 1)) +\n  plot_annotation(\n    title = logo,\n    subtitle = mi_subtitulo,\n    caption = mi_caption,\n    theme = theme(\n      text = element_text(family = \"ubuntu\"),\n      plot.margin = margin(t = 10),\n      plot.background = element_rect(fill = \"grey95\"),\n      plot.title = element_markdown(margin = margin(b = 15, l = 30)),\n      plot.subtitle = element_text(\n        margin = margin(t = -50, b = 25),\n        hjust = .5,\n        size = 20\n      ),\n      plot.caption = element_markdown(\n        color = c3,\n        size = 10,\n        lineheight = 1.3,\n        margin = margin(t = 10, b = 10, r = 10)\n      )\n    )\n  )\n```\n:::\n\n\nGuardo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_21.png\",\n  width = 30,\n  height = 25,\n  units = \"cm\"\n)\n```\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}