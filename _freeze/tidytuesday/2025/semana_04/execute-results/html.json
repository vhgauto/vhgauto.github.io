{
  "hash": "b5a577e8570c86c13dc17eac8c02235e",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-summary: \"Ocultar código\"\n    code-line-numbers: false\n    code-annotations: false\n    code-link: true\n    code-tools:\n        source: true\n        toggle: true\n        caption: \"Código\"\n    code-overflow: scroll\n    page-layout: full\neditor_options:\n  chunk_output_type: console\ncategories: [\"geom_point\"]\nexecute:\n  eval: false\n  echo: true\n  warning: false\ntitle: \"Semana 04\"\ndate: 2025-01-28\nauthor: Víctor Gauto\n---\n\n\n\n\nFalta de acceso al agua en EE.UU.\n\n![Semana 04, 2025](semana_04.png)\n\n## Paquetes\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n```\n:::\n\n\n\n\n## Estilos\n\nColores\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc1 <- \"#4060C8\"\nc2 <- \"#9A153D\"\nc3 <- \"#EAF3FF\"\nc4 <- \"grey50\"\n```\n:::\n\n\n\n\nFuentes: Ubuntu y JetBrains Mono\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n```\n:::\n\n\n\n\n## Epígrafe\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfuente <- glue(\n    \"Datos: <span style='color:{c1};'><span style='font-family:jet;'>\",\n    \"{{<b>tidytuesdayR</b>}}</span> semana 04, \",\n    \"<b>U.S. Census Bureau</b>, {{tidycensus}}.</span>\"\n)\n\nautor <- glue(\"<span style='color:{c1};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{c1};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n    \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n```\n:::\n\n\n\n\n## Datos\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2025, 04)\nw23 <- tuesdata$water_insecurity_2023\n```\n:::\n\n\n\n\n## Procesamiento\n\nMe interesa ver la cantidad de gente SIN conexión a agua potable en 2023.\n\nCantidad total de viviendas SIN conexión, y formato para subtítulo\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ns23 <- sum(w23$plumbing, na.rm = TRUE)\ns23_formato <- format(s23, big.mark = \".\", decimal.mark = \",\")\n```\n:::\n\n\n\n\n\nTibble que generan puntos con forma de gota y convierto a vector.\n\nEcuación: [Teardrop Curve](https://mathworld.wolfram.com/TeardropCurve.html).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngota_tbl <- tibble(\n  t = seq(-10, 10, length.out = 1000),\n  x_eje = cos(t),\n  y_eje = sin(t)*sin(t/2)^1.5\n) |>\n  transmute(\n    y = x_eje,\n    x = -y_eje\n  ) |>\n  drop_na()\n\ngota_v <- terra::vect(gota_tbl, geom = c(\"x\", \"y\")) |>\n  terra::as.lines() |>\n  terra::aggregate() |>\n  terra::as.polygons()\n```\n:::\n\n\n\n\nDentro de la gota agrego puntos aleatoriamente, extraigo las coordenadas para usar con `ggplot()`. La cantidad de puntos es la de viviendas SIN conexión\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np23 <- terra::spatSample(gota_v, s23) |>\n  terra::geom(df = TRUE)\n```\n:::\n\n\n\n\n## Figura\n\nSubtítulo, rodeando la gota\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nl1 <- glue(\"En 2023, <b style='color:{c1}'>{s23_formato}</b> viviendas\")\nl2 <- glue(\"<b style='color:{c2}'>NO</b> tenían instalaciones\")\nl3 <- \"completas* de agua\"\nl4 <- \"en <b>EE.UU.</b>\"\nmi_subtitulo <- c(l1, l2, l3, l4)\n```\n:::\n\n\n\n\nAnotación, con viñetas\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npunto <- \"<span style='font-family:jet; font-size: 10px'>&#xf111;</span>\"\n\nmi_nota <- glue(\"\n<sup style='color: black; font-size: 20px'>*</sup>Se considera instalación<br>\ncompleta a:<br>\n{punto} Agua corriente fría/caliente<br>\n{punto} Inodoro<br>\n{punto} Bañera/ducha\")\n```\n:::\n\n\n\n\nFigura\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggplot(p23, aes(x, y)) +\n  geom_point(size = .05, aes(color = \"a\"), alpha = .8) +\n  annotate(\n    geom = \"richtext\", x = seq(.02, .15, length.out = 4),\n    y = seq(1, .78, length.out = 4), label = mi_subtitulo,  hjust = 0,\n    vjust = 1, size = 9, family = \"ubuntu\", label.color = NA, fill = NA\n  ) +\n  annotate(\n    geom = \"richtext\", x = -1, y = .3, label = mi_nota, family = \"ubuntu\",\n    hjust = 0, vjust = 1, size = 5, lineheight = 1.1, fill = NA, color = c4,\n    label.color = NA\n  ) +\n  scale_color_manual(\n    breaks = \"a\",\n    values = c1,\n    name = NULL,\n    labels = \"=  Vivienda sin conexión de agua\"\n  ) +\n  coord_equal(expand = FALSE, clip = \"off\", xlim = range(p23$x)) +\n  labs(caption = mi_caption) +\n  guides(\n    color = guide_legend(override.aes = list(size = 5))\n  ) +\n  theme_void(base_family = \"ubuntu\") +\n  theme(\n    plot.background = element_rect(fill = c3, color = NA),\n    plot.margin = margin(20, 20, 20, 20),\n    plot.subtitle = element_markdown(),\n    plot.caption = element_markdown(\n      size = 15, color = c2, lineheight = 1.2,\n      margin = margin(r = -120, t = 20, b = -15)\n    ),\n    legend.position = \"inside\",\n    legend.position.inside = c(.05, 0),\n    legend.justification.inside = c(.5, 0),\n    legend.text.position = \"right\",\n    legend.key.height = unit(25, \"pt\"),\n    legend.text = element_text(size = 15)\n  )\n```\n:::\n\n\n\n\nGuardo\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_04.png\",\n  width = 30,\n  height = 31,\n  units = \"cm\"\n)\n```\n:::\n",
    "supporting": [
      "semana_04_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}