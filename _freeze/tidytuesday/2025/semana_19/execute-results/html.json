{
  "hash": "cf5830e6028ae07ac68e0f575883c725",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-summary: \"Ocultar código\"\n    code-line-numbers: false\n    code-annotations: false\n    code-link: true\n    code-tools:\n        source: true\n        toggle: true\n        caption: \"Código\"\n    code-overflow: scroll\n    page-layout: full\neditor_options:\n  chunk_output_type: console\ncategories:\n  - geom_spatraster\n  - geom_spatvector\nexecute:\n  eval: false\n  echo: true\n  warning: false\ntitle: \"Semana 19\"\ndate: last-modified\nauthor: Víctor Gauto\n---\n\nEventos sísmicos en el Monte Vesubio.\n\n![Semana 19, 2025](semana_19.png)\n\n## Paquetes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(terra)\nlibrary(tidyterra)\nlibrary(marquee)\nlibrary(tidyverse)\n```\n:::\n\n\n## Estilos\n\nColores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc1 <- \"violetred\"\nc2 <- \"#FEFED7\"\nc3 <- \"#081C57\"\n```\n:::\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n```\n:::\n\n\n## Epígrafe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfuente <- glue(\n  \"Datos: <span style='color:{c1};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana 19, \",\n  \"<b>Italian Istituto Nazionale di Geofisica e Vulcanologia</b>.</span>\"\n)\n\nautor <- glue(\"<span style='color:{c1};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{c1};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n```\n:::\n\n\n## Datos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2025, 19)\nvesuvius <- tuesdata$vesuvius\n```\n:::\n\n\n## Procesamiento\n\nMe interesa la cantidad de terremotos en el Vesubio, sobre un mapa, por los últimos nueve años. El mapa es de la topografía del volcán.\n\nCreo un vector a partir de los datos desde 2016 inclusive.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nv <- vesuvius |>\n  drop_na(latitude, longitude) |>\n  filter(year >= 2016) |> \n  terra::vect(\n    geom = c(\"longitude\", \"latitude\"), crs = \"EPSG:4326\"\n  )\n\nv_sf <- sf::st_as_sf(v)\n```\n:::\n\n\nCreo un círculo alrededor de las coordenadas del volcán y obtengo la elevación del terreno.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbuf_sf <- data.frame(\n  x = 14.42599167,\n  y = 40.82166944\n) |>\n  vect(geom = c(\"x\", \"y\"), crs = \"EPSG:4326\") |>\n  buffer(2000, quadsegs = 500) |>\n  sf::st_as_sf()\n\nelev <- elevatr::get_elev_raster(\n  locations = buf_sf,\n  z = 13,\n  clip = \"locations\"\n) |>\n  terra::rast()\n\nnames(elev) <- \"altura\"\n```\n:::\n\n\nRecorto los datos para conservar únicamente los que coinciden con el ráster de elevación.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nv_crop <- sf::st_intersection(v_sf, buf_sf) |> \n  vect()\n```\n:::\n\n\nCuento la cantidad de eventos por año y genero etiquetas para las facetas de la figura.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nv_crop_tbl <- as.data.frame(v_crop, geom = \"xy\") |> \n  as_tibble()\n\nv_n <- count(v_crop_tbl, year) |> \n  mutate(\n    label = glue(\"**{year}** ({n})\")\n  )\n\naño_label <- v_n$label\naño_label <- set_names(año_label, as.character(v_n$year))\n```\n:::\n\n\n## Figura\n\nDefino un estilo para los títulos de las facetas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlabel_style <- modify_style(\n  classic_style(),\n  \"body\",\n  family = \"JetBrains Mono\",\n  color = c1\n)\n```\n:::\n\n\nCreo título y subtítulo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmi_titulo <- glue(\n  \"Actividad sísmica en el <b style='color: {c1}'>Monte Vesubio</b>\"\n)\n\nmi_subtitulo <- \"Los valores entre paréntesis corresponden a la cantidad de \neventos en ese año.\"\n```\n:::\n\n\nCreo los mapas con los eventos sísmicos por cada año.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggplot() +\n  geom_spatraster(\n    data = elev, aes(fill = altura)\n  ) +\n  geom_spatvector(\n    data = v_crop, color = c1, size = 1, alpha = 1/3, shape = 16\n  ) +\n  scale_fill_whitebox_c(\n    palette = \"deep\",\n    name = \"Altura (m)\",\n    breaks = seq(500, 1250, 250),\n    labels = scales::label_number(big.mark = \".\", decimal.mark = \",\"),\n    limits = c(500, 1250)\n  ) +\n  facet_wrap(vars(year), ncol = 3, labeller = as_labeller(año_label)) +\n  coord_sf(expand = FALSE) +\n  labs(title = mi_titulo, subtitle = mi_subtitulo, caption = mi_caption) +\n  theme_void(base_family = \"ubuntu\", base_size = 15) +\n  theme(\n    text = element_text(color = c2),\n    plot.margin = margin(r = 10, l = 10, b = 10),\n    plot.background = element_rect(fill = scales::col_darker(c3), color = NA),\n    plot.title = element_markdown(\n      size = rel(2.3), hjust = .5, margin = margin(b = 5, t = 10)\n    ),\n    plot.subtitle = element_markdown(\n      size = rel(1.5), hjust = .5, margin = margin(b = 10)\n    ),\n    plot.caption = element_markdown(\n      size = rel(1), lineheight = 1.3, margin = margin(t = 30)\n    ),\n    strip.text = element_marquee(\n      family = \"jet\", margin = margin(t = 10, b = 0), style = label_style,\n      size = rel(1.1)\n    ),\n    legend.position = \"bottom\",\n    legend.title = element_text(margin = margin(b = 18, r = 8)),\n    legend.key.width = unit(3, \"cm\"),\n    legend.box.spacing = unit(1, \"cm\"),\n    legend.text = element_text(family = \"jet\")\n  )\n```\n:::\n\n\nGuardo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_19.png\",\n  width = 30,\n  height = 39,\n  units = \"cm\"\n)\n```\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}