{
  "hash": "9f10c021395b755adf52a6863482d459",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-summary: \"Ocultar código\"\n    code-line-numbers: false\n    code-annotations: false\n    code-link: true\n    code-tools:\n        source: true\n        toggle: true\n        caption: \"Código\"\n    code-overflow: scroll\n    page-layout: full\neditor_options:\n  chunk_output_type: console\ncategories:\n  - GEOM_AAA\n  - GEOM_BBB\n  - GEOM_CCC\nexecute:\n  eval: false\n  echo: true\n  warning: false\ntitle: \"Semana 22\"\ndate: 2025-06-03\nauthor: Víctor Gauto\n---\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\nXXXXX DESCRIPCIÓN DE LA FIGURA XXXXX\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\n![Semana 22, 2025](semana_22.png)\n\n## Paquetes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n```\n:::\n\n\n## Estilos\n\nColores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc1 <- \"#000000\"\nc2 <- \"#000000\"\nc3 <- \"#000000\"\n```\n:::\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n```\n:::\n\n\n## Epígrafe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfuente <- glue(\n  \"Datos: <span style='color:{c1};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana 22, \",\n  \"<b>---FUENTE---</b>.</span>\"\n)\n\nautor <- glue(\"<span style='color:{c1};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{c1};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n```\n:::\n\n\n## Datos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2025, 22)\ngutenberg_authors <- tuesdata$gutenberg_authors\ngutenberg_languages <- tuesdata$gutenberg_languages\ngutenberg_metadata <- tuesdata$gutenberg_metadata\ngutenberg_subjects <- tuesdata$gutenberg_subjects\n```\n:::\n\n\n## Procesamiento\n\nMe interesa...\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_lang <- inner_join(\n  gutenberg_languages,\n  gutenberg_authors,\n  by = join_by(gutenberg_id == gutenberg_author_id)\n) |>\n  select(birthdate, language) |>\n  drop_na() |>\n  filter(between(birthdate, 1900, 2000)) |>\n  count(language) |>\n  slice_max(order_by = n, n = 6, with_ties = FALSE) |>\n  mutate(language = fct_reorder(language, n)) |>\n  pull(language)\n\ntop_lang_trad <- c(\n  \"Español\",\n  \"Italiano\",\n  \"Alemán\",\n  \"Francés\",\n  \"Finlandés\",\n  \"Español\"\n)\n\ntop_lang_trad <- set_names(top_lang_trad, top_lang)\n\ninner_join(\n  gutenberg_languages,\n  gutenberg_authors,\n  by = join_by(gutenberg_id == gutenberg_author_id)\n) |>\n  select(language, birthdate) |>\n  drop_na() |>\n  filter(language %in% top_lang) |>\n  count(language, birthdate) |>\n  filter(between(birthdate, 1900, 2000)) |>\n  mutate(language = factor(language, levels(top_lang))) |>\n  ggplot(aes(birthdate, n, fill = language)) +\n  geom_col(position = position_stack(), color = \"white\", linewidth = 1) +\n  MetBrewer::scale_fill_met_d(\n    name = \"Juarez\",\n    breaks = top_lang,\n    labels = top_lang_trad\n  ) +\n  guides(\n    fill = guide_legend(reverse = TRUE)\n  ) +\n  theme_bw(base_size = 4) +\n  theme(\n    aspect.ratio = 1,\n    legend.position = \"inside\",\n    legend.position.inside = c(.9, .9),\n    legend.justification.inside = c(1, 1)\n  )\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninner_join(\n  gutenberg_languages,\n  gutenberg_authors,\n  by = join_by(gutenberg_id == gutenberg_author_id)\n) |>\n  select(author, language) |>\n  count(author, language, sort = TRUE) |>\n  slice_max(order_by = n, n = 10, by = language, with_ties = FALSE) |>\n  filter(language %in% top_lang) |>\n  print(n = 100)\n```\n:::\n\n\n## Figura\n\nFigura.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggplot()\n```\n:::\n\n\nGuardo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_22.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\"\n)\n\nbrowseURL(paste0(getwd(), \"/tidytuesday/2025/semana_22.png\"))\n```\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}