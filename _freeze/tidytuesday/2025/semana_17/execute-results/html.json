{
  "hash": "06baada0bc8ad9d0100c365173e37017",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-summary: \"Ocultar código\"\n    code-line-numbers: false\n    code-annotations: false\n    code-link: true\n    code-tools:\n        source: true\n        toggle: true\n        caption: \"Código\"\n    code-overflow: scroll\n    page-layout: full\neditor_options:\n  chunk_output_type: console\ncategories: [\"geom_marquee\"]\nexecute:\n  eval: false\n  echo: true\n  warning: false\ntitle: \"Semana 17\"\ndate: 2025-04-29\nauthor: Víctor Gauto\n---\n\n\n\n\nPalabras clave de las conferencias del evento [userR! 2025](https://user2025.r-project.org/).\n\n![Semana 17, 2025](semana_17.png)\n\n## Paquetes\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(marquee)\nlibrary(tidyverse)\n```\n:::\n\n\n\n\n## Estilos\n\nColores.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc1 <- \"dodgerblue4\"\nc2 <- \"lightblue1\"\nc3 <- \"navyblue\"\nc4 <- \"darkslateblue\"\n```\n:::\n\n\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n```\n:::\n\n\n\n\n## Epígrafe\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfuente <- glue(\n    \"Datos: <span style='color:{c1};'><span style='font-family:jet;'>\",\n    \"{{<b>tidytuesdayR</b>}}</span> semana 17, \",\n    \"<b>useR! 2025</b>.</span>\"\n)\n\nautor <- glue(\"<span style='color:{c1};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{c1};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n    \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n```\n:::\n\n\n\n\n## Datos\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2025, 17)\nuser2025 <- tuesdata$user2025\n```\n:::\n\n\n\n\n## Procesamiento\n\nMe interesan los temas principales (`keywords`) más frecuentes entre todas las conferencias.\n\nAgrego a cada `keywords` un ícono obtenido de [Iconify {{< iconify line-md:iconify2-static >}}](https://iconify.design/).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- user2025 |> \n  separate_longer_delim(\n    cols = keywords,\n    delim = \", \"\n  ) |> \n  mutate(\n    keywords = if_else(\n      keywords == \"data visualisation\",\n      \"data visualization\",\n      keywords\n    )\n  ) |> \n  count(keywords, sort = TRUE) |> \n  slice_max(order_by = n, n = 20, with_ties = FALSE) |> \n  mutate(\n    y = -row_number()\n  ) |> \n  mutate(\n    icon = case_match(\n      keywords,\n      \"shiny\" ~ \"fa6-brands:r-project\",\n      \"workflow\" ~ \"mdi:workflow\",\n      \"ai\" ~ \"healthicons:artificial-intelligence\",\n      \"automation\" ~ \"arcticons:automation\",\n      \"machine learning\" ~ \"carbon:machine-learning\",\n      \"data visualization\" ~ \"carbon:qq-plot\",\n      \"quarto\" ~ \"simple-icons:quarto\",\n      \"r package\" ~ \"fa6-brands:r-project\",\n      \"causal inference\" ~ \"ix:logic-diagram\",\n      \"data science\" ~ \"material-symbols:chart-data\",\n      \"reproducibility\" ~ \"pepicons-pop:repeat-circle-filled\",\n      \"api\" ~ \"material-symbols:api\",\n      \"big data\" ~ \"eos-icons:big-data\",\n      \"community\" ~ \"fluent:people-community-28-filled\",\n      \"clinical trials\" ~ \"healthicons:clinical-f-24px\",\n      \"consulting\" ~ \"mdi:dialogue\",\n      \"docker\" ~ \"simple-icons:docker\",\n      \"duckdb\" ~ \"devicon-plain:duckdb\",\n      \"healthcare\" ~ \"streamline:medical-cross-sign-healthcare-solid\",\n      \"ide\" ~ \"ant-design:code-filled\"\n    )\n  ) |> \n  separate_wider_delim(\n    cols = icon, delim = \":\", names = c(\"prefix\", \"name\")\n  ) |> \n  mutate(\n    svg = paste0(\n      \"https://api.iconify.design/\", prefix, \"/\", name, \".svg\"\n    )\n  ) |> \n  mutate(\n    label = paste0(\"![](\", svg, \") \", keywords)\n  ) |> \n  mutate(\n    tamaño = seq(15, 7, length.out = 20)\n  ) |> \n  mutate(\n    x = seq(0, 1, length.out = 20)\n  )\n```\n:::\n\n\n\n\n## Figura\n\nCreo un estilo personalizado, con fuente y color.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlabel_style <- modify_style(\n  classic_style(),\n  \"body\",\n  family = \"JetBrains Mono\",\n  color = c4\n)\n```\n:::\n\n\n\n\nSubtítulo y figura.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmi_subtitulo <- glue(\n  \"En el evento <b style='color: {c3}'>useR! 2025</b> hay planificadas \n  {nrow(user2025)} conferencias.<br>\n  Se muetran algunas de las palabras clave más frecuentes.\"\n)\n\ng <- ggplot(d, aes(x, y, label = label, size = tamaño)) +\n  geom_marquee(style = label_style, hjust = 0) +\n  scale_size_identity() +\n  coord_cartesian(xlim = c(-2, 10), ylim = c(-19, -2), clip = \"off\") +\n  labs(\n    subtitle = mi_subtitulo,\n    caption = mi_caption\n  ) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(fill = c2, color = NA),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", color = c1, size = 27, lineheight = 1.3, hjust = 0,\n      margin = margin(b = 40, t = 10, l = 10)\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c3, size = 13, margin = margin(b = 10, r = 10),\n      lineheight = 1.3\n    )\n  )\n```\n:::\n\n\n\n\nGuardo.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_17.png\",\n  width = 30,\n  height = 36,\n  units = \"cm\"\n)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}