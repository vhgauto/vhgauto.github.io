{
  "hash": "ba6f8636d076598d763630f7ef525e18",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-summary: \"Ocultar código\"\n    code-line-numbers: false\n    code-annotations: false\n    code-link: true\n    code-tools:\n        source: true\n        toggle: true\n        caption: \"Código\"\n    code-overflow: scroll\n    page-layout: full\neditor_options:\n  chunk_output_type: console\ncategories:\n  - geom_col\n  - geom_col\nexecute:\n  eval: false\n  echo: true\n  warning: false\ntitle: \"Semana 38\"\ndate: last-modified\nauthor: Víctor Gauto\n---\n\nPaíses con la mayor cantidad de Grandes Maestros de ajedrez.\n\n::: {.column-page-right}\n\n![Semana 38, 2025](semana_38.png)\n\n:::\n\n## Paquetes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n```\n:::\n\n\n## Estilos\n\nColores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc1 <- \"black\"\nc2 <- \"white\"\nc3 <- \"#B1615C\"\nc4 <- \"#5A5A83\"\n```\n:::\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n```\n:::\n\n\n## Epígrafe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfuente <- glue(\n  \"Datos: <span style='color:{c3};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana 38, \",\n  \"<b>International Chess Federation</b>.</span>\"\n)\n\nautor <- glue(\"<span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n```\n:::\n\n\n## Datos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2025, 38)\nseptember <- tuesdata$fide_ratings_september\n```\n:::\n\n\n## Procesamiento\n\nMe interesan los países con mayor cantidad de [Grandes Maestros](https://es.wikipedia.org/wiki/Gran_maestro_internacional).\n\nObtengo los nombres de los países de acuerdo con la abreviatura de sus federaciones.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfed_tbl <- rvest::read_html(\n  \"https://www.mark-weeks.com/aboutcom/mw15b16.htm\"\n) |>\n  rvest::html_table() |>\n  pluck(2) |>\n  rename_with(tolower) |>\n  select(fed, country)\n```\n:::\n\n\nSelecciono septiembre de 2025 como el mes de interés y creo datos con las traducciones de los países.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- inner_join(september, fed_tbl, by = join_by(fed)) |>\n  filter(title %in% c(\"GM\", \"FGM\")) |>\n  count(country, sort = TRUE) |>\n  mutate(country = fct_reorder(country, n)) |>\n  slice_max(order_by = country, n = 12)\n\ncountry_tbl <- tibble(\n  country = d$country,\n  pais = c(\n    \"Alemania\",\n    \"EE.UU.\",\n    \"India\",\n    \"Rusia\",\n    \"Ucrania\",\n    \"Francia\",\n    \"Serbia\",\n    \"España\",\n    \"Israel\",\n    \"Polonia\",\n    \"Hungría\",\n    \"China\"\n  )\n)\n```\n:::\n\n\nCombino todos los datos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd2 <- inner_join(country_tbl, d, by = join_by(country)) |>\n  mutate(pais = factor(pais, levels = rev(pais)))\n```\n:::\n\n\n## Figura\n\nDefino patrones para el fondo de la figura y las barras.\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- pattern(\n  rectGrob(x = c(.25, .75), y = c(.25, .75), width = .5, height = .5),\n  width = .05,\n  height = .05,\n  extend = \"repeat\",\n  gp = gpar(fill = c1),\n)\n\np2 <- pattern(\n  rectGrob(x = c(.25, .75), y = c(.25, .75), width = .5, height = .5),\n  width = .05,\n  height = .05,\n  extend = \"repeat\",\n  gp = gpar(fill = c3, alpha = .1),\n)\n```\n:::\n\n\nTítulo  y figura.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmi_titulo <- glue(\n  \"Cantidad de <b style='color: {c3};'>Grandes Maestros</b> del ajedrez por \",\n  \"país,<br>masculinos y femeninos, a septiembre de 2025\"\n)\n\ng <- ggplot(d2, aes(n, pais, fill = pais)) +\n  annotate(\n    geom = \"rect\",\n    xmin = I(0),\n    xmax = I(1),\n    ymin = I(0),\n    ymax = I(1),\n    fill = c4,\n    alpha = .5\n  ) +\n  annotate(\n    geom = \"rect\",\n    xmin = I(0),\n    xmax = I(1),\n    ymin = I(0),\n    ymax = I(1),\n    fill = p2\n  ) +\n  geom_col(show.legend = FALSE, width = .8, fill = c2) +\n  geom_col(show.legend = FALSE, width = .8) +\n  scale_x_continuous(breaks = scales::breaks_width(10)) +\n  scale_fill_manual(\n    values = rep(list(p1), nrow(d))\n  ) +\n  coord_cartesian(expand = FALSE) +\n  labs(x = NULL, y = NULL, title = mi_titulo, caption = mi_caption) +\n  theme_bw(base_size = 24, base_family = \"ubuntu\") +\n  theme(\n    text = element_text(color = c2),\n    aspect.ratio = 1,\n    axis.ticks.y = element_blank(),\n    axis.ticks.x = element_line(color = c2, linewidth = .2),\n    panel.border = element_blank(),\n    panel.grid = element_blank(),\n    axis.text = element_text(color = c2),\n    axis.text.x = element_text(family = \"jet\"),\n    plot.background = element_rect(fill = c1, color = NA),\n    plot.title = element_markdown(lineheight = 1.2),\n    plot.title.position = \"plot\",\n    plot.caption = element_markdown(size = rel(.6), lineheight = 1.2)\n  )\n```\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\nGuardo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_38.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\"\n)\n```\n:::\n\n",
    "supporting": [
      "semana_38_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}