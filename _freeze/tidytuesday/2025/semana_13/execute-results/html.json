{
  "hash": "f4bafde9f7233f0408e0b4858cf29740",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-summary: \"Ocultar código\"\n    code-line-numbers: false\n    code-annotations: false\n    code-link: true\n    code-tools:\n        source: true\n        toggle: true\n        caption: \"Código\"\n    code-overflow: scroll\n    page-layout: full\neditor_options:\n  chunk_output_type: console\ncategories: [\"geom_richtext\", \"geom_point\"]\nexecute:\n  eval: false\n  echo: true\n  warning: false\ntitle: \"Semana 13\"\ndate: 2025-04-01\nauthor: Víctor Gauto\n---\n\n\n\n\nCapacidad de ataque y defensa para cada tipo principal de **Pokemon**.\n\n![Semana 13, 2025](semana_13.png)\n\n## Paquetes\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidytext)\nlibrary(tidyverse)\n```\n:::\n\n\n\n\n## Estilos\n\nColores.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc1 <- \"#9C1052\"\nc2 <- \"grey95\"\nc3 <- \"#3E4E1E\"\nc4 <- \"#3A5DA8\"\nc5 <- \"grey95\"\nc6 <- \"black\"\n```\n:::\n\n\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n```\n:::\n\n\n\n\n## Epígrafe\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfuente <- glue(\n    \"Datos: <span style='color:{c1};'><span style='font-family:jet;'>\",\n    \"{{<b>tidytuesdayR</b>}}</span> semana 13, \",\n    \"<b style='font-family:jet;'>{{pokemon}}</b>.</span>\"\n)\n\nautor <- glue(\"<span style='color:{c1};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{c1};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n    \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n```\n:::\n\n\n\n\n## Datos\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2025, 13)\npokemon <- tuesdata$pokemon_df\n```\n:::\n\n\n\n\n## Procesamiento\n\nMe interesa la distribución de los puntos de ataque y defensa por cada tipo principal de Pokemon. Agregar, cuando esté disponible, los íconos de cada Pokemon que tenga el máximo valor por cada tipo.\n\n## Figura\n\nLogo y traducciones de los tipos principales de Pokemon.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlink <- \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/International_Pok%C3%A9mon_logo.svg/1024px-International_Pok%C3%A9mon_logo.svg.png\"\nlogo <- glue(\"<img src='{link}' width=150 />\")\n\ntipos_v <- unique(pokemon$type_1)\ntipos_v_trad <- c(\n  \"Planta\", \"Fuego\", \"Agua\", \"Bicho\", \"Normal\", \"Veneno\", \"Eléctrico\", \"Tierra\",\n  \"Hada\", \"Lucha\", \"Psíquico\", \"Roca\", \"Fantasma\", \"Hielo\", \"Dragón\",\n  \"Siniestro\", \"Acero\", \"Volador\"\n)\ntipos_v_trad <- set_names(tipos_v_trad, tipos_v)\n```\n:::\n\n\n\n\nAcomodo los datos y ordeno los tipos de Pokemon por capacidad de ataque y defensa.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- pokemon |>\n  pivot_longer(\n    cols = c(attack, defense),\n    names_to = \"modo\",\n    values_to = \"puntos\"\n  ) |>\n  select(pokemon, puntos, type_1, url_icon, modo) |>\n  mutate(tipo = tipos_v_trad[type_1]) |>\n  mutate(\n    tipo = reorder_within(x = tipo, by = puntos, within = modo, fun = median)\n  ) |>\n  mutate(modo = if_else(modo == \"attack\", \"Ataque\", \"Defensa\"))\n```\n:::\n\n\n\n\nAgrego íconos de los Pokemon que estén disponibles, para el valor máximo de cada tipo principal\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_icon <- d |>\n  slice_max(order_by = puntos, n = 1, by = c(tipo, modo), with_ties = FALSE) |>\n  mutate(\n    label = if_else(\n      is.na(url_icon),\n      \"\",\n      glue(\n        \"<img src='https:{url_icon}' width=35 />\"\n      )\n    )\n  )\n```\n:::\n\n\n\n\nFigura.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggplot(\n  d, aes(x = puntos, y = tipo, fill = puntos)\n) +\n  geom_richtext(\n    data = d_icon, aes(label = label), fill = NA, hjust = 0,\n    label.color = NA\n  ) +\n  geom_point(\n    position = position_jitter(seed = 2025, height = .1), shape = 21,\n    color = c6, size = 2, alpha = .7\n  ) +\n  facet_wrap(vars(modo), nrow = 1, scales = \"free\") +\n  scale_x_continuous(limits = c(0, 231), breaks = seq(0, 200, 50)) +\n  scale_fill_gradientn(\n    colours = c(c1, c2, c3),\n    values = scales::rescale(\n      c(min(d$puntos, na.rm = TRUE), median(d$puntos, na.rm = TRUE),\n      max(d$puntos, na.rm = TRUE))\n    )\n  ) +\n  scale_y_reordered() +\n  coord_cartesian(clip = \"off\", expand = FALSE, ylim = c(.5, 18.5)) +\n  labs(x = NULL, y = NULL, tag = logo, caption = mi_caption) +\n  ggridges::theme_ridges() +\n  theme(\n    text = element_text(family = \"ubuntu\", size = 15, color = c4),\n    aspect.ratio = 1.5,\n    plot.background = element_rect(fill = c5),\n    plot.margin = margin(r = 40, l = 20, t = 45, b = 10),\n    plot.caption = element_markdown(\n      size = 12, color = c3, lineheight = 1.1, margin = margin(t = 15)\n    ),\n    plot.tag = element_markdown(),\n    plot.tag.position = c(.45, 1.025),\n    plot.tag.location = \"plot\",\n    panel.grid.major.y = element_blank(),\n    axis.text.x = element_text(family = \"jet\", color = c4),\n    axis.text.y = element_text(vjust = .5, color = c4),\n    axis.ticks = element_blank(),\n    legend.position = \"none\",\n    strip.text = element_text(\n      hjust = 0, face = \"bold\", size = 20, margin = margin(b = 5)\n    ),\n    strip.background = element_blank()\n  )\n```\n:::\n\n\n\n\nGuardo.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_13.png\",\n  width = 30,\n  height = 22,\n  units = \"cm\"\n)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}