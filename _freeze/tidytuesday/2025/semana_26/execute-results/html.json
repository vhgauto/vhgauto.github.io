{
  "hash": "cacc932725cb25ab7010d4902a8fa1a9",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-summary: \"Ocultar código\"\n    code-line-numbers: false\n    code-annotations: false\n    code-link: true\n    code-tools:\n        source: true\n        toggle: true\n        caption: \"Código\"\n    code-overflow: scroll\n    page-layout: full\neditor_options:\n  chunk_output_type: console\ncategories:\n  - geom_line\n  - geom_richtext\nexecute:\n  eval: false\n  echo: true\n  warning: false\ntitle: \"Semana 26\"\ndate: last-modified\nauthor: Víctor Gauto\n---\n\nRelación entre la gasolina regular respecto de la premium.\n\n![Semana 26, 2025](semana_26.png)\n\n## Paquetes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n```\n:::\n\n\n## Estilos\n\nColores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc1 <- \"gold\"\nc2 <- \"grey50\"\nc3 <- \"grey40\"\nc4 <- \"grey20\"\nc5 <- \"grey10\"\nc6 <- \"white\"\n```\n:::\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nfont_add(\n  family = \"bebas neue\",\n  regular = \"././fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n```\n:::\n\n\n## Epígrafe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfuente <- glue(\n    \"Datos: <span style='color:{c2};'><span style='font-family:jet;'>\",\n    \"{{<b>tidytuesdayR</b>}}</span> semana 26, \",\n    \"<b>U.S. Energy Information Administration</b>.</span>\"\n)\n\nautor <- glue(\"<span style='color:{c2};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{c2};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n    \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n```\n:::\n\n\n## Datos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2025, 26)\ngas_prices <- tuesdata$weekly_gas_prices\n```\n:::\n\n\n## Procesamiento\n\nMe interesa la evolución de la relación entre el precio de la gasolina común respecto de la premium.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- gas_prices |> \n  filter(\n    fuel == \"gasoline\",\n    grade %in% c(\"regular\", \"premium\"),\n    formulation == \"all\"\n  ) |> \n  select(-fuel, -formulation) |> \n  pivot_wider(\n    names_from = grade,\n    values_from = price,\n    id_cols = date\n  ) |> \n  drop_na() |> \n  mutate(r = (premium-regular)/regular)\n```\n:::\n\n\n## Figura\n\nEl paquete [`{ggfx}`](https://ggfx.data-imaginist.com/index.html) sirve para generar el brillo de la caja de texto y la línea de evolución.\n\nCreo dos títulos: `mi_titulo1` para generar el espacio y darle brillo al contorno, y `mi_titulo2` para mostrar el texto, quitando el contorno.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmi_titulo1 <- glue(\n  \"Costo extra de la gasolina<br><b style='color: white'>premium</b> respecto \n  de la<br><b style='color: white'>común</b> en **EE.UU.**\"\n)\n\nmi_titulo2 <- glue(\n  \"Costo extra de la gasolina<br>premium respecto \n  de la<br>común en **EE.UU.**\"\n)\n```\n:::\n\n\nFigura.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggplot(d, aes(date, r)) +\n  ggfx::with_blur(\n    geom_line(color = c1, lineend = \"round\", linewidth = 1, alpha = 1),\n    sigma = 14\n  ) +\n  geom_line(color = c1, lineend = \"round\", linewidth = .5, alpha = 1) +\n  ggfx::with_blur(\n    geom_richtext(\n      x = I(.02), y = I(.98), label = mi_titulo2, hjust = 0, vjust = 1,\n      color = NA, family = \"ubuntu\", size = 9, label.r = unit(0, \"mm\"),\n      label.padding = unit(4, \"mm\"), fill = c5, label.color = c6,\n      label.size = unit(.6, \"mm\")\n    ),\n    sigma = 10,\n    stack = TRUE\n  ) +\n  annotate(\n    geom = \"richtext\",\n    x = I(.02),\n    y = I(.98),\n    label = mi_titulo1,\n    hjust = 0,\n    vjust = 1,\n    family = \"ubuntu\",\n    fill = NA,\n    color = c3,\n    label.color = NA,\n    label.r = unit(0, \"mm\"),\n    label.padding = unit(4, \"mm\"),\n    size = 9\n  ) +\n  scale_x_date(\n    date_labels = \"'%y\",\n    breaks = seq.Date(ymd(19900101), ymd(20270101), \"5 year\"),\n    minor_breaks = \"1 year\",\n    limits = c(ymd(19940101), ymd(20260101)),\n    expand = c(0, 0)\n  ) +\n  scale_y_continuous(\n    labels = scales::label_percent(), \n    breaks = scales::breaks_width(.1),\n    minor_breaks = scales::breaks_width(.02),\n    limits = c(.05, .4),\n    expand = c(0, 0)\n  ) +\n  coord_cartesian(clip = \"off\") +\n  labs(x = NULL, y = NULL, caption = mi_caption) +\n  theme_void(base_size = 20, base_family = \"bebas neue\") +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(20, 20, 20, 20),\n    plot.background = element_rect(fill = c5, color = NA),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c3, size = rel(.7), lineheight = 1.3,\n      margin = margin(b = 5, t = 20)\n    ),\n    panel.background = element_blank(),\n    panel.grid.major = element_line(\n      linetype = \"55\", linewidth = .2, color = c3\n    ),\n    panel.grid.minor = element_line(\n      linetype = \"55\", linewidth = .2, color = c4\n    ),\n    axis.text = element_text(size = rel(1.4), color = c2),\n    axis.text.x = element_text(margin = margin(t = 5)),\n    axis.text.y = element_text(margin = margin(r = 5))\n  )\n```\n:::\n\n\nGuardo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_26.png\",\n  width = 30,\n  height = 31,\n  units = \"cm\"\n)\n```\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}