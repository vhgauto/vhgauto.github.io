{
  "hash": "77617a36f046a0bc1858e46e7b84f828",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-summary: \"Ocultar código\"\n    code-line-numbers: false\n    code-annotations: false\n    code-link: true\n    code-tools:\n        source: true\n        toggle: true\n        caption: \"Código\"\n    code-overflow: scroll\n    page-layout: full\neditor_options:\n  chunk_output_type: console\ncategories:\n  - geom_rect\n  - geom_point\nexecute:\n  eval: false\n  echo: true\n  warning: false\ntitle: \"Semana 23\"\ndate: 2025-06-10\nauthor: Víctor Gauto\n---\n\nCategoría racial y género de jueces federales de EE.UU. \n\n![Semana 23, 2025](semana_23.png)\n\n## Paquetes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n```\n:::\n\n\n## Estilos\n\nColores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMoMAColors::moma.colors(palette_name = \"Palermo\")\nc1 <- \"#0C3C5F\"\nc2 <- \"#E24346\"\nc3 <- \"#894143\"\nc4 <- \"#196C9D\"\nc5 <- \"#FCFBFD\"\n```\n:::\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n```\n:::\n\n\n## Epígrafe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfuente <- glue(\n    \"Datos: <span style='color:{c1};'><span style='font-family:jet;'>\",\n    \"{{<b>tidytuesdayR</b>}}</span> semana 23, \",\n    \"<b>{{historydata}}</b>.</span>\"\n)\n\nautor <- glue(\"<span style='color:{c1};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{c1};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n    \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n```\n:::\n\n\n## Datos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2025, 23)\njudges_people <- tuesdata$judges_people\n```\n:::\n\n\n## Procesamiento\n\nMe interesa la cantidad de jueces masculinos y femeninos, según su categoría racial.\n\nSelecciono las más frecuentes, agrego sus traducciones y asigno colores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrace_v <- c(\"Asian American\", \"Hispanic\", \"African American\", \"White\")\nrace_trad <- c(\"Asiático\\namericano\", \"Hispano\", \"Afroamericano\", \"Blanco\")\n\nrace_trad <- glue(\n  \"<b style='color: {c(c4, c3, c2, c1)}'>\n  {race_trad}\n  </b>\"\n)\n\nrace_trad <- set_names(race_trad, race_v)\n```\n:::\n\n\nCreo función para generar una grilla con puntos aleatorios\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2025)\nf_puntos <- function(n, fila, columna) {\n  lado <- ceiling(sqrt(n))\n  expand_grid(\n    x = seq(fila+.2, fila+.8, length.out = lado),\n    y = seq(columna+.2, columna+.8, length.out = lado)\n  ) |> \n    mutate(\n      x = x+rnorm(lado^2)*.025,\n      y = y+rnorm(lado^2)*.025\n    ) |> \n    slice_head(n = n)\n}\n```\n:::\n\n\nCuento la cantidad de jueces por categoría racial y género. Genero los puntos a partir de las cantidades y posiciones.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- judges_people |> \n  count(race, gender, sort = TRUE) |> \n  drop_na() |> \n  filter(n >= 9) |> \n  mutate(tipo = race_trad[race]) |> \n  mutate(tipo = fct_reorder(tipo, n)) |> \n  mutate(tipo = fct_rev(tipo)) |>\n  arrange(desc(race), gender) |> \n  mutate(\n    columna = map_dbl(tipo, ~which(.x == race_trad)),\n    fila = if_else(gender == \"F\", 1, 2)\n  )\n\nl <- pmap(\n  .l = list(d$n, d$fila, d$columna),\n  .f = f_puntos\n)\n```\n:::\n\n\n## Figura\n\nDefino los rectángulos alrededor de las categorías raciales y del género.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilas_tbl <- tibble(\n  xmin = .3,\n  xmax = 3,\n  ymin = 1:4+.05,\n  ymax = 2:5-.05\n)\n\ncolumnas_tbl <- tibble(\n  xmin = c(1, 2)+.05,\n  xmax = c(2, 3)-.05,\n  ymin = 1,\n  ymax = 5.3\n)\n```\n:::\n\n\nTítulo y figura.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmi_titulo <- glue(\n  \"Categorías raciales y género de {sum(d$n)} jueces<br>federales de **EE.UU.** \n  desde 1789.\"\n)\n\ng <- d |> \n  mutate(p = l) |> \n  unnest(p) |> \n  ggplot(aes(x, y, color = tipo)) +\n  geom_rect(\n    data = filas_tbl,\n    aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),\n    fill = alpha(\"grey\", .4), linetype = 1, linewidth = 1, color = NA,\n    inherit.aes = FALSE\n  ) +\n  geom_rect(\n    data = columnas_tbl,\n    aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),\n    fill = alpha(\"grey\", .4), linetype = 1, linewidth = 1, color = NA,\n    inherit.aes = FALSE\n  ) +\n  geom_point(alpha = .5, size = 2, show.legend = FALSE) +\n  annotate(\n    geom = \"richtext\",\n    x = filas_tbl$xmin,\n    y = filas_tbl$ymax,\n    hjust = 0,\n    vjust = 1,\n    fill = NA,\n    label = race_trad,\n    label.color = NA,\n    size = 6.5,\n    family = \"ubuntu\"\n  ) +\n  annotate(\n    geom = \"richtext\",\n    x = columnas_tbl$xmin,\n    y = columnas_tbl$ymax,\n    hjust = 0,\n    vjust = 1,\n    fill = NA,\n    label = c(\"Femenino\", \"Masculino\"),\n    label.color = NA,\n    size = 6.5,\n    family = \"ubuntu\",\n    fontface = \"bold\"\n  ) +\n  labs(title = mi_titulo, caption = mi_caption) +\n  coord_equal() +\n  scale_color_manual(\n    values = c(c1, c2, c3, c4)\n  ) +\n  theme_void(base_size = 20, base_family = \"ubuntu\") +\n  theme(\n    plot.background = element_rect(fill = c5, color = NA),\n    plot.margin = margin(5, 5, 10, 5),\n    plot.title = element_markdown(\n      color = c1, lineheight = 1.2, margin = margin(l = 10, t = 10)\n    ),\n    plot.caption = element_markdown(\n      color = c2, lineheight = 1.2, margin = margin(r = 20)\n    )\n  )\n```\n:::\n\n\nGuardo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_23.png\",\n  width = 20,\n  height = 35,\n  units = \"cm\"\n)\n```\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}