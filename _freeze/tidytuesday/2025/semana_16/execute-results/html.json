{
  "hash": "7b20f43b4d05fdf77d1c32c470a59046",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-summary: \"Ocultar código\"\n    code-line-numbers: false\n    code-annotations: false\n    code-link: true\n    code-tools:\n        source: true\n        toggle: true\n        caption: \"Código\"\n    code-overflow: scroll\n    page-layout: full\neditor_options:\n  chunk_output_type: console\ncategories: [\"geom_segment\", \"geom_line\", \"geom_point\"]\nexecute:\n  eval: false\n  echo: true\n  warning: false\ntitle: \"Semana 16\"\ndate: 2025-04-22\nauthor: Víctor Gauto\n---\n\nTendencias de accidentes fatales diarios en EE.UU, entre 1992 y 2016\n\n![Semana 16, 2025](semana_16.png)\n\n## Paquetes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n```\n:::\n\n\n## Estilos\n\nColores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncol <- monochromeR::generate_palette(\n  \"#704D9E\", modification = \"go_both_ways\", n_colours = 6\n)\n```\n:::\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n```\n:::\n\n\n## Epígrafe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfuente <- glue(\n    \"Datos: <span style='color:{col[6]};'><span style='font-family:jet;'>\",\n    \"{{<b>tidytuesdayR</b>}}</span> semana 16, \",\n    \"<b>The annual cannabis holiday and fatal traffic crashes<br></b>\n    S. Harper, A. Palayew.</span>\"\n)\n\nautor <- glue(\"<span style='color:{col[6]};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{col[6]};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n    \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n```\n:::\n\n\n## Datos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2025, 16)\ndaily_accidents <- tuesdata$daily_accidents\n```\n:::\n\n\n## Procesamiento\n\nMe interesa visualizar todos los años (`d`) y mostrar la mediana (`d_m`), con el día con la máxima cantidad de accidentes (`d_max`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- daily_accidents |>\n  mutate(\n    fecha = make_date(year = 2020, month = month(date), day = day(date)),\n    año = year(date),\n    dia = yday(date)\n  ) |>\n  arrange(dia, date)\n\nd_m <- d |>\n  reframe(\n    m = median(fatalities_count),\n    .by = fecha\n  )\n\nd_max <- slice_max(d_m, order_by = m, n = 1)\n```\n:::\n\n\n## Figura\n\nEtiquetas para el eje horizontal.\n\n\n::: {.cell}\n\n```{.r .cell-code}\neje_x <- seq.Date(\n  from = ymd(20200101),\n  to = ymd(20210101),\n  by = \"1 month\"\n)\n```\n:::\n\n\nTítulo y subtítulo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmi_titulo <- glue(\n  \"Accidentes de tránsito **fatales** diarios, entre 1992 y 2016, en EE.UU.\"\n)\n\nmi_subtitulo <- glue(\n  \"Se destaca la <b style='color:{col[6]}'>mediana</b> diaria y el día \n  con la máxima cantidad de accidentes en todo el rango.\"\n)\n```\n:::\n\n\nFigura.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggplot(d, aes(fecha, fatalities_count, group = year(date))) +\n  annotate(\n    geom = \"text\", x = eje_x, y = 45, label = format(eje_x, \"%b\"),\n    vjust = -.2, color = col[4], family = \"jet\"\n  ) +\n  geom_segment(\n    data = d_max,\n    aes(x = fecha, y = m, yend = .95*max(d$fatalities_count), xend = fecha),\n    inherit.aes = FALSE, color = col[4], linewidth = 1, linetype = 2\n  ) +\n  annotate(\n    geom = \"text\", x = d_max$fecha, y = .952*max(d$fatalities_count),\n    label = \"4 de julio\", hjust = 0, color = col[5], size = 15,\n    size.unit = \"pt\", vjust = -.3, family = \"ubuntu\"\n  ) +\n  geom_line(alpha = .5, color = col[2]) +\n  geom_line(\n    data = d_m, aes(fecha, m), alpha = 1, color = col[6], linewidth = 1,\n    inherit.aes = FALSE\n  ) +\n  geom_point(\n    data = d_max, aes(fecha, m), size = 2, color = col[1], shape = 21, \n    stroke = 1, fill = col[5], inherit.aes = FALSE\n  ) +\n  coord_cartesian(clip = \"off\") +\n  labs(title = mi_titulo, subtitle = mi_subtitulo, caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = .7,\n    text = element_text(family = \"ubuntu\"),\n    plot.margin = margin(b = 15, r = 10, l = 10, t = 5),\n    plot.background = element_rect(fill = col[1], color = NA),\n    plot.title = element_markdown(size = 20, color = col[5]),\n    plot.subtitle = element_markdown(size = 14, color = col[5]),\n    plot.caption = element_markdown(color = col[4], lineheight = 1.3, size = 12),\n    panel.grid.major.y = element_line(color = col[2], linewidth = .1),\n    axis.text.y = element_text(\n      margin = margin(r = -20), vjust = -.3, family = \"jet\", size = 12,\n      color = col[4]\n    )\n  )\n```\n:::\n\n\nGuardo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_16.png\",\n  width = 30,\n  height = 24,\n  units = \"cm\"\n)\n```\n:::\n\n",
    "supporting": [
      "semana_16_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}