{
  "hash": "5029f6639d4a3b180f2b9523d6b76b7a",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-summary: \"Ocultar código\"\n    code-line-numbers: false\n    code-annotations: false\n    code-link: true\n    code-tools:\n        source: true\n        toggle: true\n        caption: \"Código\"\n    code-overflow: scroll\n    page-layout: full\neditor_options:\n  chunk_output_type: console\ncategories:\n  - geom_histogram\n  - geom_point_svg\nexecute:\n  eval: false\n  echo: true\n  warning: false\ntitle: \"Semana 30\"\ndate: last-modified\nauthor: Víctor Gauto\n---\n\nDistribución de la duración de películas en **Netflix**.\n\n![Semana 30, 2025](semana_30.png)\n\n## Paquetes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n```\n:::\n\n\n## Estilos\n\nColores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc1 <- \"#D81F26\"\nc2 <- \"black\"\nc3 <- \"white\"\nc4 <- \"grey30\"\n```\n:::\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n```\n:::\n\n\n## Epígrafe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfuente <- glue(\n  \"Datos: <span style='color:{c3};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana 30, \",\n  \"<b><span style='color: {c1}'>NETFLIX</b> \n  Engagement Reports</b>.</span>\"\n)\n\nautor <- glue(\"<span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n    \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n```\n:::\n\n\n## Datos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2025, 30)\nmovies <- tuesdata$movies\nshows <- tuesdata$shows\n```\n:::\n\n\n## Procesamiento\n\nMe interesa la duración de las películas. Conservo únicamente aquellas que duran menos de 4 horas para generar un histograma.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- movies |> \n  mutate(dur = duration(runtime)) |> \n  select(title, dur) |> \n  distinct() |> \n  drop_na() |> \n  filter(dur < 3600*4)\n```\n:::\n\n\nDuración promedio de las películas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhora <- floor(mean(d$dur)/3600)\nminuto <- floor((mean(d$dur) - hora*3600)/60)\n```\n:::\n\n\n## Figura\n\nLogo, título y subtítulo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlogo_link <- \"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\nlogo_txt <- paste(readLines(logo_link), collapse = \"\\n\")\n\nmi_titulo <- glue(\n  \"Distribución de duraciones de \n  {format(nrow(d), big.mark = '.', decimal.mark = ',')} películas \n  en <b style='color: {c1}'>NETFLIX</b>.\"\n)\n\nmi_subtitulo <- glue(\n  \"La película promedio <br>dura <b style='color: {c3}'>{hora} \n  hora {minuto} minutos</b>.\"\n)\n```\n:::\n\n\nFigura.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggplot(d, aes(dur)) +\n  geom_histogram(\n    binwidth = 2*60, color = c2, fill = c1, linewidth = 1\n  ) +\n  ggsvg::geom_point_svg(\n    x = I(.1), y = I(.3), svg = logo_txt, size = 40\n  ) +\n  scale_x_continuous(\n    breaks = 1:3*3600,\n    labels = paste0(1:3, \"H\")\n  ) +\n  annotate(\n    geom = \"richtext\",\n    x = I(.6),\n    y = I(.8),\n    label = mi_subtitulo,\n    color = c4,\n    family = \"ubuntu\",\n    label.color = NA,\n    size = 7,\n    fill = NA,\n    hjust = 0,\n    vjust = 1\n  ) +\n  coord_cartesian(expand = FALSE, clip = \"off\") +\n  labs(\n    title = mi_titulo,\n    caption = mi_caption\n  ) +\n  theme_void(base_family = \"ubuntu\", base_size = 16) +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(t = 10, b = 10),\n    plot.background = element_rect(fill = c2),\n    plot.title.position = \"plot\",\n    plot.title = element_textbox_simple(\n      color = c3, size = rel(1.75), margin = margin(b = 15)\n    ),\n    plot.caption = element_markdown(\n      color = c4, lineheight = 1.3, margin = margin(t = 10), \n      size = rel(.9)\n    ),\n    panel.background = element_blank(),\n    panel.grid.major.y = element_line(\n      color = c4, linewidth = .2, linetype = \"FF\"\n    ),\n    axis.text = element_text(\n      color = c4, family = \"jet\", margin = margin(t = 10)\n    ),\n    axis.text.y = element_text(margin = margin(r = 5))\n  )\n```\n:::\n\n\nGuardo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_30.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\"\n)\n```\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}