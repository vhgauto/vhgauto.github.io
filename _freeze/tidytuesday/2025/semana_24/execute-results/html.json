{
  "hash": "8f7f395ad39d9410674dcf04c520e102",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-summary: \"Ocultar código\"\n    code-line-numbers: false\n    code-annotations: false\n    code-link: true\n    code-tools:\n        source: true\n        toggle: true\n        caption: \"Código\"\n    code-overflow: scroll\n    page-layout: full\neditor_options:\n  chunk_output_type: console\ncategories:\n  - geom_col\n  - geom_text\n  - geom_point_svg\nexecute:\n  eval: false\n  echo: true\n  warning: false\ntitle: \"Semana 24\"\ndate: 2025-06-17\nauthor: Víctor Gauto\n---\n\nCantidad de APIs por categoría.\n\n![Semana 24, 2025](semana_24.png)\n\n## Paquetes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n```\n:::\n\n\n## Estilos\n\nColores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc1 <- \"#082844\"\nc2 <- \"#8DADCA\"\nc3 <- \"white\"\n```\n:::\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n```\n:::\n\n\n## Epígrafe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfuente <- glue(\n  \"Datos: <span style='color:{c1};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana 24, \",\n  \"<b>APIs.guru</b>.</span>\"\n)\n\nautor <- glue(\"<span style='color:{c1};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{c1};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n```\n:::\n\n\n## Datos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2025, 24)\napi_categories <- tuesdata$api_categories\n```\n:::\n\n\n## Procesamiento\n\nMe interesan las categorías de las API.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- count(api_categories, apisguru_category, sort = TRUE) |>\n  filter(n >= 10) |>\n  mutate(\n    categoria = str_replace_all(apisguru_category, \"_\", \" \") |> toupper()\n  ) |>\n  mutate(\n    categoria = fct_reorder(categoria, n)\n  ) |>\n  mutate(hjust = if_else(n > 10, 1.05, -.05)) |>\n  mutate(color = if_else(n > 10, c1, c2))\n```\n:::\n\n\n## Figura\n\nLogo y título.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmi_titulo <- glue(\n  \"Categorías principales a partir de {nrow(api_categories)} **API**s.\"\n)\n\nlogo_link <- \"https://apis.guru/assets/images/logo.svg\"\nlogo_svg <- paste(readLines(logo_link), collapse = \"\\n\")\n```\n:::\n\n\nFigura.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggplot(d, aes(n, categoria)) +\n  geom_col(fill = c2, color = NA) +\n  geom_text(\n    aes(label = categoria, hjust = hjust, color = color),\n    family = \"jet\",\n    size = 8\n  ) +\n  ggsvg::geom_point_svg(\n    x = I(.985),\n    y = I(25.7),\n    svg = logo_svg,\n    size = 10,\n    inherit.aes = FALSE\n  ) +\n  scale_x_log10() +\n  scale_color_identity() +\n  coord_cartesian(\n    ylim = c(0, nrow(d) + 1),\n    xlim = c(.9, 1200),\n    expand = FALSE,\n    clip = \"off\"\n  ) +\n  labs(x = NULL, y = NULL, title = mi_titulo, caption = mi_caption) +\n  ggthemes::theme_par(base_size = 15, base_family = \"jet\") +\n  theme(\n    aspect.ratio = 1,\n    plot.background = element_rect(fill = c2, color = NA),\n    plot.title = element_markdown(\n      family = \"ubuntu\",\n      color = c1,\n      hjust = 0,\n      face = \"plain\"\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\",\n      color = c3,\n      margin = margin(t = 20),\n      lineheight = 1.2,\n      size = 15\n    ),\n    panel.background = element_rect(fill = c1, color = NA),\n    axis.line = element_blank(),\n    axis.ticks = element_blank(),\n    axis.text.x = element_text(color = c1),\n    axis.text.y = element_blank()\n  )\n```\n:::\n\n\nGuardo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_24.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\"\n)\n```\n:::\n\n",
    "supporting": [
      "semana_24_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}