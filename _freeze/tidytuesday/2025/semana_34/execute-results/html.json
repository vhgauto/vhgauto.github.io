{
  "hash": "5cd99d087b766ff051ba4afb9e8f7373",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-summary: \"Ocultar código\"\n    code-line-numbers: false\n    code-annotations: false\n    code-link: true\n    code-tools:\n        source: true\n        toggle: true\n        caption: \"Código\"\n    code-overflow: scroll\n    page-layout: full\neditor_options:\n  chunk_output_type: console\ncategories:\n  - geom_tile\n  - geom_richtext\nexecute:\n  eval: false\n  echo: true\n  warning: false\ntitle: \"Semana 34\"\ndate: last-modified\nauthor: Víctor Gauto\n---\n\nCanciones repetidas en el **Billboard Hot 100**.\n\n::: {.column-page-right}\n\n![Semana 34, 2025](semana_34.png)\n\n:::\n\n## Paquetes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n```\n:::\n\n\n## Estilos\n\nColores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc1 <- \"#FFB3B5\"\nc2 <- \"#7D0112\"\n# c3 <- \"#4B1D91\"\nc3 <- \"#310048\"\nc4 <- \"#D3D9FF\"\n```\n:::\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nfont_add(\n  family = \"bebas\",\n  regular = \"././fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n```\n:::\n\n\n## Epígrafe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfuente <- glue(\n  \"Datos: <span style='color:{c3};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana 34, \",\n  \"<b>Billboard Hot 100 Number Ones Database</b>.</span>\"\n)\n\nautor <- glue(\"<span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n```\n:::\n\n\n## Datos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2025, 34)\nbillboard <- tuesdata$billboard\n```\n:::\n\n\n## Procesamiento\n\nMe interesan las canciones con el mismo nombre, indicando los artistas y el año.\n\nCanciones repetidas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ns <- billboard |>\n  count(song, sort = TRUE) |>\n  filter(n >= 2) |>\n  pull(song)\n```\n:::\n\n\nDefino la cantidad de elementos a lo ancho y alto. Agrego íconos para las etiquetas de texto para la figura.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nancho_song <- 4\nalto_song <- 6\n\nicon_music <- glue(\n  \"<span style='font-family:jet; color: {c1};'>&#xf001;</span>\"\n)\n\nicon_artist <- glue(\n  \"<span style='font-family:jet; color: {c2};'>&#xf4ff;</span>\"\n)\n```\n:::\n\n\nFiltro los datos por las canciones seleccionadas y genero las etiquetas incorporando los íconos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- billboard |>\n  filter(song %in% s) |>\n  mutate(año = year(date)) |>\n  select(song, artist, año) |>\n  arrange(song, año) |>\n  mutate(artist = str_wrap(artist, 26)) |>\n  mutate(artist = str_replace_all(artist, \"\\n\", \"<br>\")) |>\n  mutate(artista_año = glue(\"{icon_artist} <b>{artist}</b>, {año}\")) |>\n  nest(.by = song) |>\n  mutate(\n    label = map_chr(data, ~ str_flatten(.x$artista_año, collapse = \"<br>\"))\n  ) %>%\n  mutate(x = rep(1:ancho_song, length.out = nrow(.))) %>%\n  mutate(y = rep(alto_song:1, each = ancho_song, length.out = nrow(.))) |>\n  mutate(song = str_wrap(song, 13)) |>\n  mutate(song = str_replace_all(song, \"\\n\", \"<br>\"))\n```\n:::\n\n\n## Figura\n\nAncho y alto del recuadro detrás de los nombres de las canciones y el título de la figura.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nancho_art <- .8\nalto_art <- .6\n\nmi_titulo <- glue(\n  \"Canciones con el mismo título dentro del <b style='color: {c2};'>Billboard Hot 100</b>, desde \n  {year(min(billboard$date))}\"\n)\n```\n:::\n\n\nFigura.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggplot(d, aes(x, y)) +\n  geom_tile(width = ancho_art, height = alto_art, fill = c3) +\n  geom_richtext(\n    aes(label = icon_music, x = x - ancho_art / 2, y = y + alto_art / 2),\n    fill = NA,\n    hjust = 0,\n    vjust = 1,\n    size = 15,\n    label.color = NA\n  ) +\n  geom_richtext(\n    aes(label = song),\n    size = 11,\n    family = \"bebas\",\n    fill = NA,\n    label.color = NA,\n    color = \"white\"\n  ) +\n  geom_richtext(\n    aes(x = x - ancho_art / 2, y = y - alto_art / 2, label = label),\n    size = 4.3,\n    fill = NA,\n    label.color = NA,\n    family = \"ubuntu\",\n    hjust = 0,\n    vjust = 1,\n    color = \"black\"\n  ) +\n  coord_equal(clip = \"off\") +\n  labs(title = mi_titulo, caption = mi_caption) +\n  theme_void(base_family = \"ubuntu\", base_size = 10) +\n  theme(\n    plot.background = element_rect(fill = c4, color = NA),\n    plot.title = element_markdown(\n      size = rel(2.3),\n      hjust = .5,\n      margin = margin(t = 15, b = -30)\n    ),\n    plot.caption = element_markdown(\n      color = c2,\n      size = rel(1.4),\n      lineheight = 1.2,\n      hjust = .5,\n      margin = margin(b = 10, t = 10)\n    )\n  )\n```\n:::\n\n\nGuardo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_34.png\",\n  width = 30,\n  height = 44,\n  units = \"cm\"\n)\n```\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}