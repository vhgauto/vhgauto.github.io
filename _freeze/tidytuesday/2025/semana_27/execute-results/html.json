{
  "hash": "41ac46fa62153d81099be5a1783bd043",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    code-fold: show\n    code-summary: \"Ocultar código\"\n    code-line-numbers: false\n    code-annotations: false\n    code-link: true\n    code-tools:\n        source: true\n        toggle: true\n        caption: \"Código\"\n    code-overflow: scroll\n    page-layout: full\neditor_options:\n  chunk_output_type: console\ncategories:\n  - geom_tile\n  - geom_text\n  - geom_richtext\nexecute:\n  eval: false\n  echo: true\n  warning: false\ntitle: \"Semana 27\"\ndate: last-modified\nauthor: Víctor Gauto\n---\n\nNombres de colores.\n\n::: {.panel-tabset}\n\n## Verde, azul, rojo\n\n![Semana 27, 2025](semana_27.png)\n\n## Rosa, amarillo, naranja\n\n![Semana 27, 2025](semana_27-2.png)\n\n:::\n\n## Paquetes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n```\n:::\n\n\n## Estilos\n\nColores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc1 <- \"grey10\"\nc2 <- \"white\"\nc3 <- \"#FE2C54\"\nc4 <- \"#76FF7B\"\nc5 <- \"#7BC8F6\"\n```\n:::\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n```\n:::\n\n\n## Epígrafe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfuente <- glue(\n    \"Datos: <span style='color:{c4};'><span style='font-family:jet;'>\",\n    \"{{<b>tidytuesdayR</b>}}</span> semana 27, \",\n    \"<b>xkcd Color Survey </b>.</span>\"\n)\n\nautor <- glue(\"<span style='color:{c4};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{c4};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n    \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n```\n:::\n\n\n## Datos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2025, 27)\ncolor_ranks <- tuesdata$color_ranks\n```\n:::\n\n\n## Procesamiento\n\nMe interesan los nombres que les dieron los encuestados a los colores, y poder visualizar los colores.\n\nDefino dos funciones auxiliares. Función para asignar posiciones y el orden de los colores seleccionados.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nf_color <- function(color_esp, color_eng, ancho = 7) {\n  color_tbl <- color_ranks |> \n    filter(str_detect(color, color_eng)) |> \n    mutate(grupo = color_esp) |> \n    mutate(rgb = map(hex, ~colorspace::hex2RGB(.x)@coords)) |> \n    mutate(\n      r = map_dbl(rgb, ~.x[1]),\n      g = map_dbl(rgb, ~.x[2]),\n      b = map_dbl(rgb, ~.x[3])\n    ) |> \n    arrange(r, g, b)\n\n  n_ancho <- ancho\n  n_alto <- ceiling(nrow(color_tbl)/n_ancho)\n  \n  expand_grid(\n    y = 30:(30-n_alto),\n    x = 1:n_ancho\n  ) |> \n    mutate(id = row_number()) |> \n    filter(id <= nrow(color_tbl)) |> \n    bind_cols(color_tbl)\n}\n```\n:::\n\n\nFunción para agregar un color diferente a cada letra.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nf_label <- function(x) {\n  n <- nchar(x)\n  col <- rep(c(c3, c4, c5), length.out = n)\n  l <- str_split(x, \"\")[[1]]\n  glue(\n    \"<b style='color:{col}'>{l}</b>\"\n  ) |> \n    str_flatten()\n}\n```\n:::\n\n\nIdentifico los colores de interés, genero la base de datos y reordeno los colores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- bind_rows(\n  f_color(\"azul\", \"blue\"),\n  f_color(\"rojo\", \"red\"),\n  f_color(\"verde\", \"green\"),\n) |> \n  mutate(color = str_replace_all(color, \" \", \"\\n\")) |> \n  mutate(grupo = factor(grupo, c(\"verde\", \"azul\", \"rojo\")))\ncolores_label <- f_label(\"colores\")\n```\n:::\n\n\n## Figura\n\nGenero título y creo tibble para agregar a la figura de facetas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmi_titulo <- glue(\n  \"En una encuesta de {colores_label}<br>se solicitó a los participantes<br>que \n  nombren los colores que<br>veían.\"\n)\n\nmi_titulo_tbl <- tibble(\n  x = 2,\n  y = 6,\n  label = mi_titulo,\n  grupo = factor(\"azul\")\n)\n```\n:::\n\n\nFigura.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <-  ggplot(d, aes(x, y, fill = hex)) +\n  geom_tile(color = c1, linewidth = .5, show.legend = FALSE) +\n  geom_text(\n    aes(x = x-.45, y = y+.45, label = color), size = 1.5, hjust = 0, vjust = 1,\n    family = \"ubuntu\", fontface = \"bold\", color = c1\n  ) +\n  geom_text(\n    aes(x = x+.45, y = y-.45, label = color), size = 1.5, hjust = 1, vjust = 0,\n    family = \"ubuntu\", fontface = \"bold\", color = c2\n  ) +\n  geom_richtext(\n    data = mi_titulo_tbl, aes(x, y, label = label), family = \"ubuntu\", size = 9,\n    color = c2, label.color = NA, inherit.aes = FALSE, hjust = 0,\n    fill = NA\n  ) +\n  facet_wrap(vars(grupo), nrow = 1) +\n  scale_fill_identity() +\n  coord_equal(expand = FALSE, clip = \"off\") +\n  labs(caption = mi_caption) +\n  theme_void(base_family = \"ubuntu\", base_size = 18) +\n  theme(\n    plot.margin = margin(10, 10, 10, 10),\n    plot.background = element_rect(fill = c1, color = NA),\n    plot.title = element_markdown(),\n    plot.caption = element_markdown(color = c3, lineheight = 1.3),\n    panel.spacing.x = unit(1, \"cm\"),\n    strip.text = element_blank()\n  )\n```\n:::\n\n\nGuardo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_27.png\",\n  width = 30,\n  height = 41,\n  units = \"cm\"\n)\n```\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}