{
  "hash": "e57e52041bd1626700faf5c6823fcbbd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 14\"\nsubtitle: \"Figura semana 14\"\nauthor: Víctor Gauto\ndate: \"2024-04-08\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_tile, geom_richtext, geom_point_svg]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s14/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(ggsvg)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores de la bandera panafricana\nc1 <- \"#AC3E48\"\nc2 <- \"#000000\"\nc3 <- \"#00863D\"\n# fondo\nc4 <- \"white\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# íconos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c3};'><span style='font-family:mono;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana {14}. \",\n  \"<b>W. E. B. Du Bois</b>, 1900 Paris Exposition.</span>\")\nautor <- glue(\"<span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2024, 14)\ndubois <- tuesdata$dubois_week10\n\n# me interesa representar a cada personas, dividido por profesión, en un waffle,\n# con íconos individuales\n\n# traducción de las ocupaciones\ntrabajos <- pull(dubois, Occupation)\ntrabajos_trad <- c(\n  \"profesores\", \"ministros (iglesia)\", \"empleados estatales\", \"comerciantes\", \n  \"otros\", \"amas de casa\")\n\nnames(trabajos_trad) <- trabajos\n\n# cantidad de personas por profesión, siendo 330 el total\nd <- dubois |> \n  mutate(n = round(Percentage, 1)/100*330) |> \n  mutate(n2 = round(n, 1)) |> \n  mutate(n3 = round(n2)) |> \n  mutate(s = sum(n3)) |> \n  select(Occupation, n = n3) |> \n  mutate(ocupacion = trabajos_trad[Occupation]) |> \n  mutate(ocupacion = fct_reorder(ocupacion, n))\n\n# figura ------------------------------------------------------------------\n\n# función para crear las coordenadas (x,y) y generar un waffle\nf_waffle <- function(prof) {\n  \n  # cantidad de emojis\n  d_n <- d |> \n    filter(ocupacion == prof) |> \n    pull(n)\n  \n  # eje vertical y horizontal incompleto\n  y_enteros <- d_n %/% ancho\n  x_extra <- d_n %% ancho\n  \n  # si es múltiplo del ancho, agrega o no una nueva línea\n  if (x_extra == 0) {\n    tbl <- expand.grid(x = 1:ancho, y = 1:y_enteros) |> \n      tibble() |> \n      mutate(profesion = prof)\n  } else {\n    tbl <- expand.grid(x = 1:ancho, y = 1:y_enteros) |> \n      tibble() |> \n      add_row(x = 1:x_extra, y = y_enteros+1) |> \n      mutate(profesion = prof)\n  }\n  \n  return(tbl)\n  \n}\n\n# función que cambia el color de cada letra\nf_label <- function(x) {\n  p_l <- x |> \n    str_split(\"\") |> \n    unlist()\n  \n  prof_label <- tibble(p = p_l) |> \n    mutate(color = rep(c(c1, c2, c3), length.out = length(p_l))) |> \n    mutate(label = glue(\"<span style='color:{color}'>{p}</span>\")) |> \n    pull(label) |> \n    str_flatten()\n  \n  return(prof_label)\n}\n\n# cantidad de íconos, horizontal\nancho <- 7\n\n# creo tibble para figura waffle, con colores/rellenos aleatorios\ne <- map(trabajos_trad, f_waffle) |> \n  list_rbind() |> \n  mutate(n = n(), .by = profesion) |> \n  mutate(profesion = fct_reorder(profesion, -n)) |> \n  mutate(color = sample(c(c1, c2, c3), size = n(), replace = TRUE)) |> \n  mutate(\n    fill = case_match(\n      color,\n      c1 ~ c2,\n      c2 ~ c3,\n      c3 ~ c1\n    )\n  )\n\n# ícono de persona\npersona_icon <- glue(\"<span style='font-family:jet;'>&#xf064d;</span>\")\n\n# profesiones con letras de cada color\ne_label <- e |> \n  filter(y == max(y) & x == 1, .by = profesion) |> \n  mutate(y = y+1) |>\n  mutate(label = map(toupper(profesion), (x) f_label(x))) |> \n  unnest(label) |> \n  # agrego enter en algunas profesiones, menos en 'amas de casa'\n  mutate(label = if_else(\n    profesion == trabajos_trad[6],\n    label,\n    str_replace_all(label, \"> <\", \"><br><\")\n  ))\n\n\n# leyenda para indicar que cada ícono es una persona\nd_legend <- tibble(\n  profesion = fct(\"amas de casa\"),\n  y = 28,\n  x = 1,\n  label = glue(\"{persona_icon} = 1 persona\")\n)\n\n# subtítulo\nmi_subtitle <- tibble(\n  profesion = fct(\"otros\"),\n  y = 22,\n  x = 1,\n  label = glue(\n    \"<span style='color:{c1}'>\",\n    \"Ocupaciones de 330 personas, descendientes de<br>\",\n    \"esclavos, graduadas de la <b>Universidad de Atlanta</b><br>\",\n    \"en 1900, EE.UU.</span>\",\n    \"<br><br>\",\n    \n    \"<span style='color:{c2}'>\",\n    \"Recreación de la lámina 37, de <b>W.E.B Du Bois</b>,<br>\",\n    \"para la Exposición de París.\",\n    \"</span>\",\n    \"<br><br>\",\n    \n    \"<span style='color:{c3}'>\",\n    \"La presente paleta de colores<br>\",\n    \"corresponde a la <b>bandera panafricana</b>:\",\n    \"</span>\"\n    )\n)\n\n# bandera panafricana, de Wikipedia, .svg\nbandera_url <- \"https://upload.wikimedia.org/wikipedia/commons/a/ab/Flag_of_the_UNIA.svg\"\nbandera_txt <- paste(readLines(bandera_url), collapse = \"n\")\n\n# verifico que la bandera se vea correctamente\ngrid::grid.draw( svg_to_rasterGrob(bandera_txt) )\n\nmi_bandera <- tibble(\n  profesion = fct(\"empleados estatales\"),\n  y = 16,\n  x = 3\n)\n\n# figura\ng <- ggplot(e, aes(x, y)) +\n  # cuadros\n  geom_tile(aes(fill = fill), color = c4, linewidth = 1) +\n  # contorno blanco\n  geom_richtext(\n    color = c4, label = persona_icon, fill = NA, label.color = NA, \n    family = \"jet\", size = 3.3, lineheight = unit(2, \"line\"), nudge_y = -.05, \n    show.legend = FALSE) +\n  # ícono de personas\n  geom_richtext(\n    aes(color = color),\n    label = persona_icon, fill = NA, label.color = NA, family = \"jet\", size = 3,\n    lineheight = unit(2, \"line\"), nudge_y = -.05, show.legend = FALSE) +\n  # profesiones\n  geom_richtext(\n    data = e_label, aes(.5, y, label = label), hjust = 0, family = \"ubuntu\",\n    size = 5.5, vjust = 0, fill = NA, label.color = NA, inherit.aes = FALSE) +\n  # leyenda\n  geom_richtext(\n    data = d_legend, aes(x, y, label = label), fill = NA, label.color = NA,\n    family = \"jet\", size = 3, color = c1, hjust = 0\n  ) +\n  # subtítulo\n  geom_richtext(\n    data = mi_subtitle, aes(x, y, label = label), fill = NA, label.color = NA,\n    family = \"ubuntu\", size = 6, color = c1, hjust = 0\n  ) +\n  # bandera\n  geom_point_svg(\n    data = mi_bandera, aes(x, y), svg = bandera_txt, size = 35, hjust = .5, \n    vjust = 1) + \n  facet_wrap(vars(profesion), nrow = 1) +\n  scale_color_identity() +\n  scale_fill_identity() +\n  coord_equal(clip = \"off\") +\n  labs(caption = mi_caption) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(fill = c4, color = c1, linewidth = 3),\n    plot.caption = element_markdown(\n      color = c1, family = \"ubuntu\", size = 10, lineheight = unit(1.1, \"line\"),\n      margin = margin(b = 5, r = 5)),\n    panel.spacing.x = unit(.3, \"line\"),\n    strip.text = element_blank()\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s14/viz.png\",\n  width = 30,\n  height = 20.715,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s14/viz.png\")\n\n# figura original\nbrowseURL(\"https://raw.githubusercontent.com/ajstarks/dubois-data-portraits/master/challenge/2024/challenge10/original-plate-37.jpg\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s14/viz.png)\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}