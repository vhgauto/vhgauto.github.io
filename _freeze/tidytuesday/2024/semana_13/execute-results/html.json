{
  "hash": "5c6ec67591202713add6fc6a9962e054",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 13\"\nsubtitle: \"Figura semana 13\"\nauthor: Víctor Gauto\ndate: \"2024-04-01\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_tile]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s13/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nExpectativas e historial de la **Asociación Nacional Deportiva Universitaria**, en EE.UU.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(patchwork)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"grey80\"\nc2 <- \"#8C0272\"\nc3 <- \"#9B7424\"\nc4 <- \"#A7F2F9\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# fuente: Victor\nfont_add(\n  family = \"victor\", \n  regular = \"fuente/VictorMono-ExtraLight.ttf\",\n  bold = \"fuente/VictorMono-VariableFont_wght.ttf\",\n  italic = \"fuente/VictorMono-ExtraLightItalic.ttf\")\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c3};'><span style='font-family:mono;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana {13}. \",\n  \"NCAA Men's March Madness.</span>\")\nautor <- glue(\"<span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:fa-brands;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:fa-brands;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:fa-brands;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:fa-brands;'>&#xf4f6;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2024, 13)\nteam_results <- tuesdata$`team-results`\npublic_picks <- tuesdata$`public-picks`\n\n# me interesan las expectativas del público y el historial de los equipos de \n# la NCAA\n\n# listado de equipos coincidentes en ambos datasets\nequipos_interes <- inner_join(\n  select(team_results, TEAM),\n  select(public_picks, TEAM),\n  by = join_by(TEAM)\n) |> \n  pull()\n\n# etiquetas de las rondas\neje_x_label <- c(\n  \"32<sup>avos</sup><br>|<br>|<br>|<br>|<br>|<br>|\", \n  \"16<sup>avos</sup><br>|<br>|<br>|<br>|<br>|\", \n  \"8<sup>avos</sup><br>|<br>|<br>|<br>|\",\n  \"4<sup>tos</sup><br>|<br>|<br>|\", \n  \"Semi<br>|<br>|\",\n  \"<span style='font-size:17px;'>Final</span>\")\n\n# expectativas, en porcentajes\nd_expectativa <- public_picks |>\n  filter(TEAM %in% equipos_interes) |> \n  select(TEAM, R64, R32, S16, E8, F4, FINALS) |>\n  mutate(\n    across(\n      .cols = -TEAM,\n      .fns = ~ str_remove(.x, \"%\") |> as.numeric()\n    )\n  ) |>\n  pivot_longer(\n    cols = -TEAM,\n    names_to = \"pos\",\n    values_to = \"valor\"\n  ) |>\n  mutate(pos = fct(\n    pos,\n    levels = c(\"R64\", \"R32\", \"S16\", \"E8\", \"F4\", \"FINALS\"))) |>\n  rename(equipo = TEAM) |>\n  mutate(s = sum(valor), .by = equipo) |>\n  mutate(equipo = fct_reorder(equipo, s)) |>\n  mutate(eje_x = as.numeric(pos)) |>\n  mutate(tipo = \"expectativa\") |>\n  select(equipo, valor, eje_x, tipo) |> \n  filter(as.numeric(equipo) >= 29)\n\n# historial, en cantidad de partidos\nd_historia <- team_results |> \n  filter(TEAM %in% equipos_interes) |> \n  select(TEAM, R64, R32, S16, E8, F4, CHAMP) |> \n  pivot_longer(\n    cols = -TEAM,\n    names_to = \"pos\",\n    values_to = \"valor\"\n  ) |> \n  mutate(suma = sum(valor), .by = TEAM) |> \n  mutate(TEAM = fct_reorder(TEAM, suma)) |> \n  select(equipo = TEAM, pos, valor) |> \n  mutate(pos = fct(\n    pos, \n    levels = c(\"R64\", \"R32\", \"S16\", \"E8\", \"F4\", \"CHAMP\"))) |> \n  mutate(s = sum(valor), .by = equipo) |> \n  mutate(eje_x = as.numeric(pos)) |> \n  mutate(tipo = \"historia\") |> \n  select(equipo, valor, eje_x, tipo) |> \n  filter(as.numeric(equipo) >= 29)\n\n# figura ------------------------------------------------------------------\n\n# heatmap de las expectativas\ng_expectativa <- ggplot(d_expectativa, aes(eje_x, equipo, fill = valor)) +\n  geom_tile(color = c1, linewidth = 1) +\n  scale_x_continuous(\n    breaks = 1:6, sec.axis = dup_axis(\n      labels = eje_x_label\n    )) +\n  scico::scale_fill_scico(\n    palette = \"hawaii\",\n    breaks = seq(0, 100, 25),\n    limits = c(0, 100),\n    labels = (x) glue(\"{x}%\")) +\n  coord_equal() +\n  labs(\n    x = NULL, y = NULL, title = \"Expectativa\", \n    fill = \"% de la gente que votónal equipo en cada ronda\") +\n  guides(fill = guide_colorbar(title.position = \"top\")) +\n  theme_void() +\n  theme(\n    plot.title = element_text(\n      family = \"ubuntu\", color = c3, size = 20, hjust = 0),\n    axis.text.x.top = element_markdown(\n      vjust = 0, hjust = 0, color = c2, family = \"victor\"),\n    axis.text.y = element_text(family = \"ubuntu\", hjust = 1, size = 15),\n    legend.position = c(1, 0),\n    legend.justification = c(1, 1),\n    legend.direction = \"horizontal\",\n    legend.title = element_text(family = \"ubuntu\", margin = margin(t = 10)),\n    legend.key.width = unit(10, \"mm\"),\n    legend.text = element_text(family = \"victor\")\n  )\n\n# heatmap del historial\ng_historia <- ggplot(d_historia, aes(eje_x, equipo, fill = valor)) +\n  geom_tile(color = c1, linewidth = 1) +\n  scale_x_continuous(\n    breaks = 1:6, sec.axis = dup_axis(\n      labels = eje_x_label\n    )) +\n  scico::scale_fill_scico(\n    palette = \"hawaii\",\n    breaks = seq(0, 15, 5)) +\n  coord_equal() +\n  labs(\n    x = NULL, y = NULL, title = \"Historial\",\n    fill = \"# de veces que elnequipo alcanzó cada ronda\") +\n  guides(fill = guide_colorbar(title.position = \"top\")) +\n  theme_void() +\n  theme(\n    plot.title = element_text(\n      family = \"ubuntu\", color = c3, size = 20, hjust = 0),\n    axis.text.x.top = element_markdown(\n      vjust = 0, hjust = 0, color = c2, family = \"victor\"),\n    axis.text.y = element_markdown(\n      family = \"ubuntu\", hjust = 1, margin = margin(l = 25), size = 15),\n    legend.position = c(1, 0),\n    legend.justification = c(1, 1),\n    legend.direction = \"horizontal\",\n    legend.title = element_text(family = \"ubuntu\", margin = margin(t = 10)),\n    legend.key.width = unit(10, \"mm\"),\n    legend.text = element_text(family = \"victor\")\n  )\n\n# combino ambas figuras\ng <- g_expectativa + g_historia +\n  plot_annotation(\n    subtitle = glue(\n      \"Predicciones e historial del torneo de béisbol de<br>\",\n      \"la **Asociación Nacional Deportiva Universitaria**,<br>\",\n      \"**EE.UU.**,para 30 equipos de los 68 participates.\",\n    ),\n    caption = mi_caption,\n    theme = theme(\n      plot.margin = margin(t = 10, r = 30, l = 30),\n      plot.background = element_rect(\n        fill = c1, color = c4, linewidth = 3),\n      plot.title.position = \"plot\",\n      plot.subtitle = element_markdown(\n        family = \"ubuntu\", size = 17, color = c2, hjust = 0, \n        lineheight = unit(1.1, \"line\")),\n      plot.caption = element_markdown(\n        color = c2, family = \"ubuntu\", size = 11, \n        margin = margin(t = 90, b = 10))\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s13/viz.png\",\n  width = 20,\n  height = 31,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s13/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s13/viz.png)\n\n\n",
    "supporting": [
      "semana_13_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}