{
  "hash": "7516aeca3c1dc5d8c317955daadf6163",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 03\"\nsubtitle: \"Figura semana 03\"\nauthor: Víctor Gauto\ndate: \"2024-01-22\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_sf, geom_richtext, geom_tile, geom_text]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s03/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(sf)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"white\"\nc2 <- \"#3F6C81\"\nc3 <- \"#EBEB99\"\nc4 <- \"grey20\"\nc5 <- \"grey10\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# horas, días\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c3};'><span style='font-family:mono;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana 3. \",\n  \"The Center for Public Integrity.</span>\")\nautor <- glue(\"<span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:fa-brands;'>&#xf099;</span>\")\nicon_github <- glue(\"<span style='font-family:fa-brands;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:fa-brands;'>&#xf4f6;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2024/2024-01-09/readme.md\")\n\ntuesdata <- tidytuesdayR::tt_load(2024, week = 3)\n\ndatos <- tuesdata$polling_places\n\n# me interesa la distribución de lugares de votación por condado, para las \n# elecciones de 2014 a 2020\n\ncount(datos, election_date)\n\n# remuevo las fechas con menor cantidad de datos y selecciono los últimos 4\n# años\nfechas_interes <- ymd(c(\"2014-11-04\", \"2016-11-08\", \"2018-11-06\", \"2020-11-03\"))\n\n# cantidad de sitios por condado, para las cuatro fechas\nd_tbl <- datos |> \n  filter(election_date %in% fechas_interes) |>\n  count(election_date, state, county_name) |> \n  drop_na() |> \n  mutate(county_name = str_to_lower(county_name)) |> \n  rename(estado_abr = state, condado = county_name)\n\n# nombre de los estados y sus abreviaturas, tibble\nestados_tbl <- tibble(estado_abr = state.abb, estado = state.name) |> \n  mutate(estado = str_to_lower(estado))\n\n# polígonos de los condados y a qué estado corresponden\ncondados_sf <- st_as_sf(maps::map(\"county\", fill = TRUE, plot = FALSE)) |> \n  separate_wider_delim(\n    cols = ID, delim = \",\", names = c(\"estado\", \"condado\")) |> \n  rename(geometry = geom) |> \n  st_as_sf() |> \n  st_transform(crs = 2163)\n\n# combino los condados, estados y cantidad de sitios\nd_sf <- inner_join(d_tbl, estados_tbl, by = join_by(estado_abr)) |> \n  right_join(condados_sf, by = join_by(estado, condado)) |> \n  rename(fecha = election_date) |> \n  mutate(label_fecha = glue(\n    \"{day(fecha)} de {format(fecha, '%B')} de {year(fecha)}\")) |> \n  st_as_sf() |> \n  drop_na() |> \n  mutate(label_fecha = fct_reorder(label_fecha, fecha))\n\n# figura ------------------------------------------------------------------\n\n# leyenda de los condados sin datos\nstrip_label <- tibble(\n  x = st_bbox(condados_sf)[\"xmax\"]*.5,\n  y = st_bbox(condados_sf)[\"ymin\"]*1.1,\n  label = \"Sin datos\",\n  label_fecha = fct(\"3 de noviembre de 2020\"))\n\n# subtítulo\nmi_subtitle <- glue(\n  \"Cantidad de sitios de votación por<br>\",\n  \"condado en **EE.UU.**, para cuatro<br>\",\n  \"elecciones, entre 2014 y 2020.\")\n\nsub_label <- tibble(\n  x = st_bbox(condados_sf)[\"xmax\"]*.85,\n  y = st_bbox(condados_sf)[\"ymin\"],\n  label = mi_subtitle,\n  label_fecha = fct(\"4 de noviembre de 2014\"))\n\n# figura\ng <- ggplot() +\n  # condados de EEUU\n  geom_sf(data = condados_sf, fill = c4, linewidth = .05, color = c1) +\n  # lugares de votación\n  geom_sf(data = d_sf, aes(fill = n), linewidth = .03, color = c1) +\n  # subtítulo\n  geom_richtext(\n    data = sub_label, aes(x, y, label = label), color = c3, size = 4, \n    hjust = 0, vjust = .5, family = \"ubuntu\", fill = c4, label.color = NA,\n    label.r = unit(0, \"mm\")) +\n  # sin datos\n  geom_tile(\n    data = strip_label, aes(x, y, width = 150000, height = 150000), color = c1,\n    fill = c4) +\n  geom_text(\n    data = strip_label, aes(x, y, label = label), color = c1, size = 4, \n    hjust = 0, family = \"ubuntu\", nudge_x = 85000) +\n  # faceta\n  facet_wrap(vars(label_fecha), nrow = 2) +\n  scico::scale_fill_scico(\n    palette = \"nuuk\", trans = \"log10\",\n    breaks = 10^seq(0, 4, 1),\n    labels = scales::label_number(big.mark = \".\", decimal.mark = \",\")) +\n  coord_sf(expand = FALSE, clip = \"off\") +\n  labs(caption = mi_caption, fill = \"# de lugaresnde votación\") +\n  guides(fill = guide_colorbar(ticks.colour = c5)) +\n  theme_void() +\n  theme(\n    plot.margin = margin(12.4, 10, 12.4, 10),\n    plot.background = element_rect(fill = c5, color = c3, linewidth = 3),\n    plot.caption = element_markdown(color = c1, family = \"ubuntu\"),\n    panel.background = element_blank(),\n    panel.grid = element_blank(),\n    legend.position = \"bottom\",\n    legend.direction = \"horizontal\",\n    legend.key.height = unit(.5, \"cm\"),\n    legend.key.width = unit(2, \"cm\"),\n    legend.title = element_text(\n      color = c1, family = \"ubuntu\", margin = margin(r = 10, b = 10)),\n    legend.text = element_text(color = c1, family = \"victor\", face = \"bold\"),\n    strip.text = element_text(\n      color = c1, family = \"ubuntu\", size = 13, face = \"bold\"))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s03/viz.png\",\n  width = 30,\n  height = 24,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s03/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s03/viz.png)\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}