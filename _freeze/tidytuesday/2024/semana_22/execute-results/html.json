{
  "hash": "fc08e75d517f683f30eab2dc6f558ab8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 22\"\nsubtitle: \"Figura semana 22\"\nauthor: Víctor Gauto\ndate: \"2024-06-03\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_sf, geom_sf_label, geom_richtext]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s22/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nPlantaciones por lote y año del paquete <code>[{gardenR}](https://github.com/llendway/gardenR)</code>\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(sf)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"#A71B4B\"\nc2 <- \"#22C4B3\"\nc3 <- \"#584B9F\"\nc4 <- \"grey95\"\nc5 <- \"grey20\"\nc6 <- \"white\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# monoespacio & íconos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\n# bebas neue\nfont_add(\n  family = \"bebas\",\n  regular = \"fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c3};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana {22}, \",\n  \"<b>Lisa Lendway</b>, <span style='font-family:jet;'>{{gardenR}}</span>.\",\n  \"</span>\")\nautor <- glue(\"<span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2024, 22)\ngarden_coords <- gardenR::garden_coords\n\n# me interesan las plantaciones por año, sobre los lotes\n\n# combino los datos de 2020 y 2021\nplanting_2020 <- tuesdata$planting_2020\nplanting_2021 <- tuesdata$planting_2021\n\nplanting <- bind_rows(\n  planting_2020 |> mutate(año = 2020),\n  planting_2021 |> mutate(año = 2021)\n) |> \n  mutate(vegetable = case_match(\n    vegetable,\n    \"pumpkins\" ~ \"pumpkin\",\n    .default = vegetable\n  )) |> \n  mutate(plot = str_remove(plot, \"pot\")) |> \n  filter(plot %in% unique(garden_coords$plot))\n\n# función que genera un sf a partir de las coordenadas de los lotes\nf_plot <- function(plot_id) {\n  p <- filter(garden_coords, plot == plot_id)\n  \n  v <- st_cast(st_linestring(cbind(p$x, p$y)),\"POLYGON\") |> \n    st_sfc() |> \n    st_sf() |> \n    rename(\"geom\" = 1) |> \n    mutate(plot = plot_id, .before = 1)\n  \n  return(v)\n}\n\n# a partir de la cantidad de plantaciones agrego puntos sobre los lotes\nf_puntos <- function(x_año, y_plot) {\n  y <- filter(planting, año == x_año) |> \n    reframe(\n      s = sum(number_seeds_planted, na.rm = TRUE),\n      .by = plot\n    ) |> \n    inner_join(\n      plot_sf,\n      by = join_by(plot)\n    ) |> \n    filter(plot == y_plot) |> \n    st_sf()\n  \n  p <- st_sample(y, size = y$s) |> \n    st_sf() |> \n    rename(geom = 1) |> \n    mutate(plot = y_plot, .before = 1) |> \n    mutate(año = x_año)\n  \n  return(p)\n  \n}\n\n# sf delos lotes\nplot_sf <- map(unique(garden_coords$plot), f_plot) |> \n  list_rbind() |> \n  st_sf()\n\n# combino las plantaciones de 2020 y 2021\nplot_2020 <- filter(planting, año == 2020) |> \n  drop_na(number_seeds_planted) |> \n  distinct(plot) |> \n  pull()\n\nplot_2021 <- filter(planting, año == 2021) |> \n  drop_na(number_seeds_planted) |> \n  distinct(plot) |> \n  pull()\n\np_2020 <- map2(\n  .x = rep(2020, length(plot_2020)),\n  .y = plot_2020,\n  ~ f_puntos(x_año = .x, y_plot = .y)\n) |> \n  list_rbind() |> \n  st_sf()\n\np_2021 <- map2(\n  .x = rep(2021, length(plot_2021)),\n  .y = plot_2021,\n  ~ f_puntos(x_año = .x, y_plot = .y)\n) |> \n  list_rbind() |> \n  st_sf()\n\np <- rbind(p_2020, p_2021)\n\n# extensión de los lotes\nplot_bb <- st_as_sfc(st_bbox(plot_sf))\n\n# cantidad de semillas plantadas por año\nn_año <- planting |> \n  reframe(\n    s = sum(number_seeds_planted, na.rm = TRUE),\n    .by = año\n  ) |> \n  mutate(\n    label = glue(\"\\# de semillas plantadas = <b style='color:{c1}'>{s}</b>\")\n  )\n\n# figura ------------------------------------------------------------------\n\n# paleta de colores\npal <- hcl.colors(\n  n = length(unique(garden_coords$plot)), \n  palette = \"Zissou 1\") |> \n  sample()\n\n# título y subtítulo\nmi_subtitle <- glue(\n  \"El paquete <span style='font-family:jet; color:{c1}'>{{gardenR}}</span>, \",\n  \"de <b style='color:{c3}'>Lisa Lendway</b>, registra los vegetales de su \",\n  \"jardín.<br>\",\n  \"Se muestran las plantaciones de 2020 y 2021 por cada lote, junto con los \",\n  \"nombres.\"\n)\n\n# logo de {gardenR}\nlogo_url <- \"https://raw.githubusercontent.com/llendway/gardenR/main/man/figures/logo.png\"\nmi_title <- glue(\"<img src={logo_url} width=75 />\")\n\n# figura\ng <- ggplot() +\n  # extensión\n  geom_sf(\n    data = plot_bb, fill = c6, color = NA\n  ) +\n  # lotes\n  geom_sf(\n    data = plot_sf, aes(fill = plot, color = plot), alpha = .1, linewidth = 1,\n    color = c5\n  ) +\n  # plantaciones\n  geom_sf(\n    data = p, aes(color = plot), alpha = .4, size = 2\n  ) +\n  # nombre de los lotes\n  geom_sf_label(\n    data = plot_sf, aes(label = plot), family = \"jet\", fill = c4, color = c5\n  ) +\n  geom_richtext(\n    data = n_año, aes(x = 17.5, y = 1, label = label), family = \"jet\", \n    hjust = .1, fill = NA, label.color = NA\n  ) +\n  facet_wrap(vars(año), nrow = 1) +\n  scale_fill_manual(values = pal) +\n  scale_color_manual(values = pal) +\n  labs(subtitle = mi_subtitle, caption = mi_caption, title = mi_title) +\n  theme_void() +\n  theme(\n    plot.margin = margin(t = 4.6, r = 20, b = 0, l = 20),\n    plot.background = element_rect(fill = c4, color = c2, linewidth = 3),\n    plot.title = element_markdown(margin = margin(b = -70, l = 20, t = 10)),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 15, lineheight = unit(1.3, \"line\"),\n      margin = margin(b = 40, t = 10, l = 130)),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c1, size = 11, lineheight = unit(1.3, \"line\"),\n      margin = margin(b = 10, r = 20)),\n    strip.text = element_text(family = \"bebas\", size = 30, color = c2),\n    legend.position = \"none\"\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s22/viz.png\",\n  width = 30,\n  height = 25,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s22/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s22/viz.png)\n\n\n",
    "supporting": [
      "semana_22_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}