{
  "hash": "345e8f0fde6df83441c66efef608064e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 04\"\nsubtitle: \"Figura semana 04\"\nauthor: Víctor Gauto\ndate: \"2024-01-29\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_point, geom_richtext, geom_segment, geom_curve, geom_text]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s04/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nLogros educativos y su relación con los ingresos, en Reino Unido.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"grey90\"\nc2 <- \"grey70\"\nc3 <- \"grey40\"\nc4 <- \"grey20\"\nc5 <- \"darkviolet\"\nc6 <- \"white\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# fuente: Victor\nfont_add(\n  family = \"victor\", \n  regular = \"fuente/VictorMono-ExtraLight.ttf\",\n  bold = \"fuente/VictorMono-VariableFont_wght.ttf\",\n  italic = \"fuente/VictorMono-ExtraLightItalic.ttf\")\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c3};'><span style='font-family:mono;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana {4}. \",\n  \"UK Office for National Statistics.</span>\")\nautor <- glue(\"<span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:fa-brands;'>&#xf099;</span>\")\nicon_github <- glue(\"<span style='font-family:fa-brands;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:fa-brands;'>&#xf4f6;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2024, 4)\n\nenglish_education <- tuesdata$english_education\n\n# me interesa la relación entre los ingresos y el nivel educativo\n\n# descarga de los datos\n# https://www.ons.gov.uk/visualisations/dvc2651b/fig3/datadownload.xlsx\n\n# datos de logros educativos y privación en los ingresos, para ciudades de UK\nprivacion <- readxl::read_xlsx(\"2024/s04/datadownload.xlsx\", skip = 4) |> \n  rename(\n    \"ciudad\" = `Town name`,\n    \"educacion\" = `Educational attainment score`,\n    \"ingreso\" = `Income deprivation score`) |> \n  janitor::clean_names()\n\n# tamaño de las ciudades\ntamaño_ciudad <- english_education |> \n  select(town11cd, size_flag) |> \n  mutate(size_flag = str_to_lower(size_flag)) |> \n  mutate(size_flag = str_remove(size_flag, \" towns\")) |> \n  mutate(size_flag = if_else(\n    str_detect(size_flag, \"london\"),\n    \"london\",\n    size_flag))\n\n# combino ambos datos\nd <- inner_join(privacion, tamaño_ciudad, by = join_by(town11cd))\n\n# ciudades min/max para señalar\nciudad_max <- d |> \n  slice_max(educacion, n = 1) |> \n  mutate(ciudad = str_remove(ciudad, \" BUASD\")) |> \n  mutate(\n    x = educacion*.85,\n    y = ingreso*1.005,\n    xend = educacion*.98,\n    yend = ingreso,\n    hjust = 1.1)\n\nciudad_min <- d |> \n  slice_min(ingreso, n = 1) |> \n  mutate(ciudad = str_remove(ciudad, \" BUA\")) |> \n  mutate(\n    x = educacion*.85,\n    y = ingreso,\n    xend = educacion*.98,\n    yend = ingreso,\n    hjust = -.1)\n\nciudades <- rbind(ciudad_max, ciudad_min)\n\n# figura ------------------------------------------------------------------\n\n# rangos de datos de ambos ejes, para las flechas\nrango_educacion <- diff(range(d$educacion))\nrango_ingreso <- diff(range(d$ingreso))\n\n# flechas y texto explicativo\nflecha_x <- tibble(\n  xend = max(d$educacion),\n  y = min(d$ingreso),\n  yend = min(d$ingreso)) |> \n  mutate(\n    x = xend - .13*rango_educacion,\n    label = \"Mayores logros\",\n    angle = 0)\n\nflecha_y <- tibble(\n  yend = max(d$ingreso),\n  x = -10,\n  xend = min(d$educacion)) |> \n  mutate(\n    y = yend - .13*rango_ingreso,\n    label = \"Menor privación\",\n    angle = 90)\n\nflechas <- rbind(flecha_x, flecha_y)\n\n# subtítulo\nmi_subtitle <- glue(\n  \"En **Reino Unido**, Las ciudades con mayor nivel educativo tienen bajos \",\n  \"niveles de privación de ingresos.\") |> \n  str_wrap(width = 30) |> \n  str_replace_all(pattern = fixed(\"n\"), \"<br>\")\n\n# figura\ng <- ggplot(d, aes(educacion, ingreso)) +\n  # puntos\n  geom_point(alpha = .6, size = 5, shape = 17, color = c5) +\n  # aclaración en flechas\n  geom_richtext(\n    data = flechas, aes(x, y, label = label, angle = angle), family = \"ubuntu\",\n    inherit.aes = FALSE, vjust = 0, hjust = 0, fill = c1, label.color = NA, \n    color = c3) +\n  # flechas\n  geom_segment(\n    data = flechas, aes(x, y, xend = xend, yend = yend), inherit.aes = FALSE,\n    arrow = arrow(angle = 15, length = unit(4, \"mm\"), type = \"closed\"), \n    linewidth = 1, color = c3) +\n  # ciudades min/max\n  geom_curve(\n    data = ciudades, aes(x, y, xend = xend, yend = yend), curvature = -.1, \n    arrow = arrow(angle = 12, length = unit(3, \"mm\"), type = \"closed\"), \n    color = c2) +\n  geom_text(\n    data = ciudades, aes(x, y, label = ciudad, hjust = hjust), family = \"ubuntu\",\n    size = 4, color = c3) +\n  # subtítulo\n  annotate(\n    geom = \"richtext\", x = 4, y = .75, label = mi_subtitle, fill = c6, \n    color = c5, label.color = NA, hjust = 0, vjust = 1, family = \"ubuntu\",\n    size = 6, label.r = unit(0, \"mm\")) +\n  scale_x_continuous(\n    limits = c(-11, 13), expand = c(0, 0), breaks = seq(-12, 12, 2)) +\n  scale_y_continuous(\n    limits = c(.65, 1), expand = c(0, 0),\n    labels = scales::label_number(\n      big.mark = \"\", decimal.mark = \",\", accuracy = .1)) +\n  labs(\n    x = \"Logros educativos\", y = \"Privación en ingresos\", caption = mi_caption) +\n  theme_classic() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(t = 20.5, r = 25, l = 20, b = 10),\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    plot.caption = element_markdown(color = c4, family = \"ubuntu\", size = 11),\n    panel.background = element_rect(fill = c1, color = NA),\n    panel.grid.major = element_line(linetype = \"FF\", linewidth = .3, color = c2),\n    axis.title = element_text(family = \"ubuntu\", size = 18, color = c4),\n    axis.text = element_text(family = \"victor\", size = 15, color = \"black\"),\n    axis.text.y = element_text(vjust = 0))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s04/viz.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s04/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s04/viz.png)\n\n\n",
    "supporting": [
      "semana_04_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}