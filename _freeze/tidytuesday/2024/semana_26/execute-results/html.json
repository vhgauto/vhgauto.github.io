{
  "hash": "1e7f21d8e168bf4274653bd5836a21f8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 26\"\nsubtitle: \"Figura semana 26\"\nauthor: Víctor Gauto\ndate: \"2024-07-01\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_segment, geom_point, geom_tile]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s26/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nGéneros de películas con temática LGBTQ.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggrepel)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"grey20\"\nc2 <- \"grey90\"\nc3 <- \"black\"\n\ncol <- MetBrewer::met.brewer(name = \"Tara\")\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# monoespacio & íconos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\n# bebas neue\nfont_add(\n  family = \"bebas\",\n  regular = \"fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{col[1]};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana {26}, \",\n  \"TidyRainbow.</span>\")\nautor <- glue(\"<span style='color:{col[1]};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nusuario <- glue(\"<span style='color:{col[1]};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2024, 26)\nmovies <- tuesdata$lgbtq_movies\n\n# me interesa contar los géneros de las películas\n\n# código de los géneros de las películas\n# https://www.themoviedb.org/talk/5daf6eb0ae36680011d7e6ee\ngenero_tbl <- tribble(\n  ~genero, ~genre_ids,\n  \"acción\" ,28,\n  \"aventura\" ,12,\n  \"animación\" ,16,\n  \"comedia\" ,35,\n  \"crimen\" ,80,\n  \"documental\" ,99,\n  \"drama\" ,18,\n  \"familiar\" ,10751,\n  \"fantasía\" ,14,\n  \"historia\" ,36,\n  \"terror\" ,27,\n  \"musical\" ,10402,\n  \"misterio\" ,9648,\n  \"romática\" ,10749,\n  \"ciencia ficción\" ,878,\n  \"película para TV\" ,10770,\n  \"thriller\" ,53,\n  \"bélica\" ,10752,\n  \"western\" ,37\n)\n\nd <- movies |> \n  mutate(año = year(release_date)) |> \n  mutate(genre_ids = str_remove(genre_ids, \"\\[\")) |> \n  mutate(genre_ids = str_remove(genre_ids, \"\\]\")) |> \n  mutate(genre_ids = str_remove_all(genre_ids, \" \")) |> \n  separate_longer_delim(cols = genre_ids, delim = \",\") |> \n  mutate(genre_ids = as.numeric(genre_ids)) |> \n  inner_join(genero_tbl, by = join_by(genre_ids)) |> \n  count(genero, sort = TRUE) |> \n  mutate(color = rep(col, length.out = 19)) |> \n  mutate(label = glue(\"<span style='color:{color}'>{genero}</span>\")) |> \n  mutate(label = fct_reorder(label, n))\n\n# figura ------------------------------------------------------------------\n\n# subtítulos\nmi_subtitulo <- glue(\n  \"A partir de {nrow(movies)} películas con temática \",\n  \"<b style='color:{col[1]}'>LGBTQ</b>, \",\n  \"se encuentra que los géneros<br>\",\n  \"más populares son los <b style='color:{col[4]}'>dramas</b> \",\n  \"y <b style='color:{col[4]}'>romances</b>. En el extremo \",\n  \"opuesto se ubican<br>\",\n  \"los <b style='color:{col[4]}'>westerns</b> y películas \",\n  \"<b style='color:{col[4]}'>bélicas</b>.\"\n)\n\n# LGBTQ\narcoiris <- tibble(\n  color = gglgbtq::palette_lgbtq(\"rainbow\"),\n  y = 5:10,\n  x = 1000\n)\n\n# figura\ng <- ggplot(d, aes(n, label, color = color)) +\n  geom_segment(\n    aes(x = 0, xend = n, yend = label, color = color), linewidth = 1,\n    linetype = \"11\") +\n  geom_point(\n    size = 14, shape = 18) +\n  geom_point(\n    size = 3, shape = 19, color = c1) +\n  geom_tile(\n    data = arcoiris, aes(x, y, fill = color), color = c1, linewidth = 2,\n    width = .19) +\n  scale_x_log10(limits = c(10, NA)) +\n  scale_color_identity() +\n  scale_fill_identity() +\n  labs(\n    y = NULL, x = \"# de películas\", caption = mi_caption, \n    subtitle = mi_subtitulo) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1.4,\n    plot.margin = margin(r = 24.3, l = 24.3),\n    plot.background = element_rect(fill = c1, color = col[5], linewidth = 3),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_markdown(\n      color = c2, family = \"ubuntu\", size = 22,\n      margin = margin(l = 10, b = 10, t = 20), lineheight = unit(1.3, \"line\")),\n    plot.caption = element_markdown(\n      color = col[4], family = \"ubuntu\", size = 15, \n      margin = margin(t = 20, b = 10, r = 10), lineheight = unit(1.3, \"line\")),\n    panel.grid.major.x = element_line(\n      color = c2, linewidth = .1, linetype = \"FF\"),\n    axis.ticks = element_blank(),\n    axis.title.x = element_text(\n      family = \"ubuntu\", size = 22, color = c2, margin = margin(t = 10),\n      hjust = 0),\n    axis.text.y = element_markdown(\n      family = \"bebas\", size = 30, hjust = 1, margin = margin(r = 10)),\n    axis.text.x = element_text(\n      family = \"jet\", size = 20, color = c2, margin = margin(t = 10))\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s26/viz.png\",\n  width = 30,\n  height = 39,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(\"2024/s26/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s26/viz.png)\n\n\n",
    "supporting": [
      "semana_26_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}