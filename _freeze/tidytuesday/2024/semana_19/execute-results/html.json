{
  "hash": "1d297e2ca76f4eb08cf71c37ca06eb33",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 19\"\nsubtitle: \"Figura semana 19\"\nauthor: Víctor Gauto\ndate: \"2024-05-13\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_col, geom_point]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s19/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nSemanas en el ranking de <b>Rolling Stone</b>, separados por género del álbum.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"#AB740F\"\nc2 <- \"#3E7671\"\nc3 <- \"#122C43\"\nc4 <- \"black\"\nc5 <- \"white\"\nc6 <- \"grey95\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# monoespacio & íconos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c3};'><span style='font-family:mono;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana {19}, \",\n  \"<b>The Pudding</b>, Rolling Stone</span>\")\nautor <- glue(\"<span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2024, 19)\nrolling_stone <- tuesdata$rolling_stone\n\n# me interesa la cantidad de semanas en Bilboard de todos los álbums de música\n\nd <- rolling_stone |> \n  select(clean_name, weeks_on_billboard, artist_gender, genre) |> \n  drop_na() |> \n  separate_longer_delim(cols = genre, delim = \"/\") |> \n  mutate(genre = toupper(genre)) |> \n  mutate(genre = case_when(\n    str_detect(genre, \"ROCK\") ~ \"ROCK\",\n    str_detect(genre, \"PUNK\") ~ \"PUNK\",\n    str_detect(genre, \"RHYTHM & BLUES\") ~ \"R&B\",\n    .default = genre\n  )) |> \n  mutate(genre = fct_reorder(genre, weeks_on_billboard)) |> \n  arrange(genre) |> \n  mutate(id = as.numeric(genre))\n\n# paleta de colores\npaleta <- MetBrewer::met.brewer(name = \"Veronese\", n = length(unique(d$genre)))\n\n# agrego paleta de colores al eje vertical\ne <- d |> \n  mutate(color = paleta[id]) |> \n  mutate(genre = str_replace(genre, \"-\", \"<br>\")) |> \n  mutate(label_y = glue(\"<b style='color:{color}'>{genre}</b>\")) |> \n  mutate(label_y = fct_reorder(label_y, weeks_on_billboard))\n\n# obtengo medianas\ne_s <- e |> \n  reframe(\n    s = median(weeks_on_billboard),\n    .by = c(label_y, color))\n\n# figura ------------------------------------------------------------------\n\n# tibble para las barras horizontales\ne_col <- tibble(\n  x = 1000,\n  label_y = unique(e$label_y),\n  color = unique(e$color)\n  )\n\n# logo de Rolling Stones\nlogo <- \"<img src='2024/s19/logo.png' width=250></img>\"\n\n# subtítulo\nmi_subtitle <- glue(\n  \"Semanas en el ranking de <b>Rolling Stones</b> de<br>\",\n  \"{nrow(rolling_stone)} albúms\",\n  \"de música, por género entre {min(rolling_stone$release_year)} y \",\n  \"{max(rolling_stone$release_year)}\")\n\n# figura\ng <- ggplot(e, aes(weeks_on_billboard, label_y, color = color)) +\n  # barras horizontales\n  geom_col(\n    data = e_col, aes(x, label_y, fill = label_y), alpha = .2, color = NA) +\n  geom_point(position = position_jitter(height = .3, seed = 2024), alpha = .8) +\n  # medianas\n  geom_point(data = e_s, aes(s, label_y, color = color), size = 6) +\n  geom_point(data = e_s, aes(s, label_y), color = c5, size = 4) +\n  geom_point(\n    data = e_s, aes(s, label_y, color = color), size = 2) +\n  geom_point(data = e_s, aes(s, label_y), color = c5, size = .5) +\n  scale_x_log10(breaks = c(1, 10, 100, 1000), expand = c(0, 0)) +\n  scale_color_identity() +\n  scale_fill_manual(values = paleta) +\n  coord_cartesian(xlim = c(.9, NA)) +\n  labs(\n    y = NULL, x = \"Semanas en Billboard\", title = logo, subtitle = mi_subtitle,\n    caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1.2,\n    plot.background = element_rect(fill = c6, color = c2, linewidth = 3),\n    plot.margin = margin(l = 20, r = 25, t = 7.3),\n    plot.title = element_markdown(margin = margin(b = -50)),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 19, hjust = 1, margin = margin(b = 10),\n      lineheight = unit(1.2, \"line\"), color = c3),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 12, color = c1, margin = margin(t = 20, b = 10),\n      lineheight = unit(1.2, \"line\")),\n    panel.grid.major.x = element_line(\n      color = c4, linetype = \"77\", linewidth = .1),\n    axis.text.x = element_text(family = \"jet\", size = 14),\n    axis.text.y = element_markdown(family = \"ubuntu\", size = 14, hjust = 1),\n    legend.position = \"none\"\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s19/viz.png\",\n  width = 30,\n  height = 35,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s19/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s19/viz.png)\n\n\n",
    "supporting": [
      "semana_19_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}