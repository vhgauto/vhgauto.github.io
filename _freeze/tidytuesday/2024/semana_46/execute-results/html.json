{
  "hash": "be902266c5f281da25b5edc5e5610714",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 46\"\nsubtitle: \"Figura semana 46\"\nauthor: Víctor Gauto\ndate: \"2024-11-18\"\neditor_options:\n  chunk_output_type: console\ncategories: [argentina]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s46/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"#20235B\"\nc2 <- \"#05A3BD\"\nc3 <- \"#EAF3FF\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & íconos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c2};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana {46}, \",\n  \"<span style='font-family: jet;'>{{ISOcodes}}</span>.</span>\"\n)\nautor <- glue(\"<span style='color:{c2};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nusuario <- glue(\"<span style='color:{c2};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2024, 46)\ncountries <- tuesdata$countries\n\n# me interesa mostrar los países que inician con las mismas letras que el \n# código ISO 3166-1 de tres letras\n\nd <- countries |> \n  select(alpha_3, name) |> \n  mutate(\n    tres = str_sub(name, 1, 3) |> toupper()\n  ) |> \n  mutate(\n    es_igual = alpha_3 == tres\n  )\n\n# figura ------------------------------------------------------------------\n\n# íconos de igualdad/desigualdad\ndesigual <- \"<span style='font-family:jet;'>&#xf098e;</span>\"\nigual <- \"<span style='font-family:jet;'>&#xf01fc;</span>\"\n\n# subtítulo, notas de igualdad/desigualdad y\n# ejemples (Argentina y Japón)\nmi_subtitulo <- glue(\n  \"El estándar <b>ISO 3166-1 alpha-3</b> define códigos de \",\n  \"tres letras para identificar países.<br>\",\n  \"A veces, esa letras coinciden con el inicio del nombre del país, en inglés.\"\n)\n\nnota1 <- glue(\"Código {igual} inicio de país\")\nnota2 <- glue(\"Código {desigual} inicio de país\")\n\nargentina <- glue(\"ARG {igual} ARGENTINA\")\njapon <- glue(\"JPN {igual} JAPAN\")\n\n# coordenadas de las notas\npos_x <- .007\npos_y <- .15\n\n# figura\ng <- countries::quick_map(\n  data = d,\n  col_border = c3,\n  plot_col = \"es_igual\"\n) +\n  # igual\n  annotate(\n    geom = \"richtext\", x = I(pos_x), y = I(pos_y+.06), label = nota1, size = 4,\n    hjust = 0, vjust = 1, fill = c1, family = \"jet\", color = c3,\n    label.color = NA, label.r = unit(0, \"mm\")\n  ) +\n  # desigual\n  annotate(\n    geom = \"richtext\", x = I(pos_x), y = I(pos_y), label = nota2, size = 4,\n    hjust = 0, vjust = 1, fill = c2, family = \"jet\", color = c3,\n    label.color = NA, label.r = unit(0, \"mm\")\n  ) +\n  # Argentina\n  annotate(\n    geom = \"richtext\", x = I(.31), y = I(.12), label = argentina, size = 2.7,\n    hjust = 0, vjust = 1, fill = c1, family = \"jet\", color = c3,\n    label.color = NA, label.r = unit(0, \"mm\")\n  ) +\n  # Japón\n  annotate(\n    geom = \"richtext\", x = I(.87), y = I(.68), label = japon, size = 2.7,\n    hjust = 0, vjust = 1, fill = c2, family = \"jet\", color = c3,\n    label.color = NA, label.r = unit(0, \"mm\")\n  ) +\n  scale_fill_manual(\n    breaks = c(TRUE, FALSE),\n    values = c(c1, c2)\n  ) +\n  labs(\n    subtitle = mi_subtitulo,\n    caption = mi_caption\n  ) +\n  theme(\n    plot.background = element_rect(\n      fill = c3, color = c2, linewidth = 3\n    ),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 13, margin = margin(b = 25, t = 4),\n      lineheight = unit(1.2, \"line\")\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 9, margin = margin(b = 4, r = 4),\n      lineheight = unit(1.2, \"line\")\n    ),\n    panel.background = element_rect(fill = c3, color = NA),\n    legend.position = \"none\"\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s46/viz.png\",\n  width = 30,\n  height = 15,\n  units = \"cm\")\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s46/viz.png\"))\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s46/viz.png)\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}