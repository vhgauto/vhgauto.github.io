{
  "hash": "61483beb641b1f6bb0144c11596c9628",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 15\"\nsubtitle: \"Figura semana 15\"\nauthor: Víctor Gauto\ndate: \"2024-04-15\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_sf, geom_richtext]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s15/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nCiudades alcanzadas total o parcialmente por los eclipses solares de 2023 y 2024, en EE.UU.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(sf)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"#4B3232\"\nc2 <- \"white\"\nc3 <- \"gold\"\nc4 <- \"black\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# fuente: Victor\nfont_add(\n  family = \"victor\", \n  regular = \"fuente/VictorMono-ExtraLight.ttf\",\n  bold = \"fuente/VictorMono-VariableFont_wght.ttf\",\n  italic = \"fuente/VictorMono-ExtraLightItalic.ttf\")\n\n# íconos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c3};'><span style='font-family:mono;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana {15}. \",\n  \"Scientific Visualization Studio, <b>NASA</b>.</span>\")\nautor <- glue(\"<span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2024, 15)\n\n# me interesa distinguir las ciudades con eclipse total de las ciudades con \n# eclipse parcial, y agregar los horarios en rangos de 10min\necl_2023 <- tuesdata$eclipse_annular_2023\npar_2023 <- tuesdata$eclipse_partial_2023\n\necl_2024 <- tuesdata$eclipse_total_2024\npar_2024 <- tuesdata$eclipse_partial_2024\n\n# EE.UU.\n# quito estos estados\nno_estados <- c(\n  \"Alaska\", \"Hawaii\", \"Commonwealth of the Northern Mariana Islands\", \"Guam\", \n  \"Puerto Rico\", \"United States Virgin Islands\", \"American Samoa\")\n\n# combino los estados y cambio de proyección\nusa <- rgeoboundaries::gb_adm1(country = \"USA\") |> \n  filter(!shapeName %in% no_estados) |> \n  st_union() |> \n  st_transform(crs = 5070)\n\n# función que convierte tibble en sf y calcula el tiempo (hora:minuto)\nf_sf <- function(df, año, paleta = \"tokyo\") {\n  d <- df |> \n    mutate(minuto = minute(eclipse_3), hora = hour(eclipse_3)) |> \n    mutate(minuto = minuto - minuto %% 10) |>\n    select(lat, lon, hora, minuto) |> \n    mutate(hora_minuto = hm(glue(\"{hora}:{minuto}\"))) |> \n    mutate(hm_fct = glue(\"{hora}:{minuto}\")) |> \n    mutate(hm_fct = if_else(hm_fct == \"19:0\", \"19:00\", hm_fct)) |> \n    mutate(hm_fct = fct_reorder(hm_fct, hora_minuto)) |> \n    st_as_sf(coords = c(\"lon\", \"lat\")) |> \n    st_set_crs(value = 4326) |> \n    st_transform(crs = 5070) |> \n    mutate(year = año)\n  \n  p <- scico::scico(n = length(unique(d$hm_fct)), palette = paleta)\n  \n  d |> \n    mutate(color = p[hm_fct])\n}\n\n# función que obtiene el centro de cada región hora:minuto\nf_centro <- function(df, año) {\n  df |> \n    select(hm_fct) |> \n    nest(.by = hm_fct) |> \n    mutate(uni = map(.x = data, ~ st_union(.x))) |> \n    mutate(centro = map(.x = uni, ~ st_centroid(.x))) |> \n    unnest(centro) |> \n    select(hm_fct, centro) |> \n    st_as_sf() |> \n    mutate(year = año) |> \n    mutate(coord = map(.x = centro, st_coordinates)) |> \n    mutate(coord = map(.x = coord, as_tibble)) |> \n    unnest(coord) |> \n    st_drop_geometry() |> \n    mutate(\n      X = if_else(year == 2023, X + 1.6e5, X - 1.6e5),\n      Y = if_else(year == 2023, Y + 1.1e5, Y + 1.2e5)) |> \n    mutate(angle = if_else(year == 2023, -45, 43)) |> \n    st_as_sf(coords = c(\"X\", \"Y\")) |> \n    st_set_crs(value = 5070)\n}\n\n# función para convertir tibble a sf, para otras ciudades\nf_parcial <- function(df, año) {\n  df |> \n    st_as_sf(coords = c(\"lon\", \"lat\")) |> \n    st_set_crs(value = 4326) |> \n    st_transform(crs = 5070) |> \n    mutate(year = año) |> \n    st_crop(usa) |> \n    select(year)\n}\n\n# ciudades con eclipse total\nd_2023 <- f_sf(ecl_2023, 2023, paleta = \"hawaii\")\nd_2024 <- f_sf(ecl_2024, 2024, paleta = \"hawaii\")\n\nd <- rbind(d_2023, d_2024)\n\n# horarios ubicados en el centro de las regiones\nd_centro_2023 <- f_centro(d_2023, 2023)\nd_centro_2024 <- f_centro(d_2024, 2024)\n\nd_centro <- rbind(d_centro_2023, d_centro_2024) |> \n  mutate(coord = map(.x = geometry, st_coordinates)) |> \n  mutate(coord = map(.x = coord, as_tibble)) |> \n  unnest(coord) |> \n  st_drop_geometry()\n\n# ciudades con eclipse parcial\nd_parcial_2023 <- f_parcial(par_2023, 2023)\nd_parcial_2024 <- f_parcial(par_2024, 2024)\n\nd_parcial <- rbind(d_parcial_2023, d_parcial_2024)\n\n# figura ------------------------------------------------------------------\n\n# subtítulo\nmi_subtitle <- glue(\n  \"Este año y el año pasado se vieron eclipses solares en regiones del \",\n  \"<b>Hemisferio Norte</b>.<br>\",\n  \"Se muestran ciudades de EE.UU. con \",\n  \"<b style='color:{c2}'>eclipses parciales</b> y los horarios de inicio del<br>\",\n  \"evento en donde el eclipse fue total.\"\n)\n\n# años de los eclipses\nflecha_icon <- \"<span style='font-family:jet;font-size:20pt;'>&#xf061;</span>\"\n\nlabel_año <- c(\n  glue(\n    \"{flecha_icon} 14 de octubre de 2023, eclipse \",\n    \"<b style='color:gold'>solar</b> anular\"), \n  glue(\n    \"{flecha_icon} 8 de abril de 2024, eclipse \",\n    \"<b style='color:gold'>solar</b> total\"))\nnames(label_año) <- c(2023, 2024)\n\n# figura\ng <- ggplot() +\n  # USA\n  geom_sf(data = usa, fill = NA, color = c2, linewidth = .1) +\n  # otras ciudades\n  geom_sf(data = d_parcial, color = c2, size = .25, alpha = .25) +\n  # eclipse\n  geom_sf(\n    data = d, aes(color = color), size = 1, alpha = .7, show.legend = FALSE) +\n  # horas:minutos\n  geom_richtext(\n    data = d_centro, aes(X, Y, label = hm_fct, angle = angle), color = c3, \n    size = 5, hjust = .5, family = \"jet\", fill = alpha(c4, .6), \n    label.r = unit(0, \"mm\"), label.color = NA, \n    label.padding = unit(c(.1, .1, .1, .1), \"lines\")) +\n  facet_wrap(vars(year), ncol = 1, labeller = as_labeller(label_año)) +\n  # escalas\n  scale_color_identity() +\n  labs(subtitle = mi_subtitle, caption = mi_caption) +\n  guides(\n    color = guide_legend(override.aes = list(alpha = 1, size = 5, shape = 15))\n  ) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", color = c3, size = 20, \n      margin = margin(b = 20, t = 10, l = 10), lineheight = unit(1.1, \"line\")),\n    plot.margin = margin(t = 11, r = 6.4, b = 11, l = 6.4),\n    plot.caption = element_markdown(\n      color = c2, family = \"ubuntu\", size = 14, lineheight = unit(1.1, \"line\"),\n      margin = margin(b = 10, r = 10)),\n    strip.text = element_markdown(\n      family = \"ubuntu\", color = c2, size = 20, hjust = .05)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s15/viz.png\",\n  width = 30,\n  height = 44,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s15/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s15/viz.png)\n\n\n",
    "supporting": [
      "semana_15_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}