{
  "hash": "b0e8139ed3a852dfe93bc8f8b6edab85",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 49\"\nsubtitle: \"Figura semana 49\"\nauthor: Víctor Gauto\ndate: \"2024-12-09\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_point]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s49/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nVelocidad de vehículos, por tamaño y horario, en Inglaterra.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"#582851\"\nc2 <- \"#40606D\"\nc3 <- \"#69A257\"\nc4 <- \"#C4024D\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & íconos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\n# Bebas Neue\nfont_add(\n  family = \"bebas\",\n  regular = \"fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c3};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana {49}, \",\n  \"<b>National Highways Traffic Flow</b>.</span>\"\n)\nautor <- glue(\"<span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2024, 49)\na64 <- tuesdata$A64_traffic\n\n# me interesa las velocidades según la hora del día, por categoría de tamaño\n# de vehículo\n\nd <- a64 |>\n  janitor::clean_names() |>\n  select(time_period_ending, avg_mph, contains(\"cm\")) |>\n  pivot_longer(\n    cols = ends_with(\"_cm\"),\n    names_to = \"tamaño\",\n    values_to = \"cantidad\"\n  ) |>\n  filter(cantidad > 0) |>\n  mutate(\n    tamaño = factor(\n      x = tamaño,\n      levels = c(\"x0_520_cm\", \"x521_660_cm\", \"x661_1160_cm\", \"x1160_cm\"),\n      labels = c(\"<5,2 m\", \"5,21—6,6 m\", \"6,61—11,6 m\", \">11,6 m\")\n    )\n  ) |>\n  mutate(kmh = avg_mph*1.60934) |>\n  mutate(\n    color = case_match(\n      tamaño,\n      \"<5,2 m\" ~ c1,\n      \"5,21—6,6 m\" ~ c2,\n      \"6,61—11,6 m\" ~ c3,\n      \">11,6 m\" ~ c4\n    )\n  ) |>\n  mutate(\n    tamaño_label = glue(\n      \"Tamaño:<b style='color:{color}; font-family:jet'> {tamaño}</b>\"\n    )\n  ) |>\n  mutate(\n    tamaño_label = fct_reorder(tamaño_label, as.numeric(tamaño))\n  )\n\n# figura ------------------------------------------------------------------\n\n# factor de conversión entre km/h y mph\nconv <- 1.60934\n\n# subtítulo y símbolo de flechas\nmi_subtitulo <- glue(\n  \"<b style='color:{c4}'>Velocidad</b>, por \",\n  \"<b style='color:{c4}'>tamaño</b> de vehículo, según \",\n  \"la <b style='color:{c4}'>hora</b> en caminos \",\n  \"de **Inglaterra**. Las mayores velocidades ocurren a la madrugada y \",\n  \"generalmente circulan a 45 km/h o 75 km/h.\"\n)\n\nflecha1 <- \"<span style='font-family:jet;'>&#xf0054;</span>\"\nflecha2 <- \"<span style='font-family:jet;'>&#xf004d;</span>\"\n\n# figura\ng <- ggplot(d, aes(time_period_ending, kmh, color = tamaño_label)) +\n  geom_point(alpha = .4, shape = 20, size = 2, show.legend = FALSE) +\n  facet_wrap(vars(tamaño_label), nrow = 2, scales = \"free\") +\n  scale_x_time(\n    labels = scales::label_time(format = \"%H:%M\"),\n    breaks = scales::breaks_width(\"4 hour\"),\n    expand = expansion(mult = .02, add = 0),\n    sec.axis = sec_axis(transform = ~ .)\n  ) +\n  scale_y_continuous(\n    limits = c(10, 130),\n    breaks = scales::breaks_width(20),\n    expand = c(0, 0),\n    name = glue(\"{flecha1} Velocidad {flecha1}<br>**km/h**\"),\n    sec.axis = sec_axis(\n      transform = ~ ./conv,\n      name = glue(\"{flecha2} Velocidad {flecha2}<br>**mph**\"),\n      breaks = seq(20/conv, 120/conv, length.out = 6),\n      labels = scales::label_number(accuracy = 1)\n    )\n  ) +\n  scale_color_manual(\n    values = c(c1, c2, c3, c4)\n  ) +\n  coord_cartesian(clip = \"off\") +\n  labs(x = NULL, subtitle = mi_subtitulo, caption = mi_caption) +\n  ggthemes::theme_par(base_size = 5) +\n  theme(\n    aspect.ratio = 1,\n    plot.title.position = \"plot\",\n    plot.subtitle = element_textbox_simple(\n      family = \"ubuntu\", size = 20, color = c2, margin = margin(b = 10, t = 10)\n    ),\n    plot.margin = margin(0, 15, 0, 15.8),\n    plot.background = element_rect(\n      fill = \"grey98\", color = c1, linewidth = 3\n    ),\n    plot.caption.position = \"plot\",\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 14, color = c4, margin = margin(t = 45, b = 10)\n    ),\n    panel.grid.major = element_line(\n      linetype = 1, linewidth = .1, color = \"grey40\"\n    ),\n    panel.grid.minor = element_line(linetype = 2, color = \"grey85\"),\n    panel.spacing = unit(25, \"pt\"),\n    axis.ticks = element_blank(),\n    axis.text.x = element_text(\n      family = \"bebas\", size = 18, margin = margin(t = -5)\n    ),\n    axis.text.x.top = element_blank(),\n    axis.text.y.left = element_text(\n      family = \"jet\", size = 12, margin = margin(r = -2), hjust = 1\n    ),\n    axis.text.y.right = element_text(\n      family = \"jet\", size = 12, margin = margin(l = -2), hjust = 0\n    ),\n    axis.title.y = element_markdown(family = \"ubuntu\", size = 17),\n    strip.text.x.top = element_markdown(\n      family = \"ubuntu\", hjust = 0, size = 15, margin = margin(t = 0)\n    ),\n    strip.background = element_blank(),\n    strip.placement = \"outside\"\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s49/viz.png\",\n  width = 30,\n  height = 31,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(\"2024/s49/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s49/viz.png)\n\n\n",
    "supporting": [
      "semana_49_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}