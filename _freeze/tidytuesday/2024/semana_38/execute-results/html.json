{
  "hash": "a771d74d52ed10c5689061a99c46d630",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 38\"\nsubtitle: \"Figura semana 38\"\nauthor: Víctor Gauto\ndate: \"2024-09-23\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_tile]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s38/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"grey20\"\nc2 <- \"grey95\"\nc3 <- \"#FAB255\"\nc4 <- \"#43B284\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & íconos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\n# fuente de los nombres de los libros\nfont_add_google(\n  name = \"Updock\",\n  family = \"updock\",\n  db_cache = FALSE\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c3};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana {38}, \",\n  \"<b>shakespeare.mit.edu.</b></span>\"\n)\nautor <- glue(\"<span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2024, 38)\nhamlet <- tuesdata$hamlet\nmacbeth <- tuesdata$macbeth\nromeo_juliet <- tuesdata$romeo_juliet\n\n# me interesa señalar las líneas habladas por los personajes principales\n\n# funciones para generar las posiciones de los tiles de cada línea de cada libro\nf_datos <- function(libro, nombre_libro) {\n  \n  libro_n <- libro |> \n    drop_na() |> \n    nrow()\n  \n  alto <- ceiling(libro_n/ancho)\n  \n  d_d <- tibble(n = libro_n) |> \n    mutate(\n      x = map(n, ~ rep(1:ancho, length.out = .x)),\n      y = map(n, ~ rep(1:alto, length.out = .x, each = ancho))\n    ) |> \n    unnest(cols = c(x, y)) |> \n    mutate(book = nombre_libro)\n  \n  return(d_d)\n  \n}\n\n# función para indicar las líneas habladas por los personajes ppales, por libro\nf_personaje <- function(libro, nombre_libro, personaje) {\n  d_c <- libro |> \n    drop_na() |> \n    mutate(l = row_number()) |> \n    mutate(character = if_else(\n      character == personaje,\n      personaje,\n      NA\n    )) |> \n    select(character)\n  \n  d_e <- bind_cols(\n    select(f_datos(libro, nombre_libro), x, y),\n    d_c\n  ) |> \n    drop_na() |> \n    mutate(book = nombre_libro)\n  \n  return(d_e)\n}\n\n# tiles de ancho\nancho <- 40\n\n# indico el orden los los libros y personajes\norden_libros <- c(\"Romeo & Julieta\", \"Hamlet\", \"Macbeth\")\norden_personajes <- c(\"Romeo\", \"Juliet\", \"Hamlet\", \"Macbeth\")\n\n# obtengo los tiles por libro, y señalo los personajes\nhamlet_d <- f_datos(hamlet, \"Hamlet\")\nhamlet_c <- f_personaje(hamlet, \"Hamlet\", \"Hamlet\")\n\nmacbeth_d <- f_datos(macbeth, \"Macbeth\")\nmacbeth_c <- f_personaje(macbeth, \"Macbeth\", \"Macbeth\")\n\nromeo_juliet_d <- f_datos(romeo_juliet, \"Romeo & Julieta\")\nromeo_juliet_c_romeo <- f_personaje(romeo_juliet, \"Romeo & Julieta\", \"Romeo\")\nromeo_juliet_c_julieta <- f_personaje(romeo_juliet, \"Romeo & Julieta\", \"Juliet\")\n\n# unifico los datos\nd <- bind_rows(hamlet_d, macbeth_d, romeo_juliet_d) |> \n  mutate(book = factor(book, orden_libros))\n\nd_c <- bind_rows(\n  hamlet_c, macbeth_c, romeo_juliet_c_romeo, romeo_juliet_c_julieta\n) |> \n  mutate(character = factor(character, orden_personajes))\n\n# figura ------------------------------------------------------------------\n\nmi_subtitulo <- glue(\n  \"De todas las líneas de cada libro escrito por\",\n  \"<b style='color: {c2}'>William Shakespeare</b>,<br>\",\n  \"se destacan las habladas por los personajes principales.\"\n)\n\ng <- ggplot(d, aes(x, y)) +\n  geom_tile(color = c1, fill = c2, linewidth = .6) +\n  geom_tile(\n    data = d_c, aes(fill = character), color = c1, linewidth = .6) +\n  facet_wrap(vars(book), nrow = 1) +\n  scale_x_continuous(breaks = scales::breaks_width(1)) +\n  scale_y_continuous(breaks = scales::breaks_width(1)) +\n  scale_fill_manual(\n    values = MetBrewer::met.brewer(\"Egypt\", direction = -1),\n    breaks = c(\"Hamlet\", \"Macbeth\", \"Romeo\", \"Juliet\"),\n    labels = c(\"Hamlet\", \"Macbeth\", \"Romeo\", \"Julieta\")\n  ) +\n  coord_equal(expand = FALSE, clip = \"off\") +\n  labs(fill = NULL, caption = mi_caption, subtitle = mi_subtitulo) +\n  theme_void(base_size = 7) +\n  theme(\n    plot.margin = margin(l = 10, r = 10, b = 5, t = 21),\n    plot.background = element_rect(fill = c1, color = c4, linewidth = 3),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 18, hjust = .5, color = c3,\n      margin = margin(b = 5)\n    ),\n    plot.caption = element_markdown(\n      color = c2, family = \"ubuntu\", size = 12, margin = margin(t = 20),\n      lineheight = unit(1.2, \"line\")\n    ),\n    panel.spacing.x = unit(.6, \"cm\"),\n    legend.position = \"bottom\",\n    legend.text = element_text(\n      family = \"ubuntu\", size = 20, margin = margin(r = 70, l = 5),\n      color = c2\n    ),\n    strip.text = element_text(\n      family = \"updock\", size = 50, color = c2, face = \"bold\"\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s38/viz.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\")\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s38/viz.png\"))\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s38/viz.png)\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}