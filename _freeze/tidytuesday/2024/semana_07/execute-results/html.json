{
  "hash": "5fedab15b5ff43f28fd31124bc8e55fb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 07\"\nsubtitle: \"Figura semana 07\"\nauthor: Víctor Gauto\ndate: \"2024-02-19\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_smooth, geom_point]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s07/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nConsumos durante **San Valentín** y cambio en el porcentaje de personas que participan.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(patchwork)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"black\"\nc2 <- \"red\"\nc3 <- alpha(\"red\", .6)\nc4 <- \"white\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# fuente: Victor\nfont_add(\n  family = \"victor\", \n  regular = \"fuente/VictorMono-ExtraLight.ttf\",\n  bold = \"fuente/VictorMono-VariableFont_wght.ttf\",\n  italic = \"fuente/VictorMono-ExtraLightItalic.ttf\")\n\n# fuente: Bebas Neue\nfont_add(\n  family = \"bebas\", \n  regular = \"fuente/BebasNeue-Regular.ttf\")\n\n# título\nfont_add_google(\n  name = \"Metamorphous\",\n  family = \"metamorphous\")\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c2};'><span style='font-family:mono;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana {7}. \",\n  \"National Retail Federation.</span>\")\nautor <- glue(\"<span style='color:{c2};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:fa-brands;'>&#xf099;</span>\")\nicon_github <- glue(\"<span style='font-family:fa-brands;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:fa-brands;'>&#xf4f6;</span>\")\nusuario <- glue(\"<span style='color:{c2};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\ndolar <- glue(\"<span style='color:{c2};'>**$** = USD</span>\")\n\nmi_caption <- glue(\n  \"{dolar} {sep} {fuente}<br>{autor} {sep} {icon_github} {icon_twitter} \n  {icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2024, 7)\nhistorical_spending <- tuesdata$historical_spending\n\n# me interesa ver la evolución de dinero dedicado a cada producto, y el \n# porcentaje de personas que festeja San Valentín\n\n# categorías, vector en inglés\ncc_vec <- historical_spending |> \n  janitor::clean_names() |> \n  pivot_longer(\n    cols = -year,\n    names_to = \"categ\",\n    values_to = \"valor\"\n  ) |> \n  rename(año = year) |> \n  distinct(categ) |> \n  pull()\n\n# reordeno las categorías\ncc_vec <- c(cc_vec[2:5], cc_vec[1], cc_vec[6:9])\n\n# traducción de las categorías\ncc_trad <- c(\n  \"Por persona\", \"Golosinas\", \"Flores\", \"Joyas\", \n  \"Personas que festejannSan Valentín\",\n  \"Tarjeta de felicitaciones\", \"Salida de noche\", \"Ropa\",\n  \"Tarjeta de regalos\")\n\nnames(cc_trad) <- cc_vec\n\n# agrego las traducciones y cambio a tabla larga\nd <- historical_spending |> \n  janitor::clean_names() |> \n  pivot_longer(\n    cols = -year,\n    names_to = \"categ\",\n    values_to = \"valor\"\n  ) |> \n  rename(año = year) |> \n  mutate(cate = cc_trad[categ]) |> \n  select(-categ)\n\n# figura ------------------------------------------------------------------\n\n# eje vertical, por categoría\neje_y <- list(\n  \"Personas que festejannSan Valentín\" = \n    scale_y_continuous(\n      limits = c(50, 62), breaks = seq(50, 62, 2),\n      labels = scales::label_number(suffix = \"%\")),\n  \"Por persona\" =\n    scale_y_continuous(\n      limits = c(100, 200), breaks = seq(100, 200, 25),\n      labels = scales::label_dollar()),\n  \"Golosinas\" =\n    scale_y_continuous(\n      limits = c(5, 20), breaks = seq(5, 20, 5), \n      labels = scales::label_dollar()),\n  \"Flores\" =\n    scale_y_continuous(\n      limits = c(12, 18), breaks = seq(12, 18, 1),\n      labels = scales::label_dollar()),\n  \"Joyas\" = \n    scale_y_continuous(\n      limits = c(20, 50), breaks = seq(20, 50, 5), \n      labels = scales::label_dollar()),\n  \"Tarjeta de felicitaciones\" =\n    scale_y_continuous(\n      limits = c(5, 10), breaks = seq(5, 10, 1), \n      labels = scales::label_dollar()),\n  \"Salida de noche\" =\n    scale_y_continuous(\n      limits = c(20, 35), breaks = seq(20, 35, 5), \n      labels = scales::label_dollar()),\n  \"Ropa\" =\n    scale_y_continuous(\n      limits = c(10, 25), breaks = seq(10, 25, 5), \n      labels = scales::label_dollar()),\n  \"Tarjeta de regalos\" = \n    scale_y_continuous(\n      limits = c(5, 20), breaks = seq(5, 20, 5), \n      labels = scales::label_dollar())\n)\n\n# colores, por categoría\n# elimino un color, amarillento, no queda bien en la figura final\npaleta_colores <- MoMAColors::moma.colors(palette_name = \"Klein\", n = 10)\n\nco <- paleta_colores[paleta_colores != \"#f9c000\"]\nnames(co) <- cc_trad\n\n# colores de fondo, por categoría\nco2 <- c(\n  \"#FFEDF0\", \"#EEF5F6\", \"#FCF1E7\", \"#F3F7EA\", \"#000000\", \"#F2F7F3\", \"#F2E8EA\",\n  \"#EAE9ED\", \"#F9EAE6\"\n)\nnames(co2) <- cc_trad\n\n# título y subtítulo\nmi_title <- \"Día de los Enamorados\"\nmi_subtitle <- glue(\n  \"Cada vez menos parejas festejan el **14 de febrero**.<br>\",\n  \"Pero quienes sí lo hacen, gastan más.\"\n)\n\n# función que genera una figura p/c categoría\n# el cambio en el tiempo de personas que festejan San Valentín tiene un color\n# diferente del resto, y se ubica en el medio\nf_gg <- function(x) {\n  \n  # datos filtrados\n  tbl <- filter(d, cate == x)\n  \n  # eje vertical\n  eje_y_break <- eje_y[[x]]\n  \n  # colores y ancho de línea del contorno\n  color_fondo <- co2[x]\n  color_linea <- co[x]\n  color_eje <- co[x]\n  color_titulo <- co[x]\n  color_punto <- alpha(co[x], .7)\n  color_borde <- co[x]\n  linea <- 2\n  \n  # específicos de esta categoría\n  if (x == \"Personas que festejannSan Valentín\") {\n    color_fondo <- c1\n    color_linea <- c2\n    color_eje <- c4\n    color_titulo <- c2\n    color_punto <- c3\n    color_borde <- c2\n    linea <- 5\n  }\n  \n  # figura\n  g <- ggplot(tbl, aes(año, valor)) +\n    geom_smooth(\n      se = FALSE, formula = y ~ x, method = loess, color = color_linea,\n      linewidth = 2) +\n    geom_point(color = color_punto, size = 1, shape = 19) +\n    scale_x_continuous(\n      labels = c(2010, 2015, 2020), \n      breaks = c(2010, 2015, 2020), \n      limits = c(2009.5, 2022.5)) +\n    eje_y_break +\n    coord_cartesian(clip = \"off\", expand = FALSE) +\n    labs(x = NULL, y = NULL, title = x) +\n    theme_minimal() +\n    theme(\n      aspect.ratio = 1,\n      plot.margin = margin(10, 10, 10, 10),\n      plot.background = element_rect(\n        fill = color_fondo, color = color_borde, linewidth = linea),\n      plot.title.position = \"plot\",\n      plot.title = element_text(\n          family = \"ubuntu\", color = color_titulo, margin = margin(b = 20),\n          size = 20, hjust = .5),\n      panel.grid.minor = element_blank(),\n      panel.grid.major = element_line(linewidth = .2, color = c4),\n      axis.text.x = element_text(\n        family = \"bebas\", color = color_eje, size = 22),\n      axis.text.y = element_text(\n        family = \"victor\", color = color_eje, vjust = 0, size = 12)\n    )\n  \n  return(g)\n}\n\n# lista con todas las figuras\ngg_lista <- map(cc_trad, f_gg)\n\n# figura\ng <- wrap_plots(gg_lista, ncol = 3) +\n  plot_annotation(\n    title = mi_title,\n    subtitle = mi_subtitle,\n    caption = mi_caption,\n    theme = theme(\n      plot.margin = margin(t = 15, r = 13.6, l = 13.6, b = 5),\n      plot.background = element_rect(fill = c1, color = c3, linewidth = 3),\n      plot.title = element_text(\n        family = \"metamorphous\", size = 60, hjust = .5, color = c2),\n      plot.subtitle = element_markdown(\n        family = \"ubuntu\", size = 20, hjust = .5, color = c2, \n        lineheight = unit(1.2, \"line\")),\n      plot.caption = element_markdown(family = \"ubuntu\", size = 15, color = c3),\n      panel.background = element_rect(fill = c4)\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s07/viz.png\",\n  width = 30,\n  height = 39,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s07/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s07/viz.png)\n\n\n",
    "supporting": [
      "semana_07_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}