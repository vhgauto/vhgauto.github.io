{
  "hash": "7b154182175787d7b7d206a5e2c33db5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 40\"\nsubtitle: \"Figura semana 40\"\nauthor: Víctor Gauto\ndate: \"2024-10-07\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_hex]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s40/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nDuración y cantidad de turnos en el ajedrez.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"#8C0172\"\nc2 <- \"#121416\"\nc3 <- \"grey95\"\nc4 <- \"grey60\"\nc5 <- \"grey40\"\nc6 <- \"#62E6CD\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & íconos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c3};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana {40}, \",\n  \"<b>lichess.org</b>.</span>\"\n)\nautor <- glue(\"<span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2024, 40)\nchess <- tuesdata$chess\n\n# me interesa la duración de las partidas y la cantidad de movimientos\n\n# convierto los tiempos en fechas y calculo la diferencia en horas\nd <- chess |> \n  select(start_time, end_time, turns) |> \n  mutate(start_time = as.POSIXlt(start_time/1000)) |> \n  mutate(end_time = as.POSIXlt(end_time/1000)) |> \n  mutate(dif = end_time - start_time) |> \n  filter(dif > duration(0)) |> \n  mutate(dif_h = dif/duration(3600))\n\n# 10000 segundos\nh <- duration(1e4)/duration(3600)\nh_label <- format(h, decimal.mark = \",\", digits = 3)\n\nd2 <- filter(d, dif == duration(1e4)) \n\n# figura -----------------------------------------------------------------\n\n# breaks y etiquetas del eje horizontal\nx_horas <- c(1e-3, 1e-2, 1e-1, 1e0, 1e1, 1e2)\nx_horas_format <- format(\n  x_horas, decimal.mark = ',', scientific = FALSE, drop0trailing = TRUE,\n  trim = TRUE)\n\nduration(x_horas*3600)\n\nx_duracion <- c(\"(3,6s)\", \"(36s)\", \"(~6m)\", \"\", \"\", \"(~4d 4h)\")\nx_label <- glue(\"{x_horas_format}hn{x_duracion}\")\n\n# aclaración y posición\netq_label <- glue(\n  \"Hay una cantidad inusualmente\",\n  \"alta de duraciones exactamente\",\n  \"iguales a 10.000s ({h_label}h).\",\n  .sep = \"<br>\"\n)\n\nx_esq <- 7\ny_esq <- 210\n\n# logo de lichess\nlink <- \"https://raw.githubusercontent.com/lichess-org/lila/refs/heads/master/public/logo/logo-black.png\"\nlogo <- glue(\"<img src='{link}' width=100 />\")\n\n# subtítulo\nmi_subtitulo <- glue(\n  \"Cantidad de turnos en partidas de <b style='color:{c6}'>ajedrez</b> \",\n  \"y el tiempo total de juego.\"\n)\n\n# figura\ng <- ggplot(d, aes(dif_h, turns)) +\n  # resalto los 10000s\n  geom_hex(data = d2, bins = 70, color = c5, linewidth = 6, fill = c2) +\n  # hex\n  geom_hex(bins = 70, color = c3, linewidth = .5) +\n  # logo\n  annotate(\n    geom = \"richtext\", x = I(0), y = I(1.01), label = logo, hjust = 0, vjust = 1,\n    fill = NA, label.color = NA\n  ) +\n  # aclaración de los 10000s\n  annotate(\n    geom = \"richtext\", x = x_esq, y = y_esq, label = etq_label, hjust = 0, \n    vjust = 0, fill = c2, color = c3, size = 6, label.r = unit(0, \"mm\"),\n    label.color = NA\n  ) +\n  # flecha\n  annotate(\n    geom = \"curve\", x = x_esq+20, y = y_esq, xend = h+1, yend = 147, \n    curvature = -.2, color = c3,\n    arrow = arrow(angle = 15, length = unit(.3, \"cm\"), type = \"closed\"),\n    \n  ) +\n  scale_x_log10(\n    breaks = x_horas,\n    labels = x_label\n  ) +\n  scico::scale_fill_scico(\n    palette = \"hawaii\",\n    limits = c(1, 120),\n    breaks = c(1, seq(30, 120, 30))\n  ) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    x = \"Duración\", y = \"# de turnos\", fill = \"#\", caption = mi_caption,\n    subtitle = mi_subtitulo\n  ) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(b = 15, r = 65, l = 15),\n    plot.background = element_rect(\n      fill = c2, color = c1, linewidth = 3\n    ),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", color = c3, size = 20, hjust = .5,\n      margin = margin(b = 25, t = 15)\n    ),\n    plot.caption = element_markdown(\n      color = c6, size = 13, family = \"ubuntu\", lineheight = unit(1.2, \"line\")\n    ),\n    panel.background = element_rect(fill = c2, color = NA),\n    panel.grid.major = element_line(\n      color = c4, linewidth = .2, linetype = \"77\"\n    ),\n    panel.grid.minor = element_blank(),\n    axis.line = element_blank(),\n    axis.text = element_text(family = \"jet\", color = c3, size = 14),\n    axis.title = element_text(family = \"ubuntu\", color = c3, size = 20),\n    axis.title.x = element_text(margin = margin(t = 20)),\n    legend.background = element_blank(),\n    legend.position = \"bottom\",\n    legend.justification = c(0, 0),\n    legend.key.width = unit(1.4, \"cm\"),\n    legend.ticks = element_line(color = c2),\n    legend.ticks.length = unit(2, \"mm\"),\n    legend.title = element_text(\n      color = c3, family = \"ubuntu\", size = 16, margin = margin(b = 15, r = 10)\n    ),\n    legend.text = element_text(color = c3, family = \"jet\", size = 13)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s40/viz.png\",\n  width = 30,\n  height = 33.6,\n  units = \"cm\")\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s40/viz.png\"))\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s40/viz.png)\n\n\n",
    "supporting": [
      "semana_40_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}