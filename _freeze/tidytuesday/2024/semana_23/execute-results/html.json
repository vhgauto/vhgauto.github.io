{
  "hash": "7c28430e2d3469ae4cc0147bf6ddf19c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 23\"\nsubtitle: \"Figura semana 23\"\nauthor: Víctor Gauto\ndate: \"2024-06-10\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_point, geom_label]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s23/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nMáximo contenido graso de diferentes quesos por país.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"#3B99B1\"\nc2 <- \"#EACB2B\"\nc3 <- \"#F5191C\"\nc4 <- \"grey95\"\nc5 <- \"grey20\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# monoespacio & íconos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c3};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana {23}, \",\n  \"<b>cheese.com</b></span>\")\nautor <- glue(\"<span style='color:{c3};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nusuario <- glue(\"<span style='color:{c3};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2024, 23)\ncheeses <- tuesdata$cheeses\n\n# me interesa el queso con mayor contenido graso por país\n\nd <- cheeses |> \n  mutate(id = row_number()) |> \n  mutate(fat_content = str_remove(fat_content, \" g/100g\")) |> \n  mutate(fat_content = str_remove(fat_content, \"%\")) |> \n  separate_longer_delim(cols = fat_content, delim = \"-\") |> \n  mutate(fat_content = parse_number(fat_content)) |> \n  reframe(\n    fat_content = mean(fat_content),\n    .by = c(country, cheese, id)\n  ) |> \n  select(-id) |> \n  drop_na() |> \n  mutate(country = fct_reorder(country, fat_content)) |> \n  filter(!str_detect(country, \",\")) |> \n  slice_max(order_by = fat_content, by = country, n = 1, with_ties = FALSE) |> \n  mutate(cheese = str_remove(cheese, \"Cremig Extra Würzig, \"))\n\n# browseURL(\"https://github.com/fonttools/region-flags/tree/gh-pages\")\n\n# enlace a repositorio con .png de banderas\nlink <- \"https://raw.githubusercontent.com/fonttools/region-flags/gh-pages/png/\"\n\n# agrego el código de país de dos letras e incorporo los links a las banderas\ne <- countrycode::codelist |> \n  select(cctld, country = country.name.en) |> \n  inner_join(d, by = join_by(country)) |> \n  mutate(cctld = str_remove(cctld, \".\")) |> \n  mutate(cctld = toupper(cctld)) |> \n  mutate(bandera = glue(\"{link}{cctld}.png\")) |>\n  mutate(\n    label = glue(\"<img src='{bandera}' height='25'/>\")\n  ) |> \n  mutate(label = fct_reorder(label, fat_content)) |> \n  arrange(label) |> \n  mutate(fila = row_number()) |> \n  mutate(hjust = if_else(fila %% 2 == 0, 0, 1)) |> \n  mutate(cheese_x = if_else(hjust == 0, fat_content+2, fat_content-2))\n\n# figura ------------------------------------------------------------------\n\n# título y subtítulo\nicon_queso <- glue(\"<span style='font-family:jet;'>&#xe264;</span>\")\n\nmi_subtitulo <- glue(\n  \"Los quesos con más contenido graso por país.\"\n)\n\n# mediana para la paleta de color\nm <- median(e$fat_content)\n\n# figura\ng <- ggplot(e, aes(fat_content, label, fill = fat_content)) +\n  geom_point(alpha = 1, size = 10, shape = 23, color = c5) +\n  geom_point(color = c5, alpha = 1, size = 4, shape = 21, fill = c4) +\n  geom_label(\n    aes(x = cheese_x,label = cheese, hjust = hjust, color = fat_content), \n    family = \"ubuntu\", size = 6, fill = c4, label.size = unit(0, \"mm\"),\n    fontface = \"bold\") +\n  scale_x_continuous(\n    limits = c(0, 83),\n    labels = scales::label_number(suffix = \"%\"),\n    expand = c(0, 0),\n    breaks = seq(0, 80, 20)) +\n  scale_fill_gradient2(low = c1, mid = c2, high = c3, midpoint = m) +\n  scale_color_gradient2(low = c1, mid = c2, high = c3, midpoint = m) +\n  labs(\n    x = \"Contenido de grasa\", y = NULL, title = icon_queso, \n    subtitle = mi_subtitulo, caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1.5,\n    plot.margin = margin(b = 10, r = 26, l = 26, t = 2.5),\n    plot.background = element_rect(fill = c5, color = c4, linewidth = 3),\n    plot.title.position = \"panel\",\n    plot.title = element_markdown(\n      size = 90, color = c2, hjust = 0, margin = margin(b = -20)),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 24, color = c4, \n      margin = margin(b = 10, t = -35, l = 70)),\n    plot.caption = element_markdown(\n      color = c2, family = \"ubuntu\", size = 17, \n      margin = margin(t = 55, b = 10)),\n    panel.background = element_rect(fill = c4, color = NA),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_line(\n      linetype = 1, color = c5, linewidth = .06),\n    panel.grid.major.y = element_line(\n      linetype = \"FF\", color = c5, linewidth = .1),\n    axis.ticks = element_blank(),\n    axis.title.x = element_text(\n      family = \"ubuntu\", size = 25, hjust = .99, margin = margin(t = -60),\n      color = c5),\n    axis.text.x = element_text(\n      family = \"jet\", size = 20, color = c4, margin = margin(t = 10)),\n    axis.text.y = element_markdown(hjust = .5, margin = margin(r = 10)),\n    legend.position = \"none\"\n  )\n\n# abro\nggsave(\n  plot = g,\n  filename = \"2024/s23/viz.png\",\n  width = 30,\n  height = 45,\n  units = \"cm\")\n\n# guardo\nbrowseURL(\"2024/s23/viz.png\")\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s23/viz.png)\n\n\n",
    "supporting": [
      "semana_23_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}