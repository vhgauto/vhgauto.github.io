{
  "hash": "828e6257d74b2e9425b8f0057cd2912b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 33\"\nsubtitle: \"Figura semana 33\"\nauthor: Víctor Gauto\ndate: \"2024-08-19\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_point]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s33/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nFerias Internacionales y la relación entre asistentes y superficie.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggthemes)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"#841859\"\nc2 <- \"#005600\"\nc3 <- \"#533600\"\nc4 <- \"grey30\"\nc5 <- \"grey95\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & íconos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c1};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana {33}, \",\n  \"<b>List of world expositions</b>, Wikipedia.</span>\"\n)\nautor <- glue(\"<span style='color:{c1};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nusuario <- glue(\"<span style='color:{c1};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2024, 33)\nworlds_fairs <- tuesdata$worlds_fairs\n\n# me interesa la relación entre tamaño de la feria y cantidad de asistentes\n\nd <- worlds_fairs |> \n  mutate(\n    inicio = make_date(start_year, start_month, 1),\n    fin = make_date(end_year, end_month, 1)) |> \n  mutate(duracion = fin - inicio) |> \n  mutate(duracion_dias = as.numeric(duracion)) |> \n  select(area, visitors, category, duracion_dias) |> \n  drop_na() |> \n  filter(duracion_dias != 0)\n\n# feria con máxima cantidad de personas y tamaño\nd_max <- d |> \n  slice_max(order_by = area, n = 1) |> \n  inner_join(worlds_fairs, by = join_by(area, visitors, category))\n\nd_max_inicio <- format(\n  make_date(d_max$start_year, d_max$start_month, 1), \"%B/%Y\"\n) |> \n  toupper()\n\nd_max_fin <- format(\n  make_date(d_max$end_year, d_max$end_month, 1), \"%B/%Y\"\n) |> \n  toupper()\n\nd_max_label <- glue(\n  \"<b style='color: {c1}'>Ciudad</b>: {d_max$city}\",\n  \"<b style='color: {c1}'>Inicio</b>: {d_max_inicio}\",\n  \"<b style='color: {c1}'>Cierre</b>: {d_max_fin}\",\n  \"<b style='color: {c1}'>Asistentes</b>: {format(d_max$visitors, decimal.mark = ',')} millones\",\n  \"<b style='color: {c1}'>Superficie</b>: {d_max$area} ha\",\n  .sep = \"<br>\"\n)\n\n# figura -----------------------------------------------------------------\n\n# traducción de las categorías\ncategorias <- c(\"Exposición Mundial\", \"Exposición Especializada\")\nnames(categorias) <- unique(d$category)\n\n# títulos de eje\neje_x <- \"Superficie<br><span style='font-size: 13px'>(en hectáreas)</span>\"\neje_y <- \"Asistentes<br><span style='font-size: 13px'>(en millones)</span>\"\neje_fill <- \"Duración de<br>la Feria<br><span style='font-size: 13px'>(en días)</span>\"\n\n# ícono y subtítulo\nicono <- glue(\"<span style='font-family:jet;'>&#xeb01;</span>\")\nmi_subtitulo <- glue(\n  \"En las <b style='color: {c1}'>Exposiciones Universales</b>, ya sean mundiales como en las\",\n  \"específicas, a mayor tamaño del lugar mayor la cantidad de asistentes.\",\n  .sep = \" \"\n)\n\n# figura\ng <- ggplot(\n  d,\n  aes(area, visitors, shape = category, fill = duracion_dias)\n) +\n  # feria máxima\n  annotate(\n    geom = \"richtext\", x = d_max$area-4, y = d_max$visitors,\n    label = d_max_label, family = \"ubuntu\", hjust = 1, vjust = .5,\n    label.color = NA, fill = c5, label.padding = unit(2, \"mm\"), size = 4,\n    label.r = unit(0, \"mm\")\n  ) +\n  geom_point(alpha = .7, color = \"black\", size = 6, stroke = 1) +\n  scale_x_continuous(limits = c(0, 600), expand = c(.025, 0)) +\n  scale_y_continuous(limits = c(0, 80), expand = c(.025, 0)) +\n  scale_fill_gradientn(colors = hcl.colors(n = 5, palette = \"Roma\")) +\n  scale_shape_manual(\n    values = c(21, 23), breaks = names(categorias), labels = categorias\n  ) +\n  scale_radius(limits = c(30, 600), range = c(1, 10)) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    x = eje_x, y = eje_y, shape = NULL, fill = eje_fill, caption = mi_caption,\n    title = icono, subtitle = mi_subtitulo\n  ) +\n  guides(\n    shape = guide_legend(\n      override.aes = list(stroke = 1, alpha = 1),\n      theme = theme(\n        legend.text = element_text(family = \"ubuntu\"),\n        legend.key.spacing.y = unit(.6, \"cm\"),\n        legend.margin = margin(t = 70, l = 5)\n      )\n    ),\n    fill = guide_colorbar(\n      frame.colour = \"black\", ticks.colour = \"black\",\n      theme = theme(\n        legend.key.height = unit(7, \"cm\")\n      )\n    )\n  ) +\n  theme_par() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(t = 12, b = 12, r = 13.3, l = 13.3),\n    plot.background = element_rect(color = c1, linewidth = 3),\n    plot.title = element_markdown(\n      size = 80, color = c2, hjust = 0, margin = margin(b = -60),\n    ),\n    plot.subtitle = element_textbox_simple(\n      family = \"ubuntu\", size = 18, margin = margin(b = 30, l = 60), color = c3\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 13, color = c2, margin = margin(t = 30)\n    ),\n    axis.text = element_text(family = \"jet\", size = 14, color = c1),\n    axis.text.x = element_text(hjust = 0),\n    axis.text.y = element_text(vjust = 0),\n    axis.title = element_markdown(\n      family = \"ubuntu\", size = 18, lineheight = unit(.3, \"line\"), color = c2\n    ),\n    panel.grid.major = element_line(\n      linetype = \"FF\", linewidth = .1, color = c1\n    ),\n    legend.title = element_markdown(family = \"ubuntu\", size = 18, color = c3),\n    legend.text = element_text(family = \"jet\", color = c3)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s33/viz.png\",\n  width = 30,\n  height = 28.5,\n  units = \"cm\")\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s33/viz.png\"))\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s33/viz.png)\n\n\n",
    "supporting": [
      "semana_33_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}