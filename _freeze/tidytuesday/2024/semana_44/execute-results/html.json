{
  "hash": "e6512f5a0f2bcc7b1ba9dab816f92cc6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 44\"\nsubtitle: \"Figura semana 44\"\nauthor: Víctor Gauto\ndate: \"2024-11-04\"\neditor_options:\n  chunk_output_type: console\ncategories: []\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s44/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nPalabras anteriores y posteriores a los títulos de películas de <b>MONSTRUOS</b>.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidytext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"#DF9ED4\"\nc2 <- \"#55092A\"\nc3 <- \"#960B35\"\nc4 <- \"#FD8386\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & íconos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\n# Creepster\nfont_add_google(\n  name = \"Creepster\",\n  family = \"creepster\"\n)\n\n# Girassol\nfont_add_google(\n  name = \"Moul\",\n  family = \"moul\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c4};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana {44}, \",\n  \"<b>Internet Movie Database</b>.</span>\"\n)\nautor <- glue(\"<span style='color:{c4};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nusuario <- glue(\"<span style='color:{c4};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2024, 44)\nmonster_movies <- tuesdata$monster_movies\n\n# me interesan cómo se formas los títulos de las películas, las palabras\n# anteriores y posteriores a MONSTER\n\n# divido las títulos de las películas entre antes y después de la palabra\n# MONSTRUO\nmosters_pre_post <- select(monster_movies, primary_title) |> \n  mutate(primary_title = toupper(primary_title)) |> \n  mutate(primary_title = str_replace_all(primary_title, \"-\", \"_\")) |> \n  mutate(\n    div = str_replace(\n      primary_title, \"(.*)MONSTERS|MONSTER(.*)\", \"\\1-\\2\"\n    )\n  ) |> \n  separate_wider_delim(\n    cols = div,\n    delim = \"-\",\n    names = c(\"pre_palabra\", \"post_palabra\")\n  )\n\n# selecciono las palabras más frecuentes y remuevo las stopwords\n# divido los conjuntos en pre y post palabras\nn_top <- 15\n\nstopwords <- filter(stop_words, lexicon == \"SMART\") |> \n  pull(word)\n\nd_pre <- mosters_pre_post |> \n  select(pre_palabra) |> \n  unnest_tokens(\n    output = \"palabras\",\n    input = pre_palabra\n  ) |> \n  filter(!palabras %in% stopwords) |> \n  count(palabras, sort = TRUE) |> \n  slice_max(order_by = n, n = n_top, with_ties = FALSE) |> \n  pull(palabras) |> \n  toupper() |> \n  str_replace(\"_\", \"-\")\n\nd_post <- mosters_pre_post |> \n  select(post_palabra) |> \n  unnest_tokens(\n    output = \"palabras\",\n    input = post_palabra\n  ) |> \n  filter(!palabras %in% stopwords) |> \n  count(palabras, sort = TRUE) |> \n  slice_max(order_by = n, n = n_top, with_ties = FALSE) |> \n  pull(palabras) |> \n  toupper() |> \n  str_replace(\"_\", \"-\")\n\n# figura ------------------------------------------------------------------\n\n# MONSTER\nlabel_monster <- str_split(\"MONSTER\", \"\")[[1]] |> \n  str_flatten(collapse = \"<br>\")\n\n# parámetros de la figura\ntamaño_label <- 13\ntamaño_monster <- 38\nancho_linea <- .3\n\nmi_subtitulo <- glue(\n  \"Términos más frecuentes antes y después de la palabra \n  <span style='font-family: creepster; color: {c1};'>MONSTER</span> en \n  <b>{nrow(monster_movies)}</b> películas.\"\n)\n\n# figura\ng <- ggplot() +\n  # líneas\n  annotate(\n    geom = \"segment\", x = -5, xend = 0, y = 1:15, yend = 7.7, color = c3,\n    linewidth = ancho_linea, linetype = 2\n  ) +\n  annotate(\n    geom = \"segment\", x = 5, xend = 0, y = 1:15, yend = 7.7, color = c3,\n    linewidth = ancho_linea, linetype = 2\n  ) +\n  # pre\n  annotate(\n    geom = \"richtext\", x = -5, y = 1:15, label = d_pre, hjust = 1, color = c2,\n    family = \"creepster\", size = tamaño_label, fill = c1, label.color = c3,\n    label.size = unit(.7, \"mm\"), label.padding = unit(3, \"mm\"),\n    label.r = unit(3, \"mm\")\n  ) +\n  # post\n  annotate(\n    geom = \"richtext\", x = 5, y = 1:15, label = d_post, hjust = 0, color = c2,\n    family = \"creepster\", size = tamaño_label, fill = c1, label.color = c3,\n    label.size = unit(.7, \"mm\"), label.padding = unit(3, \"mm\"),\n    label.r = unit(3, \"mm\")\n  ) +\n  # MONSTER\n  annotate(\n    geom = \"richtext\", x = 0, y = 7.5, label = label_monster, hjust = .42,\n    family = \"moul\", size = tamaño_monster, lineheight = unit(.9, \"line\"),\n    fill = NA, label.color = NA, color = c1\n  ) +\n  scale_x_continuous(limits = c(-12, 12)) +\n  scale_y_continuous(limits = c(0, 15)) +\n  labs(subtitle = mi_subtitulo, caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(r = 5, l = 5, t = 1.5),\n    plot.background = element_rect(color = c3, fill = c2, linewidth = 3),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", color = c4, size = 20, hjust = .5,\n      margin = margin(t = 15, b = 20)\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 12, color = c1,\n      margin = margin(b = 10, r = 10, t = -20)\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s44/viz.png\",\n  width = 30,\n  height = 32,\n  units = \"cm\")\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s44/viz.png\"))\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s44/viz.png)\n\n\n",
    "supporting": [
      "semana_44_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}