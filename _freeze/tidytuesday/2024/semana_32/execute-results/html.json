{
  "hash": "c430d301466f6df56c66f9eea12dd6cb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 32\"\nsubtitle: \"Figura semana 32\"\nauthor: Víctor Gauto\ndate: \"2024-08-12\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_tile, geom_richtext, argentina]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s32/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nParticipación de Argentina en los Juegos Olímpicos.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggsvg)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 <- \"#2B579A\"\nc2 <- colorspace::lighten(c1, .7)\nc3 <- colorspace::lighten(c1, .9)\nc4 <- \"#A41620\"\nc5 <- \"white\"\n\n# colores de las medallas\nmd <- \"#FFD700\"\nmp <- \"#BABABA\"\nmb <- \"#BF8970\"\n\npal_medallas <- c(\n  Gold = md,\n  Silver = mp,\n  Bronze = mb\n) |> \n  fct()\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & íconos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\n# bebas neue\nfont_add(\n  family = \"bebas\", \n  regular = \"fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{c1};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana {32}, \",\n  \"120 years of Olympic history.</span>\"\n)\nautor <- glue(\"<span style='color:{c1};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nusuario <- glue(\"<span style='color:{c1};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2024, 32)\nolympics <- tuesdata$olympics\n\n# me interesa la participación de Argentina y las medallas recibidas\n# selecciono únicamente los JJOO post 1920\n\n# aspecto de tiles\nlargo <- 13\nalto <- 3\nfilas <- 10\n\n# bandera\nbandera <- \"<img src='2024/s32/arg.png' width=30>\"\n\n# participación de Argentina en los JJOO\narg_part <- olympics |>\n  filter(season == \"Summer\" & team == \"Argentina\" & year > 1920) |> \n  distinct(event, year) |> \n  arrange(year) |> \n  count(year) |> \n  mutate(\n    x_part = map(n, ~ rep(1:largo, length.out = .x))\n  ) |> \n  mutate(\n    y_part = map(n, ~ rep(1:largo, length.out = .x, each = largo))\n  ) |> \n  unnest(cols = c(x_part, y_part)) |> \n  mutate(year = glue(\"{year} {bandera}\"))\n\n# medallas recibidas por Argentina en los JJOO\narg_med <- olympics |>\n  filter(season == \"Summer\" & team == \"Argentina\" & year > 1920) |> \n  drop_na(medal) |> \n  distinct(event, year) |> \n  arrange(year) |> \n  count(year) |> \n  mutate(\n    x_med = map(n, ~ rep(1:largo, length.out = .x))\n  ) |> \n  mutate(\n    y_med = map(n, ~ rep(1:largo, length.out = .x, each = largo))\n  ) |> \n  unnest(cols = c(x_med, y_med)) |> \n  mutate(year = glue(\"{year} {bandera}\"))\n\n# función que devuelve ícono del color y tamaño deseado\nf_icon <- function(color, tamaño = 40) {\n  glue(\n    \"<span style='font-family:jet; color: {color}; font-size: {tamaño}px'>\",\n    \"&#xf0764;</span>\")\n}\n\n# cantidad de medallas recibidas en los JJOO (oro, plata, bronce)\narg_r <- olympics |>\n  filter(season == \"Summer\" & team == \"Argentina\" & year > 1920) |> \n  drop_na(medal) |> \n  distinct(event, year, medal) |> \n  mutate(col = pal_medallas[medal]) |> \n  arrange(year) |> \n  count(year, medal, col) |> \n  arrange(year, col) |> \n  mutate(\n    l = glue(\"{f_icon(col, 20)} {n}\")\n  ) |> \n  reframe(\n    label = str_flatten(l, collapse = \" \"),\n    .by = year\n  ) |> \n  mutate(year = glue(\"{year} {bandera}\"))\n\n# figura -----------------------------------------------------------------\n\n# logo de los JJOO, agrego a caption\njjoo <- \"<img src='2024/s32/jjoo.png' width=250>\"\nmi_caption_jjoo <- glue(\"{jjoo}<br>{mi_caption}\")\n\n# subtítulo\nmi_subtitle <- glue(\n  \"Desempeño de <b style='color: {c1}'>Argentina</b> en los\",\n  \"<b style='font-family: jet; color: {c4}'>Juegos Olímpicos</b>.<br>\",\n  \"{f_icon(c1)} indica participación en un evento.\",\n  \"{f_icon(c4)} señala la obtención de una medalla.\",\n  .sep = \" \"\n)\n# figura\ng <- ggplot(arg_part, aes(x_part, y_part)) +\n  geom_tile(fill = c1, color = c2, linewidth = 2) +\n  geom_tile(\n    data = arg_med, aes(x = x_med, y = y_med), fill = c4, , color = c2,\n    linewidth = 2\n  ) +\n  # medallas DORADA, PLATEADA, BRONZE\n  geom_richtext(\n    data = arg_r, aes(largo + .5, filas + 1.5, label = label), family = \"jet\",\n    hjust = 1, fill = c5, , label.color = NA, vjust = 1, size = 4,\n    label.padding = unit(c(1, 1, .1, 1), \"mm\"),\n    label.r = unit(0, \"mm\")\n  ) +\n  facet_wrap(vars(year), ncol = 4) +\n  coord_equal(\n    expand = FALSE, xlim = c(.25, largo + .75), ylim = c(.25, filas + 1.8),\n    clip = \"off\"\n  ) +\n  labs(subtitle = mi_subtitle, caption = mi_caption_jjoo) +\n  theme_void() +\n  theme(\n    plot.margin = margin(l = 30.8, r = 30.8, t = 10),\n    plot.background = element_rect(fill = c3, color = c2, linewidth = 3),\n    plot.title = element_markdown(),\n    plot.subtitle = element_textbox_simple(\n      family = \"ubuntu\", size = 22, color = \"black\", margin = margin(b = 20)\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 15, color = c4, lineheight = unit(1.3, \"line\"),\n      margin = margin(t = -130, b = 10)\n    ),\n    panel.background = element_rect(fill = c2, color = NA),\n    panel.grid = element_blank(),\n    panel.spacing.x = unit(1, \"line\"),\n    axis.ticks = element_blank(),\n    axis.text = element_blank(),\n    strip.background = element_blank(),\n    strip.text = element_markdown(\n      size = 28, color = c4, family = \"bebas\", margin = margin(t = 5, b = 2),\n      hjust = 0\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s32/viz.png\",\n  width = 30,\n  height = 45,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s32/viz.png\"))\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s32/viz.png)\n\n\n",
    "supporting": [
      "semana_32_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}