{
  "hash": "c352772f836356ea6a26d12d8e46d68b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 48\"\nsubtitle: \"Figura semana 48\"\nauthor: Víctor Gauto\ndate: \"2024-12-02\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_text, geom_bump, geom_point, geom_richtext]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s48/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\nEncuentros en las fronteras Norte y Sur de Estados Unidos.\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggbump)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\ncc <- c(\"#451B40\", \"#324D5A\", \"#589445\", \"#B5003C\")\nc1 <- \"grey70\"\nc2 <- \"grey95\"\nc3 <- \"black\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & íconos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\n# bebas neue\nfont_add(\n  family = \"bebas\",\n  regular = \"fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{cc[1]};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana {48}, \",\n  \"<b>U.S. Customs and Border Protection</b>.</span>\"\n)\nautor <- glue(\"<span style='color:{cc[1]};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{cc[1]};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2024, 48)\ncbp_resp <- tuesdata$cbp_resp\n\n# me interesan los países más frecuentes y su evolución anual\n\ntop_paises <- 20\n\n# función para generar los datos por frontera N/S\n\nf_frontera <- function(frontera, frontera_label) {\n  cbp_resp |>\n    filter(land_border_region == frontera) |>\n    select(fiscal_year, citizenship) |>\n    count(citizenship, fiscal_year) |>\n    filter(citizenship != \"OTHER\") |>\n    slice_max(order_by = n, by = fiscal_year, n = top_paises) |>\n    arrange(fiscal_year, desc(n)) |>\n    mutate(puesto = row_number(), .by = fiscal_year) |>\n    mutate(lado = frontera_label)\n}\n\n# combino datos frontera N/S\ncbp_n <- f_frontera(\"Northern Land Border\", \"NORTE\")\ncbp_s <- f_frontera(\"Southwest Land Border\", \"SUR\")\n\nd <- rbind(cbp_n, cbp_s) |>\n  mutate(citizenship = if_else(\n    citizenship == \"CHINA, PEOPLES REPUBLIC OF\",\n    \"CHINA\",\n    citizenship\n  ))\n\n# agrego colores a las líneas y nombres de países\npaises <- unique(d$citizenship)\ncolores <- rep(cc, 5)\nnames(colores) <- paises\n\nd <- mutate(d, color = colores[citizenship]) |>\n  mutate(\n    puesto_label = if_else(puesto < 10, glue(\"0{puesto}\"), glue(\"{puesto}\"))\n  )\n\n# etiquetas de puestos, en años extremos\ncbp_ext <- filter(d, fiscal_year == 2020 | fiscal_year == 2024) |>\n  mutate(hjust = if_else(fiscal_year == 2020, 1, 0)) |>\n  mutate(citizenship = str_to_title(citizenship))\n\n# figura ------------------------------------------------------------------\n\n# N/S y subtítulo\nlugares <- tibble(\n  fiscal_year = 2022,\n  puesto = 3,\n  lado = c(\"NORTE\", \"SUR\"),\n  color = c1\n)\n\nmi_subtitulo <- glue(\n  \"Nacionalidades de ciudadanos **expulsados**, **aprehendidos** o\n  **inadmisibles** en la frontera Norte/Sur de\n  <b style='color:{cc[4]}'>Estados Unidos</b>\"\n)\n\n# figura\ng <- ggplot(d, aes(fiscal_year, puesto, color = color, fill = color)) +\n  # N & S\n  geom_text(data = lugares, aes(label = lado), size = 50, family = \"bebas\") +\n  # bump & puntos\n  geom_bump(aes(group = citizenship), linewidth = 1.3, show.legend = FALSE) +\n  geom_point(\n    shape = 21, fill = c2, size = 2, stroke = 2, show.legend = FALSE\n  ) +\n  # izquierda\n  geom_richtext(\n    data = filter(cbp_ext, fiscal_year == 2020),\n    aes(label = citizenship, hjust = hjust), fill = NA,\n    size = 7, show.legend = FALSE, family = \"ubuntu\", label.color = NA,\n    label.padding = unit(c(0, 15, 0, 0), \"pt\")\n  ) +\n  # derecha\n  geom_richtext(\n    data = filter(cbp_ext, fiscal_year == 2024),\n    aes(label = citizenship, hjust = hjust), fill = NA,\n    size = 7, show.legend = FALSE, family = \"ubuntu\", label.color = NA,\n    label.padding = unit(c(0, 0, 0, 15), \"pt\")\n  ) +\n  # puestos\n  geom_richtext(\n    data = cbp_ext, aes(label = puesto_label), family = \"bebas\", size = 6,\n    label.color = NA, color = c1, fill = c2, label.r = unit(5, \"pt\"),\n    label.padding = unit(c(2, 2, 2, 2), \"pt\")\n  ) +\n  facet_wrap(vars(lado), ncol = 2, scales = \"free\") +\n  scale_y_reverse(\n    expand = c(0, 0)\n  ) +\n  scale_color_identity() +\n  scale_fill_identity() +\n  coord_cartesian(clip = \"off\") +\n  labs(x = NULL, y = NULL, subtitle = mi_subtitulo, caption = mi_caption) +\n  theme_minimal(base_size = 12) +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(r = 110, l = 110, t = 30, b = 18),\n    plot.background = element_rect(fill = c2, color = cc[3], linewidth = 3),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", color = c3, size = 25, margin = margin(b = 25),\n      hjust = .5\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = cc[4], size = 15,\n      margin = margin(t = 20, r = -70)\n    ),\n    panel.grid = element_blank(),\n    panel.spacing.x = unit(250, \"pt\"),\n    axis.text.x = element_text(\n      family = \"jet\", size = 22, color = c3, margin = margin(t = 15)\n    ),\n    axis.text.y = element_blank(),\n    strip.text = element_blank()\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s48/viz.png\",\n  width = 50,\n  height = 23,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s48/viz.png\"))\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s48/viz.png)\n\n\n",
    "supporting": [
      "semana_48_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}