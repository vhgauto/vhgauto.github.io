{
  "hash": "5908d4b13805155ec37d8c989f4d8920",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Semana 36\"\nsubtitle: \"Figura semana 36\"\nauthor: Víctor Gauto\ndate: \"2024-09-09\"\neditor_options:\n  chunk_output_type: console\ncategories: [geom_col, geom_richtext, argentina]\nimage: https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s36/viz.png\nexecute:\n  eval: false\n  echo: true\ncode-fold: true\n---\n\n\n\n\n\n# Script\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\npal <- c(\"#77053C\", \"#9C1052\", \"#D08BAA\")\nc1 <- \"#272F18\"\nc2 <- \"white\"\nc3 <- \"gold\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & íconos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\n#  IBM Plex Sans\nfont_add_google(name = \"IBM Plex Sans\", family = \"ibm\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente <- glue(\n  \"Datos: <span style='color:{pal[3]};'><span style='font-family:jet;'>\",\n  \"{{<b>tidytuesdayR</b>}}</span> semana {36}, \",\n  \"2024 Stack Overflow Annual Developer Survey, <b>Havisha Khurana</b>.</span>\"\n)\nautor <- glue(\"<span style='color:{pal[3]};'>**Víctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_circulo <- glue(\n  \"<span style='font-family:jet; color: {c3}'>&#xf111;</span>\")\nicon_so <- glue(\"<span style='font-family:jet'>&#xe710;</span>\")\nusuario <- glue(\"<span style='color:{pal[3]};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(2024, 36)\nqname <- tuesdata$qname_levels_single_response_crosswalk\nsurvey_questions <- tuesdata$stackoverflow_survey_questions\nsingle_response <- tuesdata$stackoverflow_survey_single_response\n\n# me interesa la opinión de los Argentinos sobre IA\n\n# preguntas y las respuestas asociadas\npreg_level <- inner_join(\n  qname,\n  survey_questions,\n  by = join_by(qname)\n) |> \n  select(question, everything())\n\n# etiqueta de las preguntas\npreg <- c(\"ai_select\", \"ai_acc\", \"ai_complex\", \"ai_threat\")\n\n# respuestas Argentinas\narg_resp <- single_response |> \n  filter(country == \"Argentina\") |> \n  select(any_of(preg)) |> \n  pivot_longer(\n    cols = everything(),\n    names_to = \"qname\",\n    values_to = \"level\"\n  )\n\n# cantidad de respuestas\nd_arg <- inner_join(\n  arg_resp,\n  preg_level,\n  by = join_by(qname, level)\n) |> \n  select(-level) |> \n  count(qname, label, question) |> \n  mutate(tot = sum(n), .by = qname) |> \n  mutate(prop = round(n/tot*100, 1)) |> \n  mutate(qname = fct(qname, levels = preg)) |>\n  mutate(question = fct_reorder(question, as.numeric(qname))) |>\n  mutate(region = \"Argentina\")\n\n# orden de las respuestas\norden_ai_select <- c(\n  \"No, but I plan to soon\",\n  \"No, and I don't plan to\",\n  \"Yes\"\n)\norden_ai_select <- glue(\"1_____{orden_ai_select}\")\n\norden_ai_acc <- c(\n  \"Highly trust\",\n  \"Somewhat trust\",\n  \"Neither trust nor distrust\",\n  \"Somewhat distrust\",\n  \"Highly distrust\"\n)\norden_ai_acc <- glue(\"2_____{orden_ai_acc}\")\n\norden_ai_complex <- c(\n  \"Very poor at handling complex tasks\",\n  \"Bad at handling complex tasks\",\n  \"Neither good or bad at handling complex tasks\",\n  \"Good, but not great at handling complex tasks\",\n  \"Very well at handling complex tasks\"\n)\norden_ai_complex <- glue(\"3_____{orden_ai_complex}\")\n\norden_ai_threat <- c(\n  \"Yes\",\n  \"I'm not sure\",\n  \"No\"\n)\norden_ai_threat <- glue(\"4_____{orden_ai_threat}\")\n\n# acomodo todas las respuestas\nordenes <- c(orden_ai_select, orden_ai_acc, orden_ai_complex, orden_ai_threat)\nordenes_eje <- str_remove(ordenes, \"._____\")\nnames(ordenes_eje) <- ordenes\n\n# traducciones de las respuestas\nordenes_trad <- c(\n  \"No, pero planeo hacerlo pronto\",\n  \"No, y no planeo hacerlo\",\n  \"Sí\",\n  \"Confío plenamente\",\n  \"Algo confío\",\n  \"No confío ni desconfío\",\n  \"Algo desconfío\",\n  \"Desconfío plenamente\",\n  \"Muy malo operando tareas complejas\",\n  \"Mal operando tareas complejas\",\n  \"Ni bien ni mal operando tareas complejas\",\n  \"Bien operando tareas complejas\",\n  \"Muy bien operando tareas complejas\",\n  \"Sí\",\n  \"No sé\",\n  \"No\"\n) |> str_wrap(20)\nnames(ordenes_trad) <- ordenes\n\n# agrego los órdenes a las respuestas\norden_arg <- d_arg |> \n  arrange(qname, label) |> \n  mutate(orden = glue(\"{as.numeric(qname)}_____{label}\")) |> \n  mutate(orden = factor(orden, ordenes)) |> \n  arrange(ordenes) |> \n  mutate(label = fct_inorder(label))\n\n# combino todas las respuestas\nd <- inner_join(orden_arg, d_arg) |> \n  arrange(orden) |> \n  mutate(label = fct_reorder(label, as.numeric(orden)))\n\n# figura ------------------------------------------------------------------\n\n# traducción de las preguntas\nquestion_trad <- c(\n  \"¿Usás <b>IA</b> en tu trabajo?\",\n  \"En tu trabajo, ¿cuánta presición creés que<br>tienen las respuestas generadas por <b>IA</b>?\",\n  \"Las <b>IA</b>, ¿qué tan bien manejan las<br>tareas complejas?\",\n  \"En tu trabajo, ¿creés que la <b>IA</b> es<br>una amenaza?\")\nquestion_trad <- glue(\"{icon_circulo} {question_trad}\")\nnames(question_trad) <- sort(unique(d$question))\n\n# subtítulo\nmi_subtitulo <- glue(\n  \"Qué opinan los usuarios \",\n  \"<b style='color: {c3}; font-family: ibm;'>ARGENTINOS</b> de \",\n  \"stack <b>overflow</b> acerca<br>de la Inteligencia Artificial.\"\n)\n\n# figura\ng <- ggplot(d, aes(prop, orden)) +\n  geom_col(show.legend = TRUE, fill = c1) +\n  geom_richtext(\n    aes(label = glue(\"{prop}%\")), hjust = .15, position = position_nudge(y = 0),\n    label.r = unit(0, \"mm\"), label.size = unit(1, \"mm\"), color = c2,\n    label.color = c1, fill = pal[1], family = \"jet\", ) +\n  facet_wrap(\n    vars(question), ncol = 2, scales = \"free\",\n    labeller = as_labeller(question_trad)) +\n  scale_x_continuous(\n    limits = c(0, NA), labels = scales::label_number(suffix = \"%\")\n  ) +\n  scale_y_discrete(labels = ordenes_trad) +\n  coord_cartesian(clip = \"off\", xlim = c(0, NA)) +\n  labs(\n    title = icon_so, subtitle = mi_subtitulo, x = NULL, caption = mi_caption\n  ) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1.1,\n    plot.margin = margin(t = 15, r = 130, l = 16.4, b = 5),\n    plot.background = element_rect(\n      fill = pal[1], color = pal[2], linewidth = 3\n    ),\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(\n      size = 60, color = c3, margin = margin(l = 20)\n    ),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", color = c2, size = 20,\n      margin = margin(l = 120, t = -50)\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c2, size = 12,\n      margin = margin(t = 24, b = 5, r = -110)\n    ),\n    panel.spacing.x = unit(4, \"line\"),\n    panel.spacing.y = unit(2, \"line\"),\n    panel.background = element_rect(fill = pal[2], color = NA),\n    panel.grid.major.x = element_line(\n      colour = pal[3], linetype = \"FF\", linewidth = .1\n    ),\n    axis.text = element_text(color = c2),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(\n      family = \"ubuntu\", hjust = 1, size = 13, margin = margin(r = 5)\n    ),\n    axis.text.x = element_text(\n      family = \"jet\", margin = margin(t = 5), hjust = 0, color = pal[3]\n    ),\n    strip.background = element_blank(),\n    strip.text = element_markdown(\n      family = \"ibm\", color = c2, hjust = 0, size = 15,\n      margin = margin(b = 5)\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s36/viz.png\",\n  width = 30,\n  height = 24,\n  units = \"cm\")\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s36/viz.png\"))\n```\n:::\n\n\n\n\n# Figura\n\n![](https://raw.githubusercontent.com/vhgauto/tidytuesday/refs/heads/main/2024/s36/viz.png)\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}