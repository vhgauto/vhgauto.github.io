{
  "hash": "b8218d4415caa4bb738f29f02dd78b41",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    anchor-sections: true\n    code-fold: show\n    code-summary: \"Ocultar c칩digo\"\n    code-line-numbers: false\n    code-annotations: false\n    code-link: true\n    code-tools:\n        source: true\n        toggle: true\n        caption: \"C칩digo\"\n    code-overflow: scroll\n    page-layout: full\neditor_options:\n  chunk_output_type: console\ncategories: [\"geom_sf\", \"geom_sf_pattern\"]\nexecute:\n  eval: false\n  echo: true\n  warning: false\ntitle: \"游딮Torres de telecomunicaciones\"\ndate: 2024-02-17\nauthor: V칤ctor Gauto\n---\n\n\n\n\nAnimaci칩n del avance de las torres de telecomunicaciones en Argentina, entr 2009 y 2024, para redes GSM, UMTS y LTE.\n\n![Animaci칩n del avance de torres celulares.](torres_celulares.mp4)\n\n## Paquetes\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(showtext)\nlibrary(ggtext)\nlibrary(sf)\nlibrary(magick)\nlibrary(tidyverse)\n```\n:::\n\n\n\n\n## Estilos\n\nColores.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc1 <- \"#76BE72\"\nc2 <- \"#F04C44\"\nc3 <- \"#442224\"\nc4 <- \"grey95\"\nc5 <- \"grey92\"\n```\n:::\n\n\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n```\n:::\n\n\n\n\n## Ep칤grafe\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfuente <- glue(\n  \"Datos: <span style='color:{c2}; font-size: 8px'>**OpenCelliD Project** is\n  licensed under a Creative<br>Commons Attribution-ShareAlike 4.0 International\n  License</span>\")\nautor <- glue(\"<span style='color:{c2};'>**V칤ctor Gauto**</span>\")\nicon_twitter <- glue(\"<span style='font-family:jet;'>&#xf099;</span>\")\nicon_instagram <- glue(\"<span style='font-family:jet;'>&#xf16d;</span>\")\nicon_github <- glue(\"<span style='font-family:jet;'>&#xf09b;</span>\")\nicon_mastodon <- glue(\"<span style='font-family:jet;'>&#xf0ad1;</span>\")\nicon_bsky <- glue(\"<span style='font-family:jet;'>&#xe28e;</span>\")\nusuario <- glue(\"<span style='color:{c2};'>**vhgauto**</span>\")\nsep <- glue(\"**|**\")\n\nmi_caption <- glue(\n  \"{fuente}<br>{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n```\n:::\n\n\n\n\n## Funciones\n\nConvierte la cantidad de torres por per칤odo a largo del segmento, para mostrar avance.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nf_escala <- function(x) {\n  eje_x_min + x*(eje_x_max - eje_x_min)/l_max\n}\n```\n:::\n\n\n\n\nGeneraci칩n y almacenamiento de cada mapa.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nf_mapa <- function(a침o_mes) {\n\n  # contador para seguimiento en consola\n  l <- length(v_a침o_mes)\n  n <- which(v_a침o_mes == a침o_mes)\n\n  n <- case_when(\n    n <= 9 ~ glue(\"00{n}\"),\n    n <= 99 ~ glue(\"0{n}\"),\n    .default = glue(\"{n}\")\n  )\n\n  print(glue(\"-- {n} de {l} --\"))\n\n  # etiquetas de a침o y mes\n  a침o_label <- year(a침o_mes)\n  mes_label <- str_to_upper(format(a침o_mes, \"%B\"))\n\n  mi_title <- glue(\n    \"<span style='font-size:20px;'>{a침o_label}</span><br>\",\n    \"<span style='font-size:10px;'>{mes_label}</span>\")\n\n  # filtro los datos\n  e <- d |>\n    filter(primero <= a침o_mes)\n\n  # color de la leyenda\n  label_tbl <- count(e, radio) |>\n    mutate(color = paleta_radio[radio]) |>\n    mutate(label = glue(\"{radio}<br><span style='color:{color}'>{n}</span>\")) |>\n    arrange(radio)\n\n  scale_color_names <- pull(label_tbl, radio)\n  scale_color_labels <- pull(label_tbl, label)\n  scale_color_values <- pull(label_tbl, color)\n\n  # extensi칩n\n  d_l <- count(tibble(e), radio) |>\n    arrange(radio) |>\n    mutate(\n      x = eje_x_min,\n      xend = f_escala(n),\n      y = eje_y_radio[radio]\n    ) |>\n    mutate(yend = y) |>\n    mutate(color = paleta_radio[radio])\n\n  # figura\n  g <- ggplot() +\n    # Argentina\n    geom_sf(data = arg_sf, fill = c5, color = NA, linewidth = .1) +\n    # torres de radio\n    geom_sf(data = e, aes(color = radio, size = radio), alpha = .5) +\n    # l칤neas horizontales\n    geom_segment(\n      data = d_l, aes(x, y, xend = xend, yend = yend),  color = d_l$color,\n      linewidth = 1) +\n    # a침o\n    annotate(\n      geom = \"text\", x = I(.85), y = I(.95), label = a침o_label, vjust = 0,\n      family = \"jet\", size = 6, color = c3) +\n    # mes\n    annotate(\n      geom = \"text\", x = I(.85), y = I(.944), label = mes_label, vjust = 1,\n      family = \"jet\", size = 3, color = c3) +\n    scale_color_manual(\n      breaks = scale_color_names,\n      labels = scale_color_labels,\n      values = scale_color_values) +\n    scale_size_manual(values = c(.1, .4, .7)) +\n    labs(color = NULL, caption = mi_caption) +\n    coord_sf(\n      xlim = c(bb_sf$xmin, bb_sf$xmax),\n      ylim = c(bb_sf$ymin, bb_sf$ymax),\n      expand = FALSE) +\n    guides(\n      color = guide_legend(\n        position = \"inside\",\n        override.aes = list(size = 3, alpha = 1)),\n      size = guide_none()\n    ) +\n    theme_void() +\n    theme(\n      plot.background = element_rect(fill = c4, color = c3, linewidth = 1),\n      plot.margin = margin(r = 4, b = 3, l = 4),\n      plot.caption = element_markdown(\n        family = \"ubuntu\", color = c1, size = 7, lineheight = unit(1.1, \"line\"),\n        margin = margin(t = -15, r = 5)),\n      legend.position.inside = c(0.6, 0.4),\n      legend.key.spacing.y = unit(.7, \"line\"),\n      legend.justification.inside = c(0, 1),\n      legend.text = element_markdown(family = \"jet\")\n    )\n\n  # guardo\n  ggsave(\n    plot = g,\n    filename = glue(\"./argentina/animaciones/torres_celulares/{n}.png\"),\n    width = 1000,\n    height = 2140,\n    units = \"px\"\n  )\n\n}\n```\n:::\n\n\n\n\n## Datos\n\nLos datos de las torres de celulares se encuentran en [OpenCellid](https://www.opencellid.org/downloads.php). Es requisito tener una cuenta para poder solicitar un token de acceso y descargar los datos.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- read_csv(\n  \"./argentina/vectores/722X.csv\",\n  col_names = 1:14,\n  col_select = c(1, 7, 8, 12, 13)) |>\n  rename(radio = X1, lon = X7, lat = X8, primero = X12, ultimo = X13) |>\n  mutate(primero = as_datetime(primero)) |>\n  mutate(ultimo = as_datetime(ultimo)) |>\n  mutate(primero = as.Date(primero)) |>\n  mutate(ultimo = as.Date(ultimo)) |>\n  mutate(a침o = year(primero), mes = month(primero)) |>\n  mutate(radio = fct(radio, levels = c(\"GSM\", \"UMTS\", \"LTE\"))) |>\n  st_as_sf(coords = c(\"lon\", \"lat\")) |>\n  st_set_crs(value = 4326) |>\n  st_transform(crs = 5346)\n```\n:::\n\n\n\n\nVector de Argentina y contorno.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narg_sf <- st_read(\"./argentina/vectores/arg_continental.gpkg\") |>\n  st_transform(crs = 5346)\n\n# extensi칩n de Argentina, para ampliar el mapa\nbb <- st_bbox(arg_sf)\next <- terra::vect(arg_sf) |> terra::ext()\nbb_sf <- terra::vect(ext*1.1, crs = \"EPSG:5346\") |>\n  st_as_sf() |>\n  st_bbox()\n```\n:::\n\n\n\n\nExtraigo los meses y a침os de la base de datos.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nv_a침o_mes <- tibble(d) |>\n  distinct(a침o, mes) |>\n  mutate(dia = 1) |>\n  mutate(fecha = make_date(year = a침o, month = mes, day = dia)) |>\n  arrange(fecha) |>\n  pull(fecha)\n\n# m치xima cantidad de torres de radio\nl_max <- count(tibble(d), radio, sort = TRUE) |>\n  arrange(radio) |>\n  pull(n) |>\n  max()\n```\n:::\n\n\n\n\n## Figura\n\nPaleta de colores por tipo de red.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npaleta_radio <- c(c1, c2, c3)\nnames(paleta_radio) <- c(\"GSM\", \"UMTS\", \"LTE\")\n```\n:::\n\n\n\n\nPosici칩n de cada segmento seg칰n tipo de torre.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\neje_x_min <- bb_sf$xmax*.895\neje_x_max <- bb_sf$xmax*.99\n\n# posici칩n vertical, de los segmentos seg칰n tipo de radio\neje_y_gsm <- bb_sf$ymin*1.402\neje_y_umts <- eje_y_gsm - 2.22e5\neje_y_lte <- eje_y_gsm - 2*2.22e5\n\neje_y_radio <- c(eje_y_gsm, eje_y_umts, eje_y_lte)\nnames(eje_y_radio) <- c(\"GSM\", \"UMTS\", \"LTE\")\n```\n:::\n\n\n\n\nGenero todas las figuras.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwalk(v_a침o_mes, f_mapa)\nbeepr::beep(2)\nSys.sleep(1.5)\nbeepr::beep(2)\nSys.sleep(1.5)\nbeepr::beep(2)\nSys.sleep(1.5)\n```\n:::\n\n\n\n\n## Animaci칩n\n\nA partir de las figuras genero la animaci칩n.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nav::av_encode_video(\n  input = list.files(\n    path = \"./argentina/animaciones/torres_celulares/\",\n    full.names = TRUE, pattern = \".png\"\n  )[-c(1, 2)],\n  framerate = 7,\n  output = \"./argentina/animaciones/torres_celulares.mp4\"\n)\n```\n:::\n\n\n\n\nElimino la carpeta con todas las im치genes.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunlink(\"./argentina/animaciones/torres_celulares/\", recursive = TRUE)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}