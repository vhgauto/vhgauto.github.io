[
  {
    "objectID": "mapas.html",
    "href": "mapas.html",
    "title": "Mis mapas",
    "section": "",
    "text": "Mapas varios.\n\n\n\n\n\n\n\n\n\n\nmapa 1\n\n\nmapa semana 01\n\n\n\na\n\n\nb\n\n\n\ngeom_col()\n\n\n\n\n\n2025-01-01\n\n\nVHG\n\n\n\n\n\n\nNo hay resultados\n\n\nAdiós.\n\n\n\n\n Volver arriba"
  },
  {
    "objectID": "mapas/mapa1.html",
    "href": "mapas/mapa1.html",
    "title": "mapa 1",
    "section": "",
    "text": "Contenido S01\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\n# {glue}, {ggtext}, {showtext}, {tidyverse}\n# se cargan automáticamente\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#447099\"\nc2 &lt;- \"#75AADB\"\nc3 &lt;- \"#F0F5F9\"\nc4 &lt;- \"black\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & íconos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nmi_caption &lt;- caption(\n  fuente1 = \"&lt;span style='font-family:jet'&gt;posit::conf&lt;/jet&gt;\",\n  col = c1,\n  week = 2\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 2)\nconf2023 &lt;- tuesdata$conf2023\nconf2024 &lt;- tuesdata$conf2024\n\n# me interesa la cantidad de conferencias que hablan de QUARTO entre 2023 y 2024\n\n# cantidad de conferencias que mencionan QUARTO, 2023/2024\nn2023 &lt;- conf2023 |&gt; \n  mutate(quarto = str_detect(session_abstract, \"quarto|Quarto\")) |&gt; \n  dplyr::filter(quarto) |&gt; \n  nrow()\n\nn2024 &lt;- conf2024 |&gt; \n  mutate(quarto = str_detect(description, \"quarto|Quarto\")) |&gt; \n  dplyr::filter(quarto) |&gt; \n  nrow()\n\nd &lt;- tibble(\n  año = c(2023, 2024),\n  n = c(n2023, n2024)\n) |&gt; \n  mutate(\n    año = paste0(\"posit::conf\\n\", año)\n  )\n\n# figura ------------------------------------------------------------------\n\n# logo y subtítulo\nlogo &lt;- \"https://quarto.org/quarto.png\"\nlogo_img &lt;- glue(\n  \"&lt;img src='{logo}' width=250 /&gt;\"\n)\n\nmi_subitulo &lt;- glue(\n  \"La cantidad de conferencias&lt;br&gt;que incluyen\n  &lt;span style='font-family:jet; color:{c1}'&gt;quarto&lt;/span&gt; &lt;br&gt;\n  amentaron en las ediciones&lt;br&gt;\n  2023 y 2024 de &lt;span style='font-family:jet; color:{c1}'&gt;posit::conf&lt;/span&gt;\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(año, n, label = n)) +\n  geom_col(fill = c1) +\n  geom_text(vjust = -.2, family = \"jet\", size = 9, color = c2) +\n  annotate(\n    geom = \"richtext\", x = 2.12, y = 25, label = logo_img, fill = NA,\n    vjust = -1.2, label.color = NA\n  ) +\n  scale_y_continuous(limits = c(0, 25)) +\n  coord_cartesian(expand = FALSE, xlim = c(.5, 2.5), clip = \"off\") +\n  labs(caption = mi_caption, subtitle = mi_subitulo) +\n  theme_void(base_size = 22, base_family = \"ubuntu\") +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(25, 5, 5, 5),\n    plot.background = element_rect(fill = c3, color = NA),\n    plot.subtitle = element_markdown(\n      color = c4, size = 30, lineheight = 1.3, margin = margin(b = 30, l = 20)\n    ),\n    plot.caption = element_markdown(\n      color = c2, lineheight = 1.2, margin = margin(b = 5, t = 20)\n    ),\n    axis.text.x = element_text(margin = margin(t = 5), family = \"jet\"),\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2025/s02/viz.png\",\n  width = 30,\n  height = 40,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(paste0(getwd(), \"/2025/s02/viz.png\"))\n\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Mapas",
      "mapa 1"
    ]
  },
  {
    "objectID": "tidytuesday/2025/s02.html",
    "href": "tidytuesday/2025/s02.html",
    "title": "s02",
    "section": "",
    "text": "Contenido S02\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2025",
      "s02"
    ]
  },
  {
    "objectID": "tidytuesday/2025/s01.html",
    "href": "tidytuesday/2025/s01.html",
    "title": "s01",
    "section": "",
    "text": "Contenido S01\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\n# {glue}, {ggtext}, {showtext}, {tidyverse}\n# se cargan automáticamente\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#447099\"\nc2 &lt;- \"#75AADB\"\nc3 &lt;- \"#F0F5F9\"\nc4 &lt;- \"black\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & íconos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nmi_caption &lt;- caption(\n  fuente1 = \"&lt;span style='font-family:jet'&gt;posit::conf&lt;/jet&gt;\",\n  col = c1,\n  week = 2\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 2)\nconf2023 &lt;- tuesdata$conf2023\nconf2024 &lt;- tuesdata$conf2024\n\n# me interesa la cantidad de conferencias que hablan de QUARTO entre 2023 y 2024\n\n# cantidad de conferencias que mencionan QUARTO, 2023/2024\nn2023 &lt;- conf2023 |&gt; \n  mutate(quarto = str_detect(session_abstract, \"quarto|Quarto\")) |&gt; \n  dplyr::filter(quarto) |&gt; \n  nrow()\n\nn2024 &lt;- conf2024 |&gt; \n  mutate(quarto = str_detect(description, \"quarto|Quarto\")) |&gt; \n  dplyr::filter(quarto) |&gt; \n  nrow()\n\nd &lt;- tibble(\n  año = c(2023, 2024),\n  n = c(n2023, n2024)\n) |&gt; \n  mutate(\n    año = paste0(\"posit::conf\\n\", año)\n  )\n\n# figura ------------------------------------------------------------------\n\n# logo y subtítulo\nlogo &lt;- \"https://quarto.org/quarto.png\"\nlogo_img &lt;- glue(\n  \"&lt;img src='{logo}' width=250 /&gt;\"\n)\n\nmi_subitulo &lt;- glue(\n  \"La cantidad de conferencias&lt;br&gt;que incluyen\n  &lt;span style='font-family:jet; color:{c1}'&gt;quarto&lt;/span&gt; &lt;br&gt;\n  amentaron en las ediciones&lt;br&gt;\n  2023 y 2024 de &lt;span style='font-family:jet; color:{c1}'&gt;posit::conf&lt;/span&gt;\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(año, n, label = n)) +\n  geom_col(fill = c1) +\n  geom_text(vjust = -.2, family = \"jet\", size = 9, color = c2) +\n  annotate(\n    geom = \"richtext\", x = 2.12, y = 25, label = logo_img, fill = NA,\n    vjust = -1.2, label.color = NA\n  ) +\n  scale_y_continuous(limits = c(0, 25)) +\n  coord_cartesian(expand = FALSE, xlim = c(.5, 2.5), clip = \"off\") +\n  labs(caption = mi_caption, subtitle = mi_subitulo) +\n  theme_void(base_size = 22, base_family = \"ubuntu\") +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(25, 5, 5, 5),\n    plot.background = element_rect(fill = c3, color = NA),\n    plot.subtitle = element_markdown(\n      color = c4, size = 30, lineheight = 1.3, margin = margin(b = 30, l = 20)\n    ),\n    plot.caption = element_markdown(\n      color = c2, lineheight = 1.2, margin = margin(b = 5, t = 20)\n    ),\n    axis.text.x = element_text(margin = margin(t = 5), family = \"jet\"),\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2025/s02/viz.png\",\n  width = 30,\n  height = 40,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(paste0(getwd(), \"/2025/s02/viz.png\"))\n\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2025",
      "s01"
    ]
  },
  {
    "objectID": "tidytuesday/2024/intro.html",
    "href": "tidytuesday/2024/intro.html",
    "title": "Introducción",
    "section": "",
    "text": "2024\n\n\n   \n     \n     \n       Ordenar por\n       Por defecto\n         \n          Título\n        \n         \n          Fecha - Menos reciente\n        \n         \n          Fecha - Más reciente\n        \n         \n          Autor/a\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\ns02\n\n\nFigura semana 02\n\n\n\na\n\n\nc\n\n\n\ngeom_point()\n\n\n\n\n\n2025-01-10\n\n\nVHG\n\n\n\n\n\n\n\n\n\n\n\n\ns01\n\n\nFigura semana 01\n\n\n\na\n\n\nb\n\n\n\ngeom_col()\n\n\n\n\n\n2025-01-01\n\n\nVHG\n\n\n\n\n\n\nNo hay resultados\n\n\nAdiós.\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2024",
      "Introducción"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_45.html",
    "href": "tidytuesday/2023/semana_45.html",
    "title": "Semana 45",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(fontawesome)\nlibrary(gender)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#88C0D0\"\nc2 &lt;- \"#81A1C1\"\nc3 &lt;- \"#5E81AC\"\nc4 &lt;- \"grey90\"\nc5 &lt;- \"#306489\"\nc6 &lt;- \"#222B4C\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# algoritmos, eje vertical\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# eje horizontal, años\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = FALSE)\n# título\nfont_add_google(name = \"Vast Shadow\", family = \"vast\")\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\nfont_add(\"fa-regular\", \"icon/Font Awesome 6 Free-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 45. \",\n  \"MIT Election Data and Science Lab, \",\n  \"**Harvard Dataverse**&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-11-07/readme.md\")\n\nhouse &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-11-07/house.csv')\n\n# me interesa el género de los candidatos y la proporción en el tiempo\n\n# función para obtener el 1er nombre, y si es una sola letra, el segundo\nget_first_name &lt;- function(name) {\n  name_parts &lt;- str_split(name, \" \")[[1]]\n  if (nchar(name_parts[1]) == 1) {\n    return(name_parts[2])\n  } else {\n    return(name_parts[1])\n  }\n}\n\n# primer nombre de cada candidato, agrupado por año\n# se agrupan, por año, los mismos nombres\nd &lt;- house |&gt; \n  filter(!writein) |&gt; \n  select(year, candidate) |&gt; \n  mutate(primer = map(.x = candidate, ~ get_first_name(name = .x))) |&gt; \n  unnest(primer) |&gt; \n  count(primer, .by = year) |&gt; \n  arrange(.by) |&gt; \n  rename(year = .by)\n\n# por cada algoritmo, obtengo el género del candidato\nd_ipums &lt;- d |&gt; \n  mutate(genero = map(\n    .x = primer,\n    (x) gender(x, countries = \"United States\", method = \"ipums\")$gender))\n\nd_ssa &lt;- d |&gt; \n  mutate(genero = map(\n    .x = primer,\n    (x) gender(x, countries = \"United States\", method = \"ssa\")$gender))\n\nd_napp &lt;- d |&gt; \n  mutate(genero = map(\n    .x = primer,\n    (x) gender(x, method = \"napp\")$gender))\n\n# unifico los resultados de todos los algoritmos\ne &lt;- bind_rows(\n  d_ipums |&gt; mutate(tipo = \"ipums\"), \n  d_napp |&gt; mutate(tipo = \"napp\"), \n  d_ssa |&gt; mutate(tipo = \"ssa\")) |&gt; \n  mutate(genero = as.character(genero)) |&gt;\n  filter(genero != \"logical(0)\") |&gt;\n  mutate(g = genero == \"male\") |&gt;\n  reframe(p = sum(g*n)/sum(n), .by = c(year, tipo)) |&gt; \n  mutate(p = 1 - p)\n\n# la asignación del género a partir del nombre, por cada algoritmo, lleva mucho\n# tiempo. Entonces, guardo los resultados y leo desde el archivo .tsv\ne |&gt; \n  write_tsv(\"2023/semana_45/datos.tsv\")\n\ne &lt;- read_tsv(\"2023/semana_45/datos.tsv\")\n\n# figura ------------------------------------------------------------------\n\n# etiquetas de los algoritmos, para agregar en el borde derecho\nalgoritmo_label &lt;- e |&gt; \n  filter(year == max(e$year))\n\n# función para aplicar fuente mono (victor) a los nombres de los algortimos\nf_mono_it &lt;- (x) glue(\"&lt;span style='font-family:victor'&gt;{x}&lt;/span&gt;\")\n\n# puntos de la grilla, de fondo de la figura\np &lt;- expand.grid(\n  x = seq(1980, 2020, 10),\n  y = seq(.1, .3, .05)) |&gt; \n  as_tibble()\n\n# título, subtítulo y aclaración del la asignación del género a partir de\n# los algoritmos\nmi_tit &lt;- glue(\n  \"Año a año, hay másnmujeres candidatasnal Congreso de EE.UU.\") |&gt;\n  str_to_upper()\n\nmi_sub &lt;- glue(\n  \"Hace 40 años, hubo **10%** de candidatas mujeres a la Cámara&lt;br&gt;\",\n  \"de Representantes de **EE.UU.** Actualmente ronda el **30%**,&lt;br&gt;\",\n  \"todavía lejos de una total paridad.&lt;br&gt;\")\n\nmi_texto &lt;- glue(\n  \"El porcentaje se calculó a partir del nombre del candidato&lt;br&gt;\",\n  \"utilizando tres algoritmos diferentes ({f_mono_it('IPUMS')},\",\n  \"{f_mono_it('NAPP')} y {f_mono_it('SSA')}).\")\n\n# figura\ng &lt;- ggplot(e, aes(year, p, color = tipo)) +\n  # puntos de la grilla\n  annotate(geom = \"point\", x = p$x, y = p$y, color = c5, shape = 18) +\n  # líneas de los algoritmos de género\n  geom_line(alpha = .4, linewidth = 1.5, show.legend = FALSE) +\n  # puntos\n  geom_point(shape = 15, size = 4)  +\n  geom_point(shape = 18, size = 6)  +\n  geom_point(size = 1, color = \"white\", shape = 20) +\n  # etiquetas de los algoritmos\n  geom_text(\n    data = algoritmo_label, aes(year, p, label = str_to_upper(tipo)), size = 6,\n    hjust = 0, vjust = 1, nudge_x = .3, nudge_y = -.005, family = \"victor\")+\n  # título\n  annotate(\n    geom = \"text\", x = 1976, y = .3, hjust = 0, vjust = 0, label = mi_tit, \n    family = \"vast\", size = 12, color = c4) +\n  # subtítulo\n  annotate(\n    geom = \"richtext\", x = 1976, y = .295, hjust = 0, vjust = 1, label = mi_sub, \n    family = \"ubuntu\", size = 7, color = c1, fill = NA, label.color = NA) +\n  # aclaración algoritmos\n  annotate(\n    geom = \"richtext\", x = 2022, y = .05, hjust = 1, vjust = 0, \n    label = mi_texto, family = \"ubuntu\", size = 5, color = c1, fill = NA, \n    label.color = NA) +\n  scale_y_continuous(\n    breaks = seq(.05, .35, .05), limits = c(.05, .35), expand = c(0, .01),\n    labels = scales::label_percent(decimal.mark = \",\", big.mark = \".\")) +\n  scale_color_manual(values = c(c1, c2, c3)) +\n  coord_cartesian(clip = \"off\") +\n  labs(caption = mi_caption) +\n  theme_void() +\n  theme(\n    plot.margin = margin(10, 20, 10, 10),\n    plot.background = element_rect(fill = c6, color = c5,linewidth = 3),\n    plot.caption = element_markdown(\n      color = c4, size = 12, family = \"ubuntu\", margin = margin(15, 0, 10, 0)),\n    plot.caption.position = \"plot\",\n    panel.grid.major = element_line(\n      color = \"#306489\", linetype = \"8f\", linewidth = .2),\n    axis.text = element_text(color = c4),\n    axis.text.x = element_text(family = \"bebas\", size = 35),\n    axis.text.y = element_text(family = \"victor\", size = 15, vjust = 0),\n    legend.position = \"none\"\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_45/viz.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_45/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 45"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_13.html",
    "href": "tidytuesday/2023/semana_13.html",
    "title": "Semana 13",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(here)\nlibrary(ggtext)\nlibrary(glue)\nlibrary(fontawesome)\nlibrary(sf)\nlibrary(patchwork)\nlibrary(ggrepel)\nlibrary(ggtext)\n\n# fuentes -----------------------------------------------------------------\n\nfont_add_google(name = \"Share Tech Mono\", family = \"share\") # números\nfont_add_google(name = \"Heebo\", family = \"heebo\") # resto del texto\nfont_add_google(name = \"Domine\", family = \"domine\") # título\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# íconos\nfont_add(\"fa-reg\", here(\"icon/Font Awesome 5 Free-Regular-400.otf\"))\nfont_add(\"fa-brands\", here(\"icon/Font Awesome 5 Brands-Regular-400.otf\"))\nfont_add(\"fa-solid\", here(\"icon/Font Awesome 5 Free-Solid-900.otf\"))\n\n# caption\nicon_twitter &lt;- \"&lt;span style='font-family:fa-brands; color:white;'&gt;&#xf099;&lt;/span&gt;\"\nicon_github &lt;- \"&lt;span style='font-family:fa-brands; color:white;'&gt;&#xf09b;&lt;/span&gt;\"\nfuente &lt;- \"&lt;span style='color:white;'&gt;Datos:&lt;/span&gt; &lt;span style='color:#16317d;'&gt;&lt;span style='font-family:mono;'&gt;{**tidytuesdayR**}&lt;/span&gt; semana 13&lt;/span&gt;\"\nautor &lt;- \"&lt;span style='color:white;'&gt;Autor:&lt;/span&gt; &lt;span style='color:#16317d;'&gt;**Víctor Gauto**&lt;/span&gt;\"\nsep &lt;- glue(\"&lt;span style = 'color:#a4cac8;'&gt;**|**&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style = 'color:#16317d;'&gt;**vhgauto**&lt;/span&gt;\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\n# browseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-03-28/readme.md\")\n\n# husos horarios\ntransitions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-03-28/transitions.csv')\ntimezones &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-03-28/timezones.csv')\n\n# mapa del mundo, p/obtener el CRS únicamente\n# si uso 'crs = 4326' no queda igual, así que lo extraigo de 'world'\n# world &lt;- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n# husos horarios Argentina\ntz_arg_tbl &lt;- timezones |&gt; \n  filter(str_detect(zone, \"Argentina\")) |&gt; \n  mutate(zone = str_remove(zone, \"America/Argentina/\"))\n\n# convierto a 'sf', 4326\ntz_arg &lt;- st_as_sf(tz_arg_tbl, coords = c(\"longitude\", \"latitude\"), crs = 4326)\n\n# provincias argentinas\n# descargado del Instituto Geográfico Nacional y convertido a .gpkg\n# https://www.ign.gob.ar/NuestrasActividades/InformacionGeoespacial/CapasSIG\n# 4326\npcias &lt;- st_read(here(\"2023/semana_13/pcias.gpkg\"))\n\n# corrijo los nombres de las zonas\ntz_arg &lt;- tz_arg |&gt; \n  mutate(zone = str_replace(zone, \"_\", \" \"))\n\n# fechas de inicio/fin de horarios de verano\nverano &lt;- transitions |&gt; \n  filter(str_detect(zone, \"Argentina/Buenos_Aires\")) |&gt; \n  mutate(begin = as_datetime(begin),\n         end = as_datetime(end)) |&gt; \n  select(-zone, -offset, -abbreviation) |&gt; \n  mutate(inicio = as_date(begin),\n         fin = as_date(end)) |&gt; \n  drop_na() \n\neje_y_lbl &lt;- tibble(y = seq.Date(min(verano$inicio), ymd(20100101), \"1 year\")) |&gt; \n  mutate(fecha = ymd(glue(\"{year(y)}0101\"))) |&gt; \n  mutate(año = year(fecha)) |&gt; \n  mutate(decena = año %% 10 == 0) |&gt; \n  mutate(label = if_else(decena == TRUE, glue(\"·{as.character(año)}\"), \"\")) |&gt; \n  mutate(largo = if_else(decena == TRUE, 3, 1))\n\n# indicación 1er uso de horario de verano\nverano_1 &lt;- verano |&gt; \n  filter(dst == TRUE) |&gt; \n  slice(1) |&gt; \n  mutate(label = glue(\"En {format(inicio, '%B')} de {year(inicio)}&lt;br&gt;fue la primera vez en&lt;br&gt;aplicarse horario de verano\"))\n\n# figuras -----------------------------------------------------------------\n\n# mapa\ng1 &lt;- ggplot() +\n  # límites provinciales, borde grueso azul\n  geom_sf(data = pcias, color = \"#16317d\", fill = NA, linewidth = 1) +\n  # límites provinciales, borde fino amarillo\n  geom_sf(data = pcias, color = \"#f6b40e\", fill = NA, linewidth = .5) +\n  \n  # ciudades\n  geom_sf(data = tz_arg, shape = 23, color = \"white\", fill = \"#16317d\",\n          size = 2) +\n  # etiquetas de las ciudades\n  geom_label_repel(data = tz_arg, aes(label = zone, geometry = geometry),\n                  stat = \"sf_coordinates\", min.segment.length = Inf,\n                  fill = alpha(\"#74acdf\", .7), label.size = 0,\n                  family = \"heebo\",\n                  size = 5, color = \"#16317d\", force = 10, seed = 2023) +\n  # manual\n  coord_sf(clip = \"on\", ylim = c(-56, -21), xlim = c(-75, -50), expand = FALSE) +\n  # tema\n  theme_void() +\n  theme(plot.background = element_rect(fill = \"#74acdf\", color = NA),\n        panel.background = element_rect(fill = \"#74acdf\", color = NA))\n\n\n# horarios de verano\ng2 &lt;- ggplot(data = verano,\n             aes(ymin = inicio, ymax = fin, xmin = 0, xmax = 1, fill = dst)) +\n  geom_rect() +\n  # borde\n  geom_rect(ymin = min(verano$inicio), ymax = max(verano$fin), \n            xmin = 0, xmax = 1, color = \"#16317d\", fill = NA) +\n  # 1er año\n  geom_richtext(data = verano_1, aes(x = -.1, y = inicio+months(12), label = label),\n                color = \"#16317d\", fill = NA, label.color = NA, size = 4,\n                hjust = 1, vjust = 1, family = \"heebo\") +\n  geom_text(data = verano_1, aes(x = -.1, y = inicio, label = \"u25B6\"),\n            color = \"#16317d\", size = 6) +\n  # manual\n  scale_y_date(sec.axis = sec_axis(trans =  ~ .x,\n                                   breaks = eje_y_lbl$fecha,\n                                   labels = eje_y_lbl$label)) +\n  scale_fill_manual(values = c(\"#74acdf\", \"#f6b40e\"),\n                    breaks = c(TRUE, FALSE),\n                    labels = c(\"Sí     \", \"No\")) +\n  coord_cartesian(clip = \"off\", xlim = c(-1, 1), \n                  ylim = c(ymd(18900101), ymd(20100101))) +\n  # ejes\n  labs(fill = \"¿Fue año con horarionde verano?\") +\n  # guía\n  guides(fill = guide_legend(override.aes = list(shape = 22,\n                                                 color = \"#16317d\"))) +\n  theme(aspect.ratio = 7,\n        legend.position = c(.35, 0.03),\n        legend.spacing.x = unit(1, \"line\"),\n        legend.direction = \"horizontal\",\n        legend.title = element_text(family = \"heebo\", color = \"#16317d\", size = 12,\n                                    hjust = 1),\n        legend.text = element_text(color = \"#16317d\", family = \"heebo\", size = 12),\n        legend.key.width = unit(1.5, \"line\"),\n        legend.key.height = unit(1.5, \"line\"),\n        legend.background = element_rect(fill = \"#74acdf\", color = NA),\n        plot.margin = margin(0, 40, 0, 0),\n        plot.background = element_rect(fill = \"#74acdf\", color = NA),\n        panel.background = element_rect(fill = \"#74acdf\", color = NA),\n        panel.grid = element_blank(),\n        axis.title = element_blank(),\n        axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        axis.ticks.length = unit(.3, \"line\"),\n        axis.ticks.y.right = element_line(color = \"#16317d\"),\n        axis.text.y.right = element_text(color = \"white\", size = 15,\n                                         family = \"share\", vjust = .45,\n                                         margin = margin(0, 0, 0, 3)))\n\n# figura compuesta\ng3 &lt;- g1 + g2 &\n  plot_layout(widths = c(1, .25)) &\n  plot_annotation(\n    title = glue(\"Husos horarios en &lt;span style='color:#f6b40e'&gt;**Argentina**&lt;/span&gt;\"),\n    subtitle = glue(\"&lt;span style='color:white'&gt;**Argentina**&lt;/span&gt; tiene \n                    &lt;span style='color:white'&gt;**12**&lt;/span&gt; zonas horarias, \n                    cuyas ciudades principales se muestran en&lt;br&gt;el mapa. El \n                    primer registro data del &lt;span style='color:white'&gt;**{year(min(verano$inicio))}**&lt;/span&gt;. \n                    Los ciclos de años con &lt;span style='color:white'&gt;**horarios de&lt;br&gt;verano**&lt;/span&gt; \n                    son dispares. A la derecha se muestran los períodos en los \n                    que tuvimos&lt;br&gt;que cambiar los relojes.\"),\n    caption = mi_caption,\n    theme = theme(plot.background = element_rect(color = NA, fill = \"#74acdf\"),\n                  plot.title.position = \"plot\",\n                  plot.title = element_markdown(size = 38,\n                                                family = \"domine\",\n                                                color = \"#16317d\"),\n                  plot.subtitle = element_markdown(color = \"#16317d\",\n                                                   size = 15,\n                                                   family = \"heebo\",\n                                                   margin = margin(2, 0, 2, 5)),\n\n                  plot.caption = element_markdown(hjust = .5,\n                                                  family = \"heebo\",\n                                                  margin = margin(10, 0, 0, 0),\n                                                  size = 12),\n                  plot.caption.position = \"plot\"))\n\n# guardo\nggsave(plot = g3,\n       filename = here(\"2023/semana_13/viz.png\"),\n       width = 2300,\n       height = 3300,\n       units = \"px\",\n       dpi = 300)\n\n# abro\nbrowseURL(here(\"2023/semana_13/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 13"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_18.html",
    "href": "tidytuesday/2023/semana_18.html",
    "title": "Semana 18",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(ggh4x)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggpath)\n\n# fuente ------------------------------------------------------------------\n\n# colores\n# paleta 'Bwenedictus' de MetBrewer\nc1 &lt;- \"#fcebf0\"\nc2 &lt;- \"#f9b4c9\"\nc3 &lt;- \"#b93961\"\nc4 &lt;- \"#9a153d\"\nc5 &lt;- \"#1a318b\"\nc6 &lt;- \"#6996e3\"\n\nfont_add_google(name = \"Share Tech Mono\", family = \"share\") # números\nfont_add_google(name = \"Anek Tamil\", family = \"anek\", db_cache = FALSE) # texto gral\nfont_add_google(name = \"Almendra\", family = \"almendra\", db_cache = FALSE) # título\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# íconos\nfont_add(\"fa-reg\", \"icon/Font Awesome 6 Free-Regular-400.otf\")\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solid\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 18&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-05-02/readme.md\")\n\nspecies &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-02/species.csv')\n\n# arreglo datos\ndatos &lt;- species |&gt; \n  # selecciono variables de interés\n  select(nombre = commonname, ends_with(\"wgt\"), -juvwgt) |&gt; \n  # renombro removiendo 'wgt'\n  rename_with(~ str_remove(.x, \"wgt\")) |&gt; \n  # divido en RATAS y RATONES\n  mutate(animal = case_when(\n    str_detect(nombre, \"rat\") ~ \"Rata\",\n    str_detect(nombre, \"ouse\") ~ \"Ratón\")) |&gt; \n  # de los nombres de los animales, remuevo 'mouse' y 'rat'\n  mutate(nombre = str_remove(nombre, \"mouse|Mouse|rat\")) |&gt;\n  mutate(nombre = str_trim(nombre)) |&gt; \n  # acomodo el texto\n  mutate(nombre = if_else(animal == \"Rata\", str_wrap(nombre, width = 12), nombre)) |&gt; \n  # ordeno los nombres de acuerdo al peso promedio\n  mutate(nombre = fct_reorder(nombre, mean))\n\n# imágenes .png de rata y ratón\nbrowseURL(\"https://emojipedia.org/openmoji/\")\n\nlista_i &lt;- list.files(\"2023/semana_18/\",\n                      pattern = \"^i_\",\n                      full.names = TRUE)\n\nroedor &lt;- tibble(min = c(Inf, Inf),\n                 nombre = c(-Inf, -Inf),\n                 animal = c(\"Rata\", \"Ratón\"),\n                 path = lista_i)\n\n# figura ------------------------------------------------------------------\n\n# escalas individuales del eje horizontal\nescalas &lt;- list(\n  # rata\n  scale_x_continuous(breaks = seq(0, 300, 50), limits = c(0, 300)),\n  # ratón\n  scale_x_continuous(breaks = seq(0, 100, 25), limits = c(0, 100)))\n\n# separador de las palabras del título\n# sin este separador queda todo muy pegado, con poco espacio\ns &lt;- glue(\"&lt;span style='color:{c1}'&gt;..&lt;/span&gt;\")\n\n# figura\nggplot(data = datos, aes(x = min, xend = max, y = nombre, yend = nombre)) +\n  # segmento que une max y min\n  geom_segment(color = c2, linewidth = 2, lineend = \"round\") +\n  # min\n  geom_point(aes(x = min), color = c6, size = 4) +\n  # max\n  geom_point(aes(x = max), color = c5, size = 4) +\n  # promedio\n  geom_point(\n    aes(x = mean), shape = \"|\", size = 4, color = c3) +\n  # emoji de rata y ratón\n  geom_from_path(data = roedor, aes(x = min, y = nombre, path = path),\n                 inherit.aes = FALSE, width = 0.3, hjust = 1.25, vjust = .4) +\n  # facetas\n  facet_wrap(~ animal, scales = \"free\") +\n  facetted_pos_scales(x = escalas) +\n  # títulos\n  labs(x = \"Peso (g)\", y = NULL,\n       title = glue(\"DE{s}RATAS{s}Y{s}RATONES\"),\n       subtitle = glue(\n         \"Tomando datos de **roedores** que habitan el desierto de \n         Arizona (EEUU), se muestran los valores de &lt;span style='color:{c6};'&gt;**peso mínimo**&lt;/span&gt; y\n         &lt;span style='color:{c5};'&gt;**peso máximo**&lt;/span&gt;, para cada especie. Las líneas verticales indican\n         pesos promedio. Se clasificaron los datos entre **ratas** y\n         **ratones**.\"),\n       caption = mi_caption) +\n  # tema\n  theme_minimal() +\n  theme(\n    aspect.ratio = 2,\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 2),\n    plot.title = element_markdown(\n      family = \"almendra\", size = 60, color = c4, hjust = .5),\n    plot.title.position = \"plot\",\n    plot.caption = element_markdown(\n      color = c4, hjust = .4, family = \"anek\", size = 11, \n      margin = margin(20, 0, 0, 0)),\n    plot.subtitle = element_textbox_simple(\n      family = \"anek\", size = 15, color = c3, margin = margin(0, 0, 10, 0)), \n    plot.margin = margin(12, 10, 12, 10),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_blank(),\n    panel.grid.major.x = element_line(color = c2, linewidth = .2),\n    panel.spacing.x = unit(2, \"line\"),\n    axis.text.x = element_text(family = \"share\", size = 17, color = c3),\n    axis.text.y = element_text(family = \"anek\", color = c4, size = 13),\n    axis.title.x = element_markdown(family = \"anek\", size = 23, color = c4),\n    strip.text = element_markdown(color = c4, family = \"anek\", size = 25)\n  )\n\n# guardo\nggsave(\n    filename = \"2023/semana_18/viz.png\",\n    width = 30,\n    height = 28.5,\n    units = \"cm\",\n    dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_18/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 18"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_40.html",
    "href": "tidytuesday/2023/semana_40.html",
    "title": "Semana 40",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggrepel)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores, Isfahan\nc1 &lt;- \"#E3C28B\"\nc2 &lt;- \"#AE8448\"\nc3 &lt;- \"#175F5D\"\nc4 &lt;- \"#4E3810\"\nc5 &lt;- \"#054544\"\n\n# agencias, texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# ejes vertical  horizontal\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# título\nfont_add_google(name = \"Lora\", family = \"lora\")\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:victor;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 40. US Government Grant Opportunities, *grants.gov*&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-10-03/readme.md\")\n\ngrants &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-10-03/grants.csv')\n\n# me interesa la relación entre cantidad de oportunidades de las agencias, y \n# la cantidad de dinero estimada, por oprtunidad\n\n# selecciono las 100 agencias con mayor presencia\nagencia &lt;- grants |&gt; \n  drop_na(estimated_funding) |&gt; \n  count(agency_name, sort = TRUE) |&gt; \n  slice(1:100) |&gt; \n  pull(agency_name)\n\n# calculo el cociente entre dinero estimado y número de presentaciones\n# obtengo la distancia de cada punto respecto del origen\nd &lt;- grants |&gt; \n  filter(agency_name %in% agencia) |&gt; \n  drop_na(estimated_funding) |&gt; \n  summarise(\n    cantidad = n(),\n    tot = sum(estimated_funding),\n    .by = agency_name) |&gt; \n  mutate(ratio = tot/cantidad) |&gt; \n  mutate(distancia = sqrt(tot^2 + ratio^2))\n\n# puntos extremos\ne &lt;- d |&gt; \n  filter(\n    cantidad == max(d$cantidad) | \n      cantidad == min(d$cantidad) |\n      ratio == max(d$ratio) | ratio == min(d$ratio) |\n      distancia == max(d$distancia) | distancia == min(d$distancia)) |&gt; \n  mutate(label = str_wrap(agency_name, width = 20)) |&gt; \n  mutate(hjust = c())\n\n# selecciono dos casos extremos, de muchas presentaciones con poca plata,\n# y pocas presentaciones con mucha plata\nnps &lt;- e |&gt; \n  filter(agency_name == \"National Park Service\")\n\nnps_cantidad &lt;- nps$cantidad |&gt; \n  gt::vec_fmt_number(sep_mark = \".\", decimals = 0, dec_mark = \",\")\n\nnps_ratio &lt;- nps$ratio |&gt; \n  gt::vec_fmt_number(sep_mark = \".\", decimals = 0, dec_mark = \",\")\n\nafo &lt;- e |&gt; \n  filter(agency_name == \"Air Force Office of Scientific Research\")\n\nafo_cantidad &lt;- afo$cantidad |&gt; \n  gt::vec_fmt_number(sep_mark = \".\", decimals = 0, dec_mark = \",\")\n\nafo_ratio &lt;- afo$ratio |&gt; \n  gt::vec_fmt_number(sep_mark = \".\", decimals = 0, dec_mark = \",\")\n\n# figura ------------------------------------------------------------------\n\n# tpitulo & subtítulo\nmi_title &lt;- \"Subvenciones by *grants.gov*\"\nmi_sub &lt;- glue(\n  \"Cuantas más oportunidades de subvención ofrece un organismo del \n  Gobierno de&lt;br&gt;**EEUU**, menor es el monto disponible. *{nps$agency_name}* \n  presentó {nps_cantidad}&lt;br&gt;oportunidades de financiamiento,\n  con un valor medio de USD $*{nps_ratio}*. En cambio,&lt;br&gt;en solo {afo_cantidad}\n  veces, *{afo$agency_name}* ofreció USD $*{afo_ratio}*.\")\n\n# figura\ng &lt;- d |&gt; \n  mutate(tipo = agency_name %in% e$agency_name) |&gt; \n  ggplot(aes(cantidad, ratio, color = tipo, alpha = tipo)) +\n  geom_point(size = 8, show.legend = FALSE) +\n  geom_text_repel(\n    data = e, aes(cantidad, ratio, label = label), inherit.aes = FALSE,\n    hjust = 0, color = c5, seed = 2024, nudge_y = .175, family = \"ubuntu\",\n    size = 5) +\n  scale_x_log10(\n    labels = scales::label_number(decimal.mark = \",\", big.mark = \".\")) +\n  scale_y_log10(\n    breaks = c(1e5, 1e6, 10e6, 100e6),\n    labels = glue(\"USD {c('0,1', '1', '10', '100')}M\")) +\n  scale_color_manual(values = c(c2, c3)) +\n  scale_alpha_manual(values = c(.7, 1)) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = mi_title,\n    subtitle = mi_sub,\n    x = \"# de oportunidades\",\n    y = \"$ estimado, por oportunidad\",\n    caption = mi_caption) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(15, 32, 15, 12),\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    plot.title = element_markdown(\n      size = 62, color = c5, family = \"lora\", hjust = .5),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 21, color = c3, margin = margin(5, 0, 25, 0),\n      lineheight = unit(1.1, \"line\"), hjust = .5),\n    plot.caption = element_markdown(color = c2, family = \"ubuntu\", size = 12),\n    axis.text = element_text(family = \"victor\", color = c4, size = 15),\n    axis.text.x = element_text(hjust = 1),\n    axis.text.y = element_text(vjust = 0),\n    axis.title.x = element_text(\n      family = \"ubuntu\", size = 22, hjust = 1, color = c5, \n      margin = margin(20, 0, 20, 0)),\n    axis.title.y = element_text(\n      family = \"ubuntu\", size = 22, hjust = 1, color = c5, \n      margin = margin(0, 20, 0, 20)),\n    panel.grid.minor = element_blank(),\n    panel.grid.major = element_line(\n      color = c2, linewidth = .3, linetype = \"8f\")\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_40/viz.png\",\n  width = 30,\n  height = 35,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_40/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 40"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_35.html",
    "href": "tidytuesday/2023/semana_35.html",
    "title": "Semana 35",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores, Nord, afternoon praire\nc1 &lt;- \"#009B9F\"\nc2 &lt;- \"#C75DAA\"\nc3 &lt;- \"#7DC5C7\"\nc4 &lt;- \"#DEA9CC\"\nc5 &lt;- \"grey90\"\nc6 &lt;- \"grey30\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# cantidad, eje vertical\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# título\nfont_add_google(name = \"Playfair Display SC\", family = \"playfair\")\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 35.  U.S. Copyright Office Fair Use Index&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-08-29/readme.md\")\n\nfair_use_cases &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-29/fair_use_cases.csv')\n\n# máxima cantidad de categorías por observación\n# sirve p/definir la cantidad de columnas en las que voy a separar 'categories'\nfair_use_cases |&gt; \n  select(categories, fair_use_found) |&gt; \n  mutate(cantidad = str_count(categories, \";\")) |&gt; \n  slice_max(cantidad, n = 1, with_ties = FALSE) |&gt; \n  pull(cantidad)\n# son 4, así que son 4+1 = 5 categorías\n\n# 10 categorías más frecuentes\ntop_cat &lt;- fair_use_cases |&gt; \n  select(categories, fair_use_found) |&gt; \n  separate_wider_delim(\n    cols = categories,\n    delim = \"; \", \n    names = glue(\"a{1:5}\"), \n    too_few = \"align_start\") |&gt; \n  pivot_longer(\n    cols = starts_with(\"a\"),\n    names_to = \"n\",\n    values_to = \"cat\"\n  ) |&gt; \n  select(-n) |&gt; \n  drop_na(cat) |&gt; \n  mutate(cat = str_to_lower(cat)) |&gt; \n  count(cat, sort = TRUE) |&gt; \n  slice_max(order_by = n, n = 10) |&gt; \n  pull(cat)\n\n# traducción\ntop_cat_trad &lt;- c(\n  \"texto\", \"film/audiovisual\", \"educación/becas/investigación\", \"fotografía\",\n  \"internet/digitalización\", \"revisión/comentario\", \"reporte de noticias\",\n  \"parodia/sátira\", \"pintura/dibujo/gráfico\", \"música\"\n)\n\nnames(top_cat_trad) &lt;- top_cat\n\n# resolución VERDADERO/FALSO por las 10 categorías más frecuentes\nd &lt;- fair_use_cases |&gt; \n  select(categories, fair_use_found) |&gt; \n  separate_wider_delim(\n    cols = categories,\n    delim = \"; \", \n    names = glue(\"a{1:5}\"), \n    too_few = \"align_start\") |&gt; \n  pivot_longer(\n    cols = starts_with(\"a\"),\n    names_to = \"n\",\n    values_to = \"cat\"\n  ) |&gt; \n  select(-n) |&gt; \n  drop_na(cat) |&gt; \n  mutate(cat = str_to_lower(cat)) |&gt; \n  filter(cat %in% top_cat) |&gt; \n  count(cat, fair_use_found) |&gt; \n  mutate(n = if_else(fair_use_found == FALSE, -n, n)) |&gt; \n  pivot_wider(names_from = fair_use_found, values_from = n) |&gt; \n  rename(falso = `FALSE`, verdadero = `TRUE`) |&gt; \n  mutate(cat = top_cat_trad[cat]) |&gt; \n  mutate(cat = str_to_sentence(cat)) |&gt; \n  mutate(cat = fct_reorder(cat, verdadero))\n\n# totales\nd_tot_v &lt;- sum(d$verdadero)\nd_tot_f &lt;- abs(sum(d$falso))\nd_tot &lt;- d_tot_v + d_tot_f\n\n# figura ------------------------------------------------------------------\n\n# título y subtítulo\ng_tit &lt;- \"legítimo &lt;span style='font-size:40pt'&gt;v&lt;/span&gt; no legítimo\"\n\ng_sub &lt;- glue(\"El derecho de autor permite el uso de obras protegidas en caso de \n**uso legítimo**. Sin embargo,&lt;br&gt;muchas veces eso lleva a conflictos que se resuelven\nen la Justicia. Se muestran las 10 categorías&lt;br&gt;más frecuentes de {d_tot} casos en EEUU,\ny si el veredicto fue de uso &lt;span style='color:{c2};'&gt;**legítimo**&lt;/span&gt; ({d_tot_v}) o \n&lt;span style='color:{c1};'&gt;**no legítimo**&lt;/span&gt; ({d_tot_f}).\")\n\n# tamaño de los puntos\nt_grande &lt;- 7\nt_pequeño &lt;- 6\n\n# figura\ng &lt;- ggplot(d, aes(x = 0, y = cat, yend = cat)) +\n  geom_vline(xintercept = 0, color = \"grey90\", linewidth = .1, linetype = \"8f\") +\n  geom_segment(aes(xend = falso), color = c6) +\n  geom_segment(aes(xend = verdadero), color = c6) +\n  geom_point(aes(x = falso), size = t_grande, color = c5) +\n  geom_point(aes(x = verdadero), size = t_grande, color = c5) +\n  geom_point(aes(x = falso, color = \"f\"), size = t_pequeño) +\n  geom_point(aes(x = verdadero, color = \"v\"), size = t_pequeño) +\n  scale_x_continuous(\n    breaks = seq(-50, 50, 25),\n    limits = c(-55, 50),\n    labels = abs(seq(-50, 50, 25))) +\n  scale_y_discrete(expand = c(0, 0)) +\n  scale_color_manual(values = c(c1, c2)) +\n  coord_cartesian(ylim = c(.75, 10.25)) +\n  labs(\n    x = \"Cantidad de casos\",\n    y = NULL,\n    color = NULL,\n    title = g_tit,\n    subtitle = g_sub,\n    caption = mi_caption) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"grey20\", color = c5, linewidth = 3),\n    plot.margin = margin(19, 19, 10, 19),\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(\n      size = 55, family = \"playfair\", color = \"white\", hjust = .5),\n    plot.subtitle = element_markdown(\n      color = c5, family = \"ubuntu\", size = 15, margin = margin(5, 70, 25, 70),\n      hjust = .5, lineheight = 1.25),\n    plot.caption = element_markdown(\n      color = c4, family = \"ubuntu\", size = 12, margin = margin(10, 0, 5, 0)),\n    panel.grid.major.y = element_blank(),\n    panel.grid.major.x = element_line(linewidth = .05, color = \"grey40\"),\n    panel.grid.minor.x = element_line(linewidth = .05, color = \"grey30\"),\n    axis.text.y = element_text(color = c3, family = \"ubuntu\", size = 15),\n    axis.text.x = element_text(color = c4, family = \"victor\", size = 12),\n    axis.title.x = element_text(\n      family = \"ubuntu\", color = c4, size = 20, margin = margin(15, 0, 0, 0))\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_35/viz.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_35/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 35"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_47.html",
    "href": "tidytuesday/2023/semana_47.html",
    "title": "Semana 47",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(sf)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#E8631C\"\nc2 &lt;- \"#E3D885\"\nc3 &lt;- \"white\"\nc4 &lt;- \"#6874AD\"\nc5 &lt;- \"#0D2D4C\"\nc6 &lt;- \"#20222A\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# números, fechas, ranking\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# título\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\")\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 47. \",\n  \"R-Ladies Chapters: Making talks work for diverse audiences, \",\n  \"**Federica Gazzelloni**&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-11-21/readme.md\")\n\nrladies &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-11-21/rladies_chapters.csv')\n\n# me interesa hacer un mapa con los encuentros de Argentina, en qué ciudades, \n# la cantidad, fecha inicial y final\n\n# provincias de Argentina, POSGAR\npcias &lt;- st_read(\"2023/semana_47/pcias_continental.gpkg\")\n\n# ciudades de Argentina donde se realizaron eventos, obtenido de:\nbrowseURL(\"https://rladies.org/\")\n\nciudades &lt;- c(\n  \"bariloche\", \"buenos-aires\", \"cordoba\", \"general-pico\", \"jujuy\", \"mendoza\",\n  \"resistencia-corrientes\", \"santa-fe\", \"santa-rosa\", \"ushuaia\")\n\n# nombres de las ciudades\nciudades_nombres &lt;- c(\n  \"Bariloche\", \"Buenos Aires\", \"Santa Rosa\", \"Mendoza\", \"Santa Fe\", \n  \"Resistencia-Corrientes\", \"General Pico\", \"Ushuaia\", \"Córdoba\", \"Jujuy\")\n\n# coordenadas de las ciudades\nciudad_lon &lt;- c(\n  -71.300000, -58.381944, -64.290556, -68.833333, -60.700000, -58.861760,\n  -63.757766, -68.304444, -64.183333, -65.299444)\nciudad_lat &lt;- c(\n  -41.150000, -34.599722, -36.620278, -32.883333, -31.633333, -27.468502,\n  -35.658688, -54.807222, -31.416667, -24.185556)\n\n# creo un sf con las coordenadas de las ciudades, POSGAR\nciudades_pts &lt;- tibble(\n  ciudad = ciudades_nombres) |&gt; \n  mutate(x = ciudad_lon, y = ciudad_lat) |&gt; \n  st_as_sf(coords = c(\"x\", \"y\")) |&gt; \n  st_set_crs(value = 4326) |&gt; \n  st_transform(crs = st_crs(pcias))\n\n# coordenadas de las ciudades, tibble\nciudades_pts_tbl &lt;- ciudades_pts |&gt; \n  st_coordinates() |&gt; \n  as_tibble()\n  \n# cantidad de eventos, fecha del primer/útlimo evento, nombre de la ciudad, \n# ranking\nciudades_tbl &lt;- rladies |&gt; \n  mutate(chapter = str_remove(chapter, \"rladies-\")) |&gt; \n  filter(chapter %in% ciudades) |&gt; \n  reframe(\n    n = n(),\n    fecha_i = min(date),\n    fecha_f = max(date),\n    .by = chapter) |&gt; \n  arrange(desc(n)) |&gt; \n  mutate(nombre = ciudades_nombres) |&gt; \n  mutate(puesto = row_number())\n\n# longitud de las etiquetas\nder &lt;- 5500000\nizq &lt;- 3600000\n\n# etiquetas por ciudad\nd &lt;- ciudades_tbl |&gt; \n  mutate(fecha_i = format(fecha_i, \"%d/%m/%y\")) |&gt; \n  mutate(fecha_f = format(fecha_f, \"%d/%m/%y\")) |&gt; \n  mutate(label = glue(\n    \"&lt;br&gt;&lt;span style='font-family:victor;font-size:15pt;color:{c3}'&gt;#{puesto}&lt;/span&gt;\",\n    \"&lt;span style='font-family:bebas;font-size:35pt;color:{c2}'&gt;{nombre}&lt;/span&gt;\",\n    \"&lt;span style='font-size:15pt;color:{c3}'&gt; &lt;b style='font-family:victor'&gt;{n}&lt;/b&gt; eventos\",\n    \"Inicio: &lt;b style='font-family:victor'&gt;{fecha_i}&lt;/b&gt;\",\n    \"Último: &lt;b style='font-family:victor'&gt;{fecha_f}&lt;/b&gt;\",\n    \"&lt;/span&gt;\",\n    .sep = \"&lt;br&gt;\")) |&gt; \n  mutate(\n    x = ciudades_pts_tbl$X,\n    y = ciudades_pts_tbl$Y,\n    xend = c(\n      izq, der, 4700000, izq, der, 5000000, der, 3700000, izq, 3900000),\n    yend = c(\n      5411386, 6162069, 5100000, 6347028, 6498473, 7324204, 5400000, 3913285, \n      6524189, 7324204),\n    hjust = c(1, 0, 0, 1, 0, 0, 0, 1, 1, 1),\n    vjust = c(1, 1, 1, 1, 0, 0, 1, 0, 0, 0))\n\n# figura ------------------------------------------------------------------\n\n# logo de R-Ladies Argentina\nlogo &lt;- \"2023/semana_47/logo.png\"\nlogo_label &lt;- glue(\"&lt;img src='{logo}' width='200'&gt;\")\n\n# título\ntit_tbl &lt;- tibble(\n  x = 2800000,\n  y = 5740431,\n  label = glue(\"Encuentros &lt;span style='color:{c3}'&gt;R-Ladies&lt;/span&gt; Argentina\"))\n\n# figura\ng &lt;- ggplot() +\n  # provincias de Argentina\n  geom_sf(data = pcias, fill = c4, color = c1, linewidth = .5) +\n  # líneas entre ciudad y etiqueta\n  geom_segment(\n    data = d, aes(x, y, xend = xend, yend = yend), color = c2,\n    linewidth = .25, linetype = 1) +\n  # puntos de ciudades\n  geom_sf(data = ciudades_pts, color = c3, size = 3.5, shape = 15) +\n  geom_sf(data = ciudades_pts, color = c3, size = 5, shape = 18) +\n  geom_sf(data = ciudades_pts, color = c1, size = 2, shape = 20) +\n  # etiquetas\n  geom_richtext(\n    data = d, aes(xend, yend, label = label, hjust = hjust, vjust = vjust), \n    fill = c5, label.color = NA, label.r = unit(0, \"mm\"), size = 4,\n    family = \"ubuntu\", color = c3, lineheight = unit(1.5, \"mm\")) +\n  # título\n  geom_richtext(\n    data = tit_tbl, aes(x, y, label = label), angle = 90, color = c2,\n    size = 30, family = \"bebas\", fill = NA, label.color = NA) +\n  # logo R-Ladies Argentina\n  annotate(\n    geom = \"richtext\", x = 5300000, y = 3891909, hjust = 0, vjust = 0,\n    label = logo_label, fill = NA, label.color = NA, label.r = unit(0, \"mm\")) +\n  coord_sf(clip = \"off\") +\n  labs(caption = mi_caption) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(fill = c6, color = c5, linewidth = 3),\n    plot.margin = margin(20, 157.5, 20, 0),\n    plot.caption.position = \"plot\",\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 12, color = c1))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_47/viz.png\",\n  width = 33,\n  height = 40,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_47/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 47"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_39.html",
    "href": "tidytuesday/2023/semana_39.html",
    "title": "Semana 39",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(showtext)\nlibrary(ggtext)\nlibrary(ggpath)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#E1C8AF\"\nc2 &lt;- \"#E1E1E1\"\nc3 &lt;- \"#EDDAEB\"\nc4 &lt;- \"#647D96\"\nc5 &lt;- \"#3B4252\"\nc6 &lt;- \"#2E87C9\"\nc7 &lt;- \"#4C566A\"\n\n# texto gral, títulos de eje\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# eje horizontal & vertical\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# temporada\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = FALSE)\n# fuck's\nfont_add_google(name = \"Permanent Marker\", family = \"marker\")\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:victor;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 39. &lt;span style='font-family:victor;'&gt;{{richmondway}}&lt;/span&gt;, **Deepsha Menghani**&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-09-26/readme.md\")\n\ndatos &lt;- richmondway::richmondway\n\nfuck &lt;- \"&lt;b style='font-family:marker'&gt;FUCK&lt;/b&gt;\"\n\n# me interesa el conteo acumulado de 'fuck' a lo largo de todos los episodios\n\n# posición de los finales de temporada, para indicar los límites de las áreas\nv &lt;- datos |&gt; \n  group_by(Season) |&gt; \n  slice_max(Episode) |&gt; \n  mutate(Episode_order = if_else(\n    Episode_order != max(datos$Episode_order), \n    Episode_order + 1, \n    Episode_order)) |&gt; \n  pull(Episode_order)\n\n# ubicación de texto 'Temporada' en la parte superior\ne &lt;- datos |&gt; \n  mutate(m = median(Episode), ult = max(Episode), .by = Season) |&gt; \n  slice_min(Episode) |&gt; \n  mutate(eje_x = Episode_order + m - 1) |&gt; \n  select(eje_x, Episode_order) |&gt; \n  mutate(label = glue(\"Temporada {c('I', 'II', 'III')}\")) |&gt; \n  mutate(v1 = v)\n\n# promedio de 'fuck' por episodio, por temporada\nh &lt;- datos |&gt; \n  summarise(prom = sum(F_count_total)/n(), .by = Season) |&gt; \n  mutate(prom = gt::vec_fmt_number(prom, decimals = 1, sep_mark = \"\", dec_mark = \",\")) |&gt; \n  mutate(eje_x = e$eje_x) |&gt; \n  mutate(label = glue(\"{prom} {fuck}&lt;br&gt;por episodio\"))\n\n# figura ------------------------------------------------------------------\n\n# logo de Ted Lasso\nlogo &lt;- \"2023/semana_39/logo.png\"\n\n# tibble para ubicar el logo\nl &lt;- tibble(\n  x = 22,\n  y = 80,\n  path = logo\n)\n\n# límite del eje vertical, para ubicar el texto de 'Temporada' y los promedios\nlim_eje_y &lt;- 750\n\n# título del eje vertical\ntit_eje_y &lt;- glue(\n  \"Suma acumulada de {fuck}&lt;br&gt;\",\n  \"&lt;span style='font-size:15px'&gt;*Incluyendo todos los personajes*&lt;/span&gt;\")\n\n# figura\ng &lt;- ggplot(datos, aes(Episode_order, cum_total_overall)) +\n  # rectángulos que delimitan las temporadas\n  geom_rect(\n    data = e, \n    aes(xmin = Episode_order, xmax = v1, ymin = 1, ymax = lim_eje_y, fill = label), \n    show.legend = FALSE, inherit.aes = FALSE) +\n  # líneas horizontales\n  geom_hline(\n    yintercept = seq(50, lim_eje_y, 50), linetype = \"8f\", color = c4, \n    linewidth = .25) +\n  # texto 'Temporada' en la parte superior\n  geom_text(\n    data = e, aes(x = eje_x, y = lim_eje_y - 5, label = label),\n    vjust = 1, hjust = .5, color = c3, family = \"bebas\", size = 10) +\n  # texto de promedio de 'fuck' por episodio, por temporada\n  geom_richtext(\n    data = h, aes(x = eje_x, y = lim_eje_y - 33, label = label),\n    color = c3, family = \"ubuntu\", size = 5, fill = NA, label.color = NA,\n    vjust = 1) +\n  # escalera\n  geom_step(color = c6, direction = \"vh\", linewidth = 2) +\n  # logo\n  geom_from_path(data = l, aes(x, y, path = path), width = .7) +\n  # recuadro del panel\n  geom_rect(\n    aes(xmin = 1, xmax = 34, ymin = 1, ymax = lim_eje_y), color = c6,\n    fill = NA, linewidth = 1) +\n  # manual\n  scale_x_continuous(labels = datos$Episode, breaks = seq(1, 34, 1)) +\n  scale_y_continuous(\n    breaks = c(1, seq(50, lim_eje_y, 50))) +\n  nord::scale_fill_nord(palette = \"polarnight\", reverse = TRUE) +\n  coord_cartesian(expand = FALSE, clip = \"on\", ylim = c(1, lim_eje_y)) +\n  labs(\n    x = \"Episodio\",\n    y = tit_eje_y,\n    caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(30, 22.7, 10, 22.7),\n    axis.ticks.x = element_line(color = c3),\n    axis.ticks.y = element_line(color = c1),\n    axis.ticks.length = unit(1, \"line\"),\n    plot.background = element_rect(fill = c5, color = c7, linewidth = 3),\n    plot.caption = element_markdown(\n      color = c1, family = \"ubuntu\", size = 11, margin = margin(10, 0, 5, 0)),\n    axis.text.x = element_text(\n      family = \"victor\", color = c3, size = 14, margin = margin(5, 0, 0, 0),\n      face = \"bold\"),\n    axis.text.y = element_text(\n      color = c1, family = \"victor\", vjust = c(rep(c(0, .5, .5), 5), 0), hjust = 1,\n      margin = margin(0, 5, 0, 0), size = c(rep(c(15, 8, 8), 5), 15)),\n    axis.title.x = element_text(\n      color = c3, family = \"ubuntu\", size = 20, margin = margin(10, 0, 0, 0)),\n    axis.title.y = element_markdown(\n      color = c1, family = \"ubuntu\", size = 20, angle = 90, \n      margin = margin(0, 10, 0, 0))\n  ); ggsave(\n    plot = g,\n    filename = \"2023/semana_39/viz.png\",\n    width = 30,\n    height = 30,\n    units = \"cm\"\n  ); browseURL(\"2023/semana_39/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 39"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_16.html",
    "href": "tidytuesday/2023/semana_16.html",
    "title": "Semana 16",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(ggrepel)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(fontawesome)\n\n# fuentes -----------------------------------------------------------------\n\nfont_add_google(name = \"Poltawski Nowy\", family = \"poltawski\", db_cache = FALSE) # título\nfont_add_google(name = \"Anuphan\", family = \"anuphan\", db_cache = FALSE) # resto del texto\nfont_add_google(name = \"Share Tech Mono\", family = \"share\", db_cache = FALSE) # coordenadas\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# íconos\nfont_add(\"fa-reg\", \"icon/Font Awesome 5 Free-Regular-400.otf\")\nfont_add(\"fa-brands\", \"icon/Font Awesome 5 Brands-Regular-400.otf\")\nfont_add(\"fa-solid\", \"icon/Font Awesome 5 Free-Solid-900.otf\")\n\n# caption\nicon_twitter &lt;- \"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\"\nicon_github &lt;- \"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\"\nfuente &lt;- \"Datos: &lt;span style='color:#a41400;'&gt;&lt;span style='font-family:mono;'&gt;{**tidytuesdayR**}&lt;/span&gt; semana 16&lt;/span&gt;\"\nautor &lt;- \"Autor: &lt;span style='color:#a41400;'&gt;**Víctor Gauto**&lt;/span&gt;\"\nsep &lt;- glue(\"**|**\")\nusuario &lt;- glue(\"&lt;span style='color:#a41400;'&gt;**vhgauto**&lt;/span&gt;\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-04-18/readme.md\")\n\nfounder_crops &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-04-18/founder_crops.csv')\n\n# convierto las coordenadas a sf\nfounder_crops_sf &lt;- st_as_sf(founder_crops,\n                             coords = c(\"longitude\", \"latitude\"),\n                             crs = st_crs(4326))\n\n# mapa del mundo\nworld &lt;- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n# región de interés, bbox de la base de datos\nl &lt;- st_bbox(founder_crops_sf) |&gt; \n  st_as_sfc() |&gt; \n  st_as_sf()\n\n# evito errores al recortar el mapa del mundo\nsf_use_s2(FALSE)\n\n# recorto el mapa del mundo a la base de datos\nworld_subset &lt;- st_crop(world, l)\n\n# me interesan las ubicaciones y 'comestibilidad', solo tomo datos únicos\n# incluye 'Edible seed/fruit'\nsub &lt;- founder_crops_sf |&gt; \n  drop_na(edibility) |&gt; \n  distinct(geometry, edibility) |&gt;  \n  mutate(edibility2 = fct_lump_n(f = edibility, n = 3))\n\n# remuevo la categoría que se repite en TODOS los puntos (Edible seed/fruit)\n# conservo las restantes, elijo las 3 más frecuentes y lump el resto\nsub2 &lt;- founder_crops_sf |&gt; \n  # remuevo NA\n  drop_na(edibility) |&gt; \n  # mantengo ubicaciones únicas\n  distinct(geometry, edibility) |&gt; \n  # remuevo la categoría que se repite en todas las ubicaciones\n  filter(edibility != \"Edible seed/fruit\") |&gt; \n  # lump categorías poco frecuentes\n  mutate(edibility2 = fct_lump_n(\n    f = edibility, \n    n = 3, \n    ties.method = \"first\",\n    other_level = \"Otros\")) |&gt;\n  # traduzco\n  mutate(edibility2 = case_match(\n    edibility2,\n    \"leaves, stems\" ~ \"Hoja, tallo\",\n    \"flowers, stems\" ~ \"Flor, tallo\",\n    \"leaves, root\" ~ \"Hoja, raíz\", \n    .default = edibility2))\n\n# categoría Otros\nsub3 &lt;- sub2 |&gt; \n  filter(edibility2 == \"Otros\") |&gt; \n  mutate(edibility = case_match(\n    edibility,\n    \"stems\" ~ \"Tallo\",\n    \"rhizomes, stems and leaves,\" ~ \"Rizoma, tallo, hoja\",\n    \"bulbs\" ~ \"Bulbo\",\n    \"flowers\" ~ \"Flor\",\n    \"leaves\" ~ \"Hoja\",\n    .default = edibility))\n\n# figura ------------------------------------------------------------------\n\n# función p/colorear palabras\nf_c &lt;- function(x) {\n  glue(\"&lt;span style='color:#a41400'&gt;**{x}**&lt;/span&gt;\")\n}\n\n# figura\ng1 &lt;- sub2 |&gt; \n  ggplot() +\n  # mundo\n  geom_sf(data = world_subset, fill = \"grey90\", color = \"grey20\", \n          linewidth = .2, linetype = 2) +\n  # todos los puntos\n  geom_sf(data = sub |&gt; select(-edibility2),\n          color = \"#007e2e\", alpha = 1, size = 1) +\n  # puntos de las facetas\n  geom_sf(alpha = .8, color = \"#a41400\", size = 3, show.legend = TRUE) +\n  # otros\n  geom_label_repel(\n    data = sub3,\n    aes(label = edibility, geometry = geometry),\n    color = \"#59386c\",\n    label.size = 0,\n    label.padding = unit(.1, \"line\"),\n    fill = alpha(\"white\", .75),\n    stat = \"sf_coordinates\",\n    force = 7,\n    size = 4.25,\n    family = \"anuphan\",\n    max.overlaps = 20,\n    min.segment.length = 0) +\n  # manual\n  coord_sf(expand = FALSE, clip = \"off\") +\n  labs(x = NULL, y = NULL, \n       title = \"Dieta neolítica\",\n       subtitle = glue(\n         \" {f_c('Flores')}, {f_c('tallos')}, {f_c('hojas')}, {f_c('raíces')}, \n         {f_c('bulbos')} y {f_c('rizomas')} eran parte de la dieta de nuestros \n         antepasados. Se muestra la distribución geográfica de estas partes \n         comestibles de las plantas en el **sudoeste asiático**. En todos los \n         paneles se indican las ubicaciones de \n         &lt;span style='color:#007e2e'&gt;**semillas**&lt;/span&gt; y \n         &lt;span style='color:#007e2e'&gt;**frutas**&lt;/span&gt;.\"),\n       caption = mi_caption) +\n  # faceta\n  facet_wrap(~ edibility2, ncol = 2, nrow = 2) +\n  # tema\n  theme_minimal() +\n  theme(\n    plot.background = element_rect(\n      fill = \"#e7e5cc\", color = \"#59386c\", linewidth = 2),\n    plot.title.position = \"panel\",\n    plot.title = element_markdown(\n      size = 65, family = \"poltawski\", color = \"#59386c\"),\n    plot.subtitle = element_textbox_simple(\n      size = 16, family = \"anuphan\", color = \"#59386c\", \n      margin = margin(10, 0, 10, 0)),\n    plot.caption = element_markdown(\n      size = 12, hjust = .46, family = \"anuphan\", margin = margin(15, 0, 5, 0),\n      color = \"#59386c\"),\n    plot.margin = margin(5, 10, 0, 10),\n    strip.text = element_markdown(\n      family = \"anuphan\", size = 16, color = \"#59386c\", face = \"bold\"),\n    axis.text = element_markdown(family = \"share\", size = 12, color = \"#59386c\"),\n    axis.ticks = element_line(color = \"#59386c\"),\n    panel.grid = element_blank(),\n    panel.ontop = TRUE,\n    panel.background = element_rect(fill = NA, color = \"#59386c\", linewidth = .3),\n    panel.spacing.x = unit(1, \"line\"),\n    panel.spacing.y = unit(1.25, \"line\"))\n\n# guardo\nggsave(\n  plot = g1,\n  filename = \"2023/semana_16/viz.png\",\n  width = 30,\n  height = 27.37,\n  units = \"cm\",\n  dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_16/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 16"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_41.html",
    "href": "tidytuesday/2023/semana_41.html",
    "title": "Semana 41",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#E78429\"\nc2 &lt;- \"#F6C200\"\nc3 &lt;- \"#BAD6F9\"\nc4 &lt;- \"grey30\"\nc5 &lt;- \"grey10\"\nc6 &lt;- \"grey15\"\nc7 &lt;- \"grey90\"\nc8 &lt;- \"white\"\n\n# texto gral, ubicación, ciudad\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# descripción\nfont_add_google(name = \"Creepster\", family = \"creepster\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 41. Haunted Places in USA, **Tim Renner**&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-10-10/readme.md\")\n\nhaunted_places &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-10-10/haunted_places.csv')\n\n# me interesan los sitios relacionados a cementerios y universidades\n# incluyo una (breve) descripción de c/u, ubicados en lados opuestos\n\n# mapa de EEUU, sacando algunos territorios\nus &lt;- rgeoboundaries::gb_adm1(country = \"USA\")\n\nus_otros &lt;- c(\n  \"Puerto Rico\", \"Alaska\", \"American Samoa\", \"United States Virgin Islands\",\n  \"Commonwealth of the Northern Mariana Islands\", \"Guam\", \"Hawaii\", \n  \"Commonwealth of the Northern Mariana Islands\")\n\nus_cont &lt;- us |&gt; \n  filter(!shapeName %in% us_otros)\n\n# hay un sitio por fuera de EEUU? Lo remuevo\nlawrence &lt;- haunted_places |&gt; \n  filter(between(longitude, -82, -78) & between(latitude, 44, 46)) |&gt; \n  pull(location)\n\n# creo un objeto sf, y remuevo el sitio sospechoso\nhaunted_places_sf &lt;- haunted_places |&gt; \n  drop_na(longitude, latitude) |&gt; \n  st_as_sf(coords = c(\"longitude\", \"latitude\")) |&gt; \n  st_set_crs(value = 4326) |&gt; \n  st_crop(st_bbox(us_cont)) |&gt; \n  filter(location != lawrence)\n\n# convierto a EPGS:5070, para un mapa más agradable\nbrowseURL(\"https://epsg.io/5070\")\n\nd &lt;- st_transform(haunted_places_sf, crs = 5070)\nus_cont_trans &lt;- st_transform(us_cont, crs = 5070)\n\n# contorno de EEUU\ncontorno &lt;- st_union(us_cont_trans)\n\n# simplifico los sitios: otros, cementerio y universidad\nd_lugares &lt;- d |&gt; \n  select(location) |&gt; \n  mutate(location = str_to_lower(location)) |&gt; \n  mutate(location = case_when(\n    str_detect(location, \"cemetery\") ~ \"cemetery\",\n    str_detect(location, \"university\") ~ \"university\",\n    .default = \"otros\"))\n\n# divido los datos en otros, y universidades & cementerios\nd_otros &lt;- d_lugares |&gt; \n  filter(location == \"otros\")\n\nd_interes &lt;- d_lugares |&gt; \n  filter(location != \"otros\")\n\n# cantidades de universidades, cementerios y sitios en gral\nn_uni &lt;- d_interes |&gt; \n  filter(location == \"university\") |&gt; \n  nrow()\n\nn_cem &lt;- d_interes |&gt; \n  filter(location == \"cemetery\") |&gt; \n  nrow()\n\nn_sitios &lt;- nrow(haunted_places) |&gt; \n  gt::vec_fmt_number(sep_mark = \".\", dec_mark = \",\", decimals = 0)\n\n# descripción BREVE de cementerio y universidad\n# elijo una descripción de cementerio de Florida, y una descripción de \n# universidad de Montana (lados opuestos)\nej_cem &lt;- haunted_places |&gt; \n  filter(state_abbrev == \"FL\") |&gt; \n  mutate(location = str_to_lower(location)) |&gt; \n  filter(str_detect(location, \"cemetery\")) |&gt; \n  mutate(n = nchar(description)) |&gt; \n  slice_min(order_by = n, n = 1) |&gt; \n  mutate(description = str_wrap(description, 35))\n\nej_uni &lt;- haunted_places |&gt; \n  filter(state_abbrev == \"MT\") |&gt; \n  mutate(location = str_to_lower(location)) |&gt; \n  filter(str_detect(location, \"university\")) |&gt; \n  mutate(n = nchar(description)) |&gt; \n  slice_min(order_by = n, n = 1) |&gt; \n  mutate(description = str_remove(description, \"Main Hall - \")) |&gt; \n  mutate(description = str_wrap(description, 35))\n\n# unifico ambas descripciones y creo la etiqueta\nej_ambos &lt;- bind_rows(ej_uni, ej_cem) |&gt; \n  mutate(description = str_replace_all(description, \"\\n\", \"&lt;br&gt;\")) |&gt; \n  mutate(location = str_to_title(location)) |&gt; \n  mutate(label = glue(\n    \"&lt;b style='font-size:25px;font-family:creepster;'&gt;{description}&lt;/b&gt;&lt;br&gt;\",\n    \"&lt;span style='font-family:ubuntu; color:white'&gt;*{location}*, *{city}*, *{state_abbrev}*&lt;/span&gt;\"))\n\n# ubicación de las cajas de las descripciones\ncaja_longitud &lt;- c(-110, -90)\ncaja_latitud &lt;- c(50, 25)\n\n# modifico las coordenadas de las descripciones a EPSG:5070\nej_label &lt;- ej_ambos |&gt; \n  mutate(location = str_to_lower(location)) |&gt; \n  mutate(location = if_else(\n    str_detect(location, \"cemetery\"), \"cemetery\", \"university\")) |&gt; \n  # mutate(location = case_when(\n  #   str_detect(location, \"cemetery\") ~ \"cemetery\",\n  #   str_detect(location, \"university\") ~ \"university\",\n  #   .default = \"otros\")) |&gt; \n  mutate(latitude = caja_latitud) |&gt; \n  mutate(longitude = caja_longitud) |&gt; \n  st_as_sf(coords = c(\"longitude\", \"latitude\")) |&gt; \n  st_set_crs(value = 4326) |&gt; \n  st_transform(crs = 5070) |&gt; \n  mutate(vjust = c(0, 1)) |&gt; \n  mutate(hjust = c(0, 0))\n\n# ubicación de los sitios que corresponden a las descripciones\nej_puntos &lt;- bind_rows(ej_uni, ej_cem) |&gt; \n  mutate(location = str_to_lower(location)) |&gt; \n  mutate(location = case_when(\n    str_detect(location, \"cemetery\") ~ \"cemetery\",\n    str_detect(location, \"university\") ~ \"university\",\n    .default = \"otros\")) |&gt; \n  st_as_sf(coords = c(\"longitude\", \"latitude\")) |&gt; \n  st_set_crs(value = 4326) |&gt; \n  st_transform(crs = 5070)\n\n# figura ------------------------------------------------------------------\n\n# flechas que unen las descripciones con los sitios\n# inicio de la flecha\nflecha &lt;- tibble(\n  x = caja_longitud, y = caja_latitud) |&gt; \n  st_as_sf(coords = c(\"x\", \"y\")) |&gt; \n  st_set_crs(value = 4326) |&gt; \n  st_transform(crs = 5070) |&gt; \n  st_coordinates() |&gt; \n  as_tibble() |&gt; \n  rename(x = X, y = Y)\n\n# final de la flecha\nflecha_end &lt;- ej_puntos |&gt; \n  st_coordinates() |&gt; \n  as_tibble() |&gt;\n  st_as_sf(coords = c(\"X\", \"Y\")) |&gt; \n  st_set_crs(value = 5070) |&gt; \n  st_coordinates() |&gt; \n  as_tibble() |&gt; \n  rename(xend = X, yend = Y)\n\nflecha_tbl &lt;- bind_cols(flecha, flecha_end)\n\n# ubicación de la caja con el título\ncaja_tit &lt;- tibble(x = -110, y = 26) |&gt; \n  st_as_sf(coords = c(\"x\", \"y\")) |&gt; \n  st_set_crs(value = 4326) |&gt; \n  st_transform(crs = 5070) |&gt; \n  st_coordinates() |&gt; \n  as_tibble() |&gt; \n  rename(x = X, y = Y)\n\n# figura\ng &lt;- ggplot() +\n  # mapa de EEUU, con los Estados\n  geom_sf(data = us_cont_trans, fill = c4, color = c5) +\n  # contorno de EEUU\n  geom_sf(data = contorno, fill = NA, color = c8) +\n  # sitios 'otros'\n  geom_sf(data = d_otros, alpha = 1/2, color = c5, size = .25) +\n  # universidades y cementerios\n  geom_sf(data = d_interes, aes(color = location), alpha = 1/3, size = 4) +\n  # títulos\n  annotate(\n    geom = \"richtext\", x = caja_tit$x, y = caja_tit$y, hjust = .5, vjust = 1,\n    label = glue(\n      \"En **EEUU** hay {n_sitios} sitios embrujados,&lt;br&gt;\",\n      \"de los cuales hay {n_uni} en &lt;b style='color:{c3};'&gt;universidades&lt;/b&gt; y&lt;br&gt;\",\n      \"{n_cem} en &lt;b style='color:{c1};'&gt;cementerios&lt;/b&gt;.\"),\n    label.color = NA, fill = NA, family = \"ubuntu\", size = 6, color = c7) +\n  # descripciones\n  geom_richtext(\n    data = ej_label, \n    aes(label = label, hjust = hjust, vjust = vjust, geometry = geometry), \n    stat = \"sf_coordinates\", family = \"ubuntu\", color = c2, fill = c6,\n    lineheight = unit(2, \"line\"),\n    label.color = NA) +\n  # flechas\n  geom_curve(\n    data = flecha_tbl[1, ], aes(x, y, xend = xend, yend = yend), \n    inherit.aes = FALSE, color = c7, curvature = .25,\n    arrow = arrow(angle = 15, length = unit(.5, \"line\"), type = \"closed\")) +\n  geom_curve(\n    data = flecha_tbl[2, ], aes(x, y, xend = xend, yend = yend), \n    inherit.aes = FALSE, color = c7, curvature = -.25,\n    arrow = arrow(angle = 15, length = unit(.5, \"line\"), type = \"closed\")) +\n  scale_color_manual(values = c(c1, c3)) +\n  coord_sf(clip = \"off\") +\n  labs(x = NULL, y = NULL, caption = mi_caption) +\n  theme_minimal() +\n  theme(\n    plot.margin = margin(41, 6, 11, 6),\n    plot.background = element_rect(fill = c5, color = c4, linewidth = 3),\n    plot.caption = element_markdown(\n      color = c7, family = \"ubuntu\", size = 10, margin = margin(70, 15, 5, 0)),\n    legend.position = \"none\",\n    panel.grid = element_blank(),\n    axis.text = element_blank()\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_41/viz.png\",\n  width = 30,\n  height = 24,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_41/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 41"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_31.html",
    "href": "tidytuesday/2023/semana_31.html",
    "title": "Semana 31",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggrepel)\n\n# fuentes -----------------------------------------------------------------\n\n# colores, Lakota\nc1 &lt;- \"#931E17\"\nc2 &lt;- \"#20235B\"\nc3 &lt;- \"#F0BE3D\"\nc4 &lt;- \"#EDC775\"\n\n# Estados\nfont_add_google(name = \"Lato\", family = \"lato\")\n# procentajes\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# título\nfont_add_google(name = \"Bree Serif\", family = \"bree\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 31. **List of states and territories of the United States**, Wikipedia&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-08-01/readme.md\")\n\nstates &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-01/states.csv')\n\n# por c/Estado, me interesa el porcentaje de la superficie cubierta por agua\nd &lt;- states |&gt; \n  transmute(estado = state, agua = water_area_km2/total_area_km2) |&gt; \n  # me quedo con los que tengan al menos 1%\n  filter(agua &gt;= .01) |&gt; \n  # agrego formato a las etiquetas de los Estados\n  mutate(estado = glue(\"&lt;span style='font-family:lato;font-size:15pt;color:white;'&gt;{estado}&lt;/span&gt;\")) |&gt; \n  # ordeno de acuerdo a la fracción de agua\n  mutate(estado = fct_reorder(estado, agua)) |&gt; \n  # convierto las fracciones a porcentajes, aplico formato\n  mutate(agua_label = gt::vec_fmt_percent(agua, decimals = 1)) |&gt; \n  mutate(agua_label = glue(\"&lt;span style='font-family:victor;font-size:7pt;color:{c4};'&gt;**{agua_label}**&lt;/span&gt;\")) |&gt; \n  # acomodo de acuerdo a la fracción de agua\n  arrange(agua) |&gt; \n  # agrego nro de fila, para usar como eje vertical en la figura\n  # si no, geom_are() no funciona\n  mutate(fila = row_number()) |&gt; \n  # alterno etiquetas a izquierda y derecha de la superficie\n  mutate(\n    hjust = rep(c(1, 0), length.out = max(fila)), \n    vjust = .5\n    ) |&gt; \n  # alterno la posición de los Estados y porcentajes en las etiquetas\n  mutate(label = if_else(\n    condition = fila %% 2 != 0,\n    true = glue(\"{agua_label} {estado}\"),\n    false = glue(\"{estado} {agua_label}\")\n  )) |&gt; \n  # alterno espacio extra entre el punto y la etiqueta\n  mutate(extra_x = if_else(\n    condition = fila %% 2 != 0,\n    true = -.0025,\n    false = .0025\n  )) |&gt; \n  mutate(agua_x = agua + extra_x) |&gt; \n  # condiciones especiales para HAWAII\n  mutate(hjust = if_else(\n    condition = str_detect(label, \"Hawaii\"),\n    true = 1,\n    false = hjust\n  )) |&gt; \n  mutate(label = if_else(\n    condition = str_detect(label, \"Hawaii\"),\n    true = glue(\"{agua_label} {estado}\"),\n    false = label\n  )) |&gt; \n  mutate(agua_x = if_else(\n    condition = str_detect(label, \"Hawaii\"),\n    true = agua - extra_x,\n    false = agua_x\n  ))\n\n# vector con los Estados que tienen menos del 1% de agua\nultimos_estados &lt;- states |&gt; \n  transmute(estado = state, agua = water_area_km2/total_area_km2) |&gt; \n  filter(agua &lt; .01) |&gt; \n  pull(estado) |&gt; \n  str_flatten_comma(last = \" y \")\n\n# figura ------------------------------------------------------------------\n\n# título y \ntitulo &lt;- \"Los Estados&lt;br&gt;con más agua\"\n\n# subtítulo, es conveniente hacerlo como tibble, ya que puedo usar \n# geom_textbox(), para facilitar el ancho del texto\nsubtitulo &lt;- glue(\n  \"Se muestran los Estados de **EEUU** que poseen\n  mayor porcentaje de &lt;b style='color:white;'&gt;superficie cubierta por\n  agua&lt;/b&gt;, respecto del total.&lt;br&gt;&lt;br&gt;{ultimos_estados}\n  se omitieron debido a que poseen valores menores al 1%.\")\n\nsubtitulo_tbl &lt;- tibble(\n  x = .2,\n  y = 16,\n  label = subtitulo\n)\n\n# figura\ng &lt;- ggplot(data = d, aes(x = agua, y = fila)) +\n  # área de la derecha\n  geom_ribbon(aes(ymin=0, ymax=fila), fill = c1) +\n  # línea\n  geom_line(color = \"black\", linetype = 1, linewidth = .25) +\n  geom_line(color = \"white\", linetype = \"88\", linewidth = .25) +\n  # puntos concentricos\n  geom_point(size = 1.5, color = \"white\", shape = 19) +\n  geom_point(size = 1, color = \"black\", shape = 19) +\n  # estados y porcentajes\n  geom_richtext(\n    aes(x = agua_x, label = label, hjust = hjust, vjust = vjust), fill = NA, \n    label.r = unit(0, \"line\"), label.size = 0) +\n  # título\n  annotate(\n    geom = \"richtext\", x = .2, y = 23, hjust = 0, vjust = 1, label = titulo,\n    size = 19, fill = NA, color = c3, label.color = NA, family = \"bree\") +\n  # subtítulo\n  geom_textbox(\n    data = subtitulo_tbl, aes(x = x, y = y, label = label),\n    size = 6, fill = NA, color = c4, box.color = NA, \n    hjust = 0, vjust = 1, width = unit(13, \"cm\")) +\n  # caption\n  annotate(\n    geom = \"richtext\", x = .4, y = 2, hjust = 1, vjust = 1, label = mi_caption,\n    size = 3.5, fill = NA, color = \"white\", label.color = NA, family = \"lato\") +\n  scale_x_continuous(expand = c(0, 0), limits = c(0, max(d$agua)*1.003)) +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, max(d$fila))) +\n  coord_cartesian(clip = \"off\") +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(12, 0, 0, 103),\n    plot.background = element_rect(fill = c2, color = c1, linewidth = 3),\n    panel.background = element_blank(),\n    panel.grid = element_blank()\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_31/viz.png\",\n  width = 30,\n  height = 26.8,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_31/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 31"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_21.html",
    "href": "tidytuesday/2023/semana_21.html",
    "title": "Semana 21",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuentes -----------------------------------------------------------------\n\n# título\nfont_add_google(name = \"Playfair Display\", family = \"playfair\", db_cache = TRUE)\n# resto del texto\nfont_add_google(name = \"Schibsted Grotesk\", family = \"grotesk\", db_cache = FALSE)\n# cantidad (n)\nfont_add_google(name = \"Inconsolata\", family = \"inconsolata\", db_cache = FALSE)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# MetBrewer: Manet\nc1 &lt;- \"#ede2cc\"\nc2 &lt;- \"#7ec5f4\"\nc3 &lt;- \"#4585b7\"\nc4 &lt;- \"#215e92\"\nc5 &lt;- \"#d29c44\"\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 21&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-05-23/readme.md\")\n\nardillas &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-23/squirrel_data.csv')\n\n# convierto tibble a sf\nardillas_sf &lt;- ardillas |&gt; \n  st_as_sf(coords = c(\"X\", \"Y\")) |&gt; \n  st_set_crs(value = 4326)\n\n# función que permite la rotación de las geometrías\nbrowseURL(\"https://r-spatial.github.io/sf/articles/sf3.html#affine-transformations\")\n\nrot = function(a) matrix(c(cos(a), sin(a), -sin(a), cos(a)*2), 2, 2)\n\n# rotación de los datos\nardillas_sf_rot &lt;- ardillas_sf %&gt;% \n  mutate(geom_rot = st_geometry(.)*rot(-36.5*pi/180)) %&gt;%\n  st_drop_geometry() %&gt;%\n  rename(geometry = geom_rot) %&gt;%\n  st_set_geometry(\"geometry\")\n\n# colores\ncolores &lt;- MetBrewer::met.brewer(\n  palette_name = \"Wissing\", n = 5, override.order = TRUE) |&gt; \n  as.character()\n\n# traducciones de las actividades\ntr &lt;- c(Chasing = \"Persiguiendo\", Eating = \"Comiendo\", Climbing = \"Escalando\",\n        Running = \"Corriendo\", Foraging = \"Recolectando&lt;br&gt;comida\")\n\n# asigno los colores a cada actividad\nnames(colores) &lt;- names(tr)\n\n# quito los nombres del vector p/usar en ggplot()\ncolores2 &lt;- colores\nnames(colores2) &lt;- NULL\n\n# acomodo datos\ndatos &lt;- ardillas_sf_rot |&gt; \n  # selecciono actividades\n  select(ends_with(\"ing\")) |&gt; \n  # tabla larga\n  pivot_longer(cols = -geometry, \n               names_to = \"actividad\") |&gt; \n  # sólo las actividades que sí estaban sucediendo\n  filter(value == TRUE) |&gt; \n  select(-value) |&gt; \n  # agrego traducciones\n  mutate(ac = tr[actividad]) |&gt; \n  # agrego colores\n  mutate(col = colores[actividad]) |&gt; \n  # agrego color a las actividades (strip)\n  mutate(accion = glue(\"&lt;b style='color:{col};'&gt;{ac}&lt;/span&gt;\")) |&gt; \n  select(-actividad, -ac)\n\n# cantidad de observaciones por actividad\nn_datos &lt;- datos |&gt; \n  count(accion, col)\n\n# leo .geojson con mapa de Central Park, de Open Street Map\njs &lt;- st_read(\"2023/semana_21/OSM_central_park.geojson\")\n\n# selecciono únicamente los cuerpos de agua\nw &lt;- js |&gt; \n  filter(landcover_class == \"water\")\n\n# rotación de los polígonos\nw_rot &lt;- w %&gt;% \n  mutate(geom_rot = st_geometry(.)*rot(-36.5*pi/180)) %&gt;%\n  st_drop_geometry() %&gt;%\n  rename(geometry = geom_rot) %&gt;%\n  st_set_geometry(\"geometry\")\n\n# región de interés de Central Park\nroi &lt;- st_bbox(datos) |&gt; \n  st_as_sfc()\n\n# incorporo el color al roi, p/las facetas\nroi2 &lt;- distinct(datos, col, accion) |&gt; \n  mutate(geometry = roi) |&gt; \n  st_as_sf()\n\n# recordo polígonos de agua a la región de interés\nw_rot_crop &lt;- st_crop(w_rot, roi)\n\n# figura ------------------------------------------------------------------\n\ng &lt;- ggplot() +\n  geom_sf(data = roi2, aes(color = I(col)), fill = NA, linewidth = .25) +\n  # polígonos de agua\n  geom_sf(data = w_rot_crop, fill = \"grey60\", color = \"grey40\") +\n  # ardillas\n  geom_sf(\n    data = datos, aes(color = I(col)), \n    alpha = .4, show.legend = FALSE, size = 4) +\n  # cantidad de observaciones\n  geom_text(\n    data = n_datos, aes(label = glue(\"n = {n}\"), x = -Inf, y = -Inf, color = col),\n    hjust = 0, vjust = 0, family = \"inconsolata\", size = 7) +\n  # faceta\n  facet_wrap(~ accion, nrow = 1) +\n  # ejes\n  labs(title = \"¿Qué hacen las ardillas en **Central Park**?\",\n       subtitle = glue(\n         \"Distribución espacial de {nrow(datos)} **ardillas** en \n         Central Park de acuerdo a las actividades que estaban \n         llevando a cabo al momento de ser avistadas. En la parte \n         inferior de cada panel se indica la cantidad de \n         observaciones. Las superficies en gris representan **cuerpos \n         de agua**.\"),\n       caption = mi_caption) +\n  scale_y_continuous(limits = c(21.53485, 21.60479), expand = c(0, 0)) +\n  # scale_y_continuous(expand = c(0, .0005)) +\n  # coord_sf(expand = FALSE) +\n  # tema\n  theme_void() +\n  theme(panel.background = element_rect(color = NA, linewidth = 2),\n    plot.background = element_rect(\n      fill = c1, color = c5, linewidth = 3),\n    plot.margin = margin(5, 25, 5, 25),\n    plot.title = element_markdown(\n      size = 45, family = \"playfair\", margin = margin(10, 5, 5, -5), color = c4),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_textbox_simple(\n      color = c4, size = 18, margin = margin(25, 0, 25, 0)),\n    plot.caption = element_markdown(\n      size = 15, hjust = .5, color = c2, margin = margin(25, 0, 5, 0)),\n    panel.spacing.x = unit(2, \"line\"),\n    strip.text = element_markdown(size = 20, vjust = 1))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_21/viz.png\",\n  width = 30,\n  height = 40.84,\n  units = \"cm\",\n  dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_21/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 21"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_12.html",
    "href": "tidytuesday/2023/semana_12.html",
    "title": "Semana 12",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(here)\nlibrary(ggtext)\nlibrary(glue)\nlibrary(fontawesome)\n\n# fuentes -----------------------------------------------------------------\n\nfont_add_google(name = \"Share Tech Mono\", family = \"share\") # nombres de programas\nfont_add_google(name = \"Heebo\", family = \"heebo\") # resto del texto\nfont_add_google(name = \"Roboto Mono\", family = \"roboto\") # título\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# íconos\nfont_add(\"fa-reg\", here(\"icon/Font Awesome 5 Free-Regular-400.otf\"))\nfont_add(\"fa-brands\", here(\"icon/Font Awesome 5 Brands-Regular-400.otf\"))\nfont_add(\"fa-solid\", here(\"icon/Font Awesome 5 Free-Solid-900.otf\"))\n\n# Sys.getenv(\"GITHUB_PAT\")\n# Sys.unsetenv(\"GITHUB_PAT\")\n\n# funciones ---------------------------------------------------------------\n\n# función p/agregar el punto de las unidades de mil\nf_punto &lt;- scales::label_number(big.mark = \".\", decimal.mark = \",\")\n\n# función p/escribir en mono, en blanco\nf_code &lt;- function(x) {\n  glue(\"&lt;span style='font-family:share; color:white'&gt;{x}&lt;/span&gt;\")\n}\n\n# datos -------------------------------------------------------------------\n\n# browseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-03-21/readme.md\")\ndatos_raw &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-03-21/languages.csv')\n\nglimpse(datos_raw)\n\ndatos_raw |&gt; \n  drop_na(line_comment_token) |&gt; \n  count(line_comment_token, sort = TRUE)\n\n# selecciono y renombro\ndatos_sub &lt;- datos_raw |&gt; \n  select(title, line_comment_token, wikipedia_daily_page_views, appeared) |&gt; \n  drop_na()\n\n# escribo los datos y leo\n# write_tsv(datos_saved, here(\"2023/semana 12/datos_saved.tsv\"))\n# datos_saved &lt;- read_tsv(here(\"2023/semana 12/datos_saved.tsv\"))\n\n# datos p/la figura\ndatos &lt;- datos_sub |&gt; \n  group_by(line_comment_token) |&gt; \n  slice_max(wikipedia_daily_page_views, n = 10) |&gt; \n  mutate(suma = sum(wikipedia_daily_page_views)) |&gt; \n  arrange(desc(suma), desc(wikipedia_daily_page_views)) |&gt; \n  ungroup() |&gt; \n  slice(1:50) |&gt; \n  rename(nombre = title, comentario = line_comment_token, \n         visitas = wikipedia_daily_page_views, año = appeared) |&gt; \n  mutate(nombre = fct_inorder(nombre)) |&gt; \n  mutate(nombre = fct_rev(nombre)) |&gt; \n  mutate(comentario = fct_reorder(comentario, -suma)) |&gt; \n  mutate(decada = año - (año %% 10)) |&gt; \n  mutate(decada = factor(decada)) |&gt; \n  mutate(suma = f_punto(x = suma)) |&gt; \n  mutate(comentario_label = glue(\"&lt;span style='font-size:25pt;background-color:#003354'&gt;{comentario}&lt;br&gt;&lt;/span&gt;&lt;br&gt;&lt;span style='font-size:9pt;'&gt;{suma}&lt;br&gt;visitas&lt;br&gt;totales&lt;/span&gt;\")) |&gt; \n  mutate(comentario_label = fct_inorder(comentario_label))\n\n# círculo que encierra el signo del comentario\ncirculo &lt;- datos |&gt; \n  distinct(comentario_label) |&gt; \n  mutate(x = 7600,\n         y = 5)\n\n# lenguaje más nuevo/viejo\nmin_max &lt;- bind_rows(datos |&gt; slice_max(año, n = 1),\n                     datos |&gt; slice_min(año, n = 1))\n\n# figura ------------------------------------------------------------------\n\n# caption\nicon_twitter &lt;- \"&lt;span style='font-family:fa-brands; color:white;'&gt;&#xf099;&lt;/span&gt;\"\nicon_github &lt;- \"&lt;span style='font-family:fa-brands; color:white;'&gt;&#xf09b;&lt;/span&gt;\"\nfuente &lt;- \"&lt;span style='color:white;'&gt;Datos:&lt;/span&gt; &lt;span style='color:#003354;'&gt;&lt;span style='font-family:share;'&gt;{**tidytuesdayR**}&lt;/span&gt; semana 12&lt;/span&gt;\"\nautor &lt;- \"&lt;span style='color:white;'&gt;Autor:&lt;/span&gt; &lt;span style='color:#003354;'&gt;**Víctor Gauto**&lt;/span&gt;\"\nsep &lt;- glue(\"&lt;span style = 'color:#a4cac8;'&gt;**|**&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style = 'color:#003354;'&gt;**vhgauto**&lt;/span&gt;\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# plot\ng1 &lt;- ggplot(data = datos, aes(x = visitas, y = nombre)) +\n  # segmentos\n  geom_segment(aes(x = 0, xend = visitas, yend = nombre), \n               linewidth = .5, color = \"#0970a5\") +\n  # puntos de cantidad de visitas\n  geom_point(aes(shape = decada), size = 1, color = \"white\", fill = \"#a4cac8\") +\n  # círculo alrededor del comentario\n  annotation_custom(grid::circleGrob(default.units=\"npc\",\n                                     x = 1.055,\n                                     y = .7,\n                                     r = .18,\n                                     gp = grid::gpar(col = \"white\", \n                                                     vjust = 0.5, \n                                                     hjust = 0.5, \n                                                     fill = \"#a4cac8\"))) +\n  # lenguajes más nuevo/viejo\n  geom_label(data = min_max[1, ], \n             aes(x = visitas+150, y = nombre, label = glue(\"El lenguaje más nuevo, {nombre}, aparece en {año} \")),\n             hjust = 0, vjust = .5, color = \"white\", family = \"mono\", size = 3,\n             fill = \"#5fb0b8\", label.size = 0, label.r = unit(0, \"line\")) +\n  geom_label(data = min_max[2, ], \n             aes(x = visitas+150, y = nombre, label = glue(\"El lenguaje más viejo, {nombre}, aparece en {año} \")),\n             hjust = 0, vjust = .5, color = \"white\", family = \"mono\", size = 3,\n             fill = \"#5fb0b8\", label.size = 0, label.r = unit(0, \"line\")) +\n  # faceta\n  facet_wrap(~ comentario_label, ncol = 1, scales = \"free\", \n             strip.position = \"right\") +\n  # manual\n  scale_x_continuous(breaks = seq(0, 7000, 1000),\n                     limits = c(0, 7500),\n                     expand = c(0, 0)) +\n  scale_shape_manual(values = c(3, 8, 21:24)) +\n  coord_cartesian(clip = \"off\") +\n  # ejes\n  labs(x = \"Visitas diarias a la entrada del lenguaje en Wikipedia\", y = NULL,\n       shape = \"Década de aparición:\",\n       title = \"Su &lt;span style='color:white'&gt;comentario&lt;/span&gt; no molesta\",\n       subtitle = glue(\n         \"Cada lenguaje de programación posee un caracter especial \n         que habilita los &lt;span style='color:white'&gt;comentarios&lt;/span&gt; en el \n         script. Se muestra una selección de &lt;span style='color:white'&gt;5&lt;/span&gt; \n         caracteres: [{f_code('//')}], [{f_code('#')}], [{f_code('-')}], \n         [{f_code('%')}] y [{f_code(';')}] y los 10 lenguajes más populares que \n         lo utilizan, de acuerdo a la cantidad de &lt;span style='color:white'&gt;visitas \n         diarias&lt;/span&gt; de sus correspondientes entradas en \n         &lt;span style='color:white'&gt;Wikipedia&lt;/span&gt;. Se indica también la \n         &lt;span style='color:white'&gt;decada&lt;/span&gt; de salida del lenguaje.\"),\n       caption = mi_caption) +\n  # guide\n  guides(shape = guide_legend(nrow = 1, override.aes = list(size = 3))) +\n  # tema\n  theme(aspect.ratio = .25,\n        legend.position = c(.45, 1.03),\n        legend.key.size = unit(1, \"line\"),\n        legend.text = element_text(family = \"share\"),\n        legend.title = element_text(hjust = .5, family = \"heebo\", color = \"#003354\"),\n        legend.direction = \"horizontal\",\n        legend.key = element_rect(fill = \"#5fb0b8\", color = NA),\n        legend.background = element_rect(fill = \"#5fb0b8\", color = NA),\n        plot.background = element_rect(fill = \"#5fb0b8\", color = \"white\",\n                                       linewidth = 3),\n        plot.title = element_markdown(size = 35, margin = margin(0, 5, 5, 5),\n                                      family = \"roboto\", color = \"#003354\"),\n        plot.title.position = \"plot\",\n        plot.subtitle = element_textbox_simple(margin = margin(5, 5, 30, 5),\n                                               color = \"#003354\"),\n        plot.caption = element_markdown(hjust = .5, size = 10, \n                                        margin = margin(20, 0, 0, 0)),\n        plot.caption.position = \"plot\",\n        plot.margin = margin(16.4, 16, 16.4, 16),\n        panel.grid = element_line(linewidth = .1, color = \"grey90\"),\n        panel.grid.minor = element_blank(),\n        panel.background = element_rect(fill = \"#a4cac8\", color = NA),\n        panel.grid.major.y = element_blank(),\n        axis.ticks = element_blank(),\n        axis.title.x = element_text(family = \"heebo\", color = \"#003354\",\n                                    margin = margin(5, 0, 0, 0)),\n        axis.text = element_text(family = \"share\", color = \"black\"),\n        strip.background.y = element_rect(fill = NA, color = NA),\n        strip.text.y.right = element_markdown(angle = 0, color = \"#003354\",\n                                              family = \"heebo\"))\n\n# guardo\nggsave(plot = g1,\n       filename = here(\"2023/semana 12/viz.png\"),\n       width = 19,\n       height = 27,\n       dpi = 300,\n       units = \"cm\")\n# abro\nbrowseURL(here(\"2023/semana 12/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 12"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_33.html",
    "href": "tidytuesday/2023/semana_33.html",
    "title": "Semana 33",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores, Nord\nc1 &lt;- \"#AD8CAE\"\nc2 &lt;- \"#EDDAEB\"\nc3 &lt;- \"#222B4C\"\nc4 &lt;- \"white\"\nc5 &lt;- \"black\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# números, porcentajes, cantidades\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# eje horizontal, temporadas\nfont_add_google(name = \"Tilt Prism\", family = \"tilt\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 33. *spam* dataset en {{kernlab}}&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-08-15/readme.md\")\n\nspam &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-15/spam.csv')\n\n# me interesan los elementos relativos al dinero: money, dollar, n000\n# cómo se diferencian los e-mails que son o NO son spam\n\n# tiene que tener los elementos: porcentajes &gt; 0\nd &lt;- spam |&gt; \n  select(dollar, money, n000, yesno) |&gt; \n  pivot_longer(cols = -yesno, names_to = \"param\", values_to = \"valor\") |&gt; \n  filter(valor != 0)\n\n# figura ------------------------------------------------------------------\n\n# líneas de referencia horizontales\nlineas_tbl &lt;- tibble(\n  y = c(120, 60, 80, 40, 80, 40),\n  param = c(\"dollar\", \"dollar\", \"money\", \"money\", \"n000\", \"n000\")\n)\n\n# cantidad de datos, para agregar en las esquinas\nd_cantidad &lt;- d |&gt; \n  count(yesno, param) |&gt; \n  inner_join(\n    slice_max(\n      lineas_tbl, \n      order_by = y, \n      n = 3), \n    by = join_by(param))\n\n# cantidad de e-mails que SÍ son spam\nd_yes &lt;- d_cantidad |&gt; \n  filter(yesno == \"y\") |&gt; \n  mutate(label = glue(\"n = {n}\"))\n\n# cantidad de e-mails que NO son spam\nd_no &lt;- d_cantidad |&gt; \n  filter(yesno == \"n\") |&gt; \n  mutate(label = glue(\"n = {n}\"))\n\n# etiquetas para los strips\netiq &lt;- c(\n  dollar = \"**$**\",\n  money = \"**money**\",\n  n000 = \"**000**\"\n)\n\n# colores para representar SÍ/NO es spam\nyesno_colores &lt;- c(SÍ = alpha(\"white\", .9), NO = alpha(\"black\", .9))\n\n# título y subtítulo\n# palabra SPAM en blanco y negro\nspam_blanco &lt;- \"&lt;b style='color:white;'&gt;SPAM&lt;/b&gt;\"\nspam_negro &lt;- \"&lt;b style='color:black;'&gt;SPAM&lt;/b&gt;\"\n\nmi_title &lt;- glue(\"{spam_blanco}{spam_negro}{spam_blanco}{spam_negro}\")\n\nmi_subt &lt;- glue(\n  \"¿Qué caracteriza al **spam**? Por lo visto, hablar de plata. \n  Al analizar {nrow(d)} e-mails, se\n  contabilizó el porcentaje de términos relativos al dinero: \n  el signo **$**, la palabra **money** y tres ceros **000**.\n  Se indican las cantidades (n) de e-mails en cada panel.\")\n\n# figura\ng &lt;- d |&gt; \n  mutate(yesno = if_else(yesno == \"y\", \"SÍ\", \"NO\")) |&gt; \n  mutate(yesno = factor(yesno, levels = c(\"SÍ\", \"NO\"))) |&gt;\n  ggplot(aes(valor, fill = yesno, color = yesno)) +\n  # horizontales\n  geom_hline(\n    data = lineas_tbl, aes(yintercept = y), \n    linetype = 3, color = c2) +\n  # cantidad, eje vertical, línea horizontal\n  geom_text(\n    data = lineas_tbl, aes(x = 0, y = y, label = y), inherit.aes = FALSE,\n    hjust = 0, vjust = 0, nudge_y = 1, family = \"victor\", color = c2, size = 3) +\n  # línea de frecuencia\n  geom_freqpoly(\n    binwidth = .075, alpha = .9) +\n  # cantidades, n, YES\n  geom_text(\n    data = d_yes, aes(2, y, label = label), inherit.aes = FALSE,\n    hjust = 0, vjust = 0, color = yesno_colores[\"SÍ\"], nudge_y = +1,\n    family = \"victor\", size = 4, fontface = \"bold\") +\n  # cantidades, n, NO\n  geom_text(\n    data = d_no, aes(2, y, label = label), inherit.aes = FALSE,\n    hjust = 0, vjust = 1, color = yesno_colores[\"NO\"], nudge_y = -1,\n    family = \"victor\", size = 4, fontface = \"bold\") +\n  # facetas\n  facet_wrap(vars(param), scales = \"free\", labeller = as_labeller(etiq)) +\n  # escalas\n  scale_x_log10(\n    breaks = c(.01, .1, 1, 10),\n    labels = c(\"0,01%\", \"0,1%\", \"1%\", \"10%\")) +\n  scale_y_continuous(expand = c(0, 0)) +\n  scale_color_manual(\n    values = yesno_colores, \n    labels = c(\"&lt;b style='color:white;'&gt;SÍ&lt;/b&gt;\", \"&lt;b style='color:black;'&gt;NO&lt;/b&gt;\")) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = mi_title,\n    subtitle = mi_subt,\n    x = \"Porcentaje del total de caracteres del e-mail&lt;br&gt;&lt;span style='font-size:10pt'&gt;*escala logarítmica*&lt;/span&gt;\",\n    y = \"Cantidad\",\n    color = \"¿Es spam?    \",\n    caption = mi_caption) +\n  guides(\n    color = guide_legend(\n      override.aes = list(linewidth = 4))\n  ) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    plot.background = element_rect(\n      fill = c1, color = c2, linewidth = 3),\n    plot.margin = margin(15, 20, 10, 15),\n    plot.title = element_markdown(size = 76, family = \"tilt\"),\n    plot.subtitle = element_textbox_simple(\n      family = \"ubuntu\", size = 14, color = c3),\n    plot.caption = element_markdown(\n      hjust = 1, color = c2, margin = margin(10, 0, 0, 0)),\n    axis.text.x = element_text(color = c2, family = \"victor\"),\n    axis.text.y = element_blank(),\n    axis.title.x = element_markdown(\n      color = c3, margin = margin(10, 0, 5, 0), family = \"ubuntu\", size = 17),\n    axis.title.y = element_markdown(color = c3, family = \"ubuntu\", size = 17),\n    axis.ticks.x = element_line(color = c2),\n    panel.spacing.x = unit(1, \"cm\"),\n    panel.grid = element_blank(),\n    strip.text = element_markdown(\n      color = c3, family = \"ubuntu\", size = 15,\n      margin = margin(5, 0, 30, 0)),\n    legend.position = \"top\",\n    legend.margin = margin(10, 0, 5, 0),\n    legend.title = element_text(family = \"ubuntu\", color = c3, size = 14),\n    legend.text = element_markdown(family = \"ubuntu\", size = 12)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_33/viz.png\",\n  width = 30,\n  height = 19.17,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_33/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 33"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_51.html",
    "href": "tidytuesday/2023/semana_51.html",
    "title": "Semana 51",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#E1C59A\"\nc2 &lt;- \"#E59A52\"\nc3 &lt;- \"#660B1F\"\nc4 &lt;- \"#094568\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# calificación IMDB\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 51. \",\n  \"Internet Movie Database&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\nimdb_logo &lt;- glue(\n  \"&lt;span style='font-family:fa-brands; font-size:30pt'&gt;\",\n  \"&#xf2d8;&lt;/span&gt;\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-12-19/readme.md\")\n\nholiday_episodes &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-19/holiday_episodes.csv')\nholiday_episode_genres &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-19/holiday_episode_genres.csv')\n\n# me interesa ver la relación entre la popularidad de los episodios y su \n# calificación\n\nd &lt;- holiday_episodes |&gt; \n  select(year, num_votes, primary_title, parent_primary_title, average_rating) |&gt; \n  drop_na(year) |&gt; \n  mutate(decada = year - year %% 10) |&gt; \n  mutate(decada = factor(decada))\n\n# destaco el episodio más popular\nd_pop &lt;- d |&gt; \n  slice_max(order_by = num_votes, n = 1) |&gt; \n  mutate(\n    x = 8.5, y = num_votes*.8, xend = average_rating*.99, yend = num_votes) |&gt; \n  mutate(label = glue(\n    \"&lt;span style = 'family-font:ubuntu; font-size: 15pt'&gt;\",\n    \"**{parent_primary_title}**&lt;/span&gt;&lt;br&gt;\",\n    \"&lt;span style = 'family-font:ubuntu; font-size: 12pt'&gt;\",\n    \"*{primary_title}*&lt;/span&gt;\"))\n\n# porcentaje de episodios con puntaje &gt;= a 7\nporcentaje_7 &lt;- d |&gt; \n  mutate(es_bueno = average_rating &gt;= 7) |&gt; \n  reframe(es_bueno_prop = mean(es_bueno)) |&gt; \n  pull() |&gt; \n  gt::vec_fmt_percent(decimals = 0)\n\n# figura ------------------------------------------------------------------\n\n# título y subtítulo\nmi_titulo &lt;- \"Especiales navideños&lt;br&gt;en las series\"\nmi_subtitulo &lt;- glue(\n  \"El **{porcentaje_7}** de los episodios de Navidad&lt;br&gt;\",\n  \"de las series tiene un puntaje&lt;br&gt;\",\n  \"en IMDb de **7** o superior.\")\n\n# figura\ng &lt;- ggplot(d, aes(average_rating, num_votes)) +\n  geom_point(size = 5, alpha = .4, color = c3) +\n  geom_curve(\n    data = d_pop, aes(x, y, xend = xend, yend = yend), curvature = -.1,\n    arrow = arrow(angle = 10, length = unit(.7, \"line\"), type = \"closed\"),\n    color = c3) +\n  geom_richtext(\n    data = d_pop, aes(x-.8, y, label = label), color = c4,\n    family = \"ubuntu\", hjust = 0, vjust = 1, fill = c1, label.color = NA) +\n  annotate(\n    geom = \"richtext\", x = 1, y = 9e4, label = mi_titulo, family = \"serif\",\n    color = c3, size = 20, hjust = 0, vjust = 1, lineheight = unit(.8, \"line\"),\n    label.color = NA, fill = alpha(c1, .6)) +\n  annotate(\n    geom = \"richtext\", x = 1, y = 2e4, label = mi_subtitulo, family = \"ubuntu\",\n    color = c4, size = 7, hjust = 0, vjust = 1, lineheight = unit(.9, \"line\"),\n    label.color = NA, fill = alpha(c1, .6)) +\n  scale_x_continuous(\n    breaks = seq(1, 10, 1), limits = c(.9, 10.1), expand = c(0, 0)) +\n  scale_y_log10(\n    breaks = 10^((seq(0, 6, 1))),\n    labels = scales::label_number(big.mark = \".\", decimal.mark = \",\"),\n    limits = c(9, 1.1e5), expand = c(0, 0)) +\n  labs(\n    x = glue(\"Calificación {imdb_logo}\"), y = glue(\"Popularidad {imdb_logo}\"),\n    caption = mi_caption) +\n  coord_cartesian(clip = \"off\") +\n  theme_minimal() +\n  theme(\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    plot.caption = element_markdown(family = \"ubuntu\", size = 12, color = c4),\n    panel.grid = element_line(\n      color = c2, linetype = \"ff\", linewidth = .3),\n    panel.grid.minor = element_blank(),\n    axis.title.x = element_markdown(\n      size = 20, hjust = .5, family = \"ubuntu\", color = c4, \n      margin = margin(t = 10)),\n    axis.title.y = element_markdown(\n      size = 20, hjust = .5, family = \"ubuntu\", color = c4, \n      margin = margin(t = 10)),\n    axis.text = element_text(family = \"victor\", size = 15, color = c4))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_51/viz.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_51/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 51"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_28.html",
    "href": "tidytuesday/2023/semana_28.html",
    "title": "Semana 28",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuentes -----------------------------------------------------------------\n\n# colores\nc1 &lt;- \"grey30\"\nc2 &lt;- \"grey70\"\nc3 &lt;- \"white\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# anomalías de temperatura\nfont_add_google(name = \"Inconsolata\", family = \"inconsolata\")\n# años\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\")\n# título\nfont_add_google(name = \"Gloock\", family = \"gloock\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 28, GISS Surface Temperature Analysis&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-07-11/readme.md\")\n\nglobal_temps &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-07-11/global_temps.csv')\n\n# elijo las anomalía anual (j_d)\nd &lt;- global_temps |&gt; \n  janitor::clean_names() |&gt; \n  select(year, j_d) |&gt; \n  drop_na()\n\n# figura ------------------------------------------------------------------\n\n# valores de anomalía de temperatura formateados\nanom &lt;- tibble(j_d = seq(-.50, 1.25, .50)) |&gt; \n  mutate(label = gt::vec_fmt_number(j_d, decimals = 1, pattern = \"{x}°C\", sep_mark = \".\", dec_mark = \",\"))\n\n# título de la figura\ntitulo &lt;- tibble(\n  x = 1890,\n  y = 1,\n  label = \"Anomalía de temperatura&lt;br&gt;superficial global\"\n)\n\n# subtítulo de la figura\nsubtitulo &lt;- tibble(\n  x = 1890,\n  y = .85,\n  label = \"Las desviaciones se consideran a&lt;br&gt;partir de la media entre 1951-1980.\"\n)\n\n# figura\ng &lt;- ggplot(data = d, aes(x = year, y = j_d)) +\n  # fondo de anomalías\n  geom_raster(aes(y = 1, fill = j_d)) +\n  geom_raster(aes(y = 0, fill = j_d)) +\n  geom_raster(aes(y = -1, fill = j_d)) +\n  # horizontales de anomalía de temperatura\n  geom_hline(yintercept = anom$j_d, color = c2, linetype = 3, linewidth = .3) +\n  # etiquetas de anomalías de temperatura\n  geom_text(\n    data = anom, aes(x = 1880, y = j_d, label = label), inherit.aes = FALSE,\n    angle = 0, hjust = 0, vjust = 0, color = \"gold\", family = \"inconsolata\", size = 7) +\n  # anomalías de temperatura\n  geom_line(linewidth = 1.5, color = \"white\", lineend = \"round\") +\n  geom_line(linewidth = 1, color = c2, lineend = \"round\") +\n  geom_line(linewidth = .25, color = \"black\", lineend = \"round\") +\n  # título\n  geom_richtext(\n    data = titulo, aes(x = x, y = y, label = label), \n    family = \"gloock\", size = 12, hjust = 0, vjust = .5, fill = alpha(c1, .6),\n    label.color = NA, color = c3) +\n  # subtítulo\n  geom_richtext(\n    data = subtitulo, aes(x = x, y = y, label = label), \n    family = \"ubuntu\", size = 7, hjust = 0, vjust = .5, fill = alpha(c1, .6),\n    label.color = NA, color = c3) +\n  # maual\n  scale_fill_viridis_c(option = \"inferno\") +\n  # ejes\n  scale_x_continuous(breaks = seq(1800, 2020, 20)) +\n  labs(x = NULL, y = NULL, caption = mi_caption) +\n  coord_cartesian(expand = FALSE, ylim = c(-.55, 1.1), clip = \"on\") +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(67, 67, 15, 67),\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    plot.caption.position = \"plot\",\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c2, size = 11, margin = margin(15, 0, 0, 0)),\n    axis.text.x = element_text(\n      color = \"gold\", family = \"bebas\", hjust = 0, size = 30),\n    axis.ticks.x = element_line(color = \"black\", linewidth = .75),\n    axis.ticks.length.x = unit(.2, \"line\"),\n    legend.position = \"none\",\n    panel.grid = element_blank()\n  )\n\n# guardo\nggsave(\n    plot = g,\n    filename = \"2023/semana_28/viz.png\",\n    width = 30,\n    height = 30,\n    units = \"cm\",\n    dpi = 300\n  )\n\n# abro\nbrowseURL(\"2023/semana_28/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 28"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_37.html",
    "href": "tidytuesday/2023/semana_37.html",
    "title": "Semana 37",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores, RColorBrewer, Set1\nc1 &lt;- \"grey10\"\nc2 &lt;- \"#EE9569\"\nc3 &lt;- \"#75AEE0\"\nc4 &lt;- \"#CAB2D6\"\nc5 &lt;- \"#FDBF6F\"\nc6 &lt;- \"grey90\"\nc7 &lt;- \"grey40\"\n\n# texto gral, categorías (eje vertical)\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# horas, porcentajes\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# título\nfont_add_google(name = \"Taviraj\", family = \"taviraj\")\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:victor;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 37. The Human Chronome Project&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-09-12/readme.md\")\n\nall_countries &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-09-12/all_countries.csv')\nglobal_human_day &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-09-12/global_human_day.csv')\n\n# me interesan una selección de categorías, y comparo Argentina con el mundo\n\n# traducción de las categorías\nsubcat_trad &lt;- c(\n  `Food preparation` = \"Preparación de comida\",\n  `Sleep & bedrest` = \"Dormir y descanso\",\n  `Physical child care` = \"Cuidado de niños\",\n  `Health care` = \"Cuidado de la salud\",\n  `Hygiene & grooming` = \"Higiene y aseo\",\n  `Schooling & research` = \"Escuela e investigación\",\n  `Religious practice` = \"Práctica religiosa\",\n  `Social` = \"Actividades sociales\",\n  `Active recreation` = \"Actividades recreativas\",\n  `Meals` = \"Comidas\"\n)\n\n# categorías de interés, en inglés\nsubcat_interes &lt;- names(subcat_trad)\n\n# Argentina\narg &lt;- all_countries |&gt; \n  filter(country_iso3 == \"ARG\") |&gt; \n  rename_with(.cols = everything(), .fn = str_to_lower) |&gt; \n  rename(hr = hoursperdaycombined) |&gt; \n  filter(subcategory %in% subcat_interes) |&gt; \n  mutate(categ = subcat_trad[subcategory]) |&gt; \n  select(categ, hr)\n\n# mundo\nmundo &lt;- global_human_day |&gt; \n  rename_with(.cols = everything(), .fn = str_to_lower) |&gt; \n  rename(hr = hoursperday) |&gt; \n  filter(subcategory %in% subcat_interes) |&gt; \n  mutate(categ = subcat_trad[subcategory]) |&gt; \n  select(categ, hr)\n\n# calculo la diferencia entre horas por categorías, Argentina y el mundo\n# agrego el porcentaje del día que representa c/categoría\nd1 &lt;- bind_rows(\n  arg |&gt; mutate(grupo = \"Argentina\"),\n  mundo |&gt; mutate(grupo = \"Mundo\")) |&gt; \n  pivot_wider(names_from = grupo, values_from = hr) |&gt; \n  mutate(porcent = Argentina/24) |&gt; \n  mutate(porcent = gt::vec_fmt_percent(porcent, decimals = 1, dec_mark = \",\", sep_mark = \"\")) |&gt; \n  mutate(label = glue(\"&lt;span style='font-size:30px'&gt;{porcent}&lt;/span&gt;\")) |&gt; \n  rowwise() |&gt; \n  mutate(x = max(c(Argentina, Mundo))) |&gt; \n  mutate(categ = str_wrap(categ, width = 15))\n  \n# transformo a tabla larga para graficar\nd2 &lt;- d1 |&gt; \n  pivot_longer(cols = c(Argentina, Mundo), names_to = \"grupo\", values_to = \"hm\") |&gt; \n  mutate(grupo = fct(grupo, levels = c(\"Mundo\", \"Argentina\"))) |&gt; \n  mutate(categ = str_wrap(categ, width = 15)) |&gt; \n  mutate(categ = fct_reorder(categ, hm))\n\n# figura ------------------------------------------------------------------\n\n# título y subtítulo\nmi_tit &lt;- \"UN DÍA ARGENTINO\"\nmi_sub &lt;- glue(\n  \"Más de un tercio del día la pasamos&lt;br&gt;descansando y durmiendo.&lt;br&gt;&lt;br&gt;\n  Se comparan las horas dedicadas&lt;br&gt;\n  por &lt;b style='color:{c3}'&gt;argentinos&lt;/b&gt; y el &lt;b style='color:{c2}'&gt;promedio\n  mundial&lt;/b&gt;&lt;br&gt;en 10 actividades cotidianas seleccionadas.&lt;br&gt;&lt;br&gt;\n  Se agregan los porcentajes que cada&lt;br&gt;\n  actividad nos ocupa en el día.\")\n\n# figura\ng &lt;- ggplot(d2, aes(hm, categ, color = grupo, fill = grupo)) +\n  geom_col(\n    position = position_dodge(width = .9), show.legend = FALSE, width = .1) +\n  geom_point(\n    position = position_dodge(width = .9), show.legend = FALSE, size = 4) +\n  geom_richtext(\n    data = d1, aes(x+.25, categ, label = label), inherit.aes = FALSE,\n    family = \"victor\", color = c6,\n    label.color = NA, fill = NA, hjust = 0, position = position_dodge(width = .9)) +\n  annotate(\n    geom = \"richtext\", x = 3.25, y = 2, hjust = 0, vjust = 0, label = mi_sub,\n    label.color = c7, label.margin = unit(rep(2, 4), \"lines\"), fill = c1, \n    color = c6, size = 7.5, family = \"ubuntu\") +\n  scale_x_continuous(\n    breaks = seq(1, 10, 1),\n    expand = c(0, 0),\n    limits = c(0, 10),\n    labels = scales::label_number(suffix = \"H\")) +\n  scale_color_manual(values = c(c2, c3)) +\n  scale_fill_manual(values = c(c2, c3)) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = mi_tit,\n    caption = mi_caption,\n    x = \"Horas diarias dedicadas a la actividad\", y = NULL) +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(8.25, 40, 8.25, 20),\n    plot.background = element_rect(fill = c1, color = c6, linewidth = 3),\n    plot.title = element_text(\n      family = \"taviraj\", size = 70, color = \"white\", hjust = .5,\n      margin = margin(15, 0, 5, 0)),\n    plot.title.position = \"plot\",\n    plot.caption = element_markdown(\n      color = c6, family = \"ubuntu\", hjust = 1, size = 10, \n      margin = margin(10, 0, 0, 0)),\n    panel.background = element_rect(fill = c1, color = NA),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_line(\n      linewidth = .1, linetype = \"8f\", color = c7),\n    panel.grid.major.y = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title.x = element_text(\n      family = \"ubuntu\", color = c6, size = 20, margin = margin(10, 0, 0, 0)),\n    axis.text.y = element_text(\n      size = 20, family = \"sans\", color = c6, margin = margin(0, 10, 0, 0)),\n    axis.text.x = element_text(size = 15, family = \"victor\", color = c6)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_37/viz.png\",\n  width = 30,\n  height = 29,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_37/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 37"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_42.html",
    "href": "tidytuesday/2023/semana_42.html",
    "title": "Semana 42",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores\n# scales::show_col(tayloRswift::swift_palettes$lover)\nc1 &lt;- \"#76BAE0\"\nc2 &lt;- \"#0E3D5B\"\nc3 &lt;- \"#B8396B\"\nc4 &lt;- \"#FFD1D7\"\nc5 &lt;- \"grey10\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# ejes, explicaciones\nfont_add_google(name = \"Victor Mono\", family = \"victor\")\n# esquina (sentimientos)\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\")\n# Taylor Swift\nfont_add_google(name = \"Pattaya\", family = \"pattaya\")\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{tidytuesdayR}}&lt;/span&gt; semana 42. \",\n  \"&lt;span style='font-family:victor'&gt;{{taylor}}&lt;/span&gt;, \",\n  \"**W. Jake Thompson**&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-10-17/readme.md\")\n\ntaylor_all_songs &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-10-17/taylor_all_songs.csv')\n\n# origen de la idea del plano\nbrowseURL(\"https://medium.com/@gregory2/visualizing-gorillaz-in-r-how-to-analyze-artists-using-spotifyr-ebae3e05491b\")\n\n# me interesa analizar todas las canciones (que pertenezcan a algún álbum),\n# de acuerdo a su valencia (positividad) y energía (intensidad/actividad)\n# en base a esos dos parámetros, puedo establecer un plano de coordenadas\n# que tiene en las esquinas cuatro sentimientos: enojo, felicidad, tristeza y\n# tranquilidad\n\n# explicación de c/feature\nbrowseURL(\"https://developer.spotify.com/documentation/web-api/reference/get-several-audio-features\")\n\n# álbums que me interesan\nalbum_tay &lt;- c(\n  \"Taylor Swift\", \"Fearless (Taylor's Version)\", \"Speak Now\", \"1989\", \"evermore\",\n  \"Red (Taylor's Version)\", \"reputation\", \"Lover\", \"folklore\", \"Midnights\",\n  \"The Taylor Swift Holiday Collection\")\n\n# convierto el vector de nombres de álbum a factor\nalbum_select &lt;- taylor_all_songs |&gt; \n  select(album_release, album_name) |&gt; \n  filter(album_name %in% album_tay) |&gt; \n  drop_na() |&gt; \n  mutate(album_name = fct_reorder(album_name, album_release)) |&gt; \n  mutate(album_name = fct_rev(album_name)) |&gt; \n  distinct(album_name) |&gt; \n  pull()\n\n# todas las canciones\nd &lt;- taylor_all_songs |&gt; \n  select(album_name, track_name, valence, energy) |&gt; \n  filter(album_name %in% album_tay) |&gt; \n  drop_na() |&gt; \n  mutate(album_name = fct(album_name, levels = as.character(album_select))) |&gt; \n  mutate(album_name = str_to_upper(album_name))\n\n# canciones extremas de sentimientos\n# calculo la distancia entre los puntos y el centro del cuadrante\n# divido por cuadrante y obtengo un representante extremo por cada sentimiento\n# contenta\nd_contenta &lt;- d |&gt; \n  filter(between(valence, .5, 1) & between(energy, .5, 1)) |&gt; \n  mutate(distancia = sqrt((valence - .5)^2 + (energy - .5)^2)) |&gt; \n  slice_max(order_by = distancia, n = 1)\n\n# enojada\nd_enojada &lt;- d |&gt; \n  filter(between(valence, 0, .5) & between(energy, .5, 1)) |&gt; \n  mutate(distancia = sqrt((valence - .5)^2 + (energy - .5)^2)) |&gt; \n  slice_max(order_by = distancia, n = 1)\n\n# triste\nd_triste &lt;- d |&gt; \n  filter(between(valence, 0, .5) & between(energy, 0, .5)) |&gt; \n  mutate(distancia = sqrt((valence - .5)^2 + (energy - .5)^2)) |&gt; \n  slice_max(order_by = distancia, n = 1)\n\n# tranquila\nd_tranquila &lt;- d |&gt; \n  filter(between(valence, .5, 1) & between(energy, 0, .5)) |&gt; \n  mutate(distancia = sqrt((valence - .5)^2 + (energy - .5)^2)) |&gt; \n  slice_max(order_by = distancia, n = 1)\n\n# sentimientos extremos\nd_extremos &lt;- bind_rows(d_contenta, d_enojada, d_triste, d_tranquila)\n\n# figura ------------------------------------------------------------------\n\n# paleta de colores para los puntos (canciones)\npaleta &lt;- MoMAColors::moma.colors(palette_name = \"Fritsch\")\n\n# colores p/c álbum\nalbum_color &lt;- c(\n  rep(paleta[1], 3),\n  rep(paleta[2], 3),\n  rep(paleta[3], 3),\n  rep(paleta[4], 2))\n\n# formas p/c álbum\nalbum_shape &lt;- rep(c(21, 22, 23, 24), 3)\n\n# ejes en la mitad del plano\nejes_tbl &lt;- tibble(\n  x = c(0, .5), y = c(.5, 0), xend = c(1, .5), yend = c(.5, 1))\n\n# grilla de líneas de trazos\ngrilla_v &lt;- tibble(\n  x = seq(.1, .9, .1), y = 0, xend = seq(.1, .9, .1), yend = 1)\n\n# etiquetas de sentimientos en las esquinas del plano\nsentimiento &lt;- tibble(\n  label = c(\"enojada\", \"contenta\", \"triste\", \"tranquila\"),\n  x = c(-Inf, Inf, -Inf, Inf),\n  y = c(Inf, Inf, -Inf, -Inf),\n  hjust = c(0, 1, 0, 1),\n  vjust = c(1, 1, 0, 0))\n\n# flechas, que unen tapas de álbum p/canciones extremas y los puntos\nflechas_tbl &lt;- tibble(\n  x = d_extremos$valence*1,\n  y = d_extremos$energy*1,\n  xend = c(1.05, .2, .2, .7),\n  yend = c(.85, .9, .1, .15))\n\n# imágenes de las tapas de álbum\ntapa_album &lt;- list.files(\"2023/semana_42/\", pattern = \"ts\", full.names = TRUE)\n\n# etiqueta de las canciones extremas, con nombre de la canción y la tapa del\n# álbum\nimg_album &lt;- tibble(\n  x = flechas_tbl$xend,\n  y = flechas_tbl$yend,\n  track = d_extremos$track_name,\n  path = c(tapa_album[1], tapa_album[4], tapa_album[3], tapa_album[2])) |&gt; \n  mutate(track = str_wrap(track, 18)) |&gt; \n  mutate(track = str_replace_all(track, \"\\n\", \"&lt;br&gt;\")) |&gt; \n  mutate(label = glue(\n    \"&lt;img src='{path}' width='75' /&gt;&lt;br&gt;\",\n    \"&lt;span style='font-family:ubuntu;'&gt;*{track}*&lt;/span&gt;\")) |&gt; \n  mutate(hjust = c(0, 1, 0, 0)) |&gt; \n  mutate(vjust = c(0, 1, 1, 0))\n\n# puntos que representan el álbum entero (mediana)\nd_resumen &lt;- d |&gt; \n  summarise(\n    valence = median(valence),\n    energy = median(energy),\n    .by = album_name)\n\n# explicación de los ejes del plano\nejes_explic &lt;- tibble(\n  x = c(1, .5, .03, .5),\n  y = c(.5, .97, .5, 0),\n  label = c(\"LETRAnPOSITIVA\", \"MÁSnENERGÍA\", \"LETRAnNEGATIVA\", \"MENOSnENERGÍA\"),\n  angle = c(0, 90, 0, 90),\n  hjust = c(1, 1, 0, 0),\n  vjust = c(0, 0, 0, 0))\n\n# explicación de los íconos pequeños/grandes\nicono_grande &lt;- \"► Íconos grandes representannla mediana del álbum\"\nicono_peque &lt;- \"► Íconos pequeños representanncanciones individuales\"\n\nicono_tbl &lt;- tibble(\n  x = c(.54, .935),\n  y = c(.455, .71),\n  label = c(icono_grande, icono_peque))\n\n# figura\ng &lt;- ggplot(d, aes(valence, energy)) +\n  # grilla\n  geom_vline(\n    xintercept = seq(.1, .9, .1), color = c4, linetype = \"8f\", \n    linewidth = .2) +\n  geom_hline(\n    yintercept = seq(.1, .9, .1), color = c4, linetype = \"8f\", \n    linewidth = .2) +\n  # etiqueta de las esquinas\n  geom_text(\n    data = sentimiento, aes(x, y, label = label, hjust = hjust, vjust = vjust),\n    family = \"bebas\", size = 15, color = c2, inherit.aes = FALSE) +\n  # ejes\n  geom_segment(\n    data = ejes_tbl, aes(x, y, xend = xend, yend = yend), inherit.aes = FALSE,\n    color = c3, linewidth = 1, linetype = 1, alpha = .9,\n    arrow = arrow(\n      angle = 15, length = unit(.75, \"line\"), ends = \"both\", type = \"open\")) +\n  # centro del plano\n  annotate(\n    geom = \"point\", x = .5, y = .5, size = 3, color = c3, shape = 10, \n    alpha = .9, stroke = 1.5) +\n  # explicación de los íconos\n  geom_text(\n    data = icono_tbl, aes(x, y, label = label), inherit.aes = FALSE,\n    color = c2, hjust = 0, vjust = 1, family = \"victor\", size = 3) +\n  # explicación de los ejes del plano\n  geom_text(\n    data = ejes_explic, inherit.aes = FALSE,\n    aes(x, y, label = label, angle = I(angle), hjust = hjust, vjust = vjust),\n    family = \"victor\", fontface = \"italic\", size = 3, color = c2,\n    nudge_x = -.01, nudge_y = .01) +\n  # flechas\n  geom_curve(\n    data = flechas_tbl, aes(x, y, xend = xend, yend = yend), \n    inherit.aes = FALSE, curvature = .15, color = c3,\n    arrow = arrow(angle = 20, length = unit(.4, \"line\"), type = \"closed\")) +\n  # etiqueta de las canciones extremas\n  geom_richtext(\n    data = img_album, aes(x, y, label = label, hjust = hjust, vjust = vjust), \n    inherit.aes = FALSE, fill = c2, label.color = NA, \n    color = c4, label.r = unit(0, \"line\")) +\n  # canciones individuales\n  geom_point(\n    aes(color = album_name, shape = album_name, fill = album_name), \n    size = 2, show.legend = TRUE, stroke = .5) +\n  # álbums individuales (medianas)\n  geom_point(data = d_resumen,\n    aes(valence, energy, color = album_name, shape = album_name, \n        fill = album_name),\n    size = 7, alpha = .8, show.legend = FALSE, stroke = 2, color = c5) +\n  # caption\n  annotate(\n    geom = \"richtext\", x = 1.35, y = -.082, label = mi_caption, color = c2,\n    family = \"ubuntu\", size = 3.5, hjust = 1, fill = NA, label.color = NA) +\n  # manual\n  scale_color_manual(values = album_color) +\n  scale_fill_manual(values = alpha(album_color, .4)) +\n  scale_shape_manual(values = album_shape) +\n  coord_cartesian(\n    xlim = c(0, 1), ylim = c(0, 1), expand = FALSE, clip = \"off\") +\n  labs(\n    x = NULL, y = NULL, color = NULL, shape = NULL, fill = NULL,\n    title = \"Taylor Swift\") +\n  guides(\n    color = guide_legend(override.aes = list(size = 4, stroke = 1))) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(21.2, 234, 71.2, 29),\n    plot.background = element_rect(\n      fill = c1, color = c3, linewidth = 3),\n    plot.title = element_text(\n      family = \"pattaya\", color = c3, size = 140, hjust = -.5,\n      margin = margin(5, 0, 25, 0)),\n    plot.title.position = \"panel\",\n    panel.grid = element_blank(),\n    legend.text = element_text(family = \"ubuntu\", color = c2, face = \"bold\"),\n    legend.background = element_rect(\n      fill = c1, color = c2, linetype = 3, linewidth = .2),\n    legend.position = c(1.02, .16),\n    legend.margin = margin(0, 3, 2, 0),\n    legend.justification = c(0, 0),\n    axis.text = element_blank()\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_42/viz.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_42/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 42"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_43.html",
    "href": "tidytuesday/2023/semana_43.html",
    "title": "Semana 43",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nMoMAColors::moma.colors(palette_name = \"Flash\") |&gt; \n  as.character()\nc1 &lt;- \"#E3C0DB\"\nc2 &lt;- \"#41045A\"\nc3 &lt;- \"#900C7E\"\nc4 &lt;- \"#DB95CB\"\nc5 &lt;- \"#140E3A\"\nc6 &lt;- \"#C049A6\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# rango de años, eje horizontal\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\")\n# porcentajes, eje vertical\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# título\nfont_add_google(name = \"Abril Fatface\", family = \"abril\")\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\nfont_add(\"fa-regular\", \"icon/Font Awesome 6 Free-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 43. \",\n  \"R/Pharma Conference, \",\n  \"**Jenna Reps**&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-10-24/readme.md\")\n\npatient_risk_profiles &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-10-24/patient_risk_profiles.csv')\n\n# me interesa el riesgo de padecer sordera, demencia y Parkinson\n\n# rangos de edad, como factores\nrango_orden &lt;- patient_risk_profiles |&gt; \n  select(contains(\"age group\")) |&gt; \n  pivot_longer(cols = everything()) |&gt; \n  distinct(rango = name) |&gt; \n  mutate(rango = str_remove(rango, \"age group:  \")) |&gt; \n  mutate(rango = str_remove_all(rango, \" \")) |&gt; \n  separate_wider_delim(\n    rango, delim = \"-\", names = c(\"i_rango\", NA), cols_remove = FALSE) |&gt; \n  mutate(i_rango = as.numeric(i_rango)) |&gt; \n  mutate(rango = fct_reorder(rango, i_rango)) |&gt; \n  arrange(rango)\n\n# enfermedades de interés\nenfermedad &lt;- c(\n  \"predicted risk of Sudden Hearing Loss, No congenital anomaly or middle or inner ear conditions\",\n  \"predicted risk of Dementia\",\n  \"predicted risk of Parkinson's disease, inpatient or with 2nd diagnosis\")\n\n# agrupo por enfermedad y rango de edad\nd &lt;- patient_risk_profiles |&gt;\n  select(any_of(enfermedad), contains(\"age group\")) |&gt;\n  select(oido = 1, demencia = 2, parkinson = 3, everything()) |&gt; \n  pivot_longer(\n    cols = -c(oido, demencia, parkinson),\n    names_to = \"rango\", \n    values_to = \"es_rango\") |&gt;\n  pivot_longer(\n    cols = -c(rango, es_rango),\n    names_to = \"enfermedad\",\n    values_to = \"frac_enfermedad\") |&gt;\n  mutate(rango = str_remove(rango, \"age group:  \")) |&gt;\n  mutate(rango = str_remove_all(rango, \" \")) |&gt; \n  filter(es_rango == 1) |&gt;\n  mutate(rango = fct(rango, levels = as.character(rango_orden$rango))) |&gt; \n  arrange(rango) |&gt; \n  mutate(rango = fct_inorder(rango)) |&gt; \n  reframe(\n    n_rango = n(),\n    frac_enfermedad = mean(frac_enfermedad),\n    .by = c(rango, enfermedad)) |&gt; \n  arrange(rango) |&gt; \n  mutate(rango = fct_inorder(rango))\n\n# figura ------------------------------------------------------------------\n\n# etiquetas de las enfermedades para cada línea\netq_tbl &lt;- tibble(\n  enf = c(\"demencia\", \"sordera\", \"parkinson\") |&gt; str_to_upper(),\n  color = c(c6, c3, c2),\n  x = c(3, 3, 14),\n  y = c(0.012, .15, .078)/100,\n  angle = c(60, 30, 0)) |&gt; \n  mutate(label = glue(\"&lt;b style='color:{color}'&gt;{enf}&lt;/b&gt;\"))\n\n# título y subtítulo\ng_tit &lt;- glue(\"Los años no vienen solos\")\ng_sub &lt;- glue(\n  \"A partir de los datos simulados de **100** pacientes, se&lt;br&gt;\",\n  \"muestra el riesgo (en %) de padecer &lt;b style='color:{c6}'&gt;demencia&lt;/b&gt;, &lt;br&gt;\",\n  \"&lt;b style='color:{c3}'&gt;sordera&lt;/b&gt; y &lt;b style='color:{c2}'&gt;Parkinson&lt;/b&gt;, \",\n  \"para diferentes rangos de edad.\")\n\n# figura\ng &lt;- ggplot(d, aes(rango, frac_enfermedad, color = enfermedad, group = enfermedad)) +\n  geom_line(\n    show.legend = FALSE, linewidth = 2.5, alpha = .6) +\n  geom_point(\n    show.legend = FALSE, alpha = 1) +\n  geom_richtext(\n    data = etq_tbl, aes(x, y, label = label, angle = angle), show.legend = FALSE,\n    inherit.aes = FALSE, hjust = 0, vjust = 1, label.color = NA, fill = NA,\n    family = \"ubuntu\", size = 5) +\n  annotate(\n    geom = \"richtext\", label = g_tit, color = c5, x = 1, y = .1,\n    hjust = 0, vjust = 0, family = \"abril\", size = 19, fill = NA, \n    label.color = NA) +\n  annotate(\n    geom = \"richtext\", label = g_sub, color = c2, x = 1, y = .1,\n    hjust = 0, vjust = 1, family = \"ubuntu\", size = 7, fill = NA, \n    label.color = NA) +\n  scale_color_manual(values = c(c6, c3, c2)) +\n  scale_y_log10(labels = scales::label_percent(\n    big.mark = \"\", decimal.mark = \",\")) +\n  coord_cartesian(clip = \"off\") +\n  labs(caption = mi_caption) +\n  guides(\n    x = guide_axis(n.dodge = 2)) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(20, 16.3, 5, 16.3),\n    plot.background = element_rect(\n      fill = c1, color = c2, linewidth = 3),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", margin = margin(25, 0, 5, 0), size = 12),\n    axis.text = element_text(color = c5),\n    axis.text.x = element_text(\n      margin = margin(5, 0, 0, 0), size = 21, family = \"bebas\"),\n    axis.text.y = element_text(\n      vjust = 0, margin = margin(0, 5, 0, 0), family = \"victor\", size = 15),\n    panel.grid.major.x = element_line(\n      color = c4, linetype = 3, linewidth = .2),\n    panel.grid.major.y = element_line(\n      color = c4, linetype = 1, linewidth = .2),\n    panel.grid.minor.y = element_line(\n      color = c4, linetype = \"ff\", linewidth = .2)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_43/viz.png\",\n  width = 30,\n  height = 31,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_43/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 43"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_48.html",
    "href": "tidytuesday/2023/semana_48.html",
    "title": "Semana 48",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(datardis)\n\n# fuente ------------------------------------------------------------------\n\n# colores\ncc &lt;- scico::scico(palette = \"devon\", n = 10)\nc1 &lt;- cc[3]\nc2 &lt;- cc[4]\nc3 &lt;- cc[5]\nc4 &lt;- cc[6]\nc5 &lt;- cc[1]\nc6 &lt;- cc[10]\nc7 &lt;- cc[9]\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# números, fechas, ranking\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 48. \",\n  \"&lt;b style='font-family:mono;'&gt;{{datardis}}&lt;/b&gt;, \",\n  \"**Jonathan Kitt**&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-11-28/readme.md\")\n\n# guionistas & episodios\ndrwho_writers\ndrwho_episodes &lt;- drwho_episodes |&gt; \n  mutate(rating = as.numeric(rating))\n\n# me interesa el rating que tiene los guionistas que más capítulos escribieron\n\n# top 4 guinistas con más capítulos\nescritores_top &lt;- count(drwho_writers, writer, sort = TRUE) |&gt; \n  slice(1:4) |&gt; \n  pull(writer)\n\n# calculo la proporción de capítulos escritos por los guionistas top\n\n# guionistas que más capítulos escribieron\nn_top_gionistas &lt;- drwho_writers |&gt; \n  filter(writer %in% escritores_top) |&gt; \n  distinct(story_number) |&gt; \n  nrow()\n\n# total de capítulos\nn_tot &lt;- drwho_episodes |&gt; \n  distinct(story_number) |&gt; \n  nrow()\n\nrel &lt;- round(n_top_gionistas/n_tot*100)\n\n# agrego las imágenes de los guionistas y acomodo respecto del número de \n# capítulos\nd &lt;- inner_join(\n  drwho_episodes, drwho_writers, by = join_by(story_number)) |&gt; \n  select(rating, writer) |&gt; \n  filter(writer %in% escritores_top) |&gt; \n  mutate(writer = fct_reorder(writer, rating)) |&gt; \n  mutate(orden = as.numeric(writer)) |&gt; \n  mutate(foto = glue(\"2023/semana_48/{writer}.jpg\")) |&gt; \n  mutate(label = glue(\"**{writer}**&lt;br&gt;&lt;img src='{foto}' width='120'&gt;\")) |&gt; \n  mutate(label = fct_reorder(label, rating))\n\n# figura ------------------------------------------------------------------\n\n# logo de Doctor Who\nlogo &lt;- \"2023/semana_48/logo.png\"\nlogo_label &lt;- glue(\"&lt;img src='{logo}' width='400'&gt;\")\n\n# subtítulo\nmi_sub &lt;- glue(\n  \"Rating (en millones de espectadores, **Reino Unido**)&lt;br&gt;\",\n  \"de los cuatro **guionistas** con mayor participación.&lt;br&gt;\",\n  \"En total escribieron el **{rel}**% de los episodios.\")\n\n# figura\ng &lt;- ggplot(d, aes(writer, rating)) +\n  # puntos\n  geom_dotplot(\n    aes(color = writer, fill = writer), stroke = 1,\n    binaxis = \"y\", stackdir = \"center\", binwidth = .5, show.legend = FALSE) +\n  # fotos de los escritores\n  geom_richtext(\n    aes(y = 74, label = label), vjust = 1, show.legend = FALSE, size = 6,\n    fill = NA, label.color = NA, color = c6, family = \"ubuntu\") +\n  # logo Doctor Who\n  annotate(\n    geom = \"richtext\", x = .5, y = 89, hjust = .26, vjust = 0, \n    label = logo_label, fill = NA, label.color = NA) +\n  # línea horizontal en la mediana\n  stat_summary(\n    aes(color = writer), geom = \"crossbar\", fun = median, width = .6, \n    show.legend = FALSE) +\n  # valor de la mediana\n  stat_summary(aes(x = orden-.3, y = stage(rating, after_stat = median+.3),\n    label = after_stat(str_replace(median, \"\\.\", \",\"))), geom = \"text\",\n    size = 6, color = c6, hjust = 0, show.legend = FALSE,\n    fun.data = ~ round(data.frame(median = median(.x)), 1), family = \"victor\") +\n  scale_y_continuous(\n    limits = c(68, 91), expand = c(0, 0), breaks = seq(75, 90, 5)) +\n  scale_fill_manual(values = alpha(c(c1, c2, c3, c4), .3)) +\n  scale_color_manual(values = c(c1, c2, c3, c4)) +\n  labs(subtitle = mi_sub, caption = mi_caption) +\n  coord_cartesian(clip = \"off\", xlim = c(.5, 4.5), expand = FALSE) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(100, 22, 0, 22),\n    plot.background = element_rect(fill = c5, color = c1, linewidth = 3),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 20, color = c7, margin = margin(0, 0, 20, 250)),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 12, margin = margin(20, 5, 5, 0), color = c6),\n    panel.grid.major.y = element_line(color = c1, linetype = 2),\n    axis.text.x = element_blank(),\n    axis.text.y = element_text(\n      color = c2, family = \"victor\", vjust = 0, margin = margin(0, 20, 0, 0),\n      size = 13))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_48/viz.png\",\n  width = 30,\n  height = 35,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_48/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 48"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_26.html",
    "href": "tidytuesday/2023/semana_26.html",
    "title": "Semana 26",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tidytext)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggpath)\n\n# fuentes -----------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#3C0D02\"\nc2 &lt;- \"#8D1C06\"\nc3 &lt;- \"white\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# título\nfont_add_google(name = \"STIX Two Text\", family = \"stix\")\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 26&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-06-27/readme.md\")\nus_place_names &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-06-27/us_place_names.csv')\n\n# más datos\nbrowseURL(\"https://www.usgs.gov/us-board-on-geographic-names/what-geographic-names-information-system-gnis#1\")\n\n# sistema de coordenadas de EEUU\ncrs_eeuu &lt;- \"+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs\"\n\n# mapa de EEUU, entero\neeuu &lt;- giscoR::gisco_get_countries(country = \"US\", resolution = \"01\") |&gt; \n  # transformo las coordenadas\n  st_transform(crs = crs_eeuu)\n\n# extención de la parte continental de EEUU, tbl\nbb_tbl &lt;- tibble(\n  lon = c(-129, -62.5, -62.5, -129, -129),\n  lat = c(20, 20, 50.5, 50.5, 20))\n\n# convierto a sf\nbb &lt;- bb_tbl |&gt; \n  # uso coordenadas 4326\n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326) |&gt; \n  mutate(geometry = st_combine(geometry)) |&gt; \n  # convierto a polígono\n  st_cast(\"POLYGON\") |&gt; \n  # transformo a sistema de coordenadas EEUU\n  st_transform(crs = crs_eeuu)\n\n# recorto el mapa de EEUU a la región continental\neeuu_bb &lt;- st_crop(eeuu, bb)\n\n# convierto los datos de nombres de lugares a sf\nnombres_sf2 &lt;- us_place_names |&gt; \n  # remuevo sitios sin coordenadas\n  drop_na(prim_lat_dec, prim_long_dec) |&gt; \n  # indico columnas de coordenadas , CRS\n  st_as_sf(coords = c(\"prim_long_dec\", \"prim_lat_dec\"), crs = 4326) |&gt; \n  # transformo a sistema de coordendas de EEUU\n  st_transform(crs = crs_eeuu)\n\n# recorto los datos a la región continental\nnombres_sf &lt;- st_crop(nombres_sf2, bb)\n\n# me intereso en molinos (mill)\nd &lt;- nombres_sf |&gt; \n  # convierto todo a minúscula\n  mutate(feature_name = str_to_lower(feature_name)) |&gt; \n  # molinos\n  filter(str_detect(feature_name, \"mill\")) |&gt; \n  # columnas de interés\n  select(geometry)\n\n# figura ------------------------------------------------------------------\n\n# cantidad de molinos\nn_molinos &lt;- nrow(d) |&gt; \n  gt::vec_fmt_number(dec_mark = \",\", sep_mark = \".\", decimals = 0)\n\n# .png molino\nmolino &lt;-(\"2023/semana_26/molino.svg\")\n\n# figura\ng &lt;- ggplot() +\n  geom_sf(data = eeuu_bb, fill = c2, color = NA) +\n  geom_sf(data = d, color = c3, alpha = .6, size = .75, shape = 16) +\n  geom_from_path(aes(x = -2100000, y = -1600000, path = molino), width = .05) +\n  annotate(\n    geom = \"richtext\", x = -2200000, y = -2000000, \n    label = glue(\n      \"Cada punto representa la ubicación&lt;br&gt;de los {n_molinos}\n      sitios en **EE.UU.**&lt;br&gt;asociados a **molinos**, en el&lt;br&gt;\n      territorio continental.\"),\n    label.color = NA, color = c3, fill = NA, hjust = 0, family = \"ubuntu\", \n    size = 5) +\n  coord_sf() +\n  labs(\n    title = \"Molinos en EE.UU.\",\n    caption = mi_caption) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    # plot.margin = margin(7.3, 0, 7.3, 0),\n    plot.margin = margin(6.9, 0, 6.9, 0),\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(\n      family = \"stix\", size = 36, color = c3, hjust = .5, \n      margin = margin(0, 0, -30, 0)),\n    plot.caption = element_markdown(\n      color = c2, margin = margin(0, 10, 0, 0), family = \"ubuntu\"))\n\n# guardo\nggsave(\n    plot = g,\n    filename = \"2023/semana_26/viz.png\",\n    width = 30,\n    height = 19,\n    units = \"cm\",\n    dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_26/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 26"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_30.html",
    "href": "tidytuesday/2023/semana_30.html",
    "title": "Semana 30",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuentes -----------------------------------------------------------------\n\n# colores, Java\nc1 &lt;- \"#C5DAF6\"\nc2 &lt;- \"#A1C2ED\"\nc3 &lt;- \"#6996E3\"\nc4 &lt;- \"#4060C8\"\nc5 &lt;- \"#1A318B\"\n\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# números, eje horizontal\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# título\nfont_add_google(name = \"Waterfall\", family = \"waterfall\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 30. **A Treatise on the Scurvy in Three Parts**. James Lind&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-07-25/readme.md\")\n\nscurvy &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-07-25/scurvy.csv')\n\n# traducción de los tratamientos\ntrad &lt;- c(\n  cider = \"cidra\", dilute_sulfuric_acid = \"ácido diluido\",\n  vinegar = \"vinagre\", sea_water = \"agua de mar\", citrus = \"cítrico\",\n  purgative_mixture = \"purgante\")\n\n# me interesan los valores del estado de salud (0 a 3) por cada síntoma\n# ordenados por id de los pacientes\nd &lt;- scurvy |&gt; \n  # renombro las columnas por comodidad\n  rename(\n    trat = treatment, dosis = dosing_regimen_for_scurvy,\n    \"daño en las encías\" = gum_rot_d6, \n    \"llagas en la piel\" = skin_sores_d6, \n    \"dolor de rodilla\" = weakness_of_the_knees_d6,\n    cansancio = lassitude_d6, apto = fit_for_duty_d6, id = study_id) |&gt; \n  # extraigo los números de la escala de estado de salud\n  mutate(across(.cols = \"daño en las encías\":apto, .fns = parse_number)) |&gt; \n  select(-dosis) |&gt; \n  # tabla larga con los síntomas\n  pivot_longer(\n    cols = \"daño en las encías\":apto, \n    names_to = \"carac\", \n    values_to = \"valor\") |&gt; \n  filter(carac != \"apto\") |&gt; \n  arrange(id) |&gt; \n  # traduzco, agrego mayúsculas y convierto a factor\n  mutate(trat_trad = trad[trat]) |&gt; \n  mutate(trat_trad = str_to_upper(trat_trad)) |&gt; \n  mutate(trat_trad = fct_inorder(trat_trad)) |&gt; \n  # agrego +1 a los valores de la escala de síntomas, para evitar barras = 0\n  mutate(valor = valor + 1) |&gt; \n  # agrego '#' y convierto a factor el id de los pacientes\n  mutate(id_strip = glue(\"#{id}\")) |&gt; \n  mutate(id_strip = fct_inorder(id_strip)) |&gt; \n  mutate(carac = str_to_sentence(carac))\n\n# figura ------------------------------------------------------------------\n\n# título y subtítulo\nmi_title &lt;- \"Cítricos para el escorbuto\"\n\nmi_subtitulo &lt;- \"En **1757** un estudio determinó el mejor método para combatir \nel **escorbuto** en marineros. Se probaron seis tratamientos en 12 participantes, \nde a pares. A los seis días, se registró el estado de salud. Los **cítricos**\nmostraron los mejores resultados, con ningún síntoma, o leves.\"\n\n# figura\ng &lt;- ggplot(data = d, aes(x = valor, y = carac, fill = trat)) +\n  geom_col(color = NA, width = 1, show.legend = FALSE) +\n  geom_vline(xintercept = 0:4, color = c3, linewidth = .25) +\n  geom_hline(yintercept = .5:4.5, color = c3, linewidth = .25) +\n  facet_wrap(id_strip ~ trat_trad, scales = \"free_x\") +\n  scale_x_continuous(\n    breaks = 0:4, labels = c(\"\", \"0\", \"1\", \"2\", \"3\"),\n    limits = c(0, 4), expand = c(0, 0)) +\n  scale_y_discrete(expand = c(0, 0)) +\n  MetBrewer::scale_fill_met_d(name = \"Austria\") +\n  labs(\n    x = \"— **0** Ninguno — **1** Leve — **2** Moderado — **3** Severo —\",\n    y = NULL,\n    title = mi_title,\n    subtitle = mi_subtitulo,\n    caption = mi_caption) +\n  coord_cartesian(clip = \"off\") +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(14, 10.2, 14, 10.2),\n    plot.background = element_rect(\n      fill = c1, color = c2, linewidth = 3),\n    plot.title.position = \"plot\",\n    plot.title = element_text(\n      size = 130, color = c5, family = \"waterfall\", hjust = .5, face = \"bold\"),\n    plot.subtitle = element_textbox_simple(\n      size = 20, color = c4, family = \"ubuntu\", margin = margin(5, -5, 10, 0)),\n    plot.caption = element_markdown(\n      color = c5, size = 12, margin = margin(20, 0, 5, 0)),\n    panel.background = element_rect(fill = NA, color = NA),\n    panel.grid = element_blank(),\n    panel.spacing.x = unit(.75, \"line\"),\n    panel.spacing.y = unit(1, \"line\"),\n    strip.background = element_rect(fill = NA, color = NA),\n    strip.text = element_markdown(family = \"ubuntu\", color = c4, size = 20),\n    axis.title.x = element_markdown(\n      family = \"ubuntu\", size = 22, color = c4, margin = margin(20, 0, 0, 0)),\n    axis.text.x = element_markdown(\n      family = \"victor\", color = c5, size = 15, hjust = 2.7, face = \"bold\"),\n    axis.text.y = element_markdown(family = \"ubuntu\", color = c5, size = 17),\n    axis.ticks = element_blank()\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_30/viz.png\",\n  width = 30,\n  height = 37,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_30/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 30"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_32.html",
    "href": "tidytuesday/2023/semana_32.html",
    "title": "Semana 32",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggpath)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#cc2c29\"\nc2 &lt;- \"#E4332F\"\nc3 &lt;- \"#FFCE00\"\nc4 &lt;- \"white\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# eje vertical, scoville\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# eje horizontal, temporadas\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 32. **List of Hot Ones episodes**, Wikipedia&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-08-08/readme.md\")\n\nsauces &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-08/sauces.csv')\n\n# me interesa la distribución de la escala Scoville para cada salsa\n#  (del 1 al 10), en todas las temporadas\nd &lt;- sauces |&gt; \n  mutate(sauce_number = factor(sauce_number)) |&gt; \n  select(sauce_number, scoville)\n\n# figura ------------------------------------------------------------------\n\n# tibble con la ubicación del logo\n\ncamino_logo &lt;- \"2023/semana_32/logo.png\"\n\nlogo_tbl &lt;- tibble(\n  x = 1, \n  y = 1e6, \n  path = camino_logo)\n\n# subtítulo\nsub_tbl &lt;- tibble(\n  x = 10,\n  y = 1000,\n  label = glue(\n    \"&lt;b style='color:{c3}'&gt;Hot Ones&lt;/b&gt; es un programa de **YouTube** donde celebridades son&lt;br&gt;\n    entrevistadas mientras *disfrutan* comida picante,  con 10 salsas&lt;br&gt;\n    en orden creciente de picor. Se muestra la intensidad de las&lt;br&gt;\n    salsas para las 21 temporadas del programa.\"))\n\n# explicación escala Scoville\nscoville_tbl &lt;- tibble(\n  x = 10,\n  y = 300,\n  label = glue(\n    \"&lt;sup style='color:white;'&gt;**U2020**&lt;/sup&gt;La **escala Scoville** mide la\n    intensidad de un picante.&lt;br&gt;El valor más bajo (1) corresponde al \n    morrón verde.\"))\n\n# valores MIN y MAX de la escala Scoville\nd_min &lt;- d |&gt; \n  slice_min(order_by = scoville, n = 1) |&gt; \n  mutate(label = glue(\"← {scoville}nMIN\"))\n\nd_max &lt;- d |&gt; \n  slice_max(order_by = scoville, n = 1, with_ties = FALSE) |&gt; \n  mutate(label = gt::vec_fmt_number(\n    scoville, \n    decimals = 0,\n    sep_mark = \".\",\n    dec_mark = \",\")) |&gt; \n  mutate(label = glue(\"{label} →nMAX\"))\n\n# figura\ng &lt;- ggplot(data = d, aes(sauce_number, scoville, color = sauce_number)) +\n  # puntos\n  geom_point(alpha = 1/1, size = 7, shape = 1, \n             position = position_jitter(width = .1, seed = 2023)) +\n  # logo\n  geom_from_path(\n    data = logo_tbl, aes(x, y, path = path),\n    width = .4, inherit.aes = FALSE, hjust = 0, vjust = .5) +\n  # subtítulo\n  geom_richtext(\n    data = sub_tbl, aes(x, y, label = label), \n    label.color = NA, fill = NA, color = c4, family = \"ubuntu\", size = 6,\n    hjust = 1, vjust = 1) +\n  # explicación escala Scoville\n  geom_richtext(\n    data = scoville_tbl, aes(x, y, label = label),\n    label.color = NA, fill = NA, color = c3, family = \"ubuntu\", size = 5,\n    hjust = 1, vjust = 1) +\n  # mínimo\n  geom_text(\n    data = d_min, aes(label = label), \n    family = \"victor\", nudge_x = .6, size = 3.5, fontface = \"bold\", \n    hjust = 1, vjust = .75) +\n  # máximo\n  geom_text(\n    data = d_max, aes(label = label), \n    family = \"victor\", nudge_x = -1.3, size = 3.5, fontface = \"bold\",\n    hjust = 0, vjust = .6) +\n  # ejes\n  scale_y_log10(\n    labels = scales::label_number(big.mark = \".\", decimal.mark = \",\"),\n    limits = c(100, NA),\n    expand = c(0, .1)) +\n  scale_color_manual(values = rep(c(c3, c4), length.out = 10)) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    x = \"\\# de salsa\",\n    y = \"Escala Scoville&lt;sup style='color:white;'&gt;**U2020**&lt;/sup&gt;&lt;br&gt;\n    &lt;span style='font-size:15pt'&gt;*logarítmica*&lt;/style&gt;\",\n    caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    legend.position = \"none\",\n    plot.margin = margin(70.3, 10, 5.3, 10),\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    plot.caption = element_markdown(\n      color = c4, family = \"ubuntu\", margin = margin(10, 0, 10, 0), \n      size = 12),\n    panel.grid.major.y = element_line(\n      color = c4,linetype = \"f8\", linewidth = .1),\n    axis.title.x = element_markdown(\n      size = 26, color = c3, family = \"ubuntu\", margin = margin(20, 0, 0, 0)),\n    axis.title.y = element_markdown(\n      size = 26, color = c3, family = \"ubuntu\", angle = 90, lineheight = .2),\n    axis.text.x = element_text(\n      family = \"bebas\",\n      color = rep(c(c3, c4), length.out = 10),\n      size = 30),\n    axis.text.y = element_text(\n      family = \"victor\", color = c4, size = 16, hjust = 1)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_32/viz.png\",\n  width = 30,\n  height = 31,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_32/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 32"
    ]
  },
  {
    "objectID": "viz/viz2.html",
    "href": "viz/viz2.html",
    "title": "viz 2",
    "section": "",
    "text": "Contenido S02\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\n# {glue}, {ggtext}, {showtext}, {tidyverse}\n# se cargan automáticamente\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#447099\"\nc2 &lt;- \"#75AADB\"\nc3 &lt;- \"#F0F5F9\"\nc4 &lt;- \"black\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & íconos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nmi_caption &lt;- caption(\n  fuente1 = \"&lt;span style='font-family:jet'&gt;posit::conf&lt;/jet&gt;\",\n  col = c1,\n  week = 2\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 2)\nconf2023 &lt;- tuesdata$conf2023\nconf2024 &lt;- tuesdata$conf2024\n\n# me interesa la cantidad de conferencias que hablan de QUARTO entre 2023 y 2024\n\n# cantidad de conferencias que mencionan QUARTO, 2023/2024\nn2023 &lt;- conf2023 |&gt; \n  mutate(quarto = str_detect(session_abstract, \"quarto|Quarto\")) |&gt; \n  dplyr::filter(quarto) |&gt; \n  nrow()\n\nn2024 &lt;- conf2024 |&gt; \n  mutate(quarto = str_detect(description, \"quarto|Quarto\")) |&gt; \n  dplyr::filter(quarto) |&gt; \n  nrow()\n\nd &lt;- tibble(\n  año = c(2023, 2024),\n  n = c(n2023, n2024)\n) |&gt; \n  mutate(\n    año = paste0(\"posit::conf\\n\", año)\n  )\n\n# figura ------------------------------------------------------------------\n\n# logo y subtítulo\nlogo &lt;- \"https://quarto.org/quarto.png\"\nlogo_img &lt;- glue(\n  \"&lt;img src='{logo}' width=250 /&gt;\"\n)\n\nmi_subitulo &lt;- glue(\n  \"La cantidad de conferencias&lt;br&gt;que incluyen\n  &lt;span style='font-family:jet; color:{c1}'&gt;quarto&lt;/span&gt; &lt;br&gt;\n  amentaron en las ediciones&lt;br&gt;\n  2023 y 2024 de &lt;span style='font-family:jet; color:{c1}'&gt;posit::conf&lt;/span&gt;\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(año, n, label = n)) +\n  geom_col(fill = c1) +\n  geom_text(vjust = -.2, family = \"jet\", size = 9, color = c2) +\n  annotate(\n    geom = \"richtext\", x = 2.12, y = 25, label = logo_img, fill = NA,\n    vjust = -1.2, label.color = NA\n  ) +\n  scale_y_continuous(limits = c(0, 25)) +\n  coord_cartesian(expand = FALSE, xlim = c(.5, 2.5), clip = \"off\") +\n  labs(caption = mi_caption, subtitle = mi_subitulo) +\n  theme_void(base_size = 22, base_family = \"ubuntu\") +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(25, 5, 5, 5),\n    plot.background = element_rect(fill = c3, color = NA),\n    plot.subtitle = element_markdown(\n      color = c4, size = 30, lineheight = 1.3, margin = margin(b = 30, l = 20)\n    ),\n    plot.caption = element_markdown(\n      color = c2, lineheight = 1.2, margin = margin(b = 5, t = 20)\n    ),\n    axis.text.x = element_text(margin = margin(t = 5), family = \"jet\"),\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2025/s02/viz.png\",\n  width = 30,\n  height = 40,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(paste0(getwd(), \"/2025/s02/viz.png\"))\n\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Viz",
      "viz 2"
    ]
  },
  {
    "objectID": "tidytuesday/intro.html",
    "href": "tidytuesday/intro.html",
    "title": "¿Qué es tidytuesday?",
    "section": "",
    "text": "¿Qué es tidytuesday?\nTidyTuesday es un proyecto para compartir datos y que cualquiera pueda utilizarlos para practicar trabajar con datos. Tidytuesday está organizado por Data Science Learning Community, iniciado en 2018.\nTodas las semanas en el repositorio de GitHub suben un nuevo set de datos, con la fuente y una breve descripción.\nPara facilitar el acceso a los datos existe el paquete tidytuesdayR.\n\n\n\nMotivación\nTidytuesday ofrece datos de los más variados e interesantes. Te permite practicar las habilidades de manipulación de datos, creación de figuras y modelado con conjuntos de datos reales.\nSe incluyen los metadatos que dan una introducción, describiendo cada variable y explicando el contenido.\nLa comunidad que participa en tidytuesday comparte tus resultados en redes sociales, que motivan a otros a crear sus propias figuras y análisis.\n\n\nMi participación\nInicié mis pasos con TidyTuesday en 2023, y gracias a eso he aprendido muchísimo de R, a generar mejores visualizaciones, a escribir mejor código y a explorar otros paquetes.\nEn esta sección pueden encontrar todas las figuras que he creado semana a semana.\n2025\n2024\n2023\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "Inicio"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_22.html",
    "href": "tidytuesday/2023/semana_22.html",
    "title": "Semana 22",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(rvest)\nlibrary(ggrepel)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\nc1 &lt;- \"#f7f4f9\"\nc2 &lt;- \"grey10\"\nc3 &lt;- \"#381a61\"\nc4 &lt;- \"#fed9a6\"\nc5 &lt;- \"grey70\"\nc6 &lt;- \"#7c4b73\"\n\n# años, eje vertical\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = TRUE)\n# título\nfont_add_google(name = \"Libre Baskerville\", family = \"libre\", db_cache = FALSE)\n# resto del texto\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\", db_cache = FALSE)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 22, Wikipedia&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-05-30/readme.md\")\n\ncentenarians &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-30/centenarians.csv')\n\n# selecciono la persona más longeva, Jeanne Calment\njeanne &lt;- centenarians |&gt; \n  slice_max(order_by = age, n = 1) |&gt; \n  mutate(y = 0, yend = 1) |&gt; \n  select(name, birth_date, death_date) |&gt; \n  pivot_longer(cols = -name, names_to = \"estado\", values_to = \"fecha\") |&gt; \n  mutate(etq = format(fecha, \"%d/%m/%Y\")) |&gt; \n  mutate(vjust = if_else(estado == \"birth_date\", 1, 0))\n\n# sitio de Wikipedia con una tabla con los presidentes argentinos y fechas\nlink &lt;- \"https://es.wikipedia.org/wiki/Anexo%3APresidentes_de_la_Naci%C3%B3n_Argentina\"\n\n# datos de los presidentes argentinos\nwi &lt;- link %&gt;%\n  read_html() |&gt; \n  html_element(\"table\") %&gt;%\n  html_table()\n\n# limpio datos de presidentes argentinos\npr &lt;- wi |&gt; \n  janitor::clean_names() |&gt; \n  select(-1, -2) |&gt; \n  select(presi = presidente_de_la_nacion_3, inicio = inicio_del_gobierno, fin = fin_del_gobierno) |&gt; \n  filter(!str_detect(presi, \"inexistente\")) |&gt; \n  separate(col = presi, into = c(\"presi\", NA), sep = \"\\(\") |&gt; \n  separate(col = inicio, into = c(\"inicio\", NA), sep = \"\\[\") |&gt; \n  separate(col = fin, into = c(\"fin\", NA), sep = \"\\[\") |&gt; \n  # el presidente actual no posee fecha 'fin'\n  filter(presi != \"Alberto Fernández\") |&gt; \n  mutate(across(.cols = c(inicio, fin), .fns = dmy)) \n\n# filtro los datos de presidentes al intervalo de Jeanne Calment\npr2 &lt;- pr |&gt; \n  # filter(between(inicio, min(jeanne$fecha), max(jeanne$fecha))) |&gt; \n  filter(between(inicio, min(jeanne$fecha), max(jeanne$fecha))) |&gt; \n  distinct() |&gt; \n  mutate(fila = row_number()) |&gt; \n  mutate()\n\n# divido los datos, presidentes pares a la izquierda\npr2_izq &lt;- pr2 |&gt; \n  filter(fila %% 2 == 0)\n\n# divido los datos, presidentes impares a la derecha\npr2_der &lt;- pr2 |&gt; \n  filter(fila %% 2 != 0)\n\nnic_ave &lt;- pr |&gt; \n  filter(year(inicio) == 1874)\n\n# figura ------------------------------------------------------------------\n\ng &lt;- ggplot() +\n  # horizontales c/25 años\n  geom_hline(\n    yintercept = seq(ymd(18750101), ymd(20000101), \"25 year\"),\n    color = c5, linewidth = .25, linetype = \"ff\") +\n  # vertical central\n  geom_segment(\n    aes(x = 0, xend = 0, y = ymd(\"1875-02-21\"), yend = ymd(\"1997-08-04\")),\n    color = c4, linewidth = 3) +\n  # presidentes\n  geom_text_repel(\n    data = pr2_der, aes(x = 0, y = inicio, label = presi), \n    xlim = c(.1, 2), size = 8, seed = 2023, family = \"ubuntu\", color = c3) +\n  geom_text_repel(\n    data = pr2_izq, aes(x = 0, y = inicio, label = presi), \n    xlim = c(-2, -.1), size = 8, seed = 2023, family = \"ubuntu\", color = c3) +\n  geom_text_repel(\n    data = nic_ave, aes(x = 0, y = inicio, label = presi), \n    xlim = c(-2, -.2), size = 8, seed = 2023, family = \"ubuntu\", color = c3) +\n  # nacimiento/fallecimiento\n  geom_richtext(\n    data = jeanne, aes(x = 0, y = fecha, label = etq, vjust = vjust),\n    color = c3, fill = c4, size = 11, label.padding = unit(.4, \"line\"), \n    label.color = NA, family = \"ubuntu\") +\n  # puntos presidentes sobre vertical central\n  geom_point(data = pr2, aes(x = 0, y = inicio), color = \"#ec7014\", size = 2) +\n  # ejes\n  scale_x_continuous(limits = c(-.7, .7), expand = c(0, 0)) +\n  scale_y_date(\n    breaks = seq(ymd(18750101), ymd(20000101), \"25 year\"), \n    expand = c(0, 0), limits = c(ymd(18700101), ymd(20000101)),\n    date_labels = \"%Y\",) +\n  coord_cartesian(clip = \"off\") +\n  labs(x = NULL, y = NULL, \n       title = \"Jeanne Calment vivió 122 años\",\n       subtitle = glue(\n         \"**Jeanne Calment** es considerada la persona más longeva de la \n         historia. Nació en Francia en **1875** y falleció en **1997**. Para dar \n         dimensión a su extensa vida, se muestran los **{nrow(pr2)}** presidentes \n         argentinos (democráticos y de facto) que tuvimos durante este período.\"),\n       caption = mi_caption) +\n  # tema\n  theme(\n    aspect.ratio = 1.95,\n    plot.margin = margin(5, 29.5, 5, 29.5),\n    plot.background = element_rect(\n      fill = c1, color = c6, linewidth = 3),\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(\n      size = 52, color = c3, family = \"libre\", margin = margin(5, 0, 5, 0), hjust = 0),\n    plot.subtitle = element_textbox_simple(\n      color = c2, size = 22, margin = margin(5, 0, 35, 7), family = \"ubuntu\"),\n    plot.caption = element_markdown(\n      hjust = .3, size = 15, color = c2, family = \"ubuntu\"),\n    panel.background = element_rect(fill = NA, color = NA),\n    panel.grid = element_blank(),\n    axis.text.y = element_text(color = c5, family = \"bebas\", size = 40),\n    axis.text.x = element_blank(),\n    axis.ticks = element_blank())\n\n# guardo\nggsave(\n  filename = \"2023/semana_22/viz.png\",\n  plot = g,\n  width = 30,\n  height = 58,\n  units = \"cm\",\n  dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_22/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 22"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_44.html",
    "href": "tidytuesday/2023/semana_44.html",
    "title": "Semana 44",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tidytext)\nlibrary(ggVennDiagram)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(ggpath)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#1F78B4\"\nc2 &lt;- \"#E31A1C\"\nc3 &lt;- \"#6A3D9A\"\nc4 &lt;- \"#FF7F00\"\nc5 &lt;- \"#A6CEE3\"\nc6 &lt;- \"#CAB2D6\"\nc7 &lt;- \"#FB9A99\"\nc8 &lt;- \"#FEE0B6\"\nc9 &lt;- \"white\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# título\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\")\n# palabras verdadero/falso\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\nfont_add(\"fa-regular\", \"icon/Font Awesome 6 Free-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 44, \",\n  \"**Snopes.com**&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-10-31/readme.md\")\n\nhorror_articles &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-10-31/horror_articles.csv')\n\n# me interesan las palabras más comunes entre notas falsas y verdaderas, y con\n# un diagrama de Venn para ver cuales coinciden\n\n# palabras comunes (inglés)\nsw &lt;- tm::stopwords()\n\np &lt;- horror_articles |&gt; \n  unnest_tokens(input = title, output = palabra) |&gt; \n  filter(rating %in% c(\"false\", \"true\")) |&gt; \n  count(palabra, rating, sort = TRUE) |&gt; \n  filter(!palabra %in% sw) |&gt; \n  filter(!str_detect(palabra, \"'\")) |&gt; \n  filter(palabra != \"deaths\") |&gt; \n  slice_max(order_by = n, n = 15, by = rating, with_ties = FALSE)\n\n# creo una lista para el diagrama de Venn\np_lista &lt;- list(\n  FALSO = p |&gt; filter(rating == \"false\") |&gt; pull(palabra),\n  VERDADERO = p |&gt; filter(rating == \"true\") |&gt; pull(palabra))\n\nvenn &lt;- Venn(p_lista)\ndata &lt;- process_data(venn)\n\n# obtengo las coordenadas del centro de cada porción del diagrama de Venn\nvv &lt;- venn_region(data) |&gt; \n  unnest(item) |&gt; \n  mutate(cent = st_centroid(geometry)) |&gt; \n  st_drop_geometry() |&gt; \n  st_as_sf() %&gt;%\n  mutate(eje_x = st_coordinates(.)[, 1]) %&gt;%\n  mutate(eje_y = st_coordinates(.)[, 2])\n\n# agrego un movimiento horizontal aleatorio, \n# por cada región del diagrama de Venn\nset.seed(2023)\nvv_falso &lt;- vv |&gt; \n  filter(name == \"FALSO\") %&gt;%\n  mutate(eje_y = seq(300, 700, length.out = nrow(.))) |&gt; \n  mutate(eje_x = eje_x + runif(n(), -40, 40)) |&gt; \n  st_drop_geometry() |&gt; \n  st_as_sf(coords = c(\"eje_x\", \"eje_y\"))\n  \nvv_verdadero &lt;- vv |&gt; \n  filter(name == \"VERDADERO\") %&gt;%\n  mutate(eje_y = seq(300, 700, length.out = nrow(.))) |&gt; \n  mutate(eje_x = eje_x + runif(n(), -40, 40)) |&gt; \n  st_drop_geometry() |&gt; \n  st_as_sf(coords = c(\"eje_x\", \"eje_y\"))\n\nvv_vf &lt;- vv |&gt; \n  filter(name == \"FALSO..VERDADERO\") %&gt;%\n  mutate(eje_y = seq(400, 600, length.out = nrow(.))) |&gt; \n  mutate(eje_x = eje_x + runif(n(), -20, 20)) |&gt; \n  st_drop_geometry() |&gt; \n  st_as_sf(coords = c(\"eje_x\", \"eje_y\"))\n\n# corrijo HIV\nvv2 &lt;- bind_rows(vv_falso, vv_verdadero, vv_vf) |&gt; \n  mutate(item = str_to_sentence(item)) |&gt; \n  mutate(name = str_to_upper(name)) |&gt; \n  mutate(item = if_else(item == \"Hiv\", \"HIV\", item))\n\n\n# figura ------------------------------------------------------------------\n\n# título y subtítulo\nmi_tit &lt;- glue(\n  \"Historias de terror&lt;br&gt;\",\n  \"*¿verdaderas o falsas?*\")\n\nmi_sub &lt;- glue(\n  \"El sitio web **Snopes.com** cataloga sus notas en&lt;br&gt;\",\n  \"*verdaderas* o *falsas*, ¿pero qué las diferencian?&lt;br&gt;\",\n  \"Se tomaron las 15 palabras más comunes de los&lt;br&gt;\",\n  \"titulares y se armó el siguiente diagrama de Venn.\")\n\n# logo\nlogo &lt;- \"2023/semana_44/logo.png\"\nlogo_tbl &lt;- tibble(x = 210, y = -Inf, label = glue(\"&lt;img src={logo} width='100'&gt;\"))\n\n# figura\ng &lt;- ggplot() +\n  # regiones\n  geom_sf(\n    aes(fill = name), data = venn_region(data), color = NA,\n    show.legend = FALSE) +\n  # línea punteada\n  geom_sf(\n    size = 2, lty = \"dashed\", color = c9, data = venn_setedge(data),\n    show.legend = FALSE) +\n  # título de cada región\n  geom_sf_text(\n    aes(label = name), data = venn_setlabel(data), family = \"ubuntu\", \n    color = c(c1, c2), size = 10, nudge_y = -20) +\n  # verdadero/falso\n  geom_sf_text(\n    data = vv2, aes(label = item, color = name), show.legend = FALSE, size = 7,\n    family = \"victor\", fontface = \"bold\") +\n  geom_richtext(\n    data = logo_tbl, aes(x, y, label = label), vjust = 0, fill = NA, \n    label.color = NA) +\n  annotate(\n    geom = \"richtext\", x = 510, y = 800, hjust = 0, vjust = -.45, label = mi_sub,\n    size = 6, family = \"ubuntu\", fill = c4, label.color = NA, \n    color = c9) +\n  scale_fill_manual(values = c(c5, c6, c7)) +\n  scale_color_manual(values = c(c1, c3, c2)) +\n  labs(title = mi_tit, caption = mi_caption) +\n  coord_sf(clip = \"off\") +\n  theme_void() +\n  theme(\n    plot.margin = margin(2.8, 0, 2.8, 0),\n    plot.background = element_rect(\n      fill = c8, color = c3, linewidth = 3),\n    plot.title = element_markdown(\n      size = 50, family = \"bebas\", hjust = 0, color = c4,\n      margin = margin(15, 0, 5, 15)),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 12, color = c1, margin = margin(5, 10, 5, 0))\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_44/viz.png\",\n  width = 30,\n  height = 27,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_44/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 44"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_23.html",
    "href": "tidytuesday/2023/semana_23.html",
    "title": "Semana 23",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(geomtextpath)\nlibrary(glue)\nlibrary(showtext)\nlibrary(ggtext)\n\n# fuentes -----------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#183471\"\nc2 &lt;- \"#43429B\"\nc3 &lt;- \"#DF9ED4\"\nc4 &lt;- \"#EACC62\"\nc5 &lt;- \"#7EC5F4\"\nc6 &lt;- \"#FFCD11\"\nc7 &lt;- \"grey90\"\n\n# años, eje horizontal\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = TRUE)\n# eje vertical\nfont_add_google(name = \"Inconsolata\", family = \"inconsolata\", db_cache = FALSE)\n# resto del texto\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\", db_cache = FALSE)\n# título\nfont_add_google(name = \"Yeseva One\", family = \"yeseva\", db_cache = FALSE)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 23&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-06-06/readme.md\")\n\nenergia &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-06-06/owid-energy.csv')\n\n# limpio los datos, enfocándome en el mundo y Argentina, renovable y fósiles\nd &lt;- energia |&gt; \n  # filtro por Argentina y el mundo\n  filter(country %in% c(\"Argentina\", \"World\")) |&gt; \n  # selecciono energías renovables y fósiles\n  select(year, country, renewables_energy_per_capita, fossil_energy_per_capita) |&gt; \n  # tabla larga\n  pivot_longer(cols = -c(year, country)) |&gt; \n  # remuevo NA\n  drop_na(value) |&gt; \n  # acomodo los nombres\n  mutate(name = str_remove(name, \"_energy_per_capita\")) |&gt;\n  mutate(name = str_replace(name, \"_\", \" \")) |&gt;\n  # traduzco\n  mutate(country = case_match(country, \"World\" ~ \"Mundo\", .default = country)) |&gt; \n  # agrego justificación horizontal p/usar en la figura (geom_textpath)\n  mutate(hjust = case_when(\n    country == \"Argentina\" & name == \"fossil\" ~ .9,\n    country == \"Argentina\" & name == \"renewables\" ~ .3,\n    country == \"Mundo\" & name == \"fossil\" ~ .42,\n    country == \"Mundo\" & name == \"renewables\" ~ .01))\n\n# figura ------------------------------------------------------------------\n\n# {geomtextpath} \nbrowseURL(\"https://github.com/AllanCameron/geomtextpath\")\n\n# título\nti &lt;- tibble(\n  year = 1969,\n  value = 11000,\n  label = \"Argentina sigue la tendencia&lt;br&gt;energética mundial\")\n\n# subtítulo\nsu &lt;- tibble(\n  year = 1969,\n  value = 8500,\n  label = glue(\n    \"El consumo energético per cápita de &lt;b style='color:{c3};'&gt;combustibles fósiles&lt;/b&gt;\n    se mantiene aún por encima de las &lt;b style='color:{c4};'&gt;energías renovables&lt;/b&gt;. \n    **Argentina** tiene una evolución energética que se asemeja a los valores \n    medios mundiales.\"))\n\n# figura\ng &lt;- ggplot(data = d, aes(x = year, y = value, color = name, linetype = country)) +\n  # líneas y texto\n  geom_textpath(\n    aes(label = glue(\"**{country}**\"), hjust = I(hjust)),\n    vjust = -0.2, show.legend = FALSE, text_smoothing = 30, family = \"ubuntu\",\n    size = 7, linewidth = 1, rich = TRUE, lineend = \"round\") +\n  # título\n  geom_richtext(\n    data = ti, aes(x = year, y = value, label = label), inherit.aes = FALSE,\n    fill = NA, label.color = NA, color = c7, size = 14, show.legend = FALSE,\n    hjust = 0, vjust = 1, family = \"yeseva\") +\n  # subtítulo\n  geom_textbox(\n    data = su, aes(x = year, y = value, label = label), inherit.aes = FALSE,\n    fill = NA, box.color = NA, color = c7, size = 6, show.legend = FALSE,\n    hjust = 0, vjust = 1, family = \"ubuntu\", width = unit(20, \"cm\")) +\n  # ejes\n  scale_x_continuous(\n    breaks = seq(1960, 2021, 10), limits = c(1965, 2021), expand = c(0, 1)) +\n  scale_y_continuous(\n    breaks = seq(0, 20e3, 5e3), limits = c(-250, 21e3), expand = c(0, 0),\n    labels = scales::label_number(scale = .001)) +\n  scale_color_manual(guide = \"none\", values = c(c3, c4)) +\n  scale_linetype_manual(name = NULL, values = c(\"solid\", \"dotted\")) +\n  coord_cartesian(clip = \"off\") +\n  labs(x = NULL, y = \"Consumo energético, miles de kW-h per cápita\",\n       caption = mi_caption) +\n  # tema\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(5, 12, 5, 12),\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    plot.caption = element_markdown(\n      color = c7, hjust = .436, size = 11, margin = margin(20, 0, 3, 0)),\n    axis.text.x = element_text(color = c5, family = \"bebas\", size = 30),\n    axis.text.y = element_text(color = c5, family = \"inconsolata\", size = 20),\n    axis.title.y = element_text(\n      color = c5, family = \"ubuntu\", size = 15, margin = margin(0, 10, 0, 0)),\n    panel.grid.major = element_line(color = c2, linewidth = .1),\n    panel.grid.minor = element_blank(),\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_23/viz.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\",\n  dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_23/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 23"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_07.html",
    "href": "tidytuesday/2023/semana_07.html",
    "title": "Semana 07",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(here)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuentes -----------------------------------------------------------------\n\nfont_add_google(name = \"Libre Bodoni\", family = \"libre\", db_cache = FALSE) # título\nfont_add_google(name = \"Nunito Sans\", family = \"nunito\") # resto del texto\nfont_add_google(name = \"Share Tech Mono\", family = \"share\") # números\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# íconos\nfont_add(\"fa-reg\", here(\"icon/Font Awesome 5 Free-Regular-400.otf\"))\nfont_add(\"fa-brands\", here(\"icon/Font Awesome 5 Brands-Regular-400.otf\"))\nfont_add(\"fa-solid\", here(\"icon/Font Awesome 5 Free-Solid-900.otf\"))\n\n# datos -------------------------------------------------------------------\n\nage_gaps &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-14/age_gaps.csv')\n\n# actores ----\n\n# top 100 male, actor 1\ntop_100_m_1 &lt;- age_gaps |&gt; \n  filter(character_1_gender == \"man\") |&gt; \n  # agrupo por película, por si hay múltiples parejas\n  group_by(movie_name) |&gt; \n  distinct(actor_1_name) |&gt; \n  ungroup() |&gt; \n  # ordeno por cantidad y tomo los primeros 100\n  count(actor_1_name, sort = TRUE) |&gt; \n  slice(1:100) |&gt; \n  pull(actor_1_name)\n\n# con los actores, verifico actor 1&2\ntop_m &lt;- bind_rows(\n  age_gaps |&gt; \n    filter(actor_1_name %in% top_100_m_1),\n  age_gaps |&gt; \n    filter(actor_2_name %in% top_100_m_1)) |&gt; \n  # selecciono columnas de interés y renombro\n  select(movie_name, release_year, age_difference, actor_1_name, actor_2_name, \n         actor_1_age, actor_2_age)\n\n# si el actor es mayor, la diferencia es positiva\n# si el actor es menor, la diferencia es negativa\ndatos_m &lt;- top_m |&gt; \n  mutate(age_difference = case_when(actor_1_name %in% top_100_m_1 ~ age_difference,\n                                    TRUE ~ -age_difference)) |&gt;\n  mutate(ac = if_else(age_difference &gt;= 0, actor_1_name, actor_2_name)) |&gt;  \n  # elijo solamente el top 100 m\n  filter(ac %in% top_100_m_1) |&gt;\n  group_by(ac) |&gt; \n  # obtengo la diferencia de edad media (con signo)\n  summarise(delta = mean(age_difference), .groups = \"drop\") |&gt; \n  # ordeno los actores por delta\n  mutate(ac = fct_reorder(ac, delta)) |&gt; \n  arrange(ac) |&gt; \n  rename(ac1 = ac, delta1 = delta)\n\n# actrices ----\n\n# top 5 female 1\ntop_100_f_1 &lt;- age_gaps |&gt; \n  filter(character_2_gender == \"woman\") |&gt; \n  # agrupo por película, por si hay múltiples parejas\n  group_by(movie_name) |&gt; \n  distinct(actor_2_name) |&gt; \n  ungroup() |&gt; \n  # ordeno por cantidad y tomo los primeros 100\n  count(actor_2_name, sort = TRUE) |&gt; \n  slice(1:100) |&gt; \n  pull(actor_2_name)\n\n# con las actrices, verifico actriz 1&2\ntop_f &lt;- bind_rows(\n  age_gaps |&gt; \n    filter(actor_1_name %in% top_100_f_1),\n  age_gaps |&gt; \n    filter(actor_2_name %in% top_100_f_1)) |&gt; \n  # selecciono columnas de interés y renombro\n  select(movie_name, release_year, age_difference, actor_1_name, actor_2_name, \n         actor_1_age, actor_2_age)\n\n# si la actriz es mayor, la diferencia es positiva\n# si la actriz es menor, la diferencia es negativa\ndatos_f &lt;- top_f |&gt; \n  mutate(age_difference = case_when(actor_1_name %in% top_100_f_1 ~ age_difference,\n                                    TRUE ~ -age_difference)) |&gt;\n  mutate(ac = if_else(age_difference &gt;= 0, actor_1_name, actor_2_name)) |&gt;  \n  # elijo solamente el top 100 f\n  filter(ac %in% top_100_f_1) |&gt;\n  group_by(ac) |&gt; \n  # obtengo la diferencia de edad media (con signo)\n  summarise(delta = mean(age_difference), .groups = \"drop\") |&gt; \n  # ordeno los actores por delta\n  mutate(ac = fct_reorder(ac, delta)) |&gt; \n  arrange(ac) |&gt; \n  rename(ac2 = ac, delta2 = delta)\n\n# combino ambos datos\nf_m &lt;- bind_cols(datos_f, datos_m)\n\n# figura ------------------------------------------------------------------\n\n# colores ppales\nc_m &lt;- \"#fb9e4f\"\nc_f &lt;- \"#9dd893\"\n\n# caption\nicon_twitter &lt;- \"&lt;span style='font-family:fa-brands; color:white;'&gt;&#xf099;&lt;/span&gt;\"\nicon_github &lt;- \"&lt;span style='font-family:fa-brands; color:white;'&gt;&#xf09b;&lt;/span&gt;\"\nfuente &lt;- \"&lt;span style='color:grey90;'&gt;Datos:&lt;/span&gt; &lt;span style='color:gold;'&gt;&lt;span style='font-family:mono;'&gt;{**tidytuesdayR**}&lt;/span&gt; semana 7&lt;/span&gt;\"\nautor &lt;- \"&lt;span style='color:grey90;'&gt;Autor:&lt;/span&gt; &lt;span style='color:gold;'&gt;**Víctor Gauto**&lt;/span&gt;\"\nsep &lt;- \"&lt;span style = 'color:#a4cac8;'&gt;**|**&lt;/span&gt;\"\nusuario &lt;- \"&lt;span style = 'color:gold;'&gt;**vhgauto**&lt;/span&gt;\"\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# plot\ng1 &lt;- ggplot(data = f_m, aes(y = as.numeric(ac2))) +\n  # vertical en age_gap == 0\n  geom_vline(xintercept = 0, color = \"gold\", linewidth = 1, alpha = 1,\n             linetype = 2) +\n  # actores\n  geom_point(aes(x = delta1), color = c_m, shape = 16) +\n  # actrices\n  geom_point(aes(x = delta2), color = c_f, shape = 18) +\n  # manual\n  scale_x_continuous(labels = scales::label_number(style_positive = \"plus\",\n                                                   style_negative = \"hyphen\"),\n                     limits = c(-30, 30),\n                     expand = c(0, 0),\n                     # segundo eje horizontal arriba\n                     sec.axis = dup_axis(name = NULL)) +\n  scale_y_continuous(breaks = 1:nrow(f_m),\n                     labels = f_m$ac2,\n                     expand = c(0, 0),\n                     # segundo eje vertical a la derecha\n                     sec.axis = sec_axis(~ .,\n                                         breaks = 1:nrow(f_m),\n                                         labels = f_m$ac1)) +\n  coord_cartesian(clip = \"off\") +\n  # ejes\n  labs(y = NULL, \n       x = glue(\n         \"Diferencia de edad (en años) entre la \n         &lt;span style='color:{c_f}'&gt;**actriz**&lt;/span&gt;/&lt;span style='color:{c_m}'&gt;**actor**&lt;/span&gt; \n         y su pareja en pantalla\"),\n       title = \"En &lt;span style='color:gold;'&gt;Hollywood &lt;/span&gt; ellos las&lt;br&gt; \n       prefieren jóvenes\",\n       subtitle = glue(\n         \"Se calculó la &lt;span style='color:gold;'&gt;**diferencia de \n         edad**&lt;/span&gt; promedio entre las 100 \n         &lt;span style='color:{c_f};'&gt;**actrices**&lt;/span&gt; \n         y &lt;span style='color:{c_m};'&gt;**actores**&lt;/span&gt; más populares de \n         &lt;span style='color:gold;'&gt;**Hollywood**&lt;/span&gt;. Dicha diferencia es \n         negativa cuando la persona (eje vertical) es menor que su interés \n         amoroso en pantalla. En su inmensa mayoría, \n         &lt;span style='color:{c_m};'&gt;**ellos**&lt;/span&gt; tienen exclusivamente \n         parejas menores, causando que &lt;span style='color:{c_f};'&gt;**ellas**&lt;/span&gt; \n         tengan parejas de mayor edad.\"),\n       caption = mi_caption,) +\n  theme_minimal() +\n  theme(aspect.ratio = 1.8,\n        axis.text.x = element_text(color = \"gold\", family = \"share\", \n                                   size = 10, face = \"bold\"),\n        axis.text.y.left = element_text(color = c_f, family = \"nunito\", \n                                        size = 8),\n        axis.text.y.right = element_text(color = c_m, family = \"nunito\", \n                                         size = 8),\n        axis.title.x.bottom = element_markdown(color = \"grey90\", family = \"nunito\"),\n        panel.grid.minor.y = element_blank(),\n        panel.grid.major.y = element_line(linewidth = .05, color = \"grey30\"),\n        panel.grid.major.x = element_line(linewidth = .05, color = \"grey30\",\n                                          linetype = \"ff\"),\n        panel.grid.minor.x = element_line(linewidth = .03, color = \"grey30\"),\n        panel.background = element_rect(fill = \"grey10\", color = NA),\n        plot.background = element_rect(fill = \"grey10\", color = NA),\n        plot.title = element_markdown(size = 45, family = \"libre\", \n                                      color = \"grey90\"),\n        plot.title.position = \"plot\",\n        plot.subtitle = element_textbox_simple(color = \"grey90\", \n                                               family = \"nunito\",\n                                               margin = margin(0, 0, 10, 0)),\n        plot.caption = element_markdown(hjust = .5, family = \"nunito\",\n                                        margin = margin(10, 0, 0, 0)),\n        plot.caption.position = \"plot\")\n\n# guardo\nggsave(plot = g1,\n       filename = here(\"2023/semana_07/viz.png\"),\n       width = 2300,\n       height = 3600,\n       units = \"px\",\n       dpi = 300)\n\n# abro\nbrowseURL(here(\"2023/semana_07/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 07"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_19.html",
    "href": "tidytuesday/2023/semana_19.html",
    "title": "Semana 19",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(ggtext)\nlibrary(glue)\nlibrary(showtext)\nlibrary(ggridges)\n\n# fuente ------------------------------------------------------------------\n\n# colores\n# paleta 'Homer1' de MetBrewer\nc1 &lt;- \"#c3f4f6\"\nc2 &lt;- \"#6ad5e8\"\nc3 &lt;- \"#df9ed4\"\nc4 &lt;- \"#16317d\"\nc5 &lt;- \"#a62f00\"\n\n# eje vertical, años\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\")\n# texto gral\nfont_add_google(name = \"Carlito\", family = \"carlito\", db_cache = FALSE)\n# eje horizontal\nfont_add_google(name = \"Inconsolata\", family = \"inconsolata\")\n# título\nfont_add_google(name = \"Noto Serif\", family = \"noto\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 19&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-05-09/readme.md\")\n\nchildcare_costs &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-09/childcare_costs.csv')\ncounties &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-09/counties.csv')\n\n# acomodo los datos\n# selecciono 'infant'\ndatos &lt;- childcare_costs |&gt; \n  select(study_year, ends_with(\"infant\"), mhi_2018) |&gt; \n  pivot_longer(cols = ends_with(\"infant\"),\n               values_to = \"price\",\n               names_to = \"group\") |&gt; \n  separate(group, into = c(\"base\", \"age\"), sep = \"_\") |&gt; \n  mutate(study_year = factor(study_year)) |&gt; \n  select(-age) |&gt; \n  drop_na(price)\n\n# valores de mediana, por 'base' y 'study_year'\nm &lt;- datos |&gt; \n  group_by(study_year, base) |&gt; \n  summarise(price = median(price, na.rm = TRUE)) |&gt; \n  ungroup() |&gt; \n  mutate(label = format(round(price, 1), nsmall = 1)) |&gt; \n  mutate(label = str_replace_all(label, \"\\.\", \",\"))\n\n# figura ------------------------------------------------------------------\n\ng &lt;- ggplot() +\n  # horizontales en gris\n  geom_hline(yintercept = factor(2008:2018), color = c2, linewidth = .5) +\n  # densidad, con fill\n  geom_density_ridges(\n    data = datos, \n    aes(x = price, y = study_year, color = base),\n    alpha = 0, panel_scaling = FALSE, scale = 1, show.legend = FALSE, \n    size = 1) +\n  # punto de mediana\n  geom_text(\n    data = m, \n    aes(x = price, y = study_year, label = \"|\"),\n    size = 3, nudge_y = .05, show.legend = FALSE, color = c2) +\n  # valor de mediana\n  geom_text(\n    data = m, \n    aes(x = price, y = study_year, label = label, color = base),\n    size = 4, nudge_y = .14, family = \"inconsolata\", show.legend = FALSE,\n    fontface = \"bold\") +\n  # manual\n  scale_x_continuous(breaks = seq(0, 500, 100)) +\n  scale_color_manual(values = c(c3, c4)) +\n  labs(x = \"Costo semanal, de tiempo completo (USD, 2018)\", y = NULL,\n       title = \"¿Cuánto cuesta cuidar un bebé?\",\n       subtitle = glue(\n         \"Entre **2008**-**2018** el costo asociado al cuidado de bebés (entre recién \n       nacido y los 23 meses) fue aumentando poco a poco en **EE.UU**. Si sucede \n       en la &lt;span style='color:{c3};'&gt;**casa**&lt;/span&gt;, los precios son superiores a \n       si los mandás a una &lt;span style='color:{c4};'&gt;**guardería**&lt;/span&gt;. \n       Se indican los valores de las medianas en cada año.\"),\n       caption = mi_caption) +\n  coord_cartesian(expand = FALSE, xlim = c(0, 500), ylim = c(.95, 11.5),\n                  clip = \"off\") +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1.5,\n    plot.background = element_rect(\n      fill = c1, color = c2, linewidth = 3),\n    plot.title = element_markdown(\n      size = 52, family = \"noto\", color = c4),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_textbox_simple(\n      size = 20, family = \"carlito\", color = c5, margin = margin(25, 0, 36, 0)),\n    plot.caption = element_markdown(\n      size = 15, color = c4, family = \"carlito\", hjust = .4, \n      margin = margin(15, 0, 3, 0)),\n    plot.margin = margin(15, 32, 0, 32),\n    panel.background = element_blank(),\n    panel.grid = element_blank(),\n    panel.grid.major.x = element_line(color = c2, linewidth = .5, linetype = 3),\n    axis.text.y = element_text(\n      size = 40, vjust = 0, family = \"bebas\", color = c5),\n    axis.text.x = element_text(\n      size = 25, family = \"inconsolata\", color = c5),\n    axis.title.x = element_markdown(\n      size = 20, family = \"carlito\", color = c5, margin = margin(15, 0, 0, 0))\n  )\n\n# guardo\nggsave(filename = \"2023/semana_19/viz.png\",\n       width = 30,\n       height = 48,\n       units = \"cm\",\n       dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_19/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 19"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_14.html",
    "href": "tidytuesday/2023/semana_14.html",
    "title": "Semana 14",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(glue)\nlibrary(patchwork)\nlibrary(showtext)\nlibrary(fontawesome)\nlibrary(ggtext)\n\n# fuentes -----------------------------------------------------------------\n\nfont_add(family = \"radikal\", regular = here(\"fuente/Nootype - Radikal.otf\")) # títulos\nfont_add_google(name = \"Share Tech Mono\", family = \"share\") # números\nfont_add_google(name = \"Heebo\", family = \"heebo\") # resto del texto\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# íconos\nfont_add(\"fa-reg\", \"icon/Font Awesome 5 Free-Regular-400.otf\")\nfont_add(\"fa-brands\", \"icon/Font Awesome 5 Brands-Regular-400.otf\")\nfont_add(\"fa-solid\", \"icon/Font Awesome 5 Free-Solid-900.otf\")\n\n# caption\nicon_twitter &lt;- \"&lt;span style='font-family:fa-brands; color:#e50312;'&gt;&#xf099;&lt;/span&gt;\"\nicon_github &lt;- \"&lt;span style='font-family:fa-brands; color:#e50312;'&gt;&#xf09b;&lt;/span&gt;\"\nfuente &lt;- \"&lt;span style='color:#e50312;'&gt;Datos:&lt;/span&gt; &lt;span style='color:#ffee01;'&gt;&lt;span style='font-family:mono;'&gt;{**tidytuesdayR**}&lt;/span&gt; semana 14&lt;/span&gt;\"\nautor &lt;- \"&lt;span style='color:#e50312;'&gt;Autor:&lt;/span&gt; &lt;span style='color:#ffee01;'&gt;**Víctor Gauto**&lt;/span&gt;\"\nsep &lt;- glue(\"&lt;span style = 'color:#e50312;'&gt;**|**&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style = 'color:#ffee01;'&gt;**vhgauto**&lt;/span&gt;\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(glue(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/\n               2023/2023-04-04/readme.md\"))\n\nfutbol &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-04-04/soccer21-22.csv')\n\nfutbol &lt;- futbol |&gt; \n  janitor::clean_names()\n\n# por árbitro -------------------------------------------------------------\n\ndatos_ref &lt;- futbol |&gt; \n  select(referee, ay, ar, hy, hr) |&gt; \n  group_by(referee) |&gt; \n  summarise(ay = sum(ay),\n            ar = sum(ar),\n            hy = sum(hy),\n            hr = sum(hr)) |&gt; \n  ungroup() |&gt; \n  mutate(AMARILLA = hy + ay,\n         ROJA = hr + ar) |&gt; \n  mutate(tot_tar = AMARILLA + ROJA) |&gt; \n  select(-ay, -ar, -hy, -hr) |&gt; \n  left_join(count(futbol, referee), by = \"referee\") |&gt; \n  mutate(\n    AMARILLA = AMARILLA/n,\n    ROJA = ROJA/n,\n    tot_tar = tot_tar/n\n  ) |&gt; \n  select(-n) |&gt; \n  pivot_longer(cols = AMARILLA:ROJA,\n               values_to = \"valor\",\n               names_to = \"tarjeta\") |&gt; \n  select(referee, tarjeta, valor, tot_tar) |&gt; \n  mutate(tarjeta = factor(tarjeta, levels = c(\"ROJA\", \"AMARILLA\"))) |&gt; \n  pivot_wider(names_from = tarjeta,\n              values_from = valor) |&gt; \n  mutate(ROJA_x = ROJA) |&gt; \n  mutate(AMARILLA_x = AMARILLA) |&gt; \n  mutate(across(AMARILLA:ROJA, ~ format(round(.x, 1), nsmall = 1))) |&gt; \n  mutate(referee = fct_reorder(referee, AMARILLA)) |&gt; \n  mutate(ROJA = str_replace(ROJA, \"0\", \"\"))\n\n# por equipos -------------------------------------------------------------\n\nlocal_tar &lt;- futbol |&gt;\n  select(home_team, hy, hr) |&gt;\n  group_by(equipo = home_team) |&gt;\n  summarise(AMARILLA = sum(hy),\n            ROJA = sum(hr))\n\nvisit_tar &lt;- futbol |&gt;\n  select(away_team, ay, ar) |&gt;\n  group_by(equipo = away_team) |&gt;\n  summarise(AMARILLA = sum(ay),\n            ROJA = sum(ar))\n\npath_logos &lt;- \"2023/semana_14/logo_png/\"\n\ndatos_equ &lt;- bind_rows(local_tar,\n                       visit_tar) |&gt;\n  group_by(equipo) |&gt;\n  summarise(AMARILLA = sum(AMARILLA),\n            ROJA = sum(ROJA)) |&gt;\n  pivot_longer(cols = AMARILLA:ROJA,\n               values_to = \"valor\",\n               names_to = \"tarjeta\") |&gt;\n  group_by(equipo) |&gt;\n  mutate(tot_tar = sum(valor)) |&gt;\n  ungroup() |&gt;\n  mutate(tarjeta = factor(tarjeta, levels = c(\"ROJA\", \"AMARILLA\"))) |&gt;\n  # mutate(equipo = fct_reorder(equipo, tot_tar)) |&gt; \n  pivot_wider(names_from = tarjeta,\n              values_from = valor) |&gt; \n  mutate(equipo_png = glue(\"{equipo}.png\")) |&gt; \n  mutate(equipo_label = glue(\"&lt;img src='{paste0(path_logos, {equipo_png})}' width='30'&gt;\")) |&gt; \n  mutate(equipo = fct_reorder(equipo, AMARILLA)) |&gt; \n  mutate(equipo_label = fct_reorder(equipo_label, AMARILLA)) \n\n# figuras -----------------------------------------------------------------\n\n# parámetros de la figura\ntamaño_tarjeta &lt;- 7\ntamaño_nro &lt;- 8\ndesp_equ &lt;- 9\ndesp_ref &lt;- .45\nlogo_a &lt;- \"2023/semana_14/logo_a.png\"\nlogo_r &lt;- \"2023/semana_14/logo_r.png\"\n\n# tema p/ambas figuras\ntheme_set(\n  theme_minimal() +\n    theme(aspect.ratio = 3,\n          text = element_text(color = \"white\"),\n          axis.text.y.left = element_markdown(color = \"white\", family = \"radikal\",\n                                     size = 19, margin = margin(5, 20, 5, 5)),\n          axis.text.x = element_blank(),\n          axis.title.x = element_text(family = \"heebo\", size = 20, \n                                      hjust = .5, margin = margin(5, 0, 5, 40)),\n          plot.background = element_rect(fill = NA, color = NA),\n          plot.title = element_text(hjust = .5, size = 20,\n                                    family = \"radikal\"),\n          panel.background = element_rect(fill = NA, color = NA),\n          panel.grid = element_blank()\n    )\n)\n\n# figura EQUIPOS\ng_equ &lt;- ggplot(data = datos_equ, aes(y = equipo)) +\n  # linea punteada\n  geom_segment(aes(x = ROJA + 17, xend = AMARILLA - 6, yend = equipo), \n               color = \"white\", linetype = 2, linewidth = .25) +\n  # tarjeta ROJA\n  geom_label(aes(x = ROJA, label = \" \"), color = \"#e50312\", \n             fill = \"#e50312\", size = tamaño_tarjeta, hjust = 0) +\n  geom_text(aes(x = ROJA, label = ROJA), color = \"#e50312\", \n            size = tamaño_nro,\n            nudge_x = desp_equ, hjust = 0, family = \"share\") +\n  # tarjeta AMARILLA\n  geom_label(aes(x = AMARILLA, label = \" \"), color = \"#ffee01\", \n             fill = \"#ffee01\", size = tamaño_tarjeta, hjust = 0) +\n  geom_text(aes(x = AMARILLA, label = AMARILLA), color = \"#ffee01\",\n            size = tamaño_nro,\n            nudge_x = desp_equ, hjust = 0, family = \"share\") +\n  # logo equipos\n  geom_richtext(aes(x = -15, y = equipo, label = equipo_label), fill = NA, \n                color = NA, size = 6) +\n  # manual\n  scale_x_continuous(limits = c(-20, 117), expand = c(0, 0)) +\n  scale_y_discrete(labels = (x) str_to_upper(x)) +\n  scale_fill_manual(breaks = c(\"AMARILLA\", \"ROJA\"),\n                    values = c(\"#ffee01\", \"#e50312\")) +\n  coord_cartesian(clip = \"off\") +\n  # ejes\n  labs(x = \"Cantidad total de tarjetas\",\n       y = NULL) \n\n# figura ÁRBITROS\ng_ref &lt;- ggplot(data = datos_ref, aes(y = referee,)) +\n  # linea punteada\n  geom_segment(aes(x = ROJA_x + 1.1, xend = AMARILLA_x - .3, yend = referee), \n               color = \"white\", linetype = 2, linewidth = .25) +\n  # tarjeta ROJA\n  geom_label(aes(x = ROJA_x, label = \" \"), color = \"#e50312\", \n             fill = \"#e50312\", size = tamaño_tarjeta, hjust = 0) +\n  geom_text(aes(x = ROJA_x, label = ROJA), color = \"#e50312\",\n            size = tamaño_nro,\n            nudge_x = desp_ref, hjust = 0, family = \"share\") +\n  # tarjeta AMARILLA\n  geom_label(aes(x = AMARILLA_x, label = \" \"), color = \"#ffee01\", \n             fill = \"#ffee01\", size = tamaño_tarjeta, hjust = 0) +\n  geom_text(aes(x = AMARILLA_x, label = AMARILLA), color = \"#ffee01\",\n            size = tamaño_nro,\n            nudge_x = desp_ref, hjust = 0, family = \"share\") +\n  # manual\n  scale_x_continuous(limits = c(-.1, 6), expand = c(0, 0)) +\n  scale_y_discrete(labels = (x) str_replace(x, \" \", \". \")) +\n  scale_fill_manual(breaks = c(\"AMARILLA\", \"ROJA\"),\n                    values = c(\"#ffee01\", \"#e50312\")) +\n  coord_cartesian(clip = \"off\") +\n  # ejes\n  labs(x = \"Cantidad promedio de tarjetas,npor partido\",\n       y = NULL)\n\n# figura compuesta\ng_comp &lt;- g_equ + plot_spacer() + g_ref + \n  # distribución figuras\n  plot_layout(widths = c(.8, .2, .8)) &\n  plot_annotation(\n    title = glue(\n      \"&lt;img src='{logo_r}' width='55'&gt; PREMIER LEAGUE \n      &lt;img src='{logo_a}' width='55'&gt;\"\n      ),\n    subtitle = \"Cantidad de tarjetas &lt;span style='color:#e50312;'&gt;**rojas**&lt;/span&gt; \n    y &lt;span style='color:#ffee01;'&gt;**amarillas**&lt;/span&gt; en la liga inglesa de \n    fútbol, durante la&lt;br&gt;temporada **2021**-**2022**, por equipos (izquierda) y \n    árbitros (derecha).\",\n    caption = mi_caption,\n    theme = theme(\n      plot.title = element_markdown(\n        family = \"radikal\", size = 75, hjust = .5, color = \"white\"),\n      plot.title.position = \"plot\",\n      plot.subtitle = element_markdown(\n        color = \"white\", size = 26, family = \"heebo\", margin = margin(10, 0, 15, 0)),\n      plot.background = element_rect(fill = \"#360c3a\", color = NA),\n      plot.margin = margin(5, 12, 5, 12),\n      plot.caption = element_markdown(hjust = .5, size = 18),\n      axis.text.x = element_blank(),\n      panel.background = element_rect(fill = \"#360c3a\", color = NA),\n    )\n  )\n\n# guardo\nggsave(\n  plot = g_comp,\n  filename = here(\"2023/semana_14/viz.png\"),\n  width = 35,\n  height = 35,\n  units = \"cm\",\n  dpi = 300)\n\n# abro\nbrowseURL(here(\"2023/semana_14/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 14"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_15.html",
    "href": "tidytuesday/2023/semana_15.html",
    "title": "Semana 15",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(fontawesome)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(ggpath)\n\n# fuentes -----------------------------------------------------------------\n\nfont_add_google(name = \"Share Tech Mono\", family = \"share\") # rendimiento, eje y\nfont_add_google(name = \"Lato\", family = \"lato\") # resto del texto\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\") # años, eje x\nfont_add_google(name = \"Merriweather\", family = \"merriweather\") # título\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# íconos\nfont_add(\"fa-reg\", \"icon/Font Awesome 5 Free-Regular-400.otf\")\nfont_add(\"fa-brands\", \"icon/Font Awesome 5 Brands-Regular-400.otf\")\nfont_add(\"fa-solid\", \"icon/Font Awesome 5 Free-Solid-900.otf\")\n\n# caption\nicon_twitter &lt;- \"&lt;span style='font-family:fa-brands; color:grey90;'&gt;&#xf099;&lt;/span&gt;\"\nicon_github &lt;- \"&lt;span style='font-family:fa-brands; color:grey90;'&gt;&#xf09b;&lt;/span&gt;\"\nfuente &lt;- \"&lt;span style='color:grey90;'&gt;Datos:&lt;/span&gt; &lt;span style='color:gold;'&gt;&lt;span style='font-family:mono;'&gt;{**tidytuesdayR**}&lt;/span&gt; semana 15&lt;/span&gt;\"\nautor &lt;- \"&lt;span style='color:grey90;'&gt;Autor:&lt;/span&gt; &lt;span style='color:gold;'&gt;**Víctor Gauto**&lt;/span&gt;\"\nsep &lt;- glue(\"&lt;span style = 'color:grey90;'&gt;**|**&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style = 'color:gold;'&gt;**vhgauto**&lt;/span&gt;\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-04-11/readme.md\")\n\neggproduction  &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-04-11/egg-production.csv')\n\n# acomodo datos\ndatos &lt;- eggproduction |&gt; \n  filter(prod_type == \"table eggs\" & prod_process == \"all\") |&gt; \n  mutate(rendimiento = n_eggs/n_hens) |&gt; \n  mutate(año = factor(year(observed_month))) |&gt; \n  select(año, gallina = n_hens, huevo = n_eggs, rendimiento)\n\n# valores mínimos 2017-2020, todos en febrero\nflecha &lt;- eggproduction |&gt; \n  filter(prod_type == \"table eggs\" & prod_process == \"all\") |&gt; \n  mutate(rendimiento = n_eggs/n_hens) |&gt; \n  mutate(año = factor(year(observed_month))) |&gt; \n  group_by(año) |&gt; \n  slice_min(order_by = rendimiento, n = 1) |&gt; \n  filter(month(observed_month) == 2) |&gt; \n  select(año, rendimiento) |&gt; \n  ungroup() |&gt; \n  mutate(xend = 2:5,\n         x = 4.8,\n         yend = rendimiento - 0,\n         y = 21.95)\n\n# figura ------------------------------------------------------------------\n\ng &lt;- ggplot(data = datos, aes(x = año, y = rendimiento)) +\n  # verticales\n  geom_vline(xintercept = 1.5:5.5, color = \"grey30\", linewidth = .1) +\n  # tendencia\n  geom_smooth(aes(x = as.numeric(año), y = rendimiento), linewidth = 4,\n              color = \"gold\",\n              inherit.aes = FALSE, se = FALSE, formula = y ~ x, method = \"lm\") +\n  # flechas\n  geom_segment(data = flecha, aes(x = x, xend = xend, y = y, yend = yend),\n               color = \"grey40\", linewidth = .5, alpha = 1) +\n  geom_richtext(aes(x = 4.8, y = 21.95, \n                    label = \"Los valores más bajos&lt;br&gt;de **rendimiento** se&lt;br&gt;\n                    dieron en febrero por&lt;br&gt;**4** años consecutivos\"), \n                inherit.aes = FALSE, color = \"grey90\", size = 3.5, vjust = 1,\n                fill = \"grey10\", label.color = \"grey40\", hjust = 0, family = \"lato\") +\n  # huevo .png, jitter\n  geom_from_path(aes(path = \"2023/semana_15/egg.png\"), width = .05,\n                 position = position_jitter(width = .1, seed = 2023)) +\n  # leyenda\n  geom_richtext(aes(x = 4.5, y = 26, \n                    label = \"&lt;img src='2023/semana_15/egg.png' width='10'&gt; = Rendimiento mensual\"),\n                color = \"grey90\", fill = NA, inherit.aes = FALSE, hjust = 0,\n                label.color = NA, vjust = 0, size = 3.7, family = \"lato\") +\n  # manual\n  scale_y_continuous(breaks = seq(21, 26, 1),\n                     limits = c(20.75, 26),\n                     expand = c(0, 0)) +\n  scale_x_discrete(breaks = 2016:2021,\n                   labels = glue(\"'{16:21}\")) +\n  coord_cartesian(clip = \"off\") +\n  # ejes\n  labs(x = NULL, y = \"Rendimiento\",\n       title = \"Año a año, las &lt;span style='color:gold;'&gt;gallinas&lt;/span&gt;&lt;br&gt;ponen \n       más huevo(s)\",\n       subtitle = \"La tendencia (línea &lt;span style='color:gold;'&gt;**amarilla**&lt;/span&gt;) \n       muestra que el rendimiento de huevos de mesa en **Estados Unidos** se ha \n       incrementado levemente. Se entiende el **rendimiento** como la cantidad de huevos \n       que pone una gallina, por mes.\",\n       caption = mi_caption) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    axis.text.x = element_text(\n      family = \"bebas\", size = 27, color = \"gold\", margin = margin(0, 0, 20, 0)),\n    axis.text.y = element_text(family = \"share\", size = 13, color = \"gold\"),\n    axis.title.y = element_text(color = \"gold\", family = \"lato\", size = 16),\n    plot.background = element_rect(fill = \"grey10\", color = \"gold\", linewidth = 2),\n    plot.title = element_markdown(\n      family = \"merriweather\", size = 40, margin = margin(10, 0, 5, 0),\n      color = \"grey90\"),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_textbox_simple(\n      size = 12, family = \"lato\", margin = margin(10, 0, 25, 0),\n      color = \"grey90\"),\n    plot.caption = element_markdown(\n      hjust = .3, size = 9, margin = margin(0, 0, 5, 0)),\n    plot.margin = margin(5, 17, 5, 17),\n    panel.background = element_rect(fill = \"grey10\", color = NA),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(color = \"grey30\", linewidth = .2)\n  )\n\n# guardo\nggsave(plot = g,\n       filename = \"2023/semana_15/viz.png\",\n       width = 2000,\n       height = 2700,\n       units = \"px\",\n       dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_15/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 15"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_29.html",
    "href": "tidytuesday/2023/semana_29.html",
    "title": "Semana 29",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(ggwaffle)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuentes -----------------------------------------------------------------\n\n# colores, Renoir\nc1 &lt;- \"#17164F\"\nc2 &lt;- \"#9D9CD5\"\nc3 &lt;- \"#6C5D9E\"\nc4 &lt;- \"#E69B00\"\nc5 &lt;- \"#BF3728\"\nc6 &lt;- \"#F6B3B0\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# título y porcentajes\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 29, **GPT Detectors Are Biased Against Non-Native English Writers**. Weixin Liang, Mert Yuksekgonul, Yining Mao, Eric Wu, James Zou. arXiv: **2304.02819**&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-07-18/readme.md\")\n\ndetectors &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-07-18/detectors.csv')\n\n# aciertos/errores en la detección de texto HUMANO\ndetectors |&gt; \n  filter(kind == \"Human\") |&gt; \n  summarise(acierto = mean(kind == .pred_class)) |&gt; \n  mutate(error = 1 - acierto)\n\n# aciertos/errores en la detección de texto IA\ndetectors |&gt; \n  filter(kind == \"AI\") |&gt; \n  summarise(acierto = mean(kind == .pred_class)) |&gt; \n  mutate(error = 1 - acierto)\n\n# aciertos/errores en la detección de texto HUMANO, entre nativos/NO nativos\ndetectors |&gt; \n  filter(kind == \"Human\") |&gt; \n  group_by(native) |&gt; \n  summarise(acierto = mean(kind == .pred_class)) |&gt; \n  mutate(error = 1 - acierto)\n\n# porcentaje de aciertos entre texto generado por nativos del inglés\nporc_nativo &lt;- detectors |&gt; \n  filter(kind == \"Human\" & native == \"Yes\") |&gt; \n  summarise(acierto = mean(kind == .pred_class)) |&gt; \n  pull(acierto) |&gt; \n  gt::vec_fmt_percent(decimals = 0, sep_mark = \".\", dec_mark = \",\")\n\n# porcentaje de aciertos entre texto generado por NO nativos del inglés\nporc_no_nativo &lt;- detectors |&gt; \n  filter(kind == \"Human\" & native == \"No\") |&gt; \n  summarise(acierto = mean(kind == .pred_class)) |&gt; \n  pull(acierto) |&gt; \n  gt::vec_fmt_percent(decimals = 0, sep_mark = \".\", dec_mark = \",\")\n\n# me interesa el porcentaje de aciertos, entre nativos/NO nativos, para los\n# siete detectores\nd &lt;- detectors |&gt; \n  filter(!is.na(native)) |&gt; \n  group_by(detector, native) |&gt; \n  reframe(prop = mean(kind == .pred_class)) |&gt; \n  mutate(detector = fct_reorder(detector, prop, max))\n\n# figura ------------------------------------------------------------------\n\n# título y subtítulo\ntit &lt;- glue(\"Si no hablás inglés nativo,&lt;br&gt;las IA dudan de tu humanidad\")\n\nsubtit &lt;- glue(\n  \"Se solicitó a &lt;span style='color:{c6}'&gt;**siete detectores de IA**&lt;/span&gt; que\n  identifiquen si texto, en inglés escrito por humanos, **fue o no generado&lt;br&gt;\n  por una IA**. Para los textos creados por \n  &lt;span style='color:{c5};'&gt;**nativos del ingles**&lt;/span&gt;, en promedio, \n  hubo un **{porc_nativo}** de aciertos. Sin embargo, &lt;br&gt;\n  para los &lt;span style='color:{c4};'&gt;**no nativos del inglés**&lt;/span&gt;, \n  disminuye al **{porc_no_nativo}**.\"\n)\n\n# figura\ng &lt;- ggplot(data = d, aes(x = prop, y = detector, fill = native)) +\n  # columnas\n  geom_col(\n    position = position_dodge(), show.legend = FALSE, width = .5, color = c2) +\n  # porcentajes\n  geom_text(\n    aes(label = gt::vec_fmt_percent(\n      prop, decimals = 0, dec_mark = \",\", sep_mark = \".\")),\n    position = position_dodge(width = .5), color = c6, size = 5,\n    hjust = -.25, family = \"victor\") +\n  scale_x_continuous(\n    limits = c(0, 1), expand = c(0, 0), breaks = c(0, .5, 1),\n    labels = scales::label_percent()) +\n  scale_fill_manual(values = c(c4, c5)) +\n  labs(\n    x = NULL, y = NULL, title = tit, subtitle = subtit, caption = mi_caption) +\n  coord_cartesian(clip = \"off\") +\n  theme(\n    aspect.ratio = 1,\n    plot.background = element_rect(fill = c1, color = c3, linewidth = 3),\n    plot.margin = margin(8, 40, 8, 13),\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(\n      color = c2, size = 45, family = \"victor\", hjust = .5),\n    plot.subtitle = element_markdown(\n      color = c2, family = \"ubuntu\", size = 16, margin = margin(2, 2, 10, 2), \n      lineheight = 1.3),\n    plot.caption = element_markdown(color = c2),\n    panel.background = element_blank(),\n    panel.grid = element_blank(),\n    panel.grid.major.x = element_line(\n      linewidth = .2, linetype = \"8f\", color = c2),\n    axis.text.y = element_text(\n      hjust = 1, color = c6, family = \"ubuntu\", size = 15,face = \"bold\"),\n    axis.text.x = element_text(\n      color = c3, size = 15, family = \"victor\", hjust = 0),\n    axis.ticks = element_blank()\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_29/viz.png\",\n  width = 30,\n  height = 32.5,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(\"2023/semana_29/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 29"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_50.html",
    "href": "tidytuesday/2023/semana_50.html",
    "title": "Semana 50",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#CC3A6A\"\nc2 &lt;- \"grey90\"\nc3 &lt;- \"#100A2C\"\nc4 &lt;- \"white\"\nc5 &lt;- \"#DBB1D3\"\nc6 &lt;- \"#100A2C\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# calificación IMDB y año\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# título\nfont_add_google(name = \"Mountains of Christmas\", family = \"christmas\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 50. \",\n  \"Internet Movie Database&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\nimdb_logo &lt;- glue(\n  \"&lt;span style='font-family:fa-brands; font-size:30pt'&gt;\",\n  \"&#xf2d8;&lt;/span&gt;\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-12-05/readme.md\")\n\nholiday_movies &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-12/holiday_movies.csv')\nholiday_movie_genres &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-12/holiday_movie_genres.csv')\n\n# me interesa ver la distribución de calificaciones de IMDb, por género\nd_eng &lt;- holiday_movies |&gt; \n  select(-genres) |&gt; \n  full_join(holiday_movie_genres, by = join_by(tconst)) |&gt; \n  filter(title_type == \"movie\") |&gt; \n  select(average_rating, genres) |&gt; \n  mutate(genres = fct_reorder(genres, average_rating)) |&gt;\n  drop_na() |&gt; \n  mutate(m = median(average_rating), .by = genres) |&gt; \n  mutate(n = n(), .by = genres) \n\n# traducción de los géneros de las peículas\ngeneros_eng &lt;- unique(d_eng$genres) |&gt; sort()\ngeneros_esp &lt;- c(\n  \"Terror\", \"Thriller\", \"Misterio\", \"Acción\", \"Familiar\", \"Fantasía\", \"Comedia\",\n  \"Ciencia ficción\", \"Western\", \"Romántica\", \"Deportes\", \"Policial\", \"Aventura\",\n  \"Drama\", \"Musical\", \"Histórica\", \"Animada\", \"Bélica\", \"Música\", \"Noir\", \n  \"Biografía\", \"Documental\")\n\nnames(generos_esp) &lt;- generos_eng\n\nd &lt;- d_eng |&gt; \n  mutate(genres = generos_esp[genres]) |&gt; \n  mutate(genres = fct_reorder(genres, average_rating))\n\n# películas con mejor puntuación, por género\nd_max &lt;- holiday_movies |&gt; \n  select(-genres) |&gt; \n  full_join(holiday_movie_genres, by = join_by(tconst)) |&gt; \n  filter(title_type == \"movie\") |&gt; \n  mutate(genres = generos_esp[genres]) |&gt;\n  mutate(genres = fct_reorder(genres, average_rating)) |&gt; \n  select(primary_title, year, genres, average_rating) |&gt; \n  drop_na() |&gt; \n  slice_max(average_rating, n = 1, by = genres, with_ties = FALSE) |&gt; \n  mutate(average_rating = str_replace(average_rating, \"\\.\", \",\")) |&gt; \n  mutate(\n    titulo_label = glue(\n      \"&lt;span style='font-family:ubuntu; font-size:13pt; color: white'&gt;\",\n      \"{primary_title}&lt;/span&gt;\")) |&gt; \n  mutate(\n    año_label = glue(\n      \"&lt;span style='font-family: victor; font-size:10pt; color: grey90'&gt;\",\n      \"{year}&lt;/span&gt;\")) |&gt; \n  mutate(puntaje_label = glue(\n    \"&lt;span style='font-family: victor; font-size:10pt'&gt;\",\n    \"**{average_rating}**/10&lt;/span&gt;\")) |&gt; \n  mutate(label = glue(\"{titulo_label} {año_label}&lt;br&gt;{puntaje_label}\"))\n\n# figura ------------------------------------------------------------------\n\n# título y subtítulo\nmi_tit &lt;- \"En Navidad veamos un documental\"\n\nmi_sub &lt;- glue(\n  \"Los **documentales** presentan la mejor calificación entre las películas \",\n  \"navideñas. Caso opuesto,&lt;br&gt;las de **terror** son las peores. \",\n  \"Para cada género se indica la película con el mejor puntaje.\")\n\n# figura\ng &lt;- ggplot(d, aes(average_rating, genres, group = genres)) +\n  geom_richtext(\n    data = d_max, aes(10.2, genres, label = label), hjust = 0, fill = NA, \n    label.color = NA) +\n  geom_point( shape = 20, size = 5, alpha = .3, color = c2) +\n  geom_point(\n    aes(x = m), shape = 18, size = 6, alpha = 1, color = c4) +\n  scale_x_continuous(\n    breaks = seq(1, 10, 1), expand = c(0, 0), limits = c(1, 11)) +\n  labs(\n    title = mi_tit, subtitle = mi_sub, x = glue(\"Calificación {imdb_logo}\"), \n    y = NULL, caption = mi_caption) +\n  coord_cartesian(clip = \"off\") +\n  guides(fill = guide_colorsteps(\n    frame.colour = c4, ticks = TRUE, ticks.colour = c4,\n    ticks.linewidth = 3/.pt, frame.linewidth = 1/.pt)) +\n  theme_void() +\n  theme(\n    plot.margin = margin(8.6, 280, 8.6, 5),\n    plot.background = element_rect(\n      fill = c1, color = c2, linewidth = 3),\n    plot.title = element_text(\n      family = \"christmas\", size = 60, color = c4,\n      margin = margin(t = 6)),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 18, color = c6, \n      margin = margin(b = 10, l = 10)),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c2, size = 10, \n      margin = margin(t = 10, r = -270)),\n    aspect.ratio = 1.5,\n    legend.key.height = unit(12, \"mm\"),\n    axis.title.x = element_markdown(\n      size = 20, hjust = .5, family = \"ubuntu\", color = c2, \n      margin = margin(t = 10)),\n    axis.ticks.y = element_blank(),\n    axis.text.x = element_text(\n      family = \"victor\", size = 14, color = c2, face = \"bold\"),\n    axis.text.y = element_text(\n      family = \"ubuntu\", size = 15, hjust = 1, margin = margin(0, 10, 0, 0),\n      color = c6),\n    panel.grid.major.x = element_line(\n      color = c5, linetype = \"ff\", linewidth = .1))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_50/viz.png\",\n  width = 30,\n  height = 32,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_50/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 50"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_49.html",
    "href": "tidytuesday/2023/semana_49.html",
    "title": "Semana 49",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(patchwork)\nlibrary(ggflags) # https://github.com/jimjam-slam/ggflags\nlibrary(ggh4x)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"grey80\"\nc2 &lt;- \"grey60\"\nc3 &lt;- \"black\"\nc4 &lt;- \"white\"\nc5 &lt;- \"grey30\"\nc6 &lt;- \"grey90\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# números, fechas, ranking\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# números, fechas, ranking\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 49. \",\n  \"Our World in Data&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-12-05/readme.md\")\n\nlife_expectancy &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-05/life_expectancy.csv') |&gt; \n  janitor::clean_names()\n\n# me interesa ver la evolución de otros países comparados con Argentina,\n# en dos períodos, 1950 y 2020\n\n# rango de edades en 1950 y 2020, para Argentina\nrango &lt;- life_expectancy |&gt; \n  filter(code == \"ARG\" & (year == 1950 | year == 2020)) |&gt; \n  pull(life_expectancy)\n\n# factor para aplicar a las edades de Argentina, y obtener otros países con \n# espectativas de vida cercanas, en 1950 y 2020\nfactor &lt;- .01\n\n# valores de edad en 1950\nmin_inf &lt;- rango[1]*(1-factor)\nmin_sup &lt;- rango[1]*(1+factor)\n\nlife_expectancy |&gt; \n  filter(year == 1950 & between(life_expectancy, min_inf, min_sup)) |&gt; \n  drop_na()\n\n# países a comparar en 1950\np_1950 &lt;- c(\"Argentina\", \"Bulgaria\", \"Malta\", \"Spain\", \"Slovakia\")\n\n# valores de edad en 2020\nmax_inf &lt;- rango[2]*(1-factor)\nmax_sup &lt;- rango[2]*(1+factor)\n\nlife_expectancy |&gt; \n  filter(year == 2020 & between(life_expectancy, max_inf, max_sup)) |&gt; \n  drop_na() |&gt; \n  print(n = 30)\n\n# países a comparar en 2020\np_2020 &lt;- c(\"Argentina\", \"Turkey\", \"Hungary\", \"Malaysia\", \"Saudi Arabia\")\n\n# tibble para 1950\ntbl_1950 &lt;- life_expectancy |&gt; \n  filter(year &gt;= 1950 & entity %in% p_1950) |&gt; \n  mutate(estado = \"inicio\")\n\n# tibble para 2020\ntbl_2020 &lt;- life_expectancy |&gt; \n  filter(year &gt;= 1950 & entity %in% p_2020) |&gt; \n  mutate(estado = \"final\")\n\n# combino y selecciono décadas\nd &lt;- bind_rows(tbl_1950, tbl_2020) |&gt; \n  mutate(estado = fct(estado, levels = c(\"inicio\", \"final\"))) |&gt; \n  filter(year %% 10 == 0)\n\n# figura ------------------------------------------------------------------\n\n# ubicación de las banderas\nd_bandera &lt;- d |&gt; \n  filter(\n    (year == 2020 & estado == \"inicio\") | (year == 1960 & estado == \"final\"))\n\n# países involucrados\npaises &lt;- sort(unique(d_bandera$entity))\n\n# traducción de los nombres de los países \npaises_trad &lt;- c(\n  \"Argentina\", \"Bulgaria\", \"Hungría\", \"Malasia\", \"Malta\", \"Arabia Saudita\",\n  \"Eslovaquia\", \"España\", \"Turquía\")|&gt; str_c(\"    \")\n\n# obtengo el código ISO2C de los países, para poder usar {ggflags}\niso2 &lt;- countrycode::codelist |&gt; \n  select(contains(\"iso\")) |&gt; \n  filter(iso.name.en %in% paises) |&gt; \n  pull(iso2c) |&gt; \n  str_to_lower()\n\n# vector con nombres\nnames(iso2) &lt;- paises\n\n# agrego los códigos de país y muevo a la derecha las banderas del 1er panel\nd_bandera_tbl &lt;- d_bandera |&gt; \n  mutate(bandera = iso2[entity]) |&gt; \n  mutate(year = if_else(estado == \"inicio\", year+4, year))\n\n# ejes verticales\neje_vertical &lt;- list(\n  scale_y_continuous(\n    limits = c(60, 85), expand = c(0, 0), breaks = seq(60, 90, 5)),\n  scale_y_continuous(\n    limits = c(40, 80), expand = c(0, 0), breaks = seq(40, 80, 5)))\n\n# rango de edades, Argentina 1950-2020\nrango_label &lt;- gt::vec_fmt_number(\n  rango, decimals = 1, sep_mark = \"\", dec_mark = \",\")\n\n# descripciones\ndesc_tbl &lt;- tibble(\n  x = c(1975, 2020),\n  y = c(rango[1], 62),\n  label = c(\n    glue(\n      \"Cuatro países que en **1950**&lt;br&gt;\",\n      \"tenían casi la misma esperanza&lt;br&gt;\",\n      \"de vida que **Argentina**,&lt;br&gt;\",\n      \"alrededor de {rango_label[1]} años.\"),\n    glue(\n      \"Cuatro países con&lt;br&gt;\",\n      \"similar esperanza de&lt;br&gt;\",\n      \"vida que **Argentina** en&lt;br&gt;\",\n      \"**2020**, aproximadamente&lt;br&gt;\",\n      \"{rango_label[2]} años.\")),\n  estado = c(\"inicio\", \"final\")) |&gt; \n  mutate(estado = fct(estado, levels = c(\"inicio\", \"final\"))) |&gt; \n  mutate(hjust = c(0, 1), vjust = c(0, 1)) |&gt; \n  mutate(xend = c(1953, 2020), yend = c(rango[1], 75))\n\n# edades en 1875 y 1975\nexp_100 &lt;- life_expectancy |&gt; \n  filter(code == \"ARG\" & (year == 1875 | year == 1975)) |&gt; \n  arrange(life_expectancy) |&gt; \n  pull(life_expectancy) |&gt; \n  gt::vec_fmt_number(decimals = 1, sep_mark = \"\", dec_mark = \",\")\n\n# subtítulo\nmi_sub &lt;- glue(\n  \"En 1875, la espectativa de vida al nacer en **Argentina** \",\n  \"era de {exp_100[1]} años.&lt;br&gt;\",\n  \"100 años después, en 1975, se duplicaba alcanzando los \",\n  \"{exp_100[2]} años.&lt;br&gt;\")\n\n# figura\ng &lt;- ggplot(d, aes(year, life_expectancy, color = entity, fill = entity)) +\n  # puntos y líneas de expectativa de vida\n  geom_line(show.legend = FALSE, linewidth = 2, alpha = 1) +\n  geom_point(size = 2, shape = 23, show.legend = FALSE, stroke = 1,alpha = 1) +\n  geom_point(size = 1.7, show.legend = FALSE, color = c1, shape = 18) +\n  # contorno de las banderas\n  geom_point(\n    data = d_bandera_tbl, aes(year, life_expectancy), size = 14, \n    show.legend = FALSE) +\n  # banderas\n  geom_flag(data = d_bandera_tbl, aes(country = bandera), size = 12) +\n  # aclaraciones\n  geom_richtext(\n    data = desc_tbl, aes(x, y, label = label, hjust = hjust, vjust = vjust), \n    inherit.aes = FALSE, fill = c2, label.color = NA, family = \"ubuntu\",\n    color = c4, size = 5) +\n  # flechas\n  geom_curve(\n    data = desc_tbl, aes(x, y, xend = xend, yend = yend), inherit.aes = FALSE,\n    curvature = .1, arrow = arrow(angle = 20,length = unit(.3, \"line\")),\n    color = c2, arrow.fill = c2) +\n  # punto en la esquina de las aclaraciones\n  geom_point(\n    data = desc_tbl, aes(x, y), inherit.aes = FALSE, size = 2, color = c2) +\n  facet_wrap(vars(estado), nrow = 1, scales = \"free\") +\n  facetted_pos_scales(y = eje_vertical) +\n  scale_x_continuous(breaks = seq(1950, 2020, 10)) +\n  scale_country(labels = paises_trad, breaks = iso2) +\n  MetBrewer::scale_color_met_d(name = \"Redon\") +\n  MetBrewer::scale_fill_met_d(name = \"Redon\") +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    country = NULL, x = NULL, y = NULL, caption = mi_caption, \n    subtitle = mi_sub) +\n  guides(country = guide_legend(nrow = 1)) +\n  theme_minimal() +\n  theme(\n    plot.margin = margin(6.5, 50, 6.5, 40),\n    plot.background = element_rect(\n      fill = c1, color = c5, linewidth = 3),\n    plot.subtitle = element_markdown(\n      size = 22, family = \"ubuntu\", lineheight = unit(1.3, \"line\")),\n    plot.caption.position = \"plot\",\n    plot.caption = element_markdown(color = c4, family = \"ubuntu\", size = 12),\n    panel.background = element_blank(),\n    panel.spacing.x = unit(2,\"line\"),\n    panel.grid.minor = element_blank(),\n    panel.grid = element_line(color = c6, linewidth = .3),\n    aspect.ratio = 2,\n    legend.position = \"bottom\",\n    legend.background = element_rect(fill = c5, color = NA),\n    legend.key = element_blank(),\n    legend.text = element_text(family = \"ubuntu\", color = c4, size = 10),\n    strip.text = element_blank(),\n    axis.text.y = element_text(family = \"victor\", size = 12, color = c5),\n    axis.text.x = element_text(family = \"bebas\", size = 20, color = c5),\n    axis.ticks.x = element_blank())\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_49/viz.png\",\n  width = 30,\n  height = 31.5,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_49/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 49"
    ]
  },
  {
    "objectID": "tidytuesday/2023/intro.html",
    "href": "tidytuesday/2023/intro.html",
    "title": "Introducción",
    "section": "",
    "text": "2023\n\n\n   \n     \n     \n       Ordenar por\n       Por defecto\n         \n          Título\n        \n         \n          Fecha - Menos reciente\n        \n         \n          Fecha - Más reciente\n        \n         \n          Autor/a\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nSemana 52\n\n\nFigura semana 52\n\n\n\ngeom_tile\n\n\n\n\n\n\n\n\n\n2023-12-31\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 51\n\n\nFigura semana 51\n\n\n\ngeom_point\n\n\ngeom_curve\n\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2023-12-24\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 50\n\n\nFigura semana 50\n\n\n\ngeom_richtext\n\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2023-12-17\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 49\n\n\nFigura semana 49\n\n\n\ngeom_line\n\n\ngeom_point\n\n\ngeom_flag\n\n\ngeom_richtext\n\n\ngeom_curve\n\n\n\n\n\n\n\n\n\n2023-12-10\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 48\n\n\nFigura semana 48\n\n\n\ngeom_dotplot\n\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2023-12-03\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 47\n\n\nFigura semana 47\n\n\n\ngeom_sf\n\n\ngeom_segment\n\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2023-11-26\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 46\n\n\nFigura semana 46\n\n\n\ngeom_sf_pattern\n\n\ngeom_sf\n\n\n\n\n\n\n\n\n\n2023-11-19\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 45\n\n\nFigura semana 45\n\n\n\ngeom_line\n\n\ngeom_point\n\n\ngeom_text\n\n\n\n\n\n\n\n\n\n2023-11-12\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 44\n\n\nFigura semana 44\n\n\n\ngeom_sf\n\n\ngeom_sf_text\n\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2023-11-05\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 43\n\n\nFigura semana 43\n\n\n\ngeom_line\n\n\ngeom_point\n\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2023-10-29\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 42\n\n\nFigura semana 42\n\n\n\ngeom_vline\n\n\ngeom_hline\n\n\ngeom_text\n\n\ngeom_segment\n\n\ngeom_curve\n\n\ngeom_richtext\n\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2023-10-22\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 41\n\n\nFigura semana 41\n\n\n\ngeom_sf\n\n\ngeom_richtext\n\n\ngeom_curve\n\n\n\n\n\n\n\n\n\n2023-10-15\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 40\n\n\nFigura semana 40\n\n\n\ngeom_point\n\n\ngeom_text_repel\n\n\n\n\n\n\n\n\n\n2023-10-08\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 39\n\n\nFigura semana 39\n\n\n\ngeom_rect\n\n\ngeom_hline\n\n\ngeom_text\n\n\ngeom_richtext\n\n\ngeom_step\n\n\ngeom_from_path\n\n\n\n\n\n\n\n\n\n2023-10-01\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 38\n\n\nFigura semana 38\n\n\n\ngeom_edge_arc\n\n\ngeom_node_point\n\n\ngeom_node_text\n\n\n\n\n\n\n\n\n\n2023-09-24\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 37\n\n\nFigura semana 37\n\n\n\ngeom_col\n\n\ngeom_point\n\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2023-09-17\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 36\n\n\nFigura semana 36\n\n\n\ngeom_line\n\n\ngeom_richtext\n\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2023-09-10\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 35\n\n\nFigura semana 35\n\n\n\ngeom_vline\n\n\ngeom_segment\n\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2023-09-03\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 34\n\n\nFigura semana 34\n\n\n\ngeom_sf\n\n\ngeom_hline\n\n\ngeom_line\n\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2023-08-27\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 33\n\n\nFigura semana 33\n\n\n\ngeom_hline\n\n\ngeom_text\n\n\ngeom_freqpoly\n\n\n\n\n\n\n\n\n\n2023-08-20\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 32\n\n\nFigura semana 32\n\n\n\ngeom_point\n\n\ngeom_from_path\n\n\ngeom_richtext\n\n\ngeom_text\n\n\n\n\n\n\n\n\n\n2023-08-13\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 31\n\n\nFigura semana 31\n\n\n\ngeom_are\n\n\ngeom_textbox\n\n\ngeom_ribbon\n\n\ngeom_line\n\n\ngeom_point\n\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2023-08-06\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 30\n\n\nFigura semana 30\n\n\n\ngeom_col\n\n\ngeom_vline\n\n\ngeom_hline\n\n\n\n\n\n\n\n\n\n2023-07-30\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 29\n\n\nFigura semana 29\n\n\n\ngeom_col\n\n\ngeom_text\n\n\n\n\n\n\n\n\n\n2023-07-23\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 28\n\n\nFigura semana 28\n\n\n\ngeom_raster\n\n\ngeom_hline\n\n\ngeom_text\n\n\ngeom_line\n\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2023-07-16\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 27\n\n\nFigura semana 27\n\n\n\ngeom_sf\n\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2023-07-09\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 26\n\n\nFigura semana 26\n\n\n\ngeom_sf\n\n\ngeom_from_path\n\n\n\n\n\n\n\n\n\n2023-07-02\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 25\n\n\nFigura semana 25\n\n\n\ngeom_text_wordcloud_area\n\n\n\n\n\n\n\n\n\n2023-06-25\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 24\n\n\nFigura semana 24\n\n\n\ngeom_text\n\n\ngeom_textbox\n\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2023-06-18\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 23\n\n\nFigura semana 23\n\n\n\ngeom_textpath\n\n\ngeom_richtext\n\n\ngeom_textbox\n\n\n\n\n\n\n\n\n\n2023-06-11\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 22\n\n\nFigura semana 22\n\n\n\ngeom_hline\n\n\ngeom_segment\n\n\ngeom_text_repel\n\n\ngeom_richtext\n\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2023-06-04\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 21\n\n\nFigura semana 21\n\n\n\ngeom_rot\n\n\ngeom_sf\n\n\ngeom_text\n\n\n\n\n\n\n\n\n\n2023-05-28\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 20\n\n\nFigura semana 20\n\n\n\ngeom_tile\n\n\n\n\n\n\n\n\n\n2023-05-21\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 19\n\n\nFigura semana 19\n\n\n\ngeom_hline\n\n\ngeom_density_ridges\n\n\ngeom_text\n\n\n\n\n\n\n\n\n\n2023-05-14\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 18\n\n\nFigura semana 18\n\n\n\ngeom_segment\n\n\ngeom_point\n\n\ngeom_from_path\n\n\n\n\n\n\n\n\n\n2023-05-07\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 17\n\n\nFigura semana 17\n\n\n\ngeom_vline\n\n\ngeom_hline\n\n\ngeom_smooth\n\n\ngeom_richtext\n\n\ngeom_textbox\n\n\n\n\n\n\n\n\n\n2023-04-30\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 16\n\n\nFigura semana 16\n\n\n\ngeom_sf\n\n\ngeom_label_repel\n\n\n\n\n\n\n\n\n\n2023-04-23\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 15\n\n\nFigura semana 15\n\n\n\ngeom_vline\n\n\ngeom_smooth\n\n\ngeom_segment\n\n\ngeom_richtext\n\n\ngeom_from_path\n\n\n\n\n\n\n\n\n\n2023-04-16\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 14\n\n\nFigura semana 14\n\n\n\ngeom_segment\n\n\ngeom_label\n\n\ngeom_text\n\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2023-04-09\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 13\n\n\nFigura semana 13\n\n\n\ngeom_sf\n\n\ngeom_label_repel\n\n\ngeom_rect\n\n\ngeom_richtext\n\n\ngeom_text\n\n\n\n\n\n\n\n\n\n2023-04-02\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 12\n\n\nFigura semana 12\n\n\n\ngeom_segment\n\n\ngeom_point\n\n\ngeom_label\n\n\n\n\n\n\n\n\n\n2023-03-26\n\n\nVíctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 07\n\n\nFigura semana 07\n\n\n\ngeom_vline\n\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2023-02-19\n\n\nVíctor Gauto\n\n\n\n\n\n\nNo hay resultados\n\n\n  \n\n\nAdiós.\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Introducción"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_17.html",
    "href": "tidytuesday/2023/semana_17.html",
    "title": "Semana 17",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggpath)\nlibrary(glue)\n\n# fuentes -----------------------------------------------------------------\n\nfondo &lt;- \"#2e233c\"\ncol1 &lt;- \"#b86092\"\ncol2 &lt;- \"#df9ed4\"\ncol3 &lt;- \"#574571\"\n\n# título\nfont_add_google(name = \"Bonheur Royale\", family = \"royale\", db_cache = FALSE)\n# subtítulo\nfont_add_google(name = \"Anuphan\", family = \"anuphan\", db_cache = FALSE)\n# texto vertical\nfont_add_google(name = \"Cutive Mono\", family = \"cutive\", db_cache = FALSE)\n# texto horizontal\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = FALSE)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# íconos\nfont_add(\"fa-reg\", \"icon/Font Awesome 6 Free-Regular-400.otf\")\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solid\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{col2};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 17&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{col2};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{col2};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# ícono de correr\ncorrer &lt;- \"&lt;span style='font-family:fa-solid;'&gt;&#xf70c;&lt;/span&gt;\"\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-04-25/readme.md\")\n\nwinners &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-04-25/winners.csv') |&gt; \n  janitor::clean_names()\nlondon_marathon &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-04-25/london_marathon.csv') |&gt; \n  janitor::clean_names()\n\n# arreglo de los datos\n# me interesa la relación entre los que inician la maratón y los que la terminan\ndatos &lt;- london_marathon |&gt; \n  drop_na(finishers, starters) |&gt; \n  mutate(rel = finishers/starters*100) |&gt; \n  filter(rel &gt; 80) |&gt; \n  mutate(año = year(date)) |&gt; \n  mutate(icon = correr)\n\n# figura ------------------------------------------------------------------\n\n# texto subtítulo\nsubtitulo &lt;- tibble(\n  año = 1995,\n  rel = 93,\n  label = glue(\n    \"La &lt;span style='color:{col2};'&gt;**Maratón de Londres**&lt;/span&gt; se realiza todos \n    los años desde &lt;span style='color:{col2};'&gt;**{min(datos$año)}**&lt;/span&gt;. El \n    porcentaje (&lt;span style='color:{col2};'&gt;**{correr}**&lt;/span&gt;) de corredores \n    que terminan la carrera del total de participantes siempre se mantuvo sobre \n    el &lt;span style='color:{col2};'&gt;**90%**&lt;/span&gt; (con excepción de la primera \n    edición). Con el pasar de los años, dicho porcentaje fue aumentando, \n    acercándose al &lt;span style='color:{col2};'&gt;**100%**&lt;/span&gt;. Últimamente \n    parece haber una leve tendencia a la baja.\"))\n\n# figura\ng1 &lt;- datos |&gt; \n  ggplot(aes(x = año, y = rel)) +\n  # líneas verticales\n  geom_vline(\n    xintercept = seq(1980, 2020, 10), color = col3, linewidth = .15) +\n  # líneas horizontales\n  geom_hline(\n    yintercept = c(90, 100), color = col3, linewidth = 1, linetype = 2) +\n  # tendencia\n  geom_smooth(\n    method = \"loess\", formula = y ~ x, span = 2, color = col3, linewidth = .5,\n    se = FALSE, linetype = 1, lineend = \"round\") +\n  # puntos\n  geom_richtext(\n    aes(label = icon), color = col2, label.color = NA, fill = NA, size = 9) +\n  # subtítulos\n  geom_textbox(\n    data = subtitulo, aes(label = label), box.color = NA, fill = fondo, size = 9,\n    color = col1, hjust = 0, vjust = 1, family = \"anuphan\", \n    width = unit(6, \"inch\")) +\n  # ejes\n  scale_x_continuous(\n    breaks = c(1975, seq(1980, 2020, 10), 2025),\n    labels = c(\"\", seq(1980, 2020, 10), \"\"),\n    limits = c(1975, 2025),\n    expand = c(0, 0)) +\n  scale_y_continuous(\n    breaks = c(90, 100),\n    limits = c(88, 100),\n    labels = scales::label_number(\n      big.mark = \".\", decimal.mark = \",\", suffix = \"%\"),\n    expand = c(0, 0)) +\n  coord_cartesian(clip = \"off\") +\n  labs(title = \"Corre, Londres, Corre\", x = NULL, y = NULL, caption = mi_caption) +\n  # temas\n  theme_minimal() +\n  theme(\n    aspect.ratio = 2,\n    plot.margin = margin(14, 25, 29, 25),\n    plot.background = element_rect(\n      fill = fondo, color = col1, linewidth = 3),\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(\n      size = 120, color = col2, family = \"royale\", hjust = .5,\n      margin = margin(10, 0, 20, 0)),\n    plot.caption = element_markdown(\n      color = col1, size = 20, hjust = -6.6, margin = margin(25, 0, 0, 0)),\n    axis.text = element_markdown(color = col1),\n    axis.text.x = element_markdown(\n      margin = margin(25, 0, 0, 0), family = \"bebas\", size = 60),\n    axis.text.y = element_markdown(vjust = .5, family = \"cutive\",  size = 35),\n    panel.grid = element_blank()\n  )\n\n# guardo\nggsave(\n  plot = g1,\n  filename = \"2023/semana_17/viz.png\",\n  width = 30,\n  height = 61,\n  units = \"cm\",\n  dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_17/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 17"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_27.html",
    "href": "tidytuesday/2023/semana_27.html",
    "title": "Semana 27",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(tidytext)\nlibrary(sf)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuentes -----------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#192914\"\nc2 &lt;- \"#1E3D14\"\nc3 &lt;- \"#E7E5CC\"\nc4 &lt;- alpha(\"#FFCD11\", .5)\nc5 &lt;- alpha(\"#B86092\", .5)\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# título\nfont_add_google(name = \"STIX Two Text\", family = \"stix\")\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 27&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-07-04/readme.md\")\nhistorical_markers &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-07-04/historical_markers.csv')\n\n# sistema de coordenadas de EEUU\ncrs_eeuu &lt;- \"+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs\"\n\n# me interesan los cementerios de Texas\nd &lt;- historical_markers |&gt; \n  # filtro por Texas\n  filter(state_or_prov == \"Texas\") |&gt; \n  # selecciono columnas de coordenadas, título y estado\n  select(title,latitude_minus_s, longitude_minus_w) |&gt; \n  # convierto a minúscula\n  mutate(title = str_to_lower(title)) |&gt; \n  # filtro por 'cemetery'\n  filter(str_detect(title, \"church|cemetery\")) |&gt; \n  # divido en Iglesia / Cementerio\n  mutate(sitio = if_else(str_detect(title, \"church\"), \"Iglesia\", \"Cementerio\")) |&gt; \n  # transformo a 'sf'\n  st_as_sf(coords = c(\"longitude_minus_w\", \"latitude_minus_s\"), crs = 4326) |&gt; \n  # convierto a coordenadas de EEUU\n  st_transform(crs = crs_eeuu)\n\n# mapa de los estados de EEUU\nusa &lt;- st_as_sf(maps::map(\"state\", fill = TRUE, plot = FALSE)) |&gt; \n  # convierto a coordenadas de EEUU\n  st_transform(crs = crs_eeuu)\n\n# selecciono Texas\ntexas &lt;- usa |&gt; \n  filter(ID == \"texas\")\n\n# figura ------------------------------------------------------------------\n\n# cantidad de cementerios e iglesias\nn_cementerio &lt;- length(d$sitio[d$sitio == \"Cementerio\"]) |&gt; \n  gt::vec_fmt_number(sep_mark = \".\", dec_mark = \",\", decimals = 0)\n\nn_iglesia &lt;- length(d$sitio[d$sitio == \"Iglesia\"]) |&gt; \n  gt::vec_fmt_number(sep_mark = \".\", dec_mark = \",\", decimals = 0)\n\n# texto descriptivo\ntexto &lt;- tibble(\n  x = -630000,\n  y = -2000000,\n  label = glue(\n    \"Distribución geográfica de sitios&lt;br&gt;\n    históricos relacionados con&lt;br&gt;\n    &lt;span style='color:#B86092;'&gt;**iglesias**&lt;/span&gt; ({n_iglesia}) y \n    &lt;span style='color:#FFCD11;'&gt;**cementerios**&lt;/span&gt; ({n_cementerio})&lt;br&gt;\n    en el Estado de **Texas**, EE.UU.\"))\n\n# figura\ng &lt;- ggplot() +\n  geom_sf(data = texas, fill = c2, color = c3, linewidth = .05) +\n  geom_sf(\n    data = d, aes(color = sitio), \n    size = 4, alpha = .6, show.legend = FALSE, shape = 18) +\n  geom_richtext(\n    data = texto, aes(x = x, y = y, label = label),\n    color = \"grey90\", label.color = NA, fill = NA, size = 7, hjust = 0,\n    family = \"ubuntu\") +\n  scale_color_manual(values = c(c4, c5)) +\n  labs(caption = mi_caption) +\n  theme_void() +\n  theme(\n    # plot.margin = margin(8, 5, 8, 5),\n    plot.margin = margin(9.3, 5, 9.3, 5),\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    plot.caption = element_markdown(size = 12, color = c4, family = \"ubuntu\")\n  )\n\n# guardo\nggsave(\n    plot = g,\n    filename = \"2023/semana_27/viz.png\",\n    width = 30, \n    height = 29,\n    units = \"cm\",\n    dpi = 300\n  )\n\n# abro\nbrowseURL(\"2023/semana_27/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 27"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_36.html",
    "href": "tidytuesday/2023/semana_36.html",
    "title": "Semana 36",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(patchwork)\n\n# fuente ------------------------------------------------------------------\n\n# colores, RColorBrewer, Set1\nc1 &lt;- \"#F781BF\"\nc2 &lt;- \"#FFD92F\"\nc3 &lt;- \"#B3E2CD\"\nc4 &lt;- \"#4DAF4A\"\nc5 &lt;- \"grey90\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# wage, eje vertical\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# años, eje horizontal\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = FALSE)\n# título\nfont_add_google(name = \"Taviraj\", family = \"taviraj\")\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:victor;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 36. Union Membership and Coverage Database. B. Hirsch, D. Macpherson, W. Even&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-09-05/readme.md\")\n\nwages &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-09-05/wages.csv')\n\n# me interesa ver la diferencia entre el sueldo de varones y mujeres, y comparar\n# grupos demográficos distintos\n\n# traducción de los grupos demográficos\ntipo_nivel_trad &lt;- c(\n  white = \"Personas blancas\", \n  black = \"Personas afroamericanas\",\n  hispanic = \"Personas hispanas\")\n\nd &lt;- wages |&gt; \n  filter(str_detect(facet, \"demographics\") & str_detect(facet, \"male|female\")) |&gt; \n  select(year, facet, wage) |&gt; \n  mutate(facet = str_remove(facet, \"demographics: \")) |&gt; \n  filter(facet != \"male\" & facet != \"female\") |&gt; \n  separate_wider_delim(\n    cols = facet, delim = \" \", names = c(\"tipo\", \"sex\"),\n    too_few = \"align_end\") |&gt; \n  mutate(tipo = tipo_nivel_trad[tipo]) |&gt; \n  mutate(tipo = factor(tipo, levels = tipo_nivel_trad))\n\n# personas blancas, referencia para todos los paneles\nw &lt;- wages |&gt; \n  filter(str_detect(facet, \"demographics\") & str_detect(facet, \"male|female\")) |&gt; \n  select(year, facet, wage) |&gt; \n  mutate(facet = str_remove(facet, \"demographics: \")) |&gt; \n  filter(str_detect(facet, \"white\")) |&gt; \n  separate_wider_delim(\n    cols = facet, delim = \" \", names = c(\"tipo\", \"sex\"), \n    too_few = \"align_end\") |&gt; \n  select(-tipo)\n\n# figura ------------------------------------------------------------------\n\n# función que genera las figuras, por grupo demográfico\nf_gg &lt;- function(x) {\n  \n  e &lt;- d |&gt; \n    filter(tipo == x)\n  \n  g &lt;- ggplot(e, aes(year, wage, color = sex)) +\n    # recuadros de cada panel\n    annotate(\n      geom = \"segment\",\n      x = c(1973, 2022, 2022, 1973),\n      xend = c(2022, 2022, 1973, 1973),\n      y = c(0, 0, 40, 40),\n      yend = c(0, 40, 40, 0),\n      color = \"grey30\",\n      lineend = \"round\",\n      linewidth = 1) +\n    # referencia\n    geom_line(data = w, linewidth = .5, linetype = 3) +\n    # sueldo\n    geom_line(\n      linewidth = 2, lineend = \"round\", show.legend = FALSE) +\n    # escalas\n    scale_x_continuous(expand = c(0, 0)) +\n    scale_y_continuous(\n      breaks = seq(0, 40, 10), limits = c(0, 40), expand = c(0, 0),\n      labels = scales::label_dollar()) +\n    scale_color_manual(values = c(c4, c1)) +\n    coord_cartesian(clip = \"off\") +\n    labs(x = NULL, y = \"Dólares/hora, nominales (EEUU)\", title = x) +\n    theme_minimal() +\n    theme(\n      aspect.ratio = 1,\n      legend.position = \"none\",\n      plot.margin = margin(13, 13, 13, 13),\n      plot.background = element_blank(),\n      plot.title = element_text(\n        color = \"white\", size = 25, family = \"ubuntu\", hjust = 1),\n      panel.background = element_blank(),\n      panel.grid.minor = element_blank(),\n      panel.grid.major = element_line(\n        color = \"grey60\", linewidth = .1, linetype = \"8f\"),\n      panel.spacing = unit(2, \"line\"),\n      axis.text.y = element_text(color = c5, family = \"ubuntu\", size = 15),\n      axis.text.x = element_text(color = c5, family = \"bebas\", size = 20),\n      axis.title.y = element_text(color = c5, family = \"ubuntu\", size = 20)\n    )\n  \n  return(g)\n}\n\n# título y subtítulo\nmi_title &lt;- str_to_upper(\"La brecha de género&lt;br&gt;no discrimina\")\n\nmi_texto &lt;- glue(\n  \"Una de las formas de la **brecha de género** es la diferencia entre la \n  remuneración de los trabajadores varones sobre las trabajadoras mujeres, en \n  favor de ellos. Esta desigualdad también está presente en otros grupos \n  demográficos. Las líneas punteadas representan a las personas blancas, para \n  mejor comparación entre grupos.\") |&gt; \n  str_wrap(width = 34) |&gt; \n  # cambio a '&lt;br&gt;' para usar ggtext::geom_richtext()\n  str_replace_all(pattern = \"\\n\", replacement = \"&lt;br&gt;\") |&gt; \n  str_replace(\n    pattern = \"trabajadores varones\", \n    replacement = glue(\"&lt;span style='color:{c1}'&gt;trabajadores varones&lt;/span&gt;\")) |&gt; \n  str_replace(\n    pattern = \"trabajadoras mujeres\", \n    replacement = glue(\"&lt;span style='color:{c4}'&gt;trabajadoras mujeres&lt;/span&gt;\"))\n\n# figura que contiene el subtítulo\ng_texto &lt;- ggplot(tibble(x = 0, y = 0), aes(x, y)) +\n  annotate(\n    geom = \"richtext\", family = \"ubuntu\", label.color = NA, \n    hjust = 0, vjust = 1, fill = NA,\n    label = mi_texto, x = -1, y = 0, size = 8, color = c5) +\n  geom_point(color = NA) +\n  coord_cartesian(xlim = c(0, 10), ylim = c(-10, 0), expand = FALSE, clip = \"off\") +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n  )\n\n# lista que contiene las figuras por grupo demográfico y el subtítulo\ng_lista &lt;- c(list(g_texto), map(unique(d$tipo), f_gg))\n\n# diseño de posición de las figuras\narreglo &lt;- \"\nAB\nCD\n\"\n\n# figura\ng &lt;- wrap_plots(g_lista, design = arreglo) +\n  plot_annotation(\n    caption = mi_caption,\n    title = mi_title,\n    theme = theme(\n      plot.margin = margin(21.2, 5, 15, 5),\n      plot.background = element_rect(\n        fill = \"grey20\", color = c5, linewidth = 3),\n      plot.title = element_markdown(\n        size = 70, color = c3, hjust = 0, family = \"taviraj\"),\n      plot.caption = element_markdown(\n        color = c5, family = \"ubuntu\", size = 13, margin = margin(10, 0, 5, 0)),\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_36/viz.png\",\n  width = 30,\n  height = 37,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_36/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 36"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_24.html",
    "href": "tidytuesday/2023/semana_24.html",
    "title": "Semana 24",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(fontawesome)\nlibrary(ggtext)\nlibrary(glue)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores\n# paleta 'Kandinsky' de MetBrewer\nc1 &lt;- \"#3B3A3E\"\nc2 &lt;- \"#898E9F\"\nc3 &lt;- \"#CE9642\"\nc4 &lt;- \"#3B7C70\"\n\nfont_add_google(name = \"DM Serif Display\", family = \"dmserif\") # título\nfont_add_google(name = \"Inconsolata\", family = \"inconsolata\") # números\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\", db_cache = FALSE) # texto gral\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# íconos\nfont_add(\"fa-reg\", \"icon/Font Awesome 6 Free-Regular-400.otf\")\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solid\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 24&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-06-13/readme.md\")\n\nsafi &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-06-13/safi_data.csv')\n\n# traducción de los ítems\ntraduccion &lt;- c(\n  mobile_phone = \"celular\", radio = \"radio\", cow_plough = \"arado\", \n  solar_panel = \"panel solar\", bicycle = \"bicicleta\", \n  solar_torch = \"linterna solar\", table = \"mesa\", motorcyle = \"motocicleta\",\n  television = \"televisión\", cow_cart = \"carro\", sterio = \"estéreo\", \n  sofa_set = \"juego de sofás\", electricity = \"electricidad\", fridge = \"heladera\",\n  lorry = \"camión\", car = \"auto\", computer = \"PC\")\n\n# arreglo los datos\nd &lt;- safi |&gt; \n  # selecciono la columna de ítems\n  select(items_owned) |&gt; \n  # remuevo las celdas vacías\n  filter(items_owned != \"NULL\") |&gt; \n  # separo el contenido de las celdas de ítems, y agrego filas\n  separate_longer_delim(cols = items_owned, delim = \";\") |&gt; \n  # cuento la cantidad de ítems\n  count(items_owned) |&gt; \n  # ordeno\n  arrange(desc(n)) |&gt; \n  # traduzco\n  mutate(items_owned = traduccion[items_owned]) |&gt; \n  # convierto a factor los ítems individuales\n  mutate(items_owned = fct_reorder(items_owned, n)) \n\n\n# figura ------------------------------------------------------------------\n\n# título\ntit &lt;- \"Granjas en África\"\n\n# subtítulos\nsub1 &lt;- glue(\n  \"A partir de encuestas a &lt;b&gt;{length(unique(safi$key_ID))}&lt;/b&gt; granjeros en \n  &lt;b style='color:{c2}'&gt;Tanzania&lt;/b&gt; y &lt;b style='color:{c2}'&gt;Mozambique&lt;/b&gt;, se \n  recolectó informacón sobre los artículos que poseían en el hogar.\")\nsub2 &lt;- glue(\n  \"Pueden observarse elementos tecnológicos, de transporte y trabajo de campo.\")\n\n# figura\ng &lt;- ggplot(data = d, aes(x = n, y = items_owned, fill = items_owned)) +\n  # título\n  geom_text(\n    x = 1, y = 17, label = tit,\n    color = c3, size = 25, hjust = 0, vjust = 1, family = \"dmserif\") +\n  # subtítulo I\n  geom_textbox(\n    x = 1, y = 14.5, label = sub1,\n    color = c4, size = 8, box.color = NA, fill = NA, hjust = 0,\n    width = unit(14, \"cm\"), family = \"ubuntu\") +\n  # subtítulo II\n  geom_textbox(\n    x = 60, y = 5, label = sub2,\n    color = c4, size = 8, box.color = NA, fill = NA, hjust = 0,\n    width = unit(12, \"cm\"), family = \"ubuntu\") +\n  # puntos\n  geom_point(\n    show.legend = FALSE, color = c4, size = 10, shape = 16) +\n  geom_point(\n    show.legend = FALSE, color = c3, size = 5,shape = 16) +\n  geom_point(\n    show.legend = FALSE, color = c1, size = 2, shape = 16) +\n  # ítems\n  geom_text(\n    aes(label = str_to_sentence(items_owned)),\n    hjust = 0, nudge_x = 3, color = c3, size = 6, family = \"ubuntu\") +\n  # ejes\n  labs(\n    x = \"Cantidad\", y = NULL, caption = mi_caption) +\n  scale_x_continuous(\n    limits = c(0, 100), expand = c(0, 0), breaks = seq(0, 100, 20)) +\n  coord_cartesian(clip = \"off\") +\n  # tema\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(5, 21.5, 5, 21.5),\n    plot.background = element_rect(\n      fill = c1, color = c2, linewidth = 3),\n    plot.caption = element_markdown(\n      color = c4, size = 12, family = \"ubuntu\", margin = margin(10, 0, 5, 0)),\n    panel.grid.major.x = element_line(\n      color = c2, linewidth = .07, linetype = \"ff\"),\n    axis.text.x = element_text(\n      size = 20, family = \"inconsolata\", color = c2),\n    axis.text.y = element_blank(),\n    axis.title.x = element_text(\n      color = c3, size = 30, family = \"ubuntu\", margin = margin(15, 0, 5, 0)))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_24/viz.png\",\n  width = 30,\n  height = 32,\n  units = \"cm\",\n  dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_24/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 24"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_38.html",
    "href": "tidytuesday/2023/semana_38.html",
    "title": "Semana 38",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(ggraph)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"grey95\"\nc2 &lt;- \"gold\"\nc3 &lt;- \"grey30\"\nc4 &lt;- \"#C159A0\"\n\n# caption\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# paquetes\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:victor;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 38.  CRAN collaboration graph, **David Schoch**&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-09-19/readme.md\")\n\ncran_20230905 &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-09-19/cran_20230905.csv')\n\n# me interesa ver los paquetes que empiezan con 'gg', como un grafo\n\n# paleta de colores alrededor de 'ggplot2'\nf_paleta &lt;- colorRampPalette(\n  c(\"#475CA7\", \"#4C6CB2\", \"#4CC8F1\", \"#75CAC2\", \"#76C26F\", \"#6FBF50\",\n    \"#7FC24E\", \"#B8D442\", \"gold\", \"#F68235\", \"#EE3738\", \"#EE3356\",\n    \"#ED3894\", \"#C159A0\"))\n\n# elijo los paquetes que empiezan con 'gg' y que tienen 'ggplot2' como\n# dependencia\nd &lt;- cran_20230905 |&gt; \n  select(paq = Package, dep = Depends) |&gt; \n  separate_longer_delim(dep, \",\") |&gt; \n  mutate(dep = str_trim(dep)) |&gt; \n  filter(str_detect(paq, \"^gg\")) |&gt; \n  drop_na(dep) |&gt; \n  filter(str_detect(dep, \"ggplot2\")) |&gt; \n  mutate(dep = \"ggplot2\") |&gt; \n  mutate(co = f_paleta(66))\n\n# ángulos de texto de los paquetes alrededor del grafo\ns1 &lt;- seq(90, 0, length.out = 16)\ns2 &lt;- seq(360, 270, length.out = 17)\ns3 &lt;- seq(-270, -360, length.out = 17)\ns4 &lt;- seq(0, -90, length.out = 17)\n\n# agrego hjust, vjust, size y colores\n# en el caso de 'ggplot2', tiene valores diferentes\nd_vertices &lt;- d |&gt; \n  distinct(paq) |&gt; \n  add_row(paq = \"ggplot2\") |&gt; \n  # mutate(hjust = case_when(\n  #   row_number() &lt;= 33 ~ -.05, \n  #   row_number() &gt; 33 ~ 1.05,\n  #   .default = .5)) |&gt; \n  mutate(hjust = if_else(row_number() &lt;= 33, -.075, 1.075)) |&gt; \n  mutate(angle = c(s1, s2, s3, s4)) |&gt; \n  mutate(vjust = .5) |&gt; \n  mutate(size = 7) |&gt; \n  mutate(angle = if_else(paq == \"ggplot2\", 0, angle)) |&gt; \n  mutate(hjust = if_else(paq == \"ggplot2\", .5, hjust)) |&gt; \n  mutate(vjust = if_else(paq == \"ggplot2\", -5.5, vjust)) |&gt;\n  mutate(size = if_else(paq == \"ggplot2\", 20, size)) |&gt; \n  mutate(co = f_paleta(67))\n\n# creo el grafo\ngraph &lt;- igraph::graph_from_data_frame(d, vertices = d_vertices)\n\n# figura ------------------------------------------------------------------\n\ng &lt;- ggraph(graph, layout = 'linear', circular = TRUE) + \n  # flecha apuntando a 'ggplot2'\n  annotate(\n    geom = \"segment\", x = -.047, xend = -.047, y = .99, yend = 1.75, \n    color = c4, arrow = arrow(angle = 10, type = \"closed\"), linewidth = 2) +\n  # arcos que unen 'paq' con 'ggplot2'\n  geom_edge_arc(\n    aes(colour = I(co)), edge_width = 2, linemitre = 1, lineend = \"round\",\n    show.legend = FALSE) + \n  # puntos de color y blancos\n  geom_node_point(aes(colour = I(co)), size = 2) +\n  geom_node_point(color = c1, size = .25) +\n  # texto 'paq'\n  geom_node_text(\n    aes(\n      label = name, angle = angle, hjust = hjust, vjust = vjust, size = size,\n      colour = I(co)),\n    show.legend = FALSE, fontface = \"bold\", family = \"victor\") +\n  coord_fixed(clip = \"off\") +\n  scale_size_identity() +\n  labs(caption = mi_caption) +\n  theme_void() +\n  theme(\n    plot.margin = margin(90, 117.9, 5, 117.9),\n    plot.background = element_rect(fill = c1, color = c4, linewidth = 3),\n    plot.caption = element_markdown(\n      hjust = 1, color = c4, margin = margin(90, 0, 0, 0), size = 9,\n      family = \"ubuntu\"),\n    plot.caption.position = \"plot\"\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_38/viz.png\",\n  width = 30,\n  height = 37,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_38/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 38"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_52.html",
    "href": "tidytuesday/2023/semana_52.html",
    "title": "Semana 52",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#E05E35\"\nc2 &lt;- \"#AF141F\"\nc3 &lt;- \"#F7BD6E\"\nc4 &lt;- \"#EF9352\"\nc5 &lt;- \"#FFE98C\"\nc6 &lt;- \"#2E141E\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# horas, días\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# títulos de eje, título\nfont_add_google(name = \"Source Serif 4\", family = \"source\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 52. \",\n  \"Historical Trends in R Package Structure and Interdependency on CRAN,&lt;br&gt;\",\n  \"**Mark Padgham** & **Noam Ross**&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-12-26/readme.md\")\n\ncran_20221122 &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-26/cran_20221122.csv')\n\n# me interesa saber los días y horarios en los que NO hay paquetes subidos a \n# CRAN, los momentos en el año en los que los desarrolladores descansan (?)\n\nd &lt;- cran_20221122 |&gt;\n  select(date) |&gt;\n  mutate(\n    mes = month(date),\n    dia = day(date),\n    hora = hour(date)) |&gt;\n  mutate(fecha = ymd(glue(\"2020-{mes}-{dia}\"))) |&gt;\n  count(fecha, hora) |&gt;\n  mutate(\n    mes = format(fecha, \"%B\") |&gt; str_to_upper(),\n    dia = day(fecha)) |&gt;\n  mutate(mes = fct_reorder(mes, month(fecha)))\n\nd_na &lt;- d |&gt; \n  complete(mes, dia, hora) |&gt; \n  filter(is.na(n)) |&gt; \n  mutate(n = if_else(is.na(n), 1, 0)) |&gt; \n  mutate(fecha = ymd(glue(\"2020-{mes}-{dia}\"))) |&gt; \n  drop_na(fecha)\n\n# figura ------------------------------------------------------------------\n\n# título y subtítulo\nmi_title &lt;- glue(\"El descanso de &lt;span style='color:white'&gt;CRAN&lt;/span&gt;\")\n\nmi_subtitle &lt;- glue(\n  \"Días y horas con actividad nula en **CRAN**, el repositorio central de \",\n  \"&lt;b style='font-family:victor;'&gt;R&lt;/b&gt;. Durante la madrugada&lt;br&gt;\",\n  \"y a fin de año son los momentos en los que los \",\n  \"desarrolladores no publican sus productos.\")\n\n# función que agrega ceros delante de los números\nf_ceros &lt;- function(x) {\n  if (nchar(x) == 1) {\n    y &lt;- glue(\"0{x}\")\n  } else {y &lt;- glue(\"{x}\")}\n  \n  return(as.character(y))\n}\n\n# valores de ejes\nrango_x &lt;- seq(0, 24, 3)\nrango_y &lt;- c(1, seq(3, 30, 3))\n\n# figura\ng &lt;- ggplot(d_na, aes(hora, dia, fill = n)) +\n  geom_tile(color = c1, linewidth = .5) +\n  facet_wrap(vars(mes), nrow = 3, scales = \"free\") +\n  scale_x_continuous(\n    expand = c(0, 0), breaks = rango_x, \n    labels = list_c(map(rango_x, f_ceros)),\n    sec.axis = dup_axis(guide = guide_axis(position = \"top\"))) +\n  scale_y_continuous(\n    expand = c(0, 0), limits = c(.5, 31.5), breaks = rango_y,\n    labels = list_c(map(rango_y, f_ceros)),\n    sec.axis = dup_axis()) +\n  scale_fill_gradient(low = c2, high = c2) +\n  labs(\n    x = \"Hora &lt;span style='font-size:30pt'&gt;→&lt;/span&gt;\", \n    y = \"&lt;span style='font-size:30pt'&gt;↑&lt;/span&gt;&lt;br&gt;Día\", \n    title = mi_title,\n    subtitle = mi_subtitle,\n    caption = mi_caption) +\n  coord_cartesian(clip = \"off\") +\n  theme_void() +\n  theme(\n    plot.background = element_rect(\n      fill = c6, color = scales::muted(c2, l = 2), linewidth = 3),\n    plot.margin = margin(rep(10, 4)),\n    plot.title = element_markdown(\n      size = 75, family = \"source\", color = c5, hjust = .5),\n    plot.subtitle = element_markdown(\n      color = c3, family = \"ubuntu\", margin = margin(b = 15), size = 18, \n      hjust = .5),\n    plot.caption = element_markdown(\n      color = c4, family = \"ubuntu\", size = 12),\n    panel.grid = element_blank(),\n    panel.background = element_blank(),\n    panel.spacing.x = unit(0, \"line\"),\n    panel.spacing.y = unit(.3, \"line\"),\n    panel.ontop = FALSE,\n    legend.position = \"none\",\n    axis.title.x.bottom = element_markdown(\n      hjust = 0, color = c4, size = 20, family = \"source\", \n      margin = margin(t = 10)),\n    axis.title.y.left = element_markdown(\n      vjust = 0, color = c4, size = 20, family = \"source\",\n      margin = margin(r = 10)),\n    axis.line = element_line(color = c1, linewidth = .5),\n    axis.text.x.bottom = element_text(\n      color = c5, family = \"victor\", hjust = .5, size = 11, \n      margin = margin(t = 3)),\n    axis.text.y.left = element_text(\n      color = c5, family = \"victor\", hjust = .5, size = 11, \n      margin = margin(r = 3, l = 3)),\n    axis.text.x.top = element_blank(),\n    axis.text.y.right = element_blank(),\n    strip.text = element_text(\n      color = c5, size = 25, family = \"ubuntu\", margin = margin(b = 5),\n      hjust = 0),\n    strip.placement = \"outside\")\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_52/viz.png\",\n  width = 30,\n  height = 37,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_52/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 52"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_25.html",
    "href": "tidytuesday/2023/semana_25.html",
    "title": "Semana 25",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paqute ------------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(tidytext)\nlibrary(ggwordcloud)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuentes -----------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#341648\"\nc2 &lt;- \"#05A3BD\"\nc3 &lt;- \"#FFD352\"\nc4 &lt;- \"#621F5E\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\", db_cache = FALSE)\n\n# fuente del título\nfont_add(\"starseeds\", \"fuente/Starseeds.ttf\")\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 25&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-06-20/readme.md\")\n\nufo_sightings &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-06-20/ufo_sightings.csv')\n\n# figura ------------------------------------------------------------------\n\n# palabras comunes p/remover del listado de las descripciones (summary)\npalabras_comunes &lt;- c(tm::stopwords(\"en\"), 1:100, \"seen\", \"saw\", \"pd\", \"nuforc\")\n\n# obtengo las palabras individuales\novni_palabras &lt;- ufo_sightings |&gt; \n  # conservo summary\n  select(summary) |&gt; \n  # separo p/palabra\n  unnest_tokens(word, summary) |&gt; \n  # remuevo las palabras comunes\n  anti_join(tibble(word = palabras_comunes), by = join_by(word)) |&gt; \n  # arreglo algunas palabras manualmente\n  mutate(word = case_match(\n    word,\n    \"lights\" ~ \"light\",\n    \"objects\" ~ \"object\", \n    \"shaped\" ~ \"shape\",\n    .default = word)\n  )\n\n# top de palabras más frecuentes\nn_ovni &lt;- 40\n\n# función p/generar la paleta de colores\nf_color &lt;- colorRampPalette(MetBrewer::met.brewer(palette_name = \"Egypt\"))\n\n# colores\novni_color &lt;- f_color(n = n_ovni)\n\n# tibble con las 'n_top_tit' palabras más frecuentes\novni_conteo &lt;- ovni_palabras |&gt; \n  # cuento la cantidad de palabras\n  count(word, sort = TRUE) |&gt; \n  # conservo sólo el top\n  slice_max(n, n = n_ovni, with_ties = FALSE) |&gt; \n  # agrego color, aleatoriamente\n  mutate(color = sample(ovni_color)) |&gt; \n  # agrego el ángulo, con 40% de probabilidad de rotación de 90°\n  mutate(angle = 90 * sample(c(0, 1), n(), replace = TRUE, prob = c(60, 40))) |&gt; \n  # convierto a mayúscula\n  mutate(word = str_to_upper(word))\n\n# rotación de las palabras\nbrowseURL(\"https://lepennec.github.io/ggwordcloud/articles/ggwordcloud.html#word-cloud-and-rotation\")\n\n# cantidad de reportes, p/el subtítulo\nnro &lt;- nrow(ufo_sightings) |&gt; \n  format(big.mark = \".\", decimal.mark = \",\")\n\n# figura de un OVNI\nbrowseURL(\"https://www.svgrepo.com/svg/480707/ufo-sucking-up-something\")\n\novni &lt;- \"2023/semana_25/ovni.png\"\n\n# imagen p/tag\novni_tag &lt;- glue(\"&lt;img src='{ovni}' width='40'&gt;&lt;/img&gt;\")\n\n# figura\ng_nube_tit &lt;- ggplot(data = ovni_conteo) + \n  # palabras\n  geom_text_wordcloud_area(\n    aes(label = word, size = n, \n        color = I(color),\n        angle = angle),\n    seed = 2023, \n    shape = \"square\", \n    area_corr = TRUE) +\n  scale_size_area(max_size = 80) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = \"OVNIS\",\n    subtitle = glue(\n      \"Nube de palabras a partir de las descripciones aportadas\n      por quienes avistaron OVNIs.&lt;br&gt;Se analizaron {nro} testimonios en todo \n      el mundo.\"),\n    tag = ovni_tag,\n    caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.background = element_rect(fill = c1, color = c4, linewidth = 3),\n    plot.title = element_markdown(\n      size = 150, family = \"starseeds\", color = c3, hjust = .5,\n      margin = margin(5, 0, 15, 0)),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_markdown(\n      color = c2, size = 20, family = \"ubuntu\", hjust = .5),\n    plot.tag.position = c(.9, .83),\n    plot.tag = element_markdown(),\n    plot.caption.position = \"plot\",\n    plot.caption = element_markdown(\n      color = c2, hjust = 1, family = \"ubuntu\", size = 13),\n    plot.margin = margin(5, 14, 5, 14)\n  )\n\n# guardo\nggsave(\n  plot = g_nube_tit,\n  filename = \"2023/semana_25/viz.png\",\n  width = 30, height = 35,\n  units = \"cm\", dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_25/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 25"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_34.html",
    "href": "tidytuesday/2023/semana_34.html",
    "title": "Semana 34",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(patchwork)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores, MoMA, Koons\nc1 &lt;- \"#CC3A6A\"\nc2 &lt;- \"#5DBBA3\"\nc3 &lt;- \"#E9C063\"\nc4 &lt;- \"#4A1910\"\nc5 &lt;- \"#A41620\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# cantidad, eje vertical\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# años, eje horizontal\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\")\n# título\nfont_add_google(name = \"Vidaloka\", family = \"vidaloka\")\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 34. UNHCR, {{refugees}}&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-08-22/readme.md\")\n\npopulation &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-22/population.csv')\n\n# me interesa saber la cantidad total, anual, de refugiados que ingresan y salen\n# de Argentina\nd &lt;- population |&gt; \n  select(\n    año = year, origen = coo_name, origen_iso = coo_iso, llegada = coa_name,\n    llegada_iso = coa_iso, n = refugees) |&gt; \n  select(año, starts_with(\"o\"), starts_with(\"l\"), n)\n\n# entran a Argentina\narg_in &lt;- d |&gt; \n  filter(llegada == \"Argentina\") |&gt; \n  summarise(n = sum(n), .by = año) |&gt; \n  mutate(estado = \"entran\")\n\n# se originan en Argentina\narg_out &lt;- d |&gt; \n  filter(origen == \"Argentina\") |&gt; \n  summarise(n = sum(n), .by = año) |&gt; \n  mutate(estado = \"salen\")\n\n# combino ambos\narg &lt;- bind_rows(arg_in, arg_out)\n\n# vector del contorno de Argentina\narg_sf &lt;- st_read(\"extra/arg_continental.gpkg\")\n\n# figura ------------------------------------------------------------------\n\n# mapa de Argentina\ngg_arg &lt;- ggplot() +\n  geom_sf(data = arg_sf, fill = alpha(\"#90A8C0\", .2), color = NA) +\n  theme_void()\n\n# labels del eje horizontal, años\neje_x_label &lt;- tibble(xx = 10:22) |&gt; \n  mutate(eje_x = if_else(xx %% 5 == 0, glue(\"20{xx}\"), glue(\"'{xx}\"))) |&gt; \n  pull(eje_x)\n\n# título y subtítulo\nmi_title &lt;- \"Refugiados desde y en Argentina\"\n\nmi_subtitle &lt;- glue(\n  \"El **Alto Comisionado de la ONU para los Refugiados** (UNHCR)\n  registra estadísticas&lt;br&gt;\n  anuales de personas en busca de asilo. \n  Se muestran las cantidades de desplazados&lt;br&gt;\n  que &lt;span style='color:{c2}'&gt;**llegan**&lt;/span&gt; y \n  &lt;span style='color:{c3}'&gt;**provienen**&lt;/span&gt; de **Argentina**.\"\n)\n\n# figura de líneas, cantidad de refugiados ~ años\ngg_ref &lt;- arg |&gt; \n  ggplot(aes(año, n, color = estado)) +\n  geom_hline(\n    yintercept = seq(0, 4000, 1000), color = c5, linewidth = .1, linetype = \"ff\") +\n  geom_line(show.legend = FALSE, linewidth = 3, lineend = \"round\") +\n  geom_point(show.legend = FALSE, color = \"white\", size = .4) +\n  scale_x_continuous(breaks = 2010:2022, labels = eje_x_label) +\n  scale_y_continuous(\n    breaks = seq(0, 4000, 1000),\n    labels = scales::label_number(big.mark = \".\", decimal.mark = \",\"),\n    expand = c(0, 0)) +\n  scale_color_manual(values = c(c2, c3)) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    x = NULL,\n    y = \"Cantidad de refugiados\",\n    title = mi_title,\n    subtitle = mi_subtitle,\n    caption = mi_caption) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(5.5, 11, 5.5, 11),\n    plot.title.position = \"plot\",\n    plot.title = element_text(size = 58, family = \"vidaloka\", color = c5),\n    plot.subtitle = element_markdown(\n      size = 18, color = c4, family = \"ubuntu\", margin = margin(5, 0, 25, 0)),\n    plot.caption = element_markdown(\n      color = c2, size = 12, margin = margin(20, 0, 5, 0)),\n    axis.title.y = element_text(color = c4, family = \"ubuntu\", size = 20),\n    axis.text.x = element_text(color = c4, family = \"bebas\", size = 25, margin = margin(5, 0, 0, 0)),\n    axis.text.y = element_text(color = c4, family = \"ubuntu\", size = 20),\n    axis.ticks.x = element_line(color = c4),\n    axis.ticks.length.x = unit(.25, \"line\"),\n    panel.grid = element_blank()\n  )\n\n# combino ambas figuras, con el mapa de Argentina de fondo\ng &lt;- gg_ref + \n  inset_element(\n    gg_arg, left = .2, bottom = 0, right = .8, top = 1) +\n  plot_annotation(\n    theme = theme(\n      plot.background = element_rect(fill = c1, color = c4, linewidth = 3)\n    ))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_34/viz.png\",\n  width = 30,\n  height = 34.5,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_34/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 34"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_46.html",
    "href": "tidytuesday/2023/semana_46.html",
    "title": "Semana 46",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(ggpattern)\nlibrary(fontawesome)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(rgeoboundaries)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#FEC200\"\nc2 &lt;- \"#F78608\"\nc3 &lt;- \"white\"\nc4 &lt;- \"#E6172F\"\nc5 &lt;- \"#D20983\"\nc6 &lt;- \"#C301C5\"\nc7 &lt;- \"#EE3711\"\nc8 &lt;- \"grey80\"\nc9 &lt;- \"grey90\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# algoritmos, eje vertical\nfont_add_google(name = \"IBM Plex Mono\", family = \"ibm\", db_cache = FALSE)\n# título\nfont_add_google(name = \"Agbalumo\", family = \"agbalumo\", db_cache = FALSE)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\nfont_add(\"fa-regular\", \"icon/Font Awesome 6 Free-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 46. \",\n  \"Diwali Sales Dataset, \",\n  \"**Saad Haroon**&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-11-14/readme.md\")\n\ndiwali &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-11-14/diwali_sales_data.csv')\n\n# mapa de consumo per cápita por cada estado de India\n# 1ro considero sumar el gasto de cada usuario, y luego hacer el promedio por \n# cada estado\n\nd &lt;- diwali |&gt; \n  reframe(\n    prom = sum(Amount, na.rm = TRUE),\n    .by = c(User_ID, State)) |&gt; \n  reframe(\n    prom = sum(prom, na.rm = TRUE)/n(),\n    .by = State) |&gt; \n  rename(estado = State)\n\n# India, como país y con sus estados\nindia &lt;- gb_adm1(country = \"India\")\nindia0 &lt;- gb_adm0(country = \"India\")\n\n# cambio de CRS y arreglo los nombres\nindia_sf &lt;- india |&gt; \n  select(estado = shapeName) |&gt; \n  mutate(estado = str_replace_all(estado, \"ā\", \"a\")) |&gt; \n  st_transform(crs = 7755)\n\n# combino los datos de consumo con el mapa\nd_sf &lt;- full_join(d, india_sf, by = join_by(estado)) |&gt; \n  st_as_sf()\n\n# estados sin datos\nd_na &lt;- d_sf |&gt; \n  filter(is.na(prom)) |&gt; \n  st_as_sf()\n\n# caja como referencia de los estados sin datos\n# ubicación\nxmin &lt;- 4400000\nymin &lt;- 2000000\nxmax &lt;- xmin + 200000\nymax &lt;- ymin + 200000\n\ncaja &lt;- st_sfc(\n  st_polygon(\n    list(\n      cbind(c(xmin, xmax, xmax, xmin, xmin), c(ymin, ymin, ymax, ymax, ymin)))), \n  crs = 7755) |&gt; \n  st_as_sf()\n\n# figura ------------------------------------------------------------------\n\n# círculo alrededor de India\ncirc &lt;- st_centroid(india0) |&gt;\n  st_transform(crs = 7755) |&gt; \n  st_as_sf() |&gt; \n  st_buffer(dist = 1900000, nQuadSegs = 200)\n\n# título y subtítulo\nmi_tit &lt;- \"Diwali\"\nmi_tit2 &lt;- \"El festival de las luces\"\n\nmi_sub &lt;- glue(\n  \"Consumo per cápita\",\n  \"en rupias, durante\",\n  \"el festival &lt;b style='color:{c1}'&gt;Dwali&lt;/b&gt;\",\n  \"en **India**.\",\n  .sep = \"&lt;br&gt;\")\n\n# figura\ng &lt;- ggplot() +\n  # círculo de fondo\n  geom_sf_pattern(\n    data = circ, \n    color = NA, pattern = \"gradient\",\n    pattern_orientation = \"radial\", \n    pattern_fill = c1, # centro\n    pattern_fill2 = c5, # exterior\n    pattern_density = 1) +\n  # India\n  geom_sf(data = d_sf, aes(fill = prom), color = NA) +\n  # estados sin datos\n  geom_sf_pattern(\n    data = d_na, pattern = \"stripe\", show.legend = FALSE, color = NA,\n    fill = c8, pattern_spacing = 0.01, pattern_density = 0.4, \n    pattern_fill = c9, pattern_color  = NA, pattern_angle = 45) +\n  # contorno de los estados\n  geom_sf(data = d_sf, fill = NA, color = \"black\", linewidth = .2) +\n  # caja\n  geom_sf_pattern(\n    data = caja, pattern = \"stripe\", show.legend = FALSE, color = c4,\n    fill = c8, pattern_spacing = 0.01, pattern_density = 0.4, \n    pattern_fill = c9, pattern_color  = NA, pattern_angle = 45,\n    linewidth = .1) +\n  annotate(\n    geom = \"text\", x = xmax+10000, y = ymin, label = \"Estados sinndatos\",\n    hjust = 0, vjust = 0, family = \"ubuntu\", color = \"white\", size = 6) +\n  # título\n  annotate(\n    geom = \"richtext\", x = 3943500, y = 5590000, label = mi_tit, size = 30,\n    family = \"agbalumo\", hjust = .5, vjust = 0, color = c1, fill = NA,\n    label.color = NA) +\n  annotate(\n    geom = \"richtext\", x = 3943500, y = 5670000, label = mi_tit2, size = 10,\n    family = \"agbalumo\", hjust = .5, vjust = 1, color = c9, fill = NA,\n    label.color = NA) +\n  coord_sf(clip = \"off\") +\n  scale_fill_viridis_c(\n    option = \"turbo\", na.value = NA, limits = c(8000, 14000),\n    labels = scales::label_dollar(\n      big.mark = \".\", decimal.mark = \",\", prefix = \"₹ \", scale = 1)) +\n  labs(caption = mi_caption, fill = mi_sub) +\n  guides(\n    fill = guide_colorbar(\n      frame.colour = \"white\", ticks.colour = \"white\", ticks.linewidth = .5)) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(fill = c6, color = c7, linewidth = 3),\n    plot.margin = margin(15.7, 0, 5.7, 0),\n    plot.title = element_text(\n      family = \"playball\", size = 55, color = c1, margin = margin(15, 0, 0, 0)),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c1, margin = margin(0, 10, 10, 0), size = 12),\n    legend.position = c(.05, .05),\n    legend.justification = c(0, 0),\n    legend.text = element_text(\n      hjust = 1, family = \"ibm\", color = \"white\", face = \"bold\", size = 14),\n    legend.title = element_markdown(\n      family = \"ubuntu\", color = \"white\", size = 18, \n      margin = margin(0, 0, 10, 0)),\n    legend.key.height = unit(1.1, \"cm\"))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_46/viz.png\",\n  width = 30,\n  height = 32,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_46/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 46"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_20.html",
    "href": "tidytuesday/2023/semana_20.html",
    "title": "Semana 20",
    "section": "",
    "text": "Script\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(ggtext)\nlibrary(glue)\n\n# fuente ------------------------------------------------------------------\n\n# eje vertical, años\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\")\n# eje horizontal, meses\nfont_add_google(name = \"Inconsolata\", family = \"inconsolata\")\n# título\nfont_add_google(name = \"Gloock\", family = \"gloock\", db_cache = FALSE)\n# resto del texto\nfont_add_google(name = \"Schibsted Grotesk\", family = \"grotesk\", db_cache = FALSE)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# íconos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# MetBrewer: Monet\nc1 &lt;- \"#e3cacf\"\nc2 &lt;- \"#c399a2\"\nc3 &lt;- \"#9f6d71\"\nc4 &lt;- \"#41507b\"\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 20&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**Víctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-05-16/readme.md\")\n\ntornados &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-16/tornados.csv')\n\n# sumas mensuales, desde 1960\ndatos &lt;- tornados |&gt; \n  group_by(yr, mo) |&gt; \n  summarise(n = n()) |&gt; \n  ungroup() |&gt; \n  filter(yr &gt;= 1960)\n\n# iniciales de los meses, para el eje x\nm &lt;- tibble(x = seq(ymd(20200101), ymd(20201201), by = \"1 month\")) |&gt; \n  mutate(m = format(x, \"%B\")) |&gt; \n  mutate(mes = str_sub(m, 1, 1) |&gt; str_to_upper())\n\n# mes con la mayor cantidad de tornados\nmax_n &lt;- datos |&gt;\n  slice_max(order_by = n)\n\nfecha_max &lt;- ymd(glue(\"{max_n$yr}-{max_n$mo}-01\"))\n\n# figura ------------------------------------------------------------------\n\n# breaks\nb &lt;- classInt::classIntervals(var = datos$n, n = 6, style = \"pretty\")$brks\n\n# figura\ng &lt;- ggplot(data = datos, aes(x = mo, y = yr, fill = n)) +\n  # tile\n  geom_tile(\n    color = c1, linewidth = 1) +\n  # manual\n  scale_y_continuous(\n    breaks = seq(1950, 2020, 10),\n    sec.axis = dup_axis()) +\n  scale_x_continuous(\n    breaks = seq(1, 12, 1),\n    labels = m$mes,\n    sec.axis = dup_axis()) +\n  scale_fill_viridis_c(\n    option = \"turbo\",\n    breaks = b) +\n  coord_fixed(ylim = c(1960, 2022), expand = FALSE, clip = \"off\") +\n  # ejes\n  labs(x = NULL, y = NULL, fill = \"Cantidadnde eventosnpor mes\",\n       title = \"TWISTER!\",\n       subtitle = glue(\n         \"Cantidad mensual de **tornados** en EEUU, entre 1950 y 2022. El mes \n         con mayor cantidad de eventos fue en {format(fecha_max, '%B')} de \n         {format(fecha_max, '%Y')} con **{max_n$n}** tornados.\"),\n       caption = mi_caption) +\n  # tema\n  theme_minimal() +\n  theme(\n    plot.background = element_rect(\n      fill = c1, color = c2, linewidth = 3),\n    plot.margin = margin(0, 55, 0, 55),\n    plot.title.position = \"plot\",\n    plot.title = element_text(\n      color = c4, family = \"gloock\", size = 135, hjust = .5, \n      margin = margin(10, 0, 0, 0)),\n    plot.subtitle = element_textbox_simple(\n      color = c4, size = 30, family = \"grotesk\",\n      margin = margin(5, -10, 25, -40)),\n    plot.caption = element_markdown(\n      color = c4, hjust = .19, size = 21, family = \"grotesk\", \n      margin = margin(20, 0, 5, 0)),\n    panel.grid = element_blank(),\n    axis.text.y = element_text(\n      color = c3, family = \"bebas\", size = 45),\n    axis.text.x = element_text(\n      color = c3, family = \"inconsolata\", size = 40),\n    axis.text.x.bottom = element_text(\n      margin = margin(15, 0, 0, 0), face = \"bold\"),\n    axis.text.x.top = element_text(\n      margin = margin(0, 0, 15, 0), face = \"bold\"),\n    legend.box.margin = margin(0, 0, 0, 80),\n    legend.title = element_text(\n      colour = c4, size = 30, family = \"grotesk\"),\n    legend.text = element_text(\n      color = c4, size = 35, family = \"inconsolata\"),\n    legend.key.height = unit(3.5, \"cm\"),\n    legend.key.width = unit(2, \"cm\")\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_20/viz.png\",\n  width = 30,\n  height = 75,\n  units = \"cm\",\n  dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_20/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2023",
      "Semana 20"
    ]
  },
  {
    "objectID": "tidytuesday/2024/s01.html",
    "href": "tidytuesday/2024/s01.html",
    "title": "s01",
    "section": "",
    "text": "Contenido S01\n\n\nCódigo\n# paquetes ----------------------------------------------------------------\n\n# {glue}, {ggtext}, {showtext}, {tidyverse}\n# se cargan automáticamente\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#447099\"\nc2 &lt;- \"#75AADB\"\nc3 &lt;- \"#F0F5F9\"\nc4 &lt;- \"black\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & íconos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nmi_caption &lt;- caption(\n  fuente1 = \"&lt;span style='font-family:jet'&gt;posit::conf&lt;/jet&gt;\",\n  col = c1,\n  week = 2\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 2)\nconf2023 &lt;- tuesdata$conf2023\nconf2024 &lt;- tuesdata$conf2024\n\n# me interesa la cantidad de conferencias que hablan de QUARTO entre 2023 y 2024\n\n# cantidad de conferencias que mencionan QUARTO, 2023/2024\nn2023 &lt;- conf2023 |&gt; \n  mutate(quarto = str_detect(session_abstract, \"quarto|Quarto\")) |&gt; \n  dplyr::filter(quarto) |&gt; \n  nrow()\n\nn2024 &lt;- conf2024 |&gt; \n  mutate(quarto = str_detect(description, \"quarto|Quarto\")) |&gt; \n  dplyr::filter(quarto) |&gt; \n  nrow()\n\nd &lt;- tibble(\n  año = c(2023, 2024),\n  n = c(n2023, n2024)\n) |&gt; \n  mutate(\n    año = paste0(\"posit::conf\\n\", año)\n  )\n\n# figura ------------------------------------------------------------------\n\n# logo y subtítulo\nlogo &lt;- \"https://quarto.org/quarto.png\"\nlogo_img &lt;- glue(\n  \"&lt;img src='{logo}' width=250 /&gt;\"\n)\n\nmi_subitulo &lt;- glue(\n  \"La cantidad de conferencias&lt;br&gt;que incluyen\n  &lt;span style='font-family:jet; color:{c1}'&gt;quarto&lt;/span&gt; &lt;br&gt;\n  amentaron en las ediciones&lt;br&gt;\n  2023 y 2024 de &lt;span style='font-family:jet; color:{c1}'&gt;posit::conf&lt;/span&gt;\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(año, n, label = n)) +\n  geom_col(fill = c1) +\n  geom_text(vjust = -.2, family = \"jet\", size = 9, color = c2) +\n  annotate(\n    geom = \"richtext\", x = 2.12, y = 25, label = logo_img, fill = NA,\n    vjust = -1.2, label.color = NA\n  ) +\n  scale_y_continuous(limits = c(0, 25)) +\n  coord_cartesian(expand = FALSE, xlim = c(.5, 2.5), clip = \"off\") +\n  labs(caption = mi_caption, subtitle = mi_subitulo) +\n  theme_void(base_size = 22, base_family = \"ubuntu\") +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(25, 5, 5, 5),\n    plot.background = element_rect(fill = c3, color = NA),\n    plot.subtitle = element_markdown(\n      color = c4, size = 30, lineheight = 1.3, margin = margin(b = 30, l = 20)\n    ),\n    plot.caption = element_markdown(\n      color = c2, lineheight = 1.2, margin = margin(b = 5, t = 20)\n    ),\n    axis.text.x = element_text(margin = margin(t = 5), family = \"jet\"),\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2025/s02/viz.png\",\n  width = 30,\n  height = 40,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(paste0(getwd(), \"/2025/s02/viz.png\"))\n\n\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2024",
      "s01"
    ]
  },
  {
    "objectID": "tidytuesday/2024/s02.html",
    "href": "tidytuesday/2024/s02.html",
    "title": "s02",
    "section": "",
    "text": "Contenido S02\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2024",
      "s02"
    ]
  },
  {
    "objectID": "tidytuesday/2025/intro.html",
    "href": "tidytuesday/2025/intro.html",
    "title": "Introducción",
    "section": "",
    "text": "2025\n\n\n   \n     \n     \n       Ordenar por\n       Por defecto\n         \n          Título\n        \n         \n          Fecha - Menos reciente\n        \n         \n          Fecha - Más reciente\n        \n         \n          Autor/a\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\ns02\n\n\nFigura semana 02\n\n\n\na\n\n\nc\n\n\n\ngeom_point()\n\n\n\n\n\n2025-01-10\n\n\nVHG\n\n\n\n\n\n\n\n\n\n\n\n\ns01\n\n\nFigura semana 01\n\n\n\na\n\n\nb\n\n\n\ngeom_col()\n\n\n\n\n\n2025-01-01\n\n\nVHG\n\n\n\n\n\n\nNo hay resultados\n\n\nAdiós.\n\n\n\n\n Volver arriba",
    "crumbs": [
      "Tidytuesday",
      "2025",
      "Introducción"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MS Víctor Gauto",
    "section": "",
    "text": "Ciencia de datos, mapas, R, Quarto."
  },
  {
    "objectID": "index.html#educación",
    "href": "index.html#educación",
    "title": "MS Víctor Gauto",
    "section": "Educación",
    "text": "Educación\n Doctorado en Geomática y Sistemas Espaciales   Instituto Gulich   Córdoba, Argentina   En proceso    Maestría en Aplicaciones de Imágenes Espaciales   Instituto Gulich   Córdoba, Argentina   2023    MS in Chemical and Biomolecular Engineering   Sogang University   Seoul, Corea del Sur   2019    Ingeniería Química   Universidad Tecnológica Nacional Facultad Regional Resistencia   Chaco, Argentina   2014"
  },
  {
    "objectID": "index.html#experiencia",
    "href": "index.html#experiencia",
    "title": "MS Víctor Gauto",
    "section": "Experiencia",
    "text": "Experiencia\n Doctorado en Geomática y Sistemas Espaciales  Instituto Gulich  Córdoba, Argentina  En proceso    Doctorado en Geomática y Sistemas Espaciales  Instituto Gulich  Córdoba, Argentina  En proceso"
  },
  {
    "objectID": "viz.html",
    "href": "viz.html",
    "title": "Visualizaciones varias",
    "section": "",
    "text": "Figuras geométricas varias.\n\n\n\n\n\n\n\n\n\n\nviz 2\n\n\nviz semana 02\n\n\n\na\n\n\nb\n\n\n\ngeom_col()\n\n\n\n\n\n2025-01-01\n\n\nVHG\n\n\n\n\n\n\nNo hay resultados\n\n\nAdiós.\n\n\n\n\n Volver arriba"
  }
]