[
  {
    "objectID": "argentina/index.html",
    "href": "argentina/index.html",
    "title": "Mapas de Argentina",
    "section": "",
    "text": "En esta secci√≥n hay diferentes mapas de Argentina, tanto en el contenido que se representa (instalaciones, relieve) como en el resultado final (videos o mapas est√°ticos).\nA continuaci√≥n comento sobre las distintas fuentes de datos de vectores y r√°ster, y los paquetes usados para acceder a los mismos.",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Mapas de Argentina"
    ]
  },
  {
    "objectID": "argentina/index.html#vectores",
    "href": "argentina/index.html#vectores",
    "title": "Mapas de Argentina",
    "section": "Vectores",
    "text": "Vectores\n\nInstituto Geogr√°fico Nacional: Las capas SIG contienen muchos tipos de datos, que incluyen geodesia y demarcaci√≥n, industria y servicios, hidrograf√≠a y oceanograf√≠a, entre muchos otros. Los vectores se pueden descargar en multiples formatos.\nOpenStree Map: Es posible descargar todos los datos de Argentina y luego seleccionar los de inter√©s.",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Mapas de Argentina"
    ]
  },
  {
    "objectID": "argentina/index.html#r√°ster",
    "href": "argentina/index.html#r√°ster",
    "title": "Mapas de Argentina",
    "section": "R√°ster",
    "text": "R√°ster\n\nInstituto Geogr√°fico Nacional: El modelo digital de elevaci√≥n de todo el pa√≠s est√°n disponibles para descargar, a diferentes resoluciones.\n{elevatr}: Este paquete permite descargar datos de elevaci√≥n en formato r√°ster para una regi√≥n dada.",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Mapas de Argentina"
    ]
  },
  {
    "objectID": "argentina/instalaciones/red_electrica.html",
    "href": "argentina/instalaciones/red_electrica.html",
    "title": "üîå Red el√©ctrica",
    "section": "",
    "text": "Mapa de la red el√©ctrica en Argentina, mostrando l√≠neas de alta tensi√≥n y plantas transformadoras.",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üîå Red el√©ctrica"
    ]
  },
  {
    "objectID": "argentina/instalaciones/red_electrica.html#paquetes",
    "href": "argentina/instalaciones/red_electrica.html#paquetes",
    "title": "üîå Red el√©ctrica",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(showtext)\nlibrary(ggtext)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üîå Red el√©ctrica"
    ]
  },
  {
    "objectID": "argentina/instalaciones/red_electrica.html#estilos",
    "href": "argentina/instalaciones/red_electrica.html#estilos",
    "title": "üîå Red el√©ctrica",
    "section": "Estilos",
    "text": "Estilos\nColores de escalas de grises\n\n\nOcultar c√≥digo\nl1 &lt;- \"grey10\"\nl2 &lt;- \"grey15\"\nl3 &lt;- \"grey20\"\nl4 &lt;- \"grey25\"\nl5 &lt;- \"grey90\"\np1 &lt;- \"#054544\"\np2 &lt;- \"#175F5D\"\np3 &lt;- \"#178F92\"\np4 &lt;- \"#4FB6CA\"\np5 &lt;- \"#EAF3FF\"\n\n\nFuentes: Ubuntu, JetBrains Mono y Voltage.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nfont_add(\n  family = \"voltage\",\n  regular = \"././fuente/Voltage-Regular.otf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üîå Red el√©ctrica"
    ]
  },
  {
    "objectID": "argentina/instalaciones/red_electrica.html#ep√≠grafe",
    "href": "argentina/instalaciones/red_electrica.html#ep√≠grafe",
    "title": "üîå Red el√©ctrica",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n  \"&lt;b&gt;Datos:&lt;/b&gt; &lt;span style='color:{p4};'&gt;Instituto Geogr√°fico Nacional&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{p4};'&gt;V√≠ctor Gauto&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xeb72;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bluesky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{p4};'&gt;vhgauto&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente} {sep} {autor} {sep} &lt;b&gt;{icon_github} {icon_twitter} \",\n  \"{icon_instagram} {icon_mastodon} {icon_bluesky}&lt;/b&gt; {usuario}\"\n)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üîå Red el√©ctrica"
    ]
  },
  {
    "objectID": "argentina/instalaciones/red_electrica.html#datos",
    "href": "argentina/instalaciones/red_electrica.html#datos",
    "title": "üîå Red el√©ctrica",
    "section": "Datos",
    "text": "Datos\nVector del contorno continental de Argentina, obtenido del Instituto Geogr√°fico Nacional (IGN).\n\n\nOcultar c√≥digo\np &lt;- st_read(\"argentina/vectores/arg_continental.gpkg\") |&gt;\n  st_transform(crs = \"EPSG:5346\")\n\n\nVector del tendido el√©ctrico de Argentina y plantas transformadoras.\n\n\nOcultar c√≥digo\nlin_elec &lt;- st_read(\"argentina/vectores/extras/lineas_de_energia_AT030.json\") |&gt;\n  st_transform(crs = \"EPSG:5346\")\nplanta_transf &lt;- st_read(\n  \"argentina/vectores/extras/puntos_de_energia_AD030.json\"\n) |&gt;\nst_transform(crs = \"EPSG:5346\")\n\n\nMantengo √∫nicamente las l√≠neas de alta tensi√≥n y plantas transformadoras activas.\n\n\nOcultar c√≥digo\nalta_tension &lt;- lin_elec |&gt;\n  filter(ten == 6) |&gt;\n  filter(fun == 6) |&gt;\n  st_union() |&gt;\n  st_line_merge() |&gt;\n  st_coordinates() |&gt;\n  as.data.frame()\n\nplanta_transf_act &lt;- planta_transf |&gt;\n  filter(fun == 6)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üîå Red el√©ctrica"
    ]
  },
  {
    "objectID": "argentina/instalaciones/red_electrica.html#figura",
    "href": "argentina/instalaciones/red_electrica.html#figura",
    "title": "üîå Red el√©ctrica",
    "section": "Figura",
    "text": "Figura\nT√≠tulo y subt√≠tulo.\n\n\nOcultar c√≥digo\nmi_titulo &lt;- \"RED ELECTRICA ARGENTINA\"\n\nmi_subtitulo &lt;- \"Las l√≠neas representan la red de alta tensi√≥n y&lt;br&gt;\n  los puntos las plantas transformadoras.\"\n\n\n\n\nOcultar c√≥digo\ng &lt;- ggplot() +\n  geom_sf(data = p, fill = \"black\", color = NA) +\n  geom_path(\n    data = alta_tension, aes(x = X, y = Y, group = L1),\n    color = l1, linewidth = 7, lineend = \"round\") +\n  geom_path(\n    data = alta_tension, aes(x = X, y = Y, group = L1),\n    color = l2, linewidth = 5, lineend = \"round\") +\n  geom_path(\n    data = alta_tension, aes(x = X, y = Y, group = L1),\n    color = l3, linewidth = 3, lineend = \"round\") +\n  geom_path(\n    data = alta_tension, aes(x = X, y = Y, group = L1),\n    color = l4, linewidth = 1, lineend = \"round\") +\n  geom_path(\n    data = alta_tension, aes(x = X, y = Y, group = L1),\n    color = l5, linewidth = .2, lineend = \"round\") +\n  geom_sf(data = planta_transf_act, size = 5, color = p1) +\n  geom_sf(data = planta_transf_act, size = 4, color = p2) +\n  geom_sf(data = planta_transf_act , size = 3, color = p3) +\n  geom_sf(data = planta_transf_act , size = 2, color = p4) +\n  geom_sf(data = planta_transf_act , size = .1, color = p5) +\n  labs(\n    title = mi_titulo,\n    subtitle = mi_subtitulo,\n    caption = mi_caption) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(fill = \"grey5\", color = p4, linewidth = 3),\n    plot.margin = margin(15, 24, 15, 24),\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(\n      color = p4, size = 100, family = \"voltage\", hjust = .5\n    ),\n    plot.subtitle = element_markdown(\n      color = p5, size = 25, hjust = .5, family = \"ubuntu\", lineheight = 1.3\n    ),\n    plot.caption.position = \"plot\",\n    plot.caption = element_markdown(\n      color = p5, family = \"ubuntu\", size = 23, margin = margin(10, 0, 5, 0),\n      hjust = .5\n    )\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"argentina/instalaciones/red_electrica.png\",\n  width = 30,\n  height = 69,\n  units = \"cm\",\n  dpi = 300\n)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üîå Red el√©ctrica"
    ]
  },
  {
    "objectID": "argentina/instalaciones/faros.html",
    "href": "argentina/instalaciones/faros.html",
    "title": "üïØÔ∏èFaros",
    "section": "",
    "text": "Faros en las costas de Argentina, con topograf√≠a como mapa base.",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üïØÔ∏èFaros"
    ]
  },
  {
    "objectID": "argentina/instalaciones/faros.html#paquetes",
    "href": "argentina/instalaciones/faros.html#paquetes",
    "title": "üïØÔ∏èFaros",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(terra)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggfx)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üïØÔ∏èFaros"
    ]
  },
  {
    "objectID": "argentina/instalaciones/faros.html#estilos",
    "href": "argentina/instalaciones/faros.html#estilos",
    "title": "üïØÔ∏èFaros",
    "section": "Estilos",
    "text": "Estilos\n\n\nOcultar c√≥digo\nc_arriba &lt;- c(\"#131631\", \"#264775\")\nc_abajo &lt;- c(\"#100A2C\", \"#540056\")\n\nc1 &lt;- \"white\"\nc2 &lt;- \"gold\"\n\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üïØÔ∏èFaros"
    ]
  },
  {
    "objectID": "argentina/instalaciones/faros.html#ep√≠grafe",
    "href": "argentina/instalaciones/faros.html#ep√≠grafe",
    "title": "üïØÔ∏èFaros",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n  \"&lt;b&gt;Datos: &lt;/b&gt; &lt;span style='color:{c1};'&gt;IGN&lt;/span&gt;,\n  &lt;/b&gt; &lt;span style='color:{c1};'&gt;OpenTopography&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;V√≠ctor Gauto&lt;/span&gt;\")\nicon_twitter &lt;- glue(\n  \"&lt;span style='font-family:jet;'&gt;&#xeb72;&lt;/span&gt;\"\n)\nicon_instagram &lt;- glue(\n  \"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\"\n)\nicon_github &lt;- glue(\n  \"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\"\n)\nicon_mastodon &lt;- glue(\n  \"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\"\n)\nicon_bluesky &lt;- glue(\n  \"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\"\n)\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;vhgauto&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} &lt;b&gt;{icon_github} {icon_twitter} \",\n  \"{icon_instagram} {icon_mastodon} {icon_bluesky}&lt;/b&gt; {usuario}\"\n)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üïØÔ∏èFaros"
    ]
  },
  {
    "objectID": "argentina/instalaciones/faros.html#datos",
    "href": "argentina/instalaciones/faros.html#datos",
    "title": "üïØÔ∏èFaros",
    "section": "Datos",
    "text": "Datos\nVector de faros en las costas de Argentina, descargado del Instituto Geogr√°fico Nacional (Hidrograf√≠a y oceanograf√≠a / Ayuda a la navegaci√≥n / Punto / Faro).\n\n\nOcultar c√≥digo\nfaro &lt;- vect(\n  \"argentina/vectores/ayuda_a_la_navegacion_BC050.json\"\n) |&gt;\n  project(\"EPSG:5346\")",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üïØÔ∏èFaros"
    ]
  },
  {
    "objectID": "argentina/instalaciones/faros.html#elevaci√≥n",
    "href": "argentina/instalaciones/faros.html#elevaci√≥n",
    "title": "üïØÔ∏èFaros",
    "section": "Elevaci√≥n",
    "text": "Elevaci√≥n\nIncremento el contorno del vector de faros para la descarga del modelo digital de elevaci√≥n.\n\n\nOcultar c√≥digo\ne1 &lt;- ext(faro)$xmin\ne2 &lt;- ext(faro)$xmax\ne3 &lt;- ext(faro)$ymin\ne4 &lt;- ext(faro)$ymax\n\nfaro_bb_elev &lt;- vect(\n  ext(e1-8e5, e2+8e5, e3-1e5, e4+1e5), \"EPSG:5346\"\n)\nfaro_bb_elev_sf &lt;- faro_bb_elev |&gt;\n  sf::st_as_sf()\n\n\nDescarga de datos de elevaci√≥n.\n\n\nOcultar c√≥digo\nele_arg &lt;- elevatr::get_elev_raster(\n  locations = faro_bb_elev_sf,\n  z = 5,\n  clip = \"locations\"\n) |&gt;\n  rast() |&gt;\n  project(\"EPSG:5346\")\n\nnames(ele_arg) &lt;- \"altura\"\n\n\nDivido los datos por arriba y abajo del nivel de 0m, as√≠ aplico dos escalas de color.\n\n\nOcultar c√≥digo\narriba &lt;- ele_arg\narriba[arriba&lt;0] &lt;- NA\n\n\nPaleta de colores.\n\n\nOcultar c√≥digo\nf_arriba &lt;- colorRampPalette(c_arriba)\npaleta_arriba &lt;- f_arriba(length(cells(arriba)))\n\n\nConvierto a tibble y agrego colores, de acuerdo a la altura.\n\n\nOcultar c√≥digo\narriba_tbl &lt;- arriba |&gt;\n  as.data.frame(xy = TRUE) |&gt;\n  tibble() |&gt;\n  arrange(altura) |&gt;\n  mutate(n = row_number()) |&gt;\n  mutate(color = paleta_arriba[n])\n\n\nAbajo, remuevo todo lo mayor a 0m.\n\n\nOcultar c√≥digo\nabajo &lt;- ele_arg\nabajo[abajo&gt;0] &lt;- NA\n\n\nPaleta de colores.\n\n\nOcultar c√≥digo\nf_abajo &lt;- colorRampPalette(c_abajo)\npaleta_abajo &lt;- f_abajo(length(cells(abajo)))\n\n\nConvierto a tibble y agrego colores, de acuerdo a la altura.\n\n\nOcultar c√≥digo\nabajo_tbl &lt;- abajo |&gt;\n  as.data.frame(xy = TRUE) |&gt;\n  tibble() |&gt;\n  arrange(altura) |&gt;\n  mutate(n = row_number()) |&gt;\n  mutate(color = paleta_abajo[n])\n\n\nObtengo las coordenadas de los faros.\n\n\nOcultar c√≥digo\nfaro_tbl &lt;- as.data.frame(faro, geom = \"XY\") |&gt;\n  tibble()",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üïØÔ∏èFaros"
    ]
  },
  {
    "objectID": "argentina/instalaciones/faros.html#figura",
    "href": "argentina/instalaciones/faros.html#figura",
    "title": "üïØÔ∏èFaros",
    "section": "Figura",
    "text": "Figura\nRelaci√≥n de aspecto del mapa.\n\n\nOcultar c√≥digo\next_bb &lt;- ext(faro_bb_elev)\nasp &lt;- (ext_bb$ymax - ext_bb$ymin)/(ext_bb$xmax - ext_bb$xmin)\n\n\nTama√±o del mapa, en cent√≠metros.\n\n\nOcultar c√≥digo\nancho &lt;- 30\nalto &lt;- ancho*asp\n\n\n√çconos y subt√≠tulo.\n\n\nOcultar c√≥digo\nfaro_icon &lt;- glue(\n  \"&lt;span style='font-family:jet;font-size:150px;'&gt;&#xf0a00;&lt;/span&gt;\"\n)\nequis_icon &lt;- \"&#xf467;\"\n\nmi_subtitle &lt;- glue(\n  \"{faro_icon}&lt;br&gt;\",\n  \"{equis_icon}{length(faro)}\"\n)\n\n\nFigura.\n\n\nOcultar c√≥digo\ng &lt;- ggplot() +\n  # abajo\n  geom_raster(data = abajo_tbl, aes(x, y, fill = color)) +\n  # arriba\n  geom_raster(data = arriba_tbl, aes(x, y, fill = color)) +\n  # faros\n  with_blur(\n    geom_point(\n      data = faro_tbl, aes(x, y), color = c2, size = 6, alpha = 1\n    ),\n    sigma = 20\n  ) +\n  geom_point(\n    data = faro_tbl, aes(x, y), color = c2, size = .5, alpha = 1\n  ) +\n  # subt√≠tulo\n  annotate(\n    geom = \"richtext\", x = ext_bb$xmax*.98, y = ext_bb$ymin*1.8,\n    label = mi_subtitle, family = \"jet\", color = c2, fill = NA,\n    size = 10, label.color = NA, hjust = 1\n  ) +\n  # ep√≠grafe\n  annotate(\n    geom = \"richtext\", x = ext_bb$xmin*1.01, y = ext_bb$ymin*1.02,\n    label = mi_caption, family = \"ubuntu\", color = c2, fill = NA,\n    size = 5, label.color = NA, hjust = 0, vjust = 0\n  ) +\n  # cuadro\n  annotate(\n    geom = \"rect\", xmin = ext_bb$xmin, xmax = ext_bb$xmax, ymin = ext_bb$ymin,\n    ymax = ext_bb$ymax, color = c_abajo[2], linewidth = 3, fill = NA\n  ) +\n  scale_fill_identity() +\n  coord_fixed(expand = FALSE) +\n  theme_void()\n\n\nGuardo la figura.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"argentina/instalaciones/faros.png\",\n  width = ancho,\n  height = alto,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üïØÔ∏èFaros"
    ]
  },
  {
    "objectID": "argentina/instalaciones/aeropuertos.html",
    "href": "argentina/instalaciones/aeropuertos.html",
    "title": "Aeropuertos",
    "section": "",
    "text": "Mapa de aeropuertos de Argentina.",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "‚úàÔ∏è Aeropuertos"
    ]
  },
  {
    "objectID": "argentina/instalaciones/aeropuertos.html#paquetes",
    "href": "argentina/instalaciones/aeropuertos.html#paquetes",
    "title": "Aeropuertos",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(terra)\nlibrary(tidyterra)\nlibrary(glue)\nlibrary(showtext)\nlibrary(ggtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "‚úàÔ∏è Aeropuertos"
    ]
  },
  {
    "objectID": "argentina/instalaciones/aeropuertos.html#estilos",
    "href": "argentina/instalaciones/aeropuertos.html#estilos",
    "title": "Aeropuertos",
    "section": "Estilos",
    "text": "Estilos\nColores aleatorios a partir de una gama de rosados.\n\n\nOcultar c√≥digo\nset.seed(2024)\npp &lt;- PrettyCols::prettycols(palette = \"Pinks\", n = 24, type = \"continuous\") |&gt;\n  sample()\n\nc1 &lt;- \"black\"\nc2 &lt;- \"white\"\nc3 &lt;- \"#FCAADE\"\nc4 &lt;- \"#860A4D\"\n\n\nFuentes: Ubuntu, JetBrains Mono y fontawesome.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nfont_add(\n  family = \"fa\",\n  regular = \"././fuente/Font Awesome 6 Free-Solid-900.otf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "‚úàÔ∏è Aeropuertos"
    ]
  },
  {
    "objectID": "argentina/instalaciones/aeropuertos.html#ep√≠grafe",
    "href": "argentina/instalaciones/aeropuertos.html#ep√≠grafe",
    "title": "Aeropuertos",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n  \"&lt;b&gt;Datos:&lt;/b&gt; &lt;span style='color:{c1};'&gt;IGN&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;V√≠ctor Gauto&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xeb72;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bluesky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;vhgauto&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente} {sep} {autor} {sep} &lt;b&gt;{icon_github} {icon_twitter} \",\n  \"{icon_instagram} {icon_mastodon} {icon_bluesky}&lt;/b&gt; {usuario}\"\n)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "‚úàÔ∏è Aeropuertos"
    ]
  },
  {
    "objectID": "argentina/instalaciones/aeropuertos.html#datos",
    "href": "argentina/instalaciones/aeropuertos.html#datos",
    "title": "Aeropuertos",
    "section": "Datos",
    "text": "Datos\nVectores de las provincias con sus departamentos. Obtengo el vector de aeropuertos del Instituto Geogr√°fico Nacional, y conservo √∫nicamente los que se encuentran en actividad.\n\n\nOcultar c√≥digo\npcias &lt;- vect(\"argentina/vectores/pcias_continental.gpkg\") |&gt;\n  project(\"EPSG:5346\")\n\ndptos_pcias &lt;- vect(\"argentina/vectores/dptos_pcias_continental.gpkg\")\n\naer &lt;- vect(\"argentina/vectores/extras/puntos_de_transporte_aereo_GB005.json\") |&gt;\n  project(\"EPSG:5346\")\n\naer &lt;- aer[aer$fun == 6]",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "‚úàÔ∏è Aeropuertos"
    ]
  },
  {
    "objectID": "argentina/instalaciones/aeropuertos.html#figura",
    "href": "argentina/instalaciones/aeropuertos.html#figura",
    "title": "Aeropuertos",
    "section": "Figura",
    "text": "Figura\n√çconos de los aviones\n\n\nOcultar c√≥digo\nicon1 &lt;- glue(\"&lt;span style='font-family:fa; color:{c2};'&gt;&#xf5b0;&lt;/span&gt; \")\nicon2 &lt;- glue(\"&lt;span style='font-family:fa; color:{c2};'&gt;&#xf072;&lt;/span&gt; \")\nicon3 &lt;- glue(\"&lt;span style='font-family:fa; color:{c2};'&gt;&#xf5af;&lt;/span&gt; \")\nicon &lt;- glue(\"{icon1} {icon2} {icon3}\")\n\n\nSubt√≠tulo y posici√≥n.\n\n\nOcultar c√≥digo\nx_sub &lt;- ext(aer)$xmax\ny_sub &lt;- ext(aer)$ymax\n\nmi_subtitle &lt;- glue(\n  \"En &lt;b style='color: {c1}'&gt;Argentina&lt;/b&gt; hay en\",\n  \"funcionamiento &lt;b style='color:{c4}'&gt;{nrow(aer)}&lt;/b&gt;\",\n  \"aeropuertos.&lt;br&gt;\",\n  \"{icon}\",\n  .sep = \"&lt;br&gt;\"\n)\n\n\nFigura.\n\n\nOcultar c√≥digo\ng &lt;- ggplot() +\n  # departamentos\n  geom_sf(\n    data = dptos_pcias, aes(fill = provincia), color = c2, linewidth = .3,\n    linetype = \"22\"\n  ) +\n  # provincias\n  geom_sf(\n    data = pcias, fill = NA, color = c1, linewidth = .4\n  ) +\n  # aeropuertos\n  geom_sf(\n    data = aer, fill = c2, color = c1, size = 11, alpha = .8,\n    stroke = 1, shape = 21) +\n  # subt√≠tulo\n  annotate(\n    geom = \"richtext\", x = x_sub*.84, y = y_sub*.66, label = mi_subtitle,\n    fill = NA, label.color = NA, size = 12, color = c1, hjust = 0,\n    family = \"ubuntu\"\n  ) +\n  scale_fill_manual(values = pp) +\n  labs(caption = mi_caption) +\n  theme_void() +\n  theme(\n    plot.margin = margin(r = 8, l = 8, t = 2),\n    plot.background = element_rect(\n      fill = c3, color = c4, linewidth = 3),\n    plot.caption = element_markdown(\n      family = \"jet\", color = c4, hjust = .5, size = 20,\n      margin = margin(b = 10)),\n    legend.position = \"none\"\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"argentina/instalaciones/aeropuertos.png\",\n  width = 30,\n  height = 65,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "‚úàÔ∏è Aeropuertos"
    ]
  },
  {
    "objectID": "argentina/instalaciones/index.html",
    "href": "argentina/instalaciones/index.html",
    "title": "Instalaciones en Argentina",
    "section": "",
    "text": "En esta secci√≥n se muestran mapas de Argentina  que incluyen instalaciones varias, como ser: plantas de tratamiento de agua, centrales generadoras de energ√≠a, rutas nacionales y provinciales, etc.\nPara darle diversidad a los mapas, cada uno cuenta con una paleta de colores diferente.\n \n\n\n   \n    \n    \n      Ordenar por\n      Por defecto\n      \n        T√≠tulo\n      \n      \n        Fecha - Menos reciente\n      \n      \n        Fecha - M√°s reciente\n      \n      \n        Autor/a\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nüèûÔ∏è Parques Nacionales\n\n\n\ngeom_raster\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2025-07-20\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nüïØÔ∏èFaros\n\n\n\ngeom_raster\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2025-04-06\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nüö∞Plantas potabilizadoras\n\n\n\ngeom_sf\n\n\n\n\n\n\n\n\n\n2024-08-03\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\n‚úàÔ∏è Aeropuertos\n\n\n\ngeom_sf\n\n\n\n\n\n\n\n\n\n2024-08-03\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nüè´ Ciencia y educaci√≥n\n\n\n\ngeom_sf\n\ngeom_point\n\ngeom_text\n\n\n\n\n\n\n\n\n\n2024-08-03\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nüìÆ Buzones\n\n\n\ngeom_sf\n\n\n\n\n\n\n\n\n\n2024-04-27\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nüîå Red el√©ctrica\n\n\n\ngeom_sf\n\ngeom_path\n\n\n\n\n\n\n\n\n\n2024-04-27\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nüå¶Ô∏èEstaciones meteorol√≥gicas\n\n\n\ngeom_sf\n\ngeom_sf_pattern\n\n\n\n\n\n\n\n\n\n2024-02-17\n\n\nV√≠ctor Gauto\n\n\n\n\n\nNo hay resultados\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones"
    ]
  },
  {
    "objectID": "argentina/animaciones/crecimiento_rutas.html",
    "href": "argentina/animaciones/crecimiento_rutas.html",
    "title": "üöåCrecimiento de rutas",
    "section": "",
    "text": "Animaci√≥n de crecimiento de rutas nacionales y provinciales, con centro en el Obelisco de Ciudad Aut√≥noma de Buenos Aires.",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones",
      "üöåCrecimiento de rutas"
    ]
  },
  {
    "objectID": "argentina/animaciones/crecimiento_rutas.html#paquetes",
    "href": "argentina/animaciones/crecimiento_rutas.html#paquetes",
    "title": "üöåCrecimiento de rutas",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(terra)\nlibrary(tidyterra)\nlibrary(magick)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(ggplot2)\nlibrary(purrr)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones",
      "üöåCrecimiento de rutas"
    ]
  },
  {
    "objectID": "argentina/animaciones/crecimiento_rutas.html#estilos",
    "href": "argentina/animaciones/crecimiento_rutas.html#estilos",
    "title": "üöåCrecimiento de rutas",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"dodgerblue\"\nc2 &lt;- \"violetred\"\nc3 &lt;- \"grey95\"\nc4 &lt;- \"grey90\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"./fuente/Ubuntu-Regular.ttf\",\n  bold = \"./fuente/Ubuntu-Bold.ttf\",\n  italic = \"./fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"./fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones",
      "üöåCrecimiento de rutas"
    ]
  },
  {
    "objectID": "argentina/animaciones/crecimiento_rutas.html#ep√≠grafe",
    "href": "argentina/animaciones/crecimiento_rutas.html#ep√≠grafe",
    "title": "üöåCrecimiento de rutas",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n  \"Datos: &lt;b style='color: {c1};'&gt;Instituto Geogr√°fico Nacional&lt;/b&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones",
      "üöåCrecimiento de rutas"
    ]
  },
  {
    "objectID": "argentina/animaciones/crecimiento_rutas.html#funciones",
    "href": "argentina/animaciones/crecimiento_rutas.html#funciones",
    "title": "üöåCrecimiento de rutas",
    "section": "Funciones",
    "text": "Funciones\nLectura y transformaci√≥n de sistema de coordenadas geogr√°ficas.\n\n\nOcultar c√≥digo\nf_proj &lt;- function(v) {\n  project(vect(v), \"EPSG:5346\")\n}\n\n\nGeneraci√≥n y almacenamiento de mapas.\n\n\nOcultar c√≥digo\nf_gg &lt;- function(x) {\n\n  if (x &lt; 10) {\n    i &lt;- paste0(\"0\", x)\n  } else {\n    i &lt;- x\n  }\n\n  g &lt;- ggplot() +\n    geom_spatvector(data = arg, fill = c4, color = NA) +\n    geom_spatvector(\n      data = lista_crop_pro[[x]], aes(color = \"pro\"), linewidth = .1,\n      show.legend = TRUE, key_glyph = \"path\"\n    ) +\n    geom_spatvector(\n      data = lista_crop_nac[[x]], fill = NA, aes(color = \"nac\"), linewidth = .2,\n      show.legend = TRUE, key_glyph = \"path\"\n    ) +\n    scale_color_manual(\n      breaks = c(\"nac\", \"pro\"),\n      labels = c(\"Ruta Nacional\", \"Ruta Provincial\"),\n      values = c(c1, c2)\n    ) +\n    labs(color = NULL, caption = mi_caption) +\n    guides(\n      color = guide_legend(override.aes = list(linewidth = 1))\n    ) +\n    theme_void() +\n    theme(\n      plot.background = element_rect(fill = c3, color = NA),\n      plot.caption = element_markdown(\n        family = \"ubuntu\", size = 8, color = c2, lineheight = 1.2,\n        margin = margin(b = 5)\n      ),\n      legend.text = element_text(family = \"ubuntu\"),\n      legend.position = \"inside\",\n      legend.position.inside = c(.7, .3),\n      legend.key.width = unit(20, \"pt\")\n    )\n\n  ggsave(\n    plot = g,\n    filename = paste0(\"./argentina/animaciones/crecimiento_rutas/\", i, \".png\"),\n    width = 1000,\n    height = 2084,\n    units = \"px\"\n  )\n\n  print(glue::glue(\"\\n\\n--- Figura {i} generada ---\\n\\n\"))\n}",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones",
      "üöåCrecimiento de rutas"
    ]
  },
  {
    "objectID": "argentina/animaciones/crecimiento_rutas.html#datos",
    "href": "argentina/animaciones/crecimiento_rutas.html#datos",
    "title": "üöåCrecimiento de rutas",
    "section": "Datos",
    "text": "Datos\nVector de Argentina, rutas nacionales y provinciales, y coordenadas del Obelisco.\n\n\nOcultar c√≥digo\narg &lt;- f_proj(\"./argentina/vectores/arg_continental.gpkg\")\n\nr_nac &lt;- f_proj(\"./argentina/vectores/extras/L√≠neaRed vial nacional.json\")\nr_pro &lt;- f_proj(\"./argentina/vectores/extras/L√≠neaRed vial provincial.json\")\n\no &lt;- vect(\n  data.frame(x = -58.38162, y = -34.60376), geom = c(\"x\", \"y\"),\n  crs = \"EPSG:4326\"\n) |&gt;\n  project(\"EPSG:5346\")",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones",
      "üöåCrecimiento de rutas"
    ]
  },
  {
    "objectID": "argentina/animaciones/crecimiento_rutas.html#figura",
    "href": "argentina/animaciones/crecimiento_rutas.html#figura",
    "title": "üöåCrecimiento de rutas",
    "section": "Figura",
    "text": "Figura\nLista de buffers alrededor del Obelisco, y los recortes de las rutas de cada uno.\n\n\nOcultar c√≥digo\nlista_buffer_nac &lt;- map(seq(50, 2500, 25)*1e3, ~buffer(o, .x, quadsegs = 250))\nlista_crop_nac &lt;- map(lista_buffer_nac, ~terra::crop(r_nac, .x))\nlista_crop_pro &lt;- map(lista_buffer_nac, ~terra::crop(r_pro, .x))\n\n\nCreaci√≥n de cada figura.\n\n\nOcultar c√≥digo\nmap(1:length(lista_buffer_nac), f_gg)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones",
      "üöåCrecimiento de rutas"
    ]
  },
  {
    "objectID": "argentina/animaciones/crecimiento_rutas.html#animaci√≥n",
    "href": "argentina/animaciones/crecimiento_rutas.html#animaci√≥n",
    "title": "üöåCrecimiento de rutas",
    "section": "Animaci√≥n",
    "text": "Animaci√≥n\nGeneraci√≥n de la animaci√≥n a partir de todas las figuras. El archivo de salida est√° en formato .mp4.\n\n\nOcultar c√≥digo\nav::av_encode_video(\n  input = list.files(\n    path = \"./argentina/animaciones/crecimiento_rutas/\",\n    full.names = TRUE, pattern = \".png\"\n  ),\n  output = \"./argentina/animaciones/crecimiento_rutas.mp4\"\n)\n\n\nElimino los mapas creados y la carpeta que los contiene.\n\n\nOcultar c√≥digo\nunlink(\"./argentina/animaciones/crecimiento_rutas/\", recursive = TRUE)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones",
      "üöåCrecimiento de rutas"
    ]
  },
  {
    "objectID": "argentina/animaciones/index.html",
    "href": "argentina/animaciones/index.html",
    "title": "Animaciones de mapas de Argentina",
    "section": "",
    "text": "Breve descripci√≥n de la metodolog√≠a b√°sica para generar las animaciones de datos geogr√°ficos de Argentina .",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones"
    ]
  },
  {
    "objectID": "argentina/animaciones/index.html#m√©todo-general",
    "href": "argentina/animaciones/index.html#m√©todo-general",
    "title": "Animaciones de mapas de Argentina",
    "section": "M√©todo general",
    "text": "M√©todo general\nLos scripts para las animaciones mostradas en esta secci√≥n tiene la misma estructura b√°sica:\n\nLectura de datos y procesamiento.\nUna funci√≥n personalizada creada con base::function() que genera y almacena el mapa, correspondiente a un fotograma de la animaci√≥n final. Todas las figuras se almacenan en orden en una carpeta espec√≠fica.\nIteraci√≥n de la funci√≥n usando purrr::walk(). Usualmente se itera respecto del tiempo (a√±os, meses), o de distancias.\nLa animaci√≥n final se genera a partir de todas las im√°genes individuales con la funci√≥n av::av_encode_video() y la extensi√≥n del video es .mp4.\nSe elimina la carpeta con todas las figuras.",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones"
    ]
  },
  {
    "objectID": "argentina/animaciones/index.html#animaciones",
    "href": "argentina/animaciones/index.html#animaciones",
    "title": "Animaciones de mapas de Argentina",
    "section": "Animaciones",
    "text": "Animaciones\n \n\n\n   \n    \n    \n      Ordenar por\n      Por defecto\n      \n        T√≠tulo\n      \n      \n        Fecha - Menos reciente\n      \n      \n        Fecha - M√°s reciente\n      \n      \n        Autor/a\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nüöåCrecimiento de rutas\n\n\n\ngeom_sf\n\n\n\n\n\n\n\n\n\n2024-08-03\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nüóºTorres de telecomunicaciones\n\n\n\ngeom_sf\n\ngeom_sf_pattern\n\n\n\n\n\n\n\n\n\n2024-02-17\n\n\nV√≠ctor Gauto\n\n\n\n\n\nNo hay resultados",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones"
    ]
  },
  {
    "objectID": "viz/pi.html",
    "href": "viz/pi.html",
    "title": "D√≠a œÄ",
    "section": "",
    "text": "Figura¬†1: Aproximaci√≥n de  a partir de puntos aleatorios.",
    "crumbs": [
      "{{< iconify material-symbols-light:scatter-plot >}} Visualizaciones",
      "D√≠a œÄ"
    ]
  },
  {
    "objectID": "viz/pi.html#paquetes",
    "href": "viz/pi.html#paquetes",
    "title": "D√≠a œÄ",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(showtext)\nlibrary(ggtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify material-symbols-light:scatter-plot >}} Visualizaciones",
      "D√≠a œÄ"
    ]
  },
  {
    "objectID": "viz/pi.html#funci√≥n",
    "href": "viz/pi.html#funci√≥n",
    "title": "D√≠a œÄ",
    "section": "Funci√≥n",
    "text": "Funci√≥n\nGenera un tibble a partir de la cantidad de puntos dada (\\(n\\)).\n\n\nOcultar c√≥digo\nf_pi &lt;- function(z) {\n\n  set.seed(2025)\n\n  d &lt;- tibble(\n    x = runif(n = z, min = -1, max = 1),\n    y = runif(n = z, min = -1, max = 1),\n    r = sqrt(x^2 + y^2),\n    estado = if_else(r &lt;= 1, \"in\", \"out\"),\n    grupo = paste0(\"p\", format(z, scientific = FALSE))\n  )\n\n  return(d)\n}",
    "crumbs": [
      "{{< iconify material-symbols-light:scatter-plot >}} Visualizaciones",
      "D√≠a œÄ"
    ]
  },
  {
    "objectID": "viz/pi.html#colores-y-fuentes",
    "href": "viz/pi.html#colores-y-fuentes",
    "title": "D√≠a œÄ",
    "section": "Colores y fuentes",
    "text": "Colores y fuentes\n\n\nOcultar c√≥digo\nc1 &lt;- \"#E88934\"\nc2 &lt;- \"#1E466E\"\nc3 &lt;- \"grey60\"\nc4 &lt;- \"black\"\nc5 &lt;- \"#637B31\"\nc6 &lt;- \"#208CC0\"\nc7 &lt;- \"#7528AF\"\nc8 &lt;- \"grey90\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"./fuente/Ubuntu-Regular.ttf\",\n  bold = \"./fuente/Ubuntu-Bold.ttf\",\n  italic = \"./fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\",\n  regular = \"./fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify material-symbols-light:scatter-plot >}} Visualizaciones",
      "D√≠a œÄ"
    ]
  },
  {
    "objectID": "viz/pi.html#ep√≠grafe",
    "href": "viz/pi.html#ep√≠grafe",
    "title": "D√≠a œÄ",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nautor &lt;- glue(\"&lt;span style='color:{c2};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c2};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify material-symbols-light:scatter-plot >}} Visualizaciones",
      "D√≠a œÄ"
    ]
  },
  {
    "objectID": "viz/pi.html#datos",
    "href": "viz/pi.html#datos",
    "title": "D√≠a œÄ",
    "section": "Datos",
    "text": "Datos\nS√≠mbolos √∫tiles\n\n\nOcultar c√≥digo\npi_etq &lt;- \"&#xe22c;\"\npunto_etq &lt;- \"&#xf444;\"\nsep_etq &lt;- glue(\" &lt;b style='color: {c3}'&gt;|&lt;/b&gt; \")\n\n\nGenero una √∫nica base de datos, agrupados por la cantidad de puntos (\\(n\\)). Agrego el t√≠tulo de cada panel.\n\n\nOcultar c√≥digo\nd &lt;- map(c(1e3, 1e4, 1e5, 1e6), f_pi) |&gt;\n  list_rbind() |&gt;\n  mutate(\n    grupo = fct_inorder(grupo)\n  )\n\ntitulo_tbl &lt;- d |&gt;\n  reframe(\n    pi_aprox = sum(estado == \"in\")/n()*4,\n    .by = grupo\n  ) |&gt;\n  mutate(\n    prob = round(abs((pi_aprox - pi)/pi*100), 3),\n    .by = grupo\n  ) |&gt;\n  mutate(\n    p = as.numeric(sub(\"p\", \"\", grupo))\n  ) |&gt;\n  mutate(\n    etq1 = paste0(\n      format(\n        p, big.mark = \".\", decimal.mark = \",\", scientific = FALSE, trim = TRUE\n      ),\n      punto_etq),\n    etq2 = paste0(\n      pi_etq, \" ‚âà \",\n      format(\n        round(pi_aprox, 5),\n        nsmall = 5, big.mark = \".\", decimal.mark = \",\", trim = TRUE\n      )\n    ),\n    etq3 = paste0(\n      format(\n        round(prob, 3),\n        nsmall = 3, big.mark = \"\", decimal.mark = \",\", trim = TRUE\n      ),\n      \"%\"\n    )\n  ) |&gt;\n  mutate(\n    etq1 = glue(\"&lt;span style='color: {c5}'&gt;{etq1}&lt;/span&gt;\"),\n    etq2 = glue(\"&lt;span style='color: {c6}'&gt;{etq2}&lt;/span&gt;\"),\n    etq3 = glue(\"&lt;span style='color: {c7}'&gt;{etq3}&lt;/span&gt;\")\n  ) |&gt;\n  mutate(\n    etq = glue(\"{etq1}{sep_etq}{etq2}{sep_etq}{etq3}\")\n  )\n\nstrip_titulo &lt;- set_names(\n  x = titulo_tbl$etq,\n  nm = titulo_tbl$grupo\n)",
    "crumbs": [
      "{{< iconify material-symbols-light:scatter-plot >}} Visualizaciones",
      "D√≠a œÄ"
    ]
  },
  {
    "objectID": "viz/pi.html#figura",
    "href": "viz/pi.html#figura",
    "title": "D√≠a œÄ",
    "section": "Figura",
    "text": "Figura\nEl t√≠tulo es una expresi√≥n en LaTeX.\n\n\nOcultar c√≥digo\neq &lt;- latex2exp::TeX(r\"($\\lim_{n\\to\\infty} \\frac{t}{n} = \\frac{\\pi}{4} $)\")\n\n\nSubt√≠tulo y figura.\n\n\nOcultar c√≥digo\nmi_subtitulo &lt;- glue(\n  \"*t* es el n√∫mero de &lt;b style='color: {c1}'&gt;puntos dentro del c√≠rculo&lt;/b&gt; y\n  &lt;span style='color: {c5}'&gt;*n* es el total&lt;/span&gt;,\n  aleatoriamente ubicados.&lt;br&gt;\n  Para cada panel se indican &lt;b style='color: {c5}'&gt;n&lt;/b&gt;, el\n  &lt;b style='color: {c6}'&gt;valor aproximado de\n  &lt;span style='font-family: jet'&gt;{pi_etq}&lt;/span&gt;&lt;/b&gt;\n  y el &lt;b style='color: {c7}'&gt;error porcentual&lt;/b&gt;.\"\n)\n\ng &lt;- ggplot(d, aes(x, y, color = estado)) +\n  geom_point(\n    size = .1, alpha = .5, show.legend = FALSE\n  ) +\n  facet_wrap(vars(grupo), ncol = 2,\n             labeller = as_labeller(strip_titulo)\n             ) +\n  scale_color_manual(\n    breaks = c(\"in\", \"out\"),\n    values = c(c1, c2)\n  ) +\n  coord_equal(clip = \"off\", expand = FALSE) +\n  labs(\n    title = eq, subtitle = mi_subtitulo, caption = mi_caption\n  ) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(fill = c8, color = NA),\n    plot.margin = margin(r = 15, l = 15),\n    plot.title = element_text(\n      family = \"sans serif\", size = 40, hjust = .5, margin = margin(t = 20),\n      color = c2\n    ),\n    plot.subtitle = element_markdown(\n      size = 22, hjust = .5, margin = margin(t = 15, b = 25), lineheight = 1.4\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c1, size = 15, margin = margin(t = 20, b = 15)\n    ),\n    panel.spacing.x = unit(1, \"cm\"),\n    strip.text = element_markdown(\n      family = \"jet\", size = 15, margin = margin(t = 10, b = 5), color = c4\n    )\n  )\n\n\nGuardo la figura creada.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = paste0(getwd(), \"/viz/pi.png\"),\n  width = 30,\n  height = 37,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify material-symbols-light:scatter-plot >}} Visualizaciones",
      "D√≠a œÄ"
    ]
  },
  {
    "objectID": "mapas.html",
    "href": "mapas.html",
    "title": "Mis mapas",
    "section": "",
    "text": "Mapas varios.\n\n\n\n\n\n\n\n\n\n\nmapa 1\n\n\nmapa semana 01\n\n\n\na\n\nb\n\n\n\ngeom_col()\n\n\n\n\n\n2025-01-01\n\n\nVHG\n\n\n\n\n\nNo hay resultados\n\nAdi√≥s.\n\n\n\n\n Subir"
  },
  {
    "objectID": "tidytuesday/2023/semana_36.html",
    "href": "tidytuesday/2023/semana_36.html",
    "title": "Semana 36",
    "section": "",
    "text": "Brecha de g√©nero entre diferentes grupos demogr√°ficos, en d√≥lares/hora, en EEUU.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(patchwork)\n\n# fuente ------------------------------------------------------------------\n\n# colores, RColorBrewer, Set1\nc1 &lt;- \"#F781BF\"\nc2 &lt;- \"#FFD92F\"\nc3 &lt;- \"#B3E2CD\"\nc4 &lt;- \"#4DAF4A\"\nc5 &lt;- \"grey90\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# wage, eje vertical\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# a√±os, eje horizontal\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = FALSE)\n# t√≠tulo\nfont_add_google(name = \"Taviraj\", family = \"taviraj\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:victor;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 36. Union Membership and Coverage Database. B. Hirsch, D. Macpherson, W. Even&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-09-05/readme.md\")\n\nwages &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-09-05/wages.csv')\n\n# me interesa ver la diferencia entre el sueldo de varones y mujeres, y comparar\n# grupos demogr√°ficos distintos\n\n# traducci√≥n de los grupos demogr√°ficos\ntipo_nivel_trad &lt;- c(\n  white = \"Personas blancas\", \n  black = \"Personas afroamericanas\",\n  hispanic = \"Personas hispanas\")\n\nd &lt;- wages |&gt; \n  filter(str_detect(facet, \"demographics\") & str_detect(facet, \"male|female\")) |&gt; \n  select(year, facet, wage) |&gt; \n  mutate(facet = str_remove(facet, \"demographics: \")) |&gt; \n  filter(facet != \"male\" & facet != \"female\") |&gt; \n  separate_wider_delim(\n    cols = facet, delim = \" \", names = c(\"tipo\", \"sex\"),\n    too_few = \"align_end\") |&gt; \n  mutate(tipo = tipo_nivel_trad[tipo]) |&gt; \n  mutate(tipo = factor(tipo, levels = tipo_nivel_trad))\n\n# personas blancas, referencia para todos los paneles\nw &lt;- wages |&gt; \n  filter(str_detect(facet, \"demographics\") & str_detect(facet, \"male|female\")) |&gt; \n  select(year, facet, wage) |&gt; \n  mutate(facet = str_remove(facet, \"demographics: \")) |&gt; \n  filter(str_detect(facet, \"white\")) |&gt; \n  separate_wider_delim(\n    cols = facet, delim = \" \", names = c(\"tipo\", \"sex\"), \n    too_few = \"align_end\") |&gt; \n  select(-tipo)\n\n# figura ------------------------------------------------------------------\n\n# funci√≥n que genera las figuras, por grupo demogr√°fico\nf_gg &lt;- function(x) {\n  \n  e &lt;- d |&gt; \n    filter(tipo == x)\n  \n  g &lt;- ggplot(e, aes(year, wage, color = sex)) +\n    # recuadros de cada panel\n    annotate(\n      geom = \"segment\",\n      x = c(1973, 2022, 2022, 1973),\n      xend = c(2022, 2022, 1973, 1973),\n      y = c(0, 0, 40, 40),\n      yend = c(0, 40, 40, 0),\n      color = \"grey30\",\n      lineend = \"round\",\n      linewidth = 1) +\n    # referencia\n    geom_line(data = w, linewidth = .5, linetype = 3) +\n    # sueldo\n    geom_line(\n      linewidth = 2, lineend = \"round\", show.legend = FALSE) +\n    # escalas\n    scale_x_continuous(expand = c(0, 0)) +\n    scale_y_continuous(\n      breaks = seq(0, 40, 10), limits = c(0, 40), expand = c(0, 0),\n      labels = scales::label_dollar()) +\n    scale_color_manual(values = c(c4, c1)) +\n    coord_cartesian(clip = \"off\") +\n    labs(x = NULL, y = \"D√≥lares/hora, nominales (EEUU)\", title = x) +\n    theme_minimal() +\n    theme(\n      aspect.ratio = 1,\n      legend.position = \"none\",\n      plot.margin = margin(13, 13, 13, 13),\n      plot.background = element_blank(),\n      plot.title = element_text(\n        color = \"white\", size = 25, family = \"ubuntu\", hjust = 1),\n      panel.background = element_blank(),\n      panel.grid.minor = element_blank(),\n      panel.grid.major = element_line(\n        color = \"grey60\", linewidth = .1, linetype = \"8f\"),\n      panel.spacing = unit(2, \"line\"),\n      axis.text.y = element_text(color = c5, family = \"ubuntu\", size = 15),\n      axis.text.x = element_text(color = c5, family = \"bebas\", size = 20),\n      axis.title.y = element_text(color = c5, family = \"ubuntu\", size = 20)\n    )\n  \n  return(g)\n}\n\n# t√≠tulo y subt√≠tulo\nmi_title &lt;- str_to_upper(\"La brecha de g√©nero&lt;br&gt;no discrimina\")\n\nmi_texto &lt;- glue(\n  \"Una de las formas de la **brecha de g√©nero** es la diferencia entre la \n  remuneraci√≥n de los trabajadores varones sobre las trabajadoras mujeres, en \n  favor de ellos. Esta desigualdad tambi√©n est√° presente en otros grupos \n  demogr√°ficos. Las l√≠neas punteadas representan a las personas blancas, para \n  mejor comparaci√≥n entre grupos.\") |&gt; \n  str_wrap(width = 34) |&gt; \n  # cambio a '&lt;br&gt;' para usar ggtext::geom_richtext()\n  str_replace_all(pattern = \"\\n\", replacement = \"&lt;br&gt;\") |&gt; \n  str_replace(\n    pattern = \"trabajadores varones\", \n    replacement = glue(\"&lt;span style='color:{c1}'&gt;trabajadores varones&lt;/span&gt;\")) |&gt; \n  str_replace(\n    pattern = \"trabajadoras mujeres\", \n    replacement = glue(\"&lt;span style='color:{c4}'&gt;trabajadoras mujeres&lt;/span&gt;\"))\n\n# figura que contiene el subt√≠tulo\ng_texto &lt;- ggplot(tibble(x = 0, y = 0), aes(x, y)) +\n  annotate(\n    geom = \"richtext\", family = \"ubuntu\", label.color = NA, \n    hjust = 0, vjust = 1, fill = NA,\n    label = mi_texto, x = -1, y = 0, size = 8, color = c5) +\n  geom_point(color = NA) +\n  coord_cartesian(xlim = c(0, 10), ylim = c(-10, 0), expand = FALSE, clip = \"off\") +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n  )\n\n# lista que contiene las figuras por grupo demogr√°fico y el subt√≠tulo\ng_lista &lt;- c(list(g_texto), map(unique(d$tipo), f_gg))\n\n# dise√±o de posici√≥n de las figuras\narreglo &lt;- \"\nAB\nCD\n\"\n\n# figura\ng &lt;- wrap_plots(g_lista, design = arreglo) +\n  plot_annotation(\n    caption = mi_caption,\n    title = mi_title,\n    theme = theme(\n      plot.margin = margin(21.2, 5, 15, 5),\n      plot.background = element_rect(\n        fill = \"grey20\", color = c5, linewidth = 3),\n      plot.title = element_markdown(\n        size = 70, color = c3, hjust = 0, family = \"taviraj\"),\n      plot.caption = element_markdown(\n        color = c5, family = \"ubuntu\", size = 13, margin = margin(10, 0, 5, 0)),\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_36/viz.png\",\n  width = 30,\n  height = 37,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_36/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 36"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_40.html",
    "href": "tidytuesday/2023/semana_40.html",
    "title": "Semana 40",
    "section": "",
    "text": "Oportunidades de subvenci√≥n del Gobierno de EEUU.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggrepel)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores, Isfahan\nc1 &lt;- \"#E3C28B\"\nc2 &lt;- \"#AE8448\"\nc3 &lt;- \"#175F5D\"\nc4 &lt;- \"#4E3810\"\nc5 &lt;- \"#054544\"\n\n# agencias, texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# ejes vertical  horizontal\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# t√≠tulo\nfont_add_google(name = \"Lora\", family = \"lora\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:victor;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 40. US Government Grant Opportunities, *grants.gov*&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-10-03/readme.md\")\n\ngrants &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-10-03/grants.csv')\n\n# me interesa la relaci√≥n entre cantidad de oportunidades de las agencias, y \n# la cantidad de dinero estimada, por oprtunidad\n\n# selecciono las 100 agencias con mayor presencia\nagencia &lt;- grants |&gt; \n  drop_na(estimated_funding) |&gt; \n  count(agency_name, sort = TRUE) |&gt; \n  slice(1:100) |&gt; \n  pull(agency_name)\n\n# calculo el cociente entre dinero estimado y n√∫mero de presentaciones\n# obtengo la distancia de cada punto respecto del origen\nd &lt;- grants |&gt; \n  filter(agency_name %in% agencia) |&gt; \n  drop_na(estimated_funding) |&gt; \n  summarise(\n    cantidad = n(),\n    tot = sum(estimated_funding),\n    .by = agency_name) |&gt; \n  mutate(ratio = tot/cantidad) |&gt; \n  mutate(distancia = sqrt(tot^2 + ratio^2))\n\n# puntos extremos\ne &lt;- d |&gt; \n  filter(\n    cantidad == max(d$cantidad) | \n      cantidad == min(d$cantidad) |\n      ratio == max(d$ratio) | ratio == min(d$ratio) |\n      distancia == max(d$distancia) | distancia == min(d$distancia)) |&gt; \n  mutate(label = str_wrap(agency_name, width = 20)) |&gt; \n  mutate(hjust = c())\n\n# selecciono dos casos extremos, de muchas presentaciones con poca plata,\n# y pocas presentaciones con mucha plata\nnps &lt;- e |&gt; \n  filter(agency_name == \"National Park Service\")\n\nnps_cantidad &lt;- nps$cantidad |&gt; \n  gt::vec_fmt_number(sep_mark = \".\", decimals = 0, dec_mark = \",\")\n\nnps_ratio &lt;- nps$ratio |&gt; \n  gt::vec_fmt_number(sep_mark = \".\", decimals = 0, dec_mark = \",\")\n\nafo &lt;- e |&gt; \n  filter(agency_name == \"Air Force Office of Scientific Research\")\n\nafo_cantidad &lt;- afo$cantidad |&gt; \n  gt::vec_fmt_number(sep_mark = \".\", decimals = 0, dec_mark = \",\")\n\nafo_ratio &lt;- afo$ratio |&gt; \n  gt::vec_fmt_number(sep_mark = \".\", decimals = 0, dec_mark = \",\")\n\n# figura ------------------------------------------------------------------\n\n# tpitulo & subt√≠tulo\nmi_title &lt;- \"Subvenciones by *grants.gov*\"\nmi_sub &lt;- glue(\n  \"Cuantas m√°s oportunidades de subvenci√≥n ofrece un organismo del \n  Gobierno de&lt;br&gt;**EEUU**, menor es el monto disponible. *{nps$agency_name}* \n  present√≥ {nps_cantidad}&lt;br&gt;oportunidades de financiamiento,\n  con un valor medio de USD $*{nps_ratio}*. En cambio,&lt;br&gt;en solo {afo_cantidad}\n  veces, *{afo$agency_name}* ofreci√≥ USD $*{afo_ratio}*.\")\n\n# figura\ng &lt;- d |&gt; \n  mutate(tipo = agency_name %in% e$agency_name) |&gt; \n  ggplot(aes(cantidad, ratio, color = tipo, alpha = tipo)) +\n  geom_point(size = 8, show.legend = FALSE) +\n  geom_text_repel(\n    data = e, aes(cantidad, ratio, label = label), inherit.aes = FALSE,\n    hjust = 0, color = c5, seed = 2024, nudge_y = .175, family = \"ubuntu\",\n    size = 5) +\n  scale_x_log10(\n    labels = scales::label_number(decimal.mark = \",\", big.mark = \".\")) +\n  scale_y_log10(\n    breaks = c(1e5, 1e6, 10e6, 100e6),\n    labels = glue(\"USD {c('0,1', '1', '10', '100')}M\")) +\n  scale_color_manual(values = c(c2, c3)) +\n  scale_alpha_manual(values = c(.7, 1)) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = mi_title,\n    subtitle = mi_sub,\n    x = \"# de oportunidades\",\n    y = \"$ estimado, por oportunidad\",\n    caption = mi_caption) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(15, 32, 15, 12),\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    plot.title = element_markdown(\n      size = 62, color = c5, family = \"lora\", hjust = .5),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 21, color = c3, margin = margin(5, 0, 25, 0),\n      lineheight = unit(1.1, \"line\"), hjust = .5),\n    plot.caption = element_markdown(color = c2, family = \"ubuntu\", size = 12),\n    axis.text = element_text(family = \"victor\", color = c4, size = 15),\n    axis.text.x = element_text(hjust = 1),\n    axis.text.y = element_text(vjust = 0),\n    axis.title.x = element_text(\n      family = \"ubuntu\", size = 22, hjust = 1, color = c5, \n      margin = margin(20, 0, 20, 0)),\n    axis.title.y = element_text(\n      family = \"ubuntu\", size = 22, hjust = 1, color = c5, \n      margin = margin(0, 20, 0, 20)),\n    panel.grid.minor = element_blank(),\n    panel.grid.major = element_line(\n      color = c2, linewidth = .3, linetype = \"8f\")\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_40/viz.png\",\n  width = 30,\n  height = 35,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_40/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 40"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_17.html",
    "href": "tidytuesday/2023/semana_17.html",
    "title": "Semana 17",
    "section": "",
    "text": "Marat√≥n de Londres.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggpath)\nlibrary(glue)\n\n# fuentes -----------------------------------------------------------------\n\nfondo &lt;- \"#2e233c\"\ncol1 &lt;- \"#b86092\"\ncol2 &lt;- \"#df9ed4\"\ncol3 &lt;- \"#574571\"\n\n# t√≠tulo\nfont_add_google(name = \"Bonheur Royale\", family = \"royale\", db_cache = FALSE)\n# subt√≠tulo\nfont_add_google(name = \"Anuphan\", family = \"anuphan\", db_cache = FALSE)\n# texto vertical\nfont_add_google(name = \"Cutive Mono\", family = \"cutive\", db_cache = FALSE)\n# texto horizontal\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = FALSE)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# √≠conos\nfont_add(\"fa-reg\", \"icon/Font Awesome 6 Free-Regular-400.otf\")\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solid\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{col2};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 17&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{col2};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{col2};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# √≠cono de correr\ncorrer &lt;- \"&lt;span style='font-family:fa-solid;'&gt;&#xf70c;&lt;/span&gt;\"\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-04-25/readme.md\")\n\nwinners &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-04-25/winners.csv') |&gt; \n  janitor::clean_names()\nlondon_marathon &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-04-25/london_marathon.csv') |&gt; \n  janitor::clean_names()\n\n# arreglo de los datos\n# me interesa la relaci√≥n entre los que inician la marat√≥n y los que la terminan\ndatos &lt;- london_marathon |&gt; \n  drop_na(finishers, starters) |&gt; \n  mutate(rel = finishers/starters*100) |&gt; \n  filter(rel &gt; 80) |&gt; \n  mutate(a√±o = year(date)) |&gt; \n  mutate(icon = correr)\n\n# figura ------------------------------------------------------------------\n\n# texto subt√≠tulo\nsubtitulo &lt;- tibble(\n  a√±o = 1995,\n  rel = 93,\n  label = glue(\n    \"La &lt;span style='color:{col2};'&gt;**Marat√≥n de Londres**&lt;/span&gt; se realiza todos \n    los a√±os desde &lt;span style='color:{col2};'&gt;**{min(datos$a√±o)}**&lt;/span&gt;. El \n    porcentaje (&lt;span style='color:{col2};'&gt;**{correr}**&lt;/span&gt;) de corredores \n    que terminan la carrera del total de participantes siempre se mantuvo sobre \n    el &lt;span style='color:{col2};'&gt;**90%**&lt;/span&gt; (con excepci√≥n de la primera \n    edici√≥n). Con el pasar de los a√±os, dicho porcentaje fue aumentando, \n    acerc√°ndose al &lt;span style='color:{col2};'&gt;**100%**&lt;/span&gt;. √öltimamente \n    parece haber una leve tendencia a la baja.\"))\n\n# figura\ng1 &lt;- datos |&gt; \n  ggplot(aes(x = a√±o, y = rel)) +\n  # l√≠neas verticales\n  geom_vline(\n    xintercept = seq(1980, 2020, 10), color = col3, linewidth = .15) +\n  # l√≠neas horizontales\n  geom_hline(\n    yintercept = c(90, 100), color = col3, linewidth = 1, linetype = 2) +\n  # tendencia\n  geom_smooth(\n    method = \"loess\", formula = y ~ x, span = 2, color = col3, linewidth = .5,\n    se = FALSE, linetype = 1, lineend = \"round\") +\n  # puntos\n  geom_richtext(\n    aes(label = icon), color = col2, label.color = NA, fill = NA, size = 9) +\n  # subt√≠tulos\n  geom_textbox(\n    data = subtitulo, aes(label = label), box.color = NA, fill = fondo, size = 9,\n    color = col1, hjust = 0, vjust = 1, family = \"anuphan\", \n    width = unit(6, \"inch\")) +\n  # ejes\n  scale_x_continuous(\n    breaks = c(1975, seq(1980, 2020, 10), 2025),\n    labels = c(\"\", seq(1980, 2020, 10), \"\"),\n    limits = c(1975, 2025),\n    expand = c(0, 0)) +\n  scale_y_continuous(\n    breaks = c(90, 100),\n    limits = c(88, 100),\n    labels = scales::label_number(\n      big.mark = \".\", decimal.mark = \",\", suffix = \"%\"),\n    expand = c(0, 0)) +\n  coord_cartesian(clip = \"off\") +\n  labs(title = \"Corre, Londres, Corre\", x = NULL, y = NULL, caption = mi_caption) +\n  # temas\n  theme_minimal() +\n  theme(\n    aspect.ratio = 2,\n    plot.margin = margin(14, 25, 29, 25),\n    plot.background = element_rect(\n      fill = fondo, color = col1, linewidth = 3),\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(\n      size = 120, color = col2, family = \"royale\", hjust = .5,\n      margin = margin(10, 0, 20, 0)),\n    plot.caption = element_markdown(\n      color = col1, size = 20, hjust = -6.6, margin = margin(25, 0, 0, 0)),\n    axis.text = element_markdown(color = col1),\n    axis.text.x = element_markdown(\n      margin = margin(25, 0, 0, 0), family = \"bebas\", size = 60),\n    axis.text.y = element_markdown(vjust = .5, family = \"cutive\",  size = 35),\n    panel.grid = element_blank()\n  )\n\n# guardo\nggsave(\n  plot = g1,\n  filename = \"2023/semana_17/viz.png\",\n  width = 30,\n  height = 61,\n  units = \"cm\",\n  dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_17/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 17"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_44.html",
    "href": "tidytuesday/2023/semana_44.html",
    "title": "Semana 44",
    "section": "",
    "text": "Historias verdaderas y falsas de Snopes.com.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tidytext)\nlibrary(ggVennDiagram)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(ggpath)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#1F78B4\"\nc2 &lt;- \"#E31A1C\"\nc3 &lt;- \"#6A3D9A\"\nc4 &lt;- \"#FF7F00\"\nc5 &lt;- \"#A6CEE3\"\nc6 &lt;- \"#CAB2D6\"\nc7 &lt;- \"#FB9A99\"\nc8 &lt;- \"#FEE0B6\"\nc9 &lt;- \"white\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# t√≠tulo\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\")\n# palabras verdadero/falso\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\nfont_add(\"fa-regular\", \"icon/Font Awesome 6 Free-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 44, \",\n  \"**Snopes.com**&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-10-31/readme.md\")\n\nhorror_articles &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-10-31/horror_articles.csv')\n\n# me interesan las palabras m√°s comunes entre notas falsas y verdaderas, y con\n# un diagrama de Venn para ver cuales coinciden\n\n# palabras comunes (ingl√©s)\nsw &lt;- tm::stopwords()\n\np &lt;- horror_articles |&gt; \n  unnest_tokens(input = title, output = palabra) |&gt; \n  filter(rating %in% c(\"false\", \"true\")) |&gt; \n  count(palabra, rating, sort = TRUE) |&gt; \n  filter(!palabra %in% sw) |&gt; \n  filter(!str_detect(palabra, \"'\")) |&gt; \n  filter(palabra != \"deaths\") |&gt; \n  slice_max(order_by = n, n = 15, by = rating, with_ties = FALSE)\n\n# creo una lista para el diagrama de Venn\np_lista &lt;- list(\n  FALSO = p |&gt; filter(rating == \"false\") |&gt; pull(palabra),\n  VERDADERO = p |&gt; filter(rating == \"true\") |&gt; pull(palabra))\n\nvenn &lt;- Venn(p_lista)\ndata &lt;- process_data(venn)\n\n# obtengo las coordenadas del centro de cada porci√≥n del diagrama de Venn\nvv &lt;- venn_region(data) |&gt; \n  unnest(item) |&gt; \n  mutate(cent = st_centroid(geometry)) |&gt; \n  st_drop_geometry() |&gt; \n  st_as_sf() %&gt;%\n  mutate(eje_x = st_coordinates(.)[, 1]) %&gt;%\n  mutate(eje_y = st_coordinates(.)[, 2])\n\n# agrego un movimiento horizontal aleatorio, \n# por cada regi√≥n del diagrama de Venn\nset.seed(2023)\nvv_falso &lt;- vv |&gt; \n  filter(name == \"FALSO\") %&gt;%\n  mutate(eje_y = seq(300, 700, length.out = nrow(.))) |&gt; \n  mutate(eje_x = eje_x + runif(n(), -40, 40)) |&gt; \n  st_drop_geometry() |&gt; \n  st_as_sf(coords = c(\"eje_x\", \"eje_y\"))\n  \nvv_verdadero &lt;- vv |&gt; \n  filter(name == \"VERDADERO\") %&gt;%\n  mutate(eje_y = seq(300, 700, length.out = nrow(.))) |&gt; \n  mutate(eje_x = eje_x + runif(n(), -40, 40)) |&gt; \n  st_drop_geometry() |&gt; \n  st_as_sf(coords = c(\"eje_x\", \"eje_y\"))\n\nvv_vf &lt;- vv |&gt; \n  filter(name == \"FALSO..VERDADERO\") %&gt;%\n  mutate(eje_y = seq(400, 600, length.out = nrow(.))) |&gt; \n  mutate(eje_x = eje_x + runif(n(), -20, 20)) |&gt; \n  st_drop_geometry() |&gt; \n  st_as_sf(coords = c(\"eje_x\", \"eje_y\"))\n\n# corrijo HIV\nvv2 &lt;- bind_rows(vv_falso, vv_verdadero, vv_vf) |&gt; \n  mutate(item = str_to_sentence(item)) |&gt; \n  mutate(name = str_to_upper(name)) |&gt; \n  mutate(item = if_else(item == \"Hiv\", \"HIV\", item))\n\n\n# figura ------------------------------------------------------------------\n\n# t√≠tulo y subt√≠tulo\nmi_tit &lt;- glue(\n  \"Historias de terror&lt;br&gt;\",\n  \"*¬øverdaderas o falsas?*\")\n\nmi_sub &lt;- glue(\n  \"El sitio web **Snopes.com** cataloga sus notas en&lt;br&gt;\",\n  \"*verdaderas* o *falsas*, ¬øpero qu√© las diferencian?&lt;br&gt;\",\n  \"Se tomaron las 15 palabras m√°s comunes de los&lt;br&gt;\",\n  \"titulares y se arm√≥ el siguiente diagrama de Venn.\")\n\n# logo\nlogo &lt;- \"2023/semana_44/logo.png\"\nlogo_tbl &lt;- tibble(x = 210, y = -Inf, label = glue(\"&lt;img src={logo} width='100'&gt;\"))\n\n# figura\ng &lt;- ggplot() +\n  # regiones\n  geom_sf(\n    aes(fill = name), data = venn_region(data), color = NA,\n    show.legend = FALSE) +\n  # l√≠nea punteada\n  geom_sf(\n    size = 2, lty = \"dashed\", color = c9, data = venn_setedge(data),\n    show.legend = FALSE) +\n  # t√≠tulo de cada regi√≥n\n  geom_sf_text(\n    aes(label = name), data = venn_setlabel(data), family = \"ubuntu\", \n    color = c(c1, c2), size = 10, nudge_y = -20) +\n  # verdadero/falso\n  geom_sf_text(\n    data = vv2, aes(label = item, color = name), show.legend = FALSE, size = 7,\n    family = \"victor\", fontface = \"bold\") +\n  geom_richtext(\n    data = logo_tbl, aes(x, y, label = label), vjust = 0, fill = NA, \n    label.color = NA) +\n  annotate(\n    geom = \"richtext\", x = 510, y = 800, hjust = 0, vjust = -.45, label = mi_sub,\n    size = 6, family = \"ubuntu\", fill = c4, label.color = NA, \n    color = c9) +\n  scale_fill_manual(values = c(c5, c6, c7)) +\n  scale_color_manual(values = c(c1, c3, c2)) +\n  labs(title = mi_tit, caption = mi_caption) +\n  coord_sf(clip = \"off\") +\n  theme_void() +\n  theme(\n    plot.margin = margin(2.8, 0, 2.8, 0),\n    plot.background = element_rect(\n      fill = c8, color = c3, linewidth = 3),\n    plot.title = element_markdown(\n      size = 50, family = \"bebas\", hjust = 0, color = c4,\n      margin = margin(15, 0, 5, 15)),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 12, color = c1, margin = margin(5, 10, 5, 0))\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_44/viz.png\",\n  width = 30,\n  height = 27,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_44/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 44"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_52.html",
    "href": "tidytuesday/2023/semana_52.html",
    "title": "Semana 52",
    "section": "",
    "text": "D√≠as y horas sin actividad en CRAN.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#E05E35\"\nc2 &lt;- \"#AF141F\"\nc3 &lt;- \"#F7BD6E\"\nc4 &lt;- \"#EF9352\"\nc5 &lt;- \"#FFE98C\"\nc6 &lt;- \"#2E141E\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# horas, d√≠as\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# t√≠tulos de eje, t√≠tulo\nfont_add_google(name = \"Source Serif 4\", family = \"source\", db_cache = FALSE)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 52. \",\n  \"Historical Trends in R Package Structure and Interdependency on CRAN,&lt;br&gt;\",\n  \"**Mark Padgham** & **Noam Ross**&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-12-26/readme.md\")\n\ncran_20221122 &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-26/cran_20221122.csv')\n\n# me interesa saber los d√≠as y horarios en los que NO hay paquetes subidos a \n# CRAN, los momentos en el a√±o en los que los desarrolladores descansan (?)\n\nd &lt;- cran_20221122 |&gt;\n  select(date) |&gt;\n  mutate(\n    mes = month(date),\n    dia = day(date),\n    hora = hour(date)) |&gt;\n  mutate(fecha = ymd(glue(\"2020-{mes}-{dia}\"))) |&gt;\n  count(fecha, hora) |&gt;\n  mutate(\n    mes = format(fecha, \"%B\") |&gt; str_to_upper(),\n    dia = day(fecha)) |&gt;\n  mutate(mes = fct_reorder(mes, month(fecha)))\n\nd_na &lt;- d |&gt; \n  complete(mes, dia, hora) |&gt; \n  filter(is.na(n)) |&gt; \n  mutate(n = if_else(is.na(n), 1, 0)) |&gt; \n  mutate(fecha = ymd(glue(\"2020-{mes}-{dia}\"))) |&gt; \n  drop_na(fecha)\n\n# figura ------------------------------------------------------------------\n\n# t√≠tulo y subt√≠tulo\nmi_title &lt;- glue(\"El descanso de &lt;span style='color:white'&gt;CRAN&lt;/span&gt;\")\n\nmi_subtitle &lt;- glue(\n  \"D√≠as y horas con actividad nula en **CRAN**, el repositorio central de \",\n  \"&lt;b style='font-family:victor;'&gt;R&lt;/b&gt;. Durante la madrugada&lt;br&gt;\",\n  \"y a fin de a√±o son los momentos en los que los \",\n  \"desarrolladores no publican sus productos.\")\n\n# funci√≥n que agrega ceros delante de los n√∫meros\nf_ceros &lt;- function(x) {\n  if (nchar(x) == 1) {\n    y &lt;- glue(\"0{x}\")\n  } else {y &lt;- glue(\"{x}\")}\n  \n  return(as.character(y))\n}\n\n# valores de ejes\nrango_x &lt;- seq(0, 24, 3)\nrango_y &lt;- c(1, seq(3, 30, 3))\n\n# figura\ng &lt;- ggplot(d_na, aes(hora, dia, fill = n)) +\n  geom_tile(color = c1, linewidth = .5) +\n  facet_wrap(vars(mes), nrow = 3, scales = \"free\") +\n  scale_x_continuous(\n    expand = c(0, 0), breaks = rango_x, \n    labels = list_c(map(rango_x, f_ceros)),\n    sec.axis = dup_axis(guide = guide_axis(position = \"top\"))) +\n  scale_y_continuous(\n    expand = c(0, 0), limits = c(.5, 31.5), breaks = rango_y,\n    labels = list_c(map(rango_y, f_ceros)),\n    sec.axis = dup_axis()) +\n  scale_fill_gradient(low = c2, high = c2) +\n  labs(\n    x = \"Hora &lt;span style='font-size:30pt'&gt;‚Üí&lt;/span&gt;\", \n    y = \"&lt;span style='font-size:30pt'&gt;‚Üë&lt;/span&gt;&lt;br&gt;D√≠a\", \n    title = mi_title,\n    subtitle = mi_subtitle,\n    caption = mi_caption) +\n  coord_cartesian(clip = \"off\") +\n  theme_void() +\n  theme(\n    plot.background = element_rect(\n      fill = c6, color = scales::muted(c2, l = 2), linewidth = 3),\n    plot.margin = margin(rep(10, 4)),\n    plot.title = element_markdown(\n      size = 75, family = \"source\", color = c5, hjust = .5),\n    plot.subtitle = element_markdown(\n      color = c3, family = \"ubuntu\", margin = margin(b = 15), size = 18, \n      hjust = .5),\n    plot.caption = element_markdown(\n      color = c4, family = \"ubuntu\", size = 12),\n    panel.grid = element_blank(),\n    panel.background = element_blank(),\n    panel.spacing.x = unit(0, \"line\"),\n    panel.spacing.y = unit(.3, \"line\"),\n    panel.ontop = FALSE,\n    legend.position = \"none\",\n    axis.title.x.bottom = element_markdown(\n      hjust = 0, color = c4, size = 20, family = \"source\", \n      margin = margin(t = 10)),\n    axis.title.y.left = element_markdown(\n      vjust = 0, color = c4, size = 20, family = \"source\",\n      margin = margin(r = 10)),\n    axis.line = element_line(color = c1, linewidth = .5),\n    axis.text.x.bottom = element_text(\n      color = c5, family = \"victor\", hjust = .5, size = 11, \n      margin = margin(t = 3)),\n    axis.text.y.left = element_text(\n      color = c5, family = \"victor\", hjust = .5, size = 11, \n      margin = margin(r = 3, l = 3)),\n    axis.text.x.top = element_blank(),\n    axis.text.y.right = element_blank(),\n    strip.text = element_text(\n      color = c5, size = 25, family = \"ubuntu\", margin = margin(b = 5),\n      hjust = 0),\n    strip.placement = \"outside\")\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_52/viz.png\",\n  width = 30,\n  height = 37,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_52/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 52"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_28.html",
    "href": "tidytuesday/2023/semana_28.html",
    "title": "Semana 28",
    "section": "",
    "text": "Valores de anomal√≠a de temperatura de la superficie terrestre.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuentes -----------------------------------------------------------------\n\n# colores\nc1 &lt;- \"grey30\"\nc2 &lt;- \"grey70\"\nc3 &lt;- \"white\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# anomal√≠as de temperatura\nfont_add_google(name = \"Inconsolata\", family = \"inconsolata\")\n# a√±os\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\")\n# t√≠tulo\nfont_add_google(name = \"Gloock\", family = \"gloock\", db_cache = FALSE)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 28, GISS Surface Temperature Analysis&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-07-11/readme.md\")\n\nglobal_temps &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-07-11/global_temps.csv')\n\n# elijo las anomal√≠a anual (j_d)\nd &lt;- global_temps |&gt; \n  janitor::clean_names() |&gt; \n  select(year, j_d) |&gt; \n  drop_na()\n\n# figura ------------------------------------------------------------------\n\n# valores de anomal√≠a de temperatura formateados\nanom &lt;- tibble(j_d = seq(-.50, 1.25, .50)) |&gt; \n  mutate(label = gt::vec_fmt_number(j_d, decimals = 1, pattern = \"{x}¬∞C\", sep_mark = \".\", dec_mark = \",\"))\n\n# t√≠tulo de la figura\ntitulo &lt;- tibble(\n  x = 1890,\n  y = 1,\n  label = \"Anomal√≠a de temperatura&lt;br&gt;superficial global\"\n)\n\n# subt√≠tulo de la figura\nsubtitulo &lt;- tibble(\n  x = 1890,\n  y = .85,\n  label = \"Las desviaciones se consideran a&lt;br&gt;partir de la media entre 1951-1980.\"\n)\n\n# figura\ng &lt;- ggplot(data = d, aes(x = year, y = j_d)) +\n  # fondo de anomal√≠as\n  geom_raster(aes(y = 1, fill = j_d)) +\n  geom_raster(aes(y = 0, fill = j_d)) +\n  geom_raster(aes(y = -1, fill = j_d)) +\n  # horizontales de anomal√≠a de temperatura\n  geom_hline(yintercept = anom$j_d, color = c2, linetype = 3, linewidth = .3) +\n  # etiquetas de anomal√≠as de temperatura\n  geom_text(\n    data = anom, aes(x = 1880, y = j_d, label = label), inherit.aes = FALSE,\n    angle = 0, hjust = 0, vjust = 0, color = \"gold\", family = \"inconsolata\", size = 7) +\n  # anomal√≠as de temperatura\n  geom_line(linewidth = 1.5, color = \"white\", lineend = \"round\") +\n  geom_line(linewidth = 1, color = c2, lineend = \"round\") +\n  geom_line(linewidth = .25, color = \"black\", lineend = \"round\") +\n  # t√≠tulo\n  geom_richtext(\n    data = titulo, aes(x = x, y = y, label = label), \n    family = \"gloock\", size = 12, hjust = 0, vjust = .5, fill = alpha(c1, .6),\n    label.color = NA, color = c3) +\n  # subt√≠tulo\n  geom_richtext(\n    data = subtitulo, aes(x = x, y = y, label = label), \n    family = \"ubuntu\", size = 7, hjust = 0, vjust = .5, fill = alpha(c1, .6),\n    label.color = NA, color = c3) +\n  # maual\n  scale_fill_viridis_c(option = \"inferno\") +\n  # ejes\n  scale_x_continuous(breaks = seq(1800, 2020, 20)) +\n  labs(x = NULL, y = NULL, caption = mi_caption) +\n  coord_cartesian(expand = FALSE, ylim = c(-.55, 1.1), clip = \"on\") +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(67, 67, 15, 67),\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    plot.caption.position = \"plot\",\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c2, size = 11, margin = margin(15, 0, 0, 0)),\n    axis.text.x = element_text(\n      color = \"gold\", family = \"bebas\", hjust = 0, size = 30),\n    axis.ticks.x = element_line(color = \"black\", linewidth = .75),\n    axis.ticks.length.x = unit(.2, \"line\"),\n    legend.position = \"none\",\n    panel.grid = element_blank()\n  )\n\n# guardo\nggsave(\n    plot = g,\n    filename = \"2023/semana_28/viz.png\",\n    width = 30,\n    height = 30,\n    units = \"cm\",\n    dpi = 300\n  )\n\n# abro\nbrowseURL(\"2023/semana_28/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 28"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_42.html",
    "href": "tidytuesday/2023/semana_42.html",
    "title": "Semana 42",
    "section": "",
    "text": "Identificar el cuadrante emocional de las canciones de Taylor Swift.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores\n# scales::show_col(tayloRswift::swift_palettes$lover)\nc1 &lt;- \"#76BAE0\"\nc2 &lt;- \"#0E3D5B\"\nc3 &lt;- \"#B8396B\"\nc4 &lt;- \"#FFD1D7\"\nc5 &lt;- \"grey10\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# ejes, explicaciones\nfont_add_google(name = \"Victor Mono\", family = \"victor\")\n# esquina (sentimientos)\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\")\n# Taylor Swift\nfont_add_google(name = \"Pattaya\", family = \"pattaya\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"&lt;b&gt;{{tidytuesdayR}}&lt;/b&gt;&lt;/span&gt; semana 42. \",\n  \"&lt;span style='font-family:victor'&gt;{{taylor}}&lt;/span&gt;, \",\n  \"**W. Jake Thompson**&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-10-17/readme.md\")\n\ntaylor_all_songs &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-10-17/taylor_all_songs.csv')\n\n# origen de la idea del plano\nbrowseURL(\"https://medium.com/@gregory2/visualizing-gorillaz-in-r-how-to-analyze-artists-using-spotifyr-ebae3e05491b\")\n\n# me interesa analizar todas las canciones (que pertenezcan a alg√∫n √°lbum),\n# de acuerdo a su valencia (positividad) y energ√≠a (intensidad/actividad)\n# en base a esos dos par√°metros, puedo establecer un plano de coordenadas\n# que tiene en las esquinas cuatro sentimientos: enojo, felicidad, tristeza y\n# tranquilidad\n\n# explicaci√≥n de c/feature\nbrowseURL(\"https://developer.spotify.com/documentation/web-api/reference/get-several-audio-features\")\n\n# √°lbums que me interesan\nalbum_tay &lt;- c(\n  \"Taylor Swift\", \"Fearless (Taylor's Version)\", \"Speak Now\", \"1989\", \"evermore\",\n  \"Red (Taylor's Version)\", \"reputation\", \"Lover\", \"folklore\", \"Midnights\",\n  \"The Taylor Swift Holiday Collection\")\n\n# convierto el vector de nombres de √°lbum a factor\nalbum_select &lt;- taylor_all_songs |&gt; \n  select(album_release, album_name) |&gt; \n  filter(album_name %in% album_tay) |&gt; \n  drop_na() |&gt; \n  mutate(album_name = fct_reorder(album_name, album_release)) |&gt; \n  mutate(album_name = fct_rev(album_name)) |&gt; \n  distinct(album_name) |&gt; \n  pull()\n\n# todas las canciones\nd &lt;- taylor_all_songs |&gt; \n  select(album_name, track_name, valence, energy) |&gt; \n  filter(album_name %in% album_tay) |&gt; \n  drop_na() |&gt; \n  mutate(album_name = fct(album_name, levels = as.character(album_select))) |&gt; \n  mutate(album_name = str_to_upper(album_name))\n\n# canciones extremas de sentimientos\n# calculo la distancia entre los puntos y el centro del cuadrante\n# divido por cuadrante y obtengo un representante extremo por cada sentimiento\n# contenta\nd_contenta &lt;- d |&gt; \n  filter(between(valence, .5, 1) & between(energy, .5, 1)) |&gt; \n  mutate(distancia = sqrt((valence - .5)^2 + (energy - .5)^2)) |&gt; \n  slice_max(order_by = distancia, n = 1)\n\n# enojada\nd_enojada &lt;- d |&gt; \n  filter(between(valence, 0, .5) & between(energy, .5, 1)) |&gt; \n  mutate(distancia = sqrt((valence - .5)^2 + (energy - .5)^2)) |&gt; \n  slice_max(order_by = distancia, n = 1)\n\n# triste\nd_triste &lt;- d |&gt; \n  filter(between(valence, 0, .5) & between(energy, 0, .5)) |&gt; \n  mutate(distancia = sqrt((valence - .5)^2 + (energy - .5)^2)) |&gt; \n  slice_max(order_by = distancia, n = 1)\n\n# tranquila\nd_tranquila &lt;- d |&gt; \n  filter(between(valence, .5, 1) & between(energy, 0, .5)) |&gt; \n  mutate(distancia = sqrt((valence - .5)^2 + (energy - .5)^2)) |&gt; \n  slice_max(order_by = distancia, n = 1)\n\n# sentimientos extremos\nd_extremos &lt;- bind_rows(d_contenta, d_enojada, d_triste, d_tranquila)\n\n# figura ------------------------------------------------------------------\n\n# paleta de colores para los puntos (canciones)\npaleta &lt;- MoMAColors::moma.colors(palette_name = \"Fritsch\")\n\n# colores p/c √°lbum\nalbum_color &lt;- c(\n  rep(paleta[1], 3),\n  rep(paleta[2], 3),\n  rep(paleta[3], 3),\n  rep(paleta[4], 2))\n\n# formas p/c √°lbum\nalbum_shape &lt;- rep(c(21, 22, 23, 24), 3)\n\n# ejes en la mitad del plano\nejes_tbl &lt;- tibble(\n  x = c(0, .5), y = c(.5, 0), xend = c(1, .5), yend = c(.5, 1))\n\n# grilla de l√≠neas de trazos\ngrilla_v &lt;- tibble(\n  x = seq(.1, .9, .1), y = 0, xend = seq(.1, .9, .1), yend = 1)\n\n# etiquetas de sentimientos en las esquinas del plano\nsentimiento &lt;- tibble(\n  label = c(\"enojada\", \"contenta\", \"triste\", \"tranquila\"),\n  x = c(-Inf, Inf, -Inf, Inf),\n  y = c(Inf, Inf, -Inf, -Inf),\n  hjust = c(0, 1, 0, 1),\n  vjust = c(1, 1, 0, 0))\n\n# flechas, que unen tapas de √°lbum p/canciones extremas y los puntos\nflechas_tbl &lt;- tibble(\n  x = d_extremos$valence*1,\n  y = d_extremos$energy*1,\n  xend = c(1.05, .2, .2, .7),\n  yend = c(.85, .9, .1, .15))\n\n# im√°genes de las tapas de √°lbum\ntapa_album &lt;- list.files(\"2023/semana_42/\", pattern = \"ts\", full.names = TRUE)\n\n# etiqueta de las canciones extremas, con nombre de la canci√≥n y la tapa del\n# √°lbum\nimg_album &lt;- tibble(\n  x = flechas_tbl$xend,\n  y = flechas_tbl$yend,\n  track = d_extremos$track_name,\n  path = c(tapa_album[1], tapa_album[4], tapa_album[3], tapa_album[2])) |&gt; \n  mutate(track = str_wrap(track, 18)) |&gt; \n  mutate(track = str_replace_all(track, \"\\n\", \"&lt;br&gt;\")) |&gt; \n  mutate(label = glue(\n    \"&lt;img src='{path}' width='75' /&gt;&lt;br&gt;\",\n    \"&lt;span style='font-family:ubuntu;'&gt;*{track}*&lt;/span&gt;\")) |&gt; \n  mutate(hjust = c(0, 1, 0, 0)) |&gt; \n  mutate(vjust = c(0, 1, 1, 0))\n\n# puntos que representan el √°lbum entero (mediana)\nd_resumen &lt;- d |&gt; \n  summarise(\n    valence = median(valence),\n    energy = median(energy),\n    .by = album_name)\n\n# explicaci√≥n de los ejes del plano\nejes_explic &lt;- tibble(\n  x = c(1, .5, .03, .5),\n  y = c(.5, .97, .5, 0),\n  label = c(\"LETRAnPOSITIVA\", \"M√ÅSnENERG√çA\", \"LETRAnNEGATIVA\", \"MENOSnENERG√çA\"),\n  angle = c(0, 90, 0, 90),\n  hjust = c(1, 1, 0, 0),\n  vjust = c(0, 0, 0, 0))\n\n# explicaci√≥n de los √≠conos peque√±os/grandes\nicono_grande &lt;- \"‚ñ∫ √çconos grandes representannla mediana del √°lbum\"\nicono_peque &lt;- \"‚ñ∫ √çconos peque√±os representanncanciones individuales\"\n\nicono_tbl &lt;- tibble(\n  x = c(.54, .935),\n  y = c(.455, .71),\n  label = c(icono_grande, icono_peque))\n\n# figura\ng &lt;- ggplot(d, aes(valence, energy)) +\n  # grilla\n  geom_vline(\n    xintercept = seq(.1, .9, .1), color = c4, linetype = \"8f\", \n    linewidth = .2) +\n  geom_hline(\n    yintercept = seq(.1, .9, .1), color = c4, linetype = \"8f\", \n    linewidth = .2) +\n  # etiqueta de las esquinas\n  geom_text(\n    data = sentimiento, aes(x, y, label = label, hjust = hjust, vjust = vjust),\n    family = \"bebas\", size = 15, color = c2, inherit.aes = FALSE) +\n  # ejes\n  geom_segment(\n    data = ejes_tbl, aes(x, y, xend = xend, yend = yend), inherit.aes = FALSE,\n    color = c3, linewidth = 1, linetype = 1, alpha = .9,\n    arrow = arrow(\n      angle = 15, length = unit(.75, \"line\"), ends = \"both\", type = \"open\")) +\n  # centro del plano\n  annotate(\n    geom = \"point\", x = .5, y = .5, size = 3, color = c3, shape = 10, \n    alpha = .9, stroke = 1.5) +\n  # explicaci√≥n de los √≠conos\n  geom_text(\n    data = icono_tbl, aes(x, y, label = label), inherit.aes = FALSE,\n    color = c2, hjust = 0, vjust = 1, family = \"victor\", size = 3) +\n  # explicaci√≥n de los ejes del plano\n  geom_text(\n    data = ejes_explic, inherit.aes = FALSE,\n    aes(x, y, label = label, angle = I(angle), hjust = hjust, vjust = vjust),\n    family = \"victor\", fontface = \"italic\", size = 3, color = c2,\n    nudge_x = -.01, nudge_y = .01) +\n  # flechas\n  geom_curve(\n    data = flechas_tbl, aes(x, y, xend = xend, yend = yend), \n    inherit.aes = FALSE, curvature = .15, color = c3,\n    arrow = arrow(angle = 20, length = unit(.4, \"line\"), type = \"closed\")) +\n  # etiqueta de las canciones extremas\n  geom_richtext(\n    data = img_album, aes(x, y, label = label, hjust = hjust, vjust = vjust), \n    inherit.aes = FALSE, fill = c2, label.color = NA, \n    color = c4, label.r = unit(0, \"line\")) +\n  # canciones individuales\n  geom_point(\n    aes(color = album_name, shape = album_name, fill = album_name), \n    size = 2, show.legend = TRUE, stroke = .5) +\n  # √°lbums individuales (medianas)\n  geom_point(data = d_resumen,\n    aes(valence, energy, color = album_name, shape = album_name, \n        fill = album_name),\n    size = 7, alpha = .8, show.legend = FALSE, stroke = 2, color = c5) +\n  # caption\n  annotate(\n    geom = \"richtext\", x = 1.35, y = -.082, label = mi_caption, color = c2,\n    family = \"ubuntu\", size = 3.5, hjust = 1, fill = NA, label.color = NA) +\n  # manual\n  scale_color_manual(values = album_color) +\n  scale_fill_manual(values = alpha(album_color, .4)) +\n  scale_shape_manual(values = album_shape) +\n  coord_cartesian(\n    xlim = c(0, 1), ylim = c(0, 1), expand = FALSE, clip = \"off\") +\n  labs(\n    x = NULL, y = NULL, color = NULL, shape = NULL, fill = NULL,\n    title = \"Taylor Swift\") +\n  guides(\n    color = guide_legend(override.aes = list(size = 4, stroke = 1))) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(21.2, 234, 71.2, 29),\n    plot.background = element_rect(\n      fill = c1, color = c3, linewidth = 3),\n    plot.title = element_text(\n      family = \"pattaya\", color = c3, size = 140, hjust = -.5,\n      margin = margin(5, 0, 25, 0)),\n    plot.title.position = \"panel\",\n    panel.grid = element_blank(),\n    legend.text = element_text(family = \"ubuntu\", color = c2, face = \"bold\"),\n    legend.background = element_rect(\n      fill = c1, color = c2, linetype = 3, linewidth = .2),\n    legend.position = c(1.02, .16),\n    legend.margin = margin(0, 3, 2, 0),\n    legend.justification = c(0, 0),\n    axis.text = element_blank()\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_42/viz.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_42/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 42"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_51.html",
    "href": "tidytuesday/2023/semana_51.html",
    "title": "Semana 51",
    "section": "",
    "text": "Relaci√≥n entre popularidad y calificaci√≥n en episodios de Navidad.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#E1C59A\"\nc2 &lt;- \"#E59A52\"\nc3 &lt;- \"#660B1F\"\nc4 &lt;- \"#094568\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# calificaci√≥n IMDB\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 51. \",\n  \"Internet Movie Database&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\nimdb_logo &lt;- glue(\n  \"&lt;span style='font-family:fa-brands; font-size:30pt'&gt;\",\n  \"&#xf2d8;&lt;/span&gt;\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-12-19/readme.md\")\n\nholiday_episodes &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-19/holiday_episodes.csv')\nholiday_episode_genres &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-19/holiday_episode_genres.csv')\n\n# me interesa ver la relaci√≥n entre la popularidad de los episodios y su \n# calificaci√≥n\n\nd &lt;- holiday_episodes |&gt; \n  select(year, num_votes, primary_title, parent_primary_title, average_rating) |&gt; \n  drop_na(year) |&gt; \n  mutate(decada = year - year %% 10) |&gt; \n  mutate(decada = factor(decada))\n\n# destaco el episodio m√°s popular\nd_pop &lt;- d |&gt; \n  slice_max(order_by = num_votes, n = 1) |&gt; \n  mutate(\n    x = 8.5, y = num_votes*.8, xend = average_rating*.99, yend = num_votes) |&gt; \n  mutate(label = glue(\n    \"&lt;span style = 'family-font:ubuntu; font-size: 15pt'&gt;\",\n    \"**{parent_primary_title}**&lt;/span&gt;&lt;br&gt;\",\n    \"&lt;span style = 'family-font:ubuntu; font-size: 12pt'&gt;\",\n    \"*{primary_title}*&lt;/span&gt;\"))\n\n# porcentaje de episodios con puntaje &gt;= a 7\nporcentaje_7 &lt;- d |&gt; \n  mutate(es_bueno = average_rating &gt;= 7) |&gt; \n  reframe(es_bueno_prop = mean(es_bueno)) |&gt; \n  pull() |&gt; \n  gt::vec_fmt_percent(decimals = 0)\n\n# figura ------------------------------------------------------------------\n\n# t√≠tulo y subt√≠tulo\nmi_titulo &lt;- \"Especiales navide√±os&lt;br&gt;en las series\"\nmi_subtitulo &lt;- glue(\n  \"El **{porcentaje_7}** de los episodios de Navidad&lt;br&gt;\",\n  \"de las series tiene un puntaje&lt;br&gt;\",\n  \"en IMDb de **7** o superior.\")\n\n# figura\ng &lt;- ggplot(d, aes(average_rating, num_votes)) +\n  geom_point(size = 5, alpha = .4, color = c3) +\n  geom_curve(\n    data = d_pop, aes(x, y, xend = xend, yend = yend), curvature = -.1,\n    arrow = arrow(angle = 10, length = unit(.7, \"line\"), type = \"closed\"),\n    color = c3) +\n  geom_richtext(\n    data = d_pop, aes(x-.8, y, label = label), color = c4,\n    family = \"ubuntu\", hjust = 0, vjust = 1, fill = c1, label.color = NA) +\n  annotate(\n    geom = \"richtext\", x = 1, y = 9e4, label = mi_titulo, family = \"serif\",\n    color = c3, size = 20, hjust = 0, vjust = 1, lineheight = unit(.8, \"line\"),\n    label.color = NA, fill = alpha(c1, .6)) +\n  annotate(\n    geom = \"richtext\", x = 1, y = 2e4, label = mi_subtitulo, family = \"ubuntu\",\n    color = c4, size = 7, hjust = 0, vjust = 1, lineheight = unit(.9, \"line\"),\n    label.color = NA, fill = alpha(c1, .6)) +\n  scale_x_continuous(\n    breaks = seq(1, 10, 1), limits = c(.9, 10.1), expand = c(0, 0)) +\n  scale_y_log10(\n    breaks = 10^((seq(0, 6, 1))),\n    labels = scales::label_number(big.mark = \".\", decimal.mark = \",\"),\n    limits = c(9, 1.1e5), expand = c(0, 0)) +\n  labs(\n    x = glue(\"Calificaci√≥n {imdb_logo}\"), y = glue(\"Popularidad {imdb_logo}\"),\n    caption = mi_caption) +\n  coord_cartesian(clip = \"off\") +\n  theme_minimal() +\n  theme(\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    plot.caption = element_markdown(family = \"ubuntu\", size = 12, color = c4),\n    panel.grid = element_line(\n      color = c2, linetype = \"ff\", linewidth = .3),\n    panel.grid.minor = element_blank(),\n    axis.title.x = element_markdown(\n      size = 20, hjust = .5, family = \"ubuntu\", color = c4, \n      margin = margin(t = 10)),\n    axis.title.y = element_markdown(\n      size = 20, hjust = .5, family = \"ubuntu\", color = c4, \n      margin = margin(t = 10)),\n    axis.text = element_text(family = \"victor\", size = 15, color = c4))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_51/viz.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_51/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 51"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_31.html",
    "href": "tidytuesday/2023/semana_31.html",
    "title": "Semana 31",
    "section": "",
    "text": "Porcentaje de superficie cubierta por agua en Estados de EEUU.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggrepel)\n\n# fuentes -----------------------------------------------------------------\n\n# colores, Lakota\nc1 &lt;- \"#931E17\"\nc2 &lt;- \"#20235B\"\nc3 &lt;- \"#F0BE3D\"\nc4 &lt;- \"#EDC775\"\n\n# Estados\nfont_add_google(name = \"Lato\", family = \"lato\")\n# procentajes\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# t√≠tulo\nfont_add_google(name = \"Bree Serif\", family = \"bree\", db_cache = FALSE)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 31. **List of states and territories of the United States**, Wikipedia&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-08-01/readme.md\")\n\nstates &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-01/states.csv')\n\n# por c/Estado, me interesa el porcentaje de la superficie cubierta por agua\nd &lt;- states |&gt; \n  transmute(estado = state, agua = water_area_km2/total_area_km2) |&gt; \n  # me quedo con los que tengan al menos 1%\n  filter(agua &gt;= .01) |&gt; \n  # agrego formato a las etiquetas de los Estados\n  mutate(estado = glue(\"&lt;span style='font-family:lato;font-size:15pt;color:white;'&gt;{estado}&lt;/span&gt;\")) |&gt; \n  # ordeno de acuerdo a la fracci√≥n de agua\n  mutate(estado = fct_reorder(estado, agua)) |&gt; \n  # convierto las fracciones a porcentajes, aplico formato\n  mutate(agua_label = gt::vec_fmt_percent(agua, decimals = 1)) |&gt; \n  mutate(agua_label = glue(\"&lt;span style='font-family:victor;font-size:7pt;color:{c4};'&gt;**{agua_label}**&lt;/span&gt;\")) |&gt; \n  # acomodo de acuerdo a la fracci√≥n de agua\n  arrange(agua) |&gt; \n  # agrego nro de fila, para usar como eje vertical en la figura\n  # si no, geom_are() no funciona\n  mutate(fila = row_number()) |&gt; \n  # alterno etiquetas a izquierda y derecha de la superficie\n  mutate(\n    hjust = rep(c(1, 0), length.out = max(fila)), \n    vjust = .5\n    ) |&gt; \n  # alterno la posici√≥n de los Estados y porcentajes en las etiquetas\n  mutate(label = if_else(\n    condition = fila %% 2 != 0,\n    true = glue(\"{agua_label} {estado}\"),\n    false = glue(\"{estado} {agua_label}\")\n  )) |&gt; \n  # alterno espacio extra entre el punto y la etiqueta\n  mutate(extra_x = if_else(\n    condition = fila %% 2 != 0,\n    true = -.0025,\n    false = .0025\n  )) |&gt; \n  mutate(agua_x = agua + extra_x) |&gt; \n  # condiciones especiales para HAWAII\n  mutate(hjust = if_else(\n    condition = str_detect(label, \"Hawaii\"),\n    true = 1,\n    false = hjust\n  )) |&gt; \n  mutate(label = if_else(\n    condition = str_detect(label, \"Hawaii\"),\n    true = glue(\"{agua_label} {estado}\"),\n    false = label\n  )) |&gt; \n  mutate(agua_x = if_else(\n    condition = str_detect(label, \"Hawaii\"),\n    true = agua - extra_x,\n    false = agua_x\n  ))\n\n# vector con los Estados que tienen menos del 1% de agua\nultimos_estados &lt;- states |&gt; \n  transmute(estado = state, agua = water_area_km2/total_area_km2) |&gt; \n  filter(agua &lt; .01) |&gt; \n  pull(estado) |&gt; \n  str_flatten_comma(last = \" y \")\n\n# figura ------------------------------------------------------------------\n\n# t√≠tulo y \ntitulo &lt;- \"Los Estados&lt;br&gt;con m√°s agua\"\n\n# subt√≠tulo, es conveniente hacerlo como tibble, ya que puedo usar \n# geom_textbox(), para facilitar el ancho del texto\nsubtitulo &lt;- glue(\n  \"Se muestran los Estados de **EEUU** que poseen\n  mayor porcentaje de &lt;b style='color:white;'&gt;superficie cubierta por\n  agua&lt;/b&gt;, respecto del total.&lt;br&gt;&lt;br&gt;{ultimos_estados}\n  se omitieron debido a que poseen valores menores al 1%.\")\n\nsubtitulo_tbl &lt;- tibble(\n  x = .2,\n  y = 16,\n  label = subtitulo\n)\n\n# figura\ng &lt;- ggplot(data = d, aes(x = agua, y = fila)) +\n  # √°rea de la derecha\n  geom_ribbon(aes(ymin=0, ymax=fila), fill = c1) +\n  # l√≠nea\n  geom_line(color = \"black\", linetype = 1, linewidth = .25) +\n  geom_line(color = \"white\", linetype = \"88\", linewidth = .25) +\n  # puntos concentricos\n  geom_point(size = 1.5, color = \"white\", shape = 19) +\n  geom_point(size = 1, color = \"black\", shape = 19) +\n  # estados y porcentajes\n  geom_richtext(\n    aes(x = agua_x, label = label, hjust = hjust, vjust = vjust), fill = NA, \n    label.r = unit(0, \"line\"), label.size = 0) +\n  # t√≠tulo\n  annotate(\n    geom = \"richtext\", x = .2, y = 23, hjust = 0, vjust = 1, label = titulo,\n    size = 19, fill = NA, color = c3, label.color = NA, family = \"bree\") +\n  # subt√≠tulo\n  geom_textbox(\n    data = subtitulo_tbl, aes(x = x, y = y, label = label),\n    size = 6, fill = NA, color = c4, box.color = NA, \n    hjust = 0, vjust = 1, width = unit(13, \"cm\")) +\n  # caption\n  annotate(\n    geom = \"richtext\", x = .4, y = 2, hjust = 1, vjust = 1, label = mi_caption,\n    size = 3.5, fill = NA, color = \"white\", label.color = NA, family = \"lato\") +\n  scale_x_continuous(expand = c(0, 0), limits = c(0, max(d$agua)*1.003)) +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, max(d$fila))) +\n  coord_cartesian(clip = \"off\") +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(12, 0, 0, 103),\n    plot.background = element_rect(fill = c2, color = c1, linewidth = 3),\n    panel.background = element_blank(),\n    panel.grid = element_blank()\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_31/viz.png\",\n  width = 30,\n  height = 26.8,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_31/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 31"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_50.html",
    "href": "tidytuesday/2023/semana_50.html",
    "title": "Semana 50",
    "section": "",
    "text": "Calificaciones de pel√≠culas navide√±as, por g√©nero.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#CC3A6A\"\nc2 &lt;- \"grey90\"\nc3 &lt;- \"#100A2C\"\nc4 &lt;- \"white\"\nc5 &lt;- \"#DBB1D3\"\nc6 &lt;- \"#100A2C\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# calificaci√≥n IMDB y a√±o\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# t√≠tulo\nfont_add_google(name = \"Mountains of Christmas\", family = \"christmas\", db_cache = FALSE)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 50. \",\n  \"Internet Movie Database&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\nimdb_logo &lt;- glue(\n  \"&lt;span style='font-family:fa-brands; font-size:30pt'&gt;\",\n  \"&#xf2d8;&lt;/span&gt;\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-12-05/readme.md\")\n\nholiday_movies &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-12/holiday_movies.csv')\nholiday_movie_genres &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-12/holiday_movie_genres.csv')\n\n# me interesa ver la distribuci√≥n de calificaciones de IMDb, por g√©nero\nd_eng &lt;- holiday_movies |&gt; \n  select(-genres) |&gt; \n  full_join(holiday_movie_genres, by = join_by(tconst)) |&gt; \n  filter(title_type == \"movie\") |&gt; \n  select(average_rating, genres) |&gt; \n  mutate(genres = fct_reorder(genres, average_rating)) |&gt;\n  drop_na() |&gt; \n  mutate(m = median(average_rating), .by = genres) |&gt; \n  mutate(n = n(), .by = genres) \n\n# traducci√≥n de los g√©neros de las pe√≠culas\ngeneros_eng &lt;- unique(d_eng$genres) |&gt; sort()\ngeneros_esp &lt;- c(\n  \"Terror\", \"Thriller\", \"Misterio\", \"Acci√≥n\", \"Familiar\", \"Fantas√≠a\", \"Comedia\",\n  \"Ciencia ficci√≥n\", \"Western\", \"Rom√°ntica\", \"Deportes\", \"Policial\", \"Aventura\",\n  \"Drama\", \"Musical\", \"Hist√≥rica\", \"Animada\", \"B√©lica\", \"M√∫sica\", \"Noir\", \n  \"Biograf√≠a\", \"Documental\")\n\nnames(generos_esp) &lt;- generos_eng\n\nd &lt;- d_eng |&gt; \n  mutate(genres = generos_esp[genres]) |&gt; \n  mutate(genres = fct_reorder(genres, average_rating))\n\n# pel√≠culas con mejor puntuaci√≥n, por g√©nero\nd_max &lt;- holiday_movies |&gt; \n  select(-genres) |&gt; \n  full_join(holiday_movie_genres, by = join_by(tconst)) |&gt; \n  filter(title_type == \"movie\") |&gt; \n  mutate(genres = generos_esp[genres]) |&gt;\n  mutate(genres = fct_reorder(genres, average_rating)) |&gt; \n  select(primary_title, year, genres, average_rating) |&gt; \n  drop_na() |&gt; \n  slice_max(average_rating, n = 1, by = genres, with_ties = FALSE) |&gt; \n  mutate(average_rating = str_replace(average_rating, \"\\.\", \",\")) |&gt; \n  mutate(\n    titulo_label = glue(\n      \"&lt;span style='font-family:ubuntu; font-size:13pt; color: white'&gt;\",\n      \"{primary_title}&lt;/span&gt;\")) |&gt; \n  mutate(\n    a√±o_label = glue(\n      \"&lt;span style='font-family: victor; font-size:10pt; color: grey90'&gt;\",\n      \"{year}&lt;/span&gt;\")) |&gt; \n  mutate(puntaje_label = glue(\n    \"&lt;span style='font-family: victor; font-size:10pt'&gt;\",\n    \"**{average_rating}**/10&lt;/span&gt;\")) |&gt; \n  mutate(label = glue(\"{titulo_label} {a√±o_label}&lt;br&gt;{puntaje_label}\"))\n\n# figura ------------------------------------------------------------------\n\n# t√≠tulo y subt√≠tulo\nmi_tit &lt;- \"En Navidad veamos un documental\"\n\nmi_sub &lt;- glue(\n  \"Los **documentales** presentan la mejor calificaci√≥n entre las pel√≠culas \",\n  \"navide√±as. Caso opuesto,&lt;br&gt;las de **terror** son las peores. \",\n  \"Para cada g√©nero se indica la pel√≠cula con el mejor puntaje.\")\n\n# figura\ng &lt;- ggplot(d, aes(average_rating, genres, group = genres)) +\n  geom_richtext(\n    data = d_max, aes(10.2, genres, label = label), hjust = 0, fill = NA, \n    label.color = NA) +\n  geom_point( shape = 20, size = 5, alpha = .3, color = c2) +\n  geom_point(\n    aes(x = m), shape = 18, size = 6, alpha = 1, color = c4) +\n  scale_x_continuous(\n    breaks = seq(1, 10, 1), expand = c(0, 0), limits = c(1, 11)) +\n  labs(\n    title = mi_tit, subtitle = mi_sub, x = glue(\"Calificaci√≥n {imdb_logo}\"), \n    y = NULL, caption = mi_caption) +\n  coord_cartesian(clip = \"off\") +\n  guides(fill = guide_colorsteps(\n    frame.colour = c4, ticks = TRUE, ticks.colour = c4,\n    ticks.linewidth = 3/.pt, frame.linewidth = 1/.pt)) +\n  theme_void() +\n  theme(\n    plot.margin = margin(8.6, 280, 8.6, 5),\n    plot.background = element_rect(\n      fill = c1, color = c2, linewidth = 3),\n    plot.title = element_text(\n      family = \"christmas\", size = 60, color = c4,\n      margin = margin(t = 6)),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 18, color = c6, \n      margin = margin(b = 10, l = 10)),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c2, size = 10, \n      margin = margin(t = 10, r = -270)),\n    aspect.ratio = 1.5,\n    legend.key.height = unit(12, \"mm\"),\n    axis.title.x = element_markdown(\n      size = 20, hjust = .5, family = \"ubuntu\", color = c2, \n      margin = margin(t = 10)),\n    axis.ticks.y = element_blank(),\n    axis.text.x = element_text(\n      family = \"victor\", size = 14, color = c2, face = \"bold\"),\n    axis.text.y = element_text(\n      family = \"ubuntu\", size = 15, hjust = 1, margin = margin(0, 10, 0, 0),\n      color = c6),\n    panel.grid.major.x = element_line(\n      color = c5, linetype = \"ff\", linewidth = .1))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_50/viz.png\",\n  width = 30,\n  height = 32,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_50/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 50"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_46.html",
    "href": "tidytuesday/2023/semana_46.html",
    "title": "Semana 46",
    "section": "",
    "text": "Ventas per c√°pita por el festival Diwali.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(ggpattern)\nlibrary(fontawesome)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(rgeoboundaries)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#FEC200\"\nc2 &lt;- \"#F78608\"\nc3 &lt;- \"white\"\nc4 &lt;- \"#E6172F\"\nc5 &lt;- \"#D20983\"\nc6 &lt;- \"#C301C5\"\nc7 &lt;- \"#EE3711\"\nc8 &lt;- \"grey80\"\nc9 &lt;- \"grey90\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# algoritmos, eje vertical\nfont_add_google(name = \"IBM Plex Mono\", family = \"ibm\", db_cache = FALSE)\n# t√≠tulo\nfont_add_google(name = \"Agbalumo\", family = \"agbalumo\", db_cache = FALSE)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\nfont_add(\"fa-regular\", \"icon/Font Awesome 6 Free-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 46. \",\n  \"Diwali Sales Dataset, \",\n  \"**Saad Haroon**&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-11-14/readme.md\")\n\ndiwali &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-11-14/diwali_sales_data.csv')\n\n# mapa de consumo per c√°pita por cada estado de India\n# 1ro considero sumar el gasto de cada usuario, y luego hacer el promedio por \n# cada estado\n\nd &lt;- diwali |&gt; \n  reframe(\n    prom = sum(Amount, na.rm = TRUE),\n    .by = c(User_ID, State)) |&gt; \n  reframe(\n    prom = sum(prom, na.rm = TRUE)/n(),\n    .by = State) |&gt; \n  rename(estado = State)\n\n# India, como pa√≠s y con sus estados\nindia &lt;- gb_adm1(country = \"India\")\nindia0 &lt;- gb_adm0(country = \"India\")\n\n# cambio de CRS y arreglo los nombres\nindia_sf &lt;- india |&gt; \n  select(estado = shapeName) |&gt; \n  mutate(estado = str_replace_all(estado, \"ƒÅ\", \"a\")) |&gt; \n  st_transform(crs = 7755)\n\n# combino los datos de consumo con el mapa\nd_sf &lt;- full_join(d, india_sf, by = join_by(estado)) |&gt; \n  st_as_sf()\n\n# estados sin datos\nd_na &lt;- d_sf |&gt; \n  filter(is.na(prom)) |&gt; \n  st_as_sf()\n\n# caja como referencia de los estados sin datos\n# ubicaci√≥n\nxmin &lt;- 4400000\nymin &lt;- 2000000\nxmax &lt;- xmin + 200000\nymax &lt;- ymin + 200000\n\ncaja &lt;- st_sfc(\n  st_polygon(\n    list(\n      cbind(c(xmin, xmax, xmax, xmin, xmin), c(ymin, ymin, ymax, ymax, ymin)))), \n  crs = 7755) |&gt; \n  st_as_sf()\n\n# figura ------------------------------------------------------------------\n\n# c√≠rculo alrededor de India\ncirc &lt;- st_centroid(india0) |&gt;\n  st_transform(crs = 7755) |&gt; \n  st_as_sf() |&gt; \n  st_buffer(dist = 1900000, nQuadSegs = 200)\n\n# t√≠tulo y subt√≠tulo\nmi_tit &lt;- \"Diwali\"\nmi_tit2 &lt;- \"El festival de las luces\"\n\nmi_sub &lt;- glue(\n  \"Consumo per c√°pita\",\n  \"en rupias, durante\",\n  \"el festival &lt;b style='color:{c1}'&gt;Dwali&lt;/b&gt;\",\n  \"en **India**.\",\n  .sep = \"&lt;br&gt;\")\n\n# figura\ng &lt;- ggplot() +\n  # c√≠rculo de fondo\n  geom_sf_pattern(\n    data = circ, \n    color = NA, pattern = \"gradient\",\n    pattern_orientation = \"radial\", \n    pattern_fill = c1, # centro\n    pattern_fill2 = c5, # exterior\n    pattern_density = 1) +\n  # India\n  geom_sf(data = d_sf, aes(fill = prom), color = NA) +\n  # estados sin datos\n  geom_sf_pattern(\n    data = d_na, pattern = \"stripe\", show.legend = FALSE, color = NA,\n    fill = c8, pattern_spacing = 0.01, pattern_density = 0.4, \n    pattern_fill = c9, pattern_color  = NA, pattern_angle = 45) +\n  # contorno de los estados\n  geom_sf(data = d_sf, fill = NA, color = \"black\", linewidth = .2) +\n  # caja\n  geom_sf_pattern(\n    data = caja, pattern = \"stripe\", show.legend = FALSE, color = c4,\n    fill = c8, pattern_spacing = 0.01, pattern_density = 0.4, \n    pattern_fill = c9, pattern_color  = NA, pattern_angle = 45,\n    linewidth = .1) +\n  annotate(\n    geom = \"text\", x = xmax+10000, y = ymin, label = \"Estados sinndatos\",\n    hjust = 0, vjust = 0, family = \"ubuntu\", color = \"white\", size = 6) +\n  # t√≠tulo\n  annotate(\n    geom = \"richtext\", x = 3943500, y = 5590000, label = mi_tit, size = 30,\n    family = \"agbalumo\", hjust = .5, vjust = 0, color = c1, fill = NA,\n    label.color = NA) +\n  annotate(\n    geom = \"richtext\", x = 3943500, y = 5670000, label = mi_tit2, size = 10,\n    family = \"agbalumo\", hjust = .5, vjust = 1, color = c9, fill = NA,\n    label.color = NA) +\n  coord_sf(clip = \"off\") +\n  scale_fill_viridis_c(\n    option = \"turbo\", na.value = NA, limits = c(8000, 14000),\n    labels = scales::label_dollar(\n      big.mark = \".\", decimal.mark = \",\", prefix = \"‚Çπ \", scale = 1)) +\n  labs(caption = mi_caption, fill = mi_sub) +\n  guides(\n    fill = guide_colorbar(\n      frame.colour = \"white\", ticks.colour = \"white\", ticks.linewidth = .5)) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(fill = c6, color = c7, linewidth = 3),\n    plot.margin = margin(15.7, 0, 5.7, 0),\n    plot.title = element_text(\n      family = \"playball\", size = 55, color = c1, margin = margin(15, 0, 0, 0)),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c1, margin = margin(0, 10, 10, 0), size = 12),\n    legend.position = c(.05, .05),\n    legend.justification = c(0, 0),\n    legend.text = element_text(\n      hjust = 1, family = \"ibm\", color = \"white\", face = \"bold\", size = 14),\n    legend.title = element_markdown(\n      family = \"ubuntu\", color = \"white\", size = 18, \n      margin = margin(0, 0, 10, 0)),\n    legend.key.height = unit(1.1, \"cm\"))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_46/viz.png\",\n  width = 30,\n  height = 32,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_46/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 46"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_48.html",
    "href": "tidytuesday/2023/semana_48.html",
    "title": "Semana 48",
    "section": "",
    "text": "Rating de los cuatro guionistas con mayor participaci√≥n en Doctor Who.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(datardis)\n\n# fuente ------------------------------------------------------------------\n\n# colores\ncc &lt;- scico::scico(palette = \"devon\", n = 10)\nc1 &lt;- cc[3]\nc2 &lt;- cc[4]\nc3 &lt;- cc[5]\nc4 &lt;- cc[6]\nc5 &lt;- cc[1]\nc6 &lt;- cc[10]\nc7 &lt;- cc[9]\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# n√∫meros, fechas, ranking\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 48. \",\n  \"&lt;b style='font-family:mono;'&gt;{{datardis}}&lt;/b&gt;, \",\n  \"**Jonathan Kitt**&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-11-28/readme.md\")\n\n# guionistas & episodios\ndrwho_writers\ndrwho_episodes &lt;- drwho_episodes |&gt; \n  mutate(rating = as.numeric(rating))\n\n# me interesa el rating que tiene los guionistas que m√°s cap√≠tulos escribieron\n\n# top 4 guinistas con m√°s cap√≠tulos\nescritores_top &lt;- count(drwho_writers, writer, sort = TRUE) |&gt; \n  slice(1:4) |&gt; \n  pull(writer)\n\n# calculo la proporci√≥n de cap√≠tulos escritos por los guionistas top\n\n# guionistas que m√°s cap√≠tulos escribieron\nn_top_gionistas &lt;- drwho_writers |&gt; \n  filter(writer %in% escritores_top) |&gt; \n  distinct(story_number) |&gt; \n  nrow()\n\n# total de cap√≠tulos\nn_tot &lt;- drwho_episodes |&gt; \n  distinct(story_number) |&gt; \n  nrow()\n\nrel &lt;- round(n_top_gionistas/n_tot*100)\n\n# agrego las im√°genes de los guionistas y acomodo respecto del n√∫mero de \n# cap√≠tulos\nd &lt;- inner_join(\n  drwho_episodes, drwho_writers, by = join_by(story_number)) |&gt; \n  select(rating, writer) |&gt; \n  filter(writer %in% escritores_top) |&gt; \n  mutate(writer = fct_reorder(writer, rating)) |&gt; \n  mutate(orden = as.numeric(writer)) |&gt; \n  mutate(foto = glue(\"2023/semana_48/{writer}.jpg\")) |&gt; \n  mutate(label = glue(\"**{writer}**&lt;br&gt;&lt;img src='{foto}' width='120'&gt;\")) |&gt; \n  mutate(label = fct_reorder(label, rating))\n\n# figura ------------------------------------------------------------------\n\n# logo de Doctor Who\nlogo &lt;- \"2023/semana_48/logo.png\"\nlogo_label &lt;- glue(\"&lt;img src='{logo}' width='400'&gt;\")\n\n# subt√≠tulo\nmi_sub &lt;- glue(\n  \"Rating (en millones de espectadores, **Reino Unido**)&lt;br&gt;\",\n  \"de los cuatro **guionistas** con mayor participaci√≥n.&lt;br&gt;\",\n  \"En total escribieron el **{rel}**% de los episodios.\")\n\n# figura\ng &lt;- ggplot(d, aes(writer, rating)) +\n  # puntos\n  geom_dotplot(\n    aes(color = writer, fill = writer), stroke = 1,\n    binaxis = \"y\", stackdir = \"center\", binwidth = .5, show.legend = FALSE) +\n  # fotos de los escritores\n  geom_richtext(\n    aes(y = 74, label = label), vjust = 1, show.legend = FALSE, size = 6,\n    fill = NA, label.color = NA, color = c6, family = \"ubuntu\") +\n  # logo Doctor Who\n  annotate(\n    geom = \"richtext\", x = .5, y = 89, hjust = .26, vjust = 0, \n    label = logo_label, fill = NA, label.color = NA) +\n  # l√≠nea horizontal en la mediana\n  stat_summary(\n    aes(color = writer), geom = \"crossbar\", fun = median, width = .6, \n    show.legend = FALSE) +\n  # valor de la mediana\n  stat_summary(aes(x = orden-.3, y = stage(rating, after_stat = median+.3),\n    label = after_stat(str_replace(median, \"\\.\", \",\"))), geom = \"text\",\n    size = 6, color = c6, hjust = 0, show.legend = FALSE,\n    fun.data = ~ round(data.frame(median = median(.x)), 1), family = \"victor\") +\n  scale_y_continuous(\n    limits = c(68, 91), expand = c(0, 0), breaks = seq(75, 90, 5)) +\n  scale_fill_manual(values = alpha(c(c1, c2, c3, c4), .3)) +\n  scale_color_manual(values = c(c1, c2, c3, c4)) +\n  labs(subtitle = mi_sub, caption = mi_caption) +\n  coord_cartesian(clip = \"off\", xlim = c(.5, 4.5), expand = FALSE) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(100, 22, 0, 22),\n    plot.background = element_rect(fill = c5, color = c1, linewidth = 3),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 20, color = c7, margin = margin(0, 0, 20, 250)),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 12, margin = margin(20, 5, 5, 0), color = c6),\n    panel.grid.major.y = element_line(color = c1, linetype = 2),\n    axis.text.x = element_blank(),\n    axis.text.y = element_text(\n      color = c2, family = \"victor\", vjust = 0, margin = margin(0, 20, 0, 0),\n      size = 13))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_48/viz.png\",\n  width = 30,\n  height = 35,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_48/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 48"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_49.html",
    "href": "tidytuesday/2023/semana_49.html",
    "title": "Semana 49",
    "section": "",
    "text": "Expectativa de vida al nacer en Argentina, y comparaci√≥n con pa√≠ses similares\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(patchwork)\nlibrary(ggflags) # https://github.com/jimjam-slam/ggflags\nlibrary(ggh4x)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"grey80\"\nc2 &lt;- \"grey60\"\nc3 &lt;- \"black\"\nc4 &lt;- \"white\"\nc5 &lt;- \"grey30\"\nc6 &lt;- \"grey90\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# n√∫meros, fechas, ranking\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# n√∫meros, fechas, ranking\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = FALSE)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 49. \",\n  \"Our World in Data&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-12-05/readme.md\")\n\nlife_expectancy &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-12-05/life_expectancy.csv') |&gt; \n  janitor::clean_names()\n\n# me interesa ver la evoluci√≥n de otros pa√≠ses comparados con Argentina,\n# en dos per√≠odos, 1950 y 2020\n\n# rango de edades en 1950 y 2020, para Argentina\nrango &lt;- life_expectancy |&gt; \n  filter(code == \"ARG\" & (year == 1950 | year == 2020)) |&gt; \n  pull(life_expectancy)\n\n# factor para aplicar a las edades de Argentina, y obtener otros pa√≠ses con \n# espectativas de vida cercanas, en 1950 y 2020\nfactor &lt;- .01\n\n# valores de edad en 1950\nmin_inf &lt;- rango[1]*(1-factor)\nmin_sup &lt;- rango[1]*(1+factor)\n\nlife_expectancy |&gt; \n  filter(year == 1950 & between(life_expectancy, min_inf, min_sup)) |&gt; \n  drop_na()\n\n# pa√≠ses a comparar en 1950\np_1950 &lt;- c(\"Argentina\", \"Bulgaria\", \"Malta\", \"Spain\", \"Slovakia\")\n\n# valores de edad en 2020\nmax_inf &lt;- rango[2]*(1-factor)\nmax_sup &lt;- rango[2]*(1+factor)\n\nlife_expectancy |&gt; \n  filter(year == 2020 & between(life_expectancy, max_inf, max_sup)) |&gt; \n  drop_na() |&gt; \n  print(n = 30)\n\n# pa√≠ses a comparar en 2020\np_2020 &lt;- c(\"Argentina\", \"Turkey\", \"Hungary\", \"Malaysia\", \"Saudi Arabia\")\n\n# tibble para 1950\ntbl_1950 &lt;- life_expectancy |&gt; \n  filter(year &gt;= 1950 & entity %in% p_1950) |&gt; \n  mutate(estado = \"inicio\")\n\n# tibble para 2020\ntbl_2020 &lt;- life_expectancy |&gt; \n  filter(year &gt;= 1950 & entity %in% p_2020) |&gt; \n  mutate(estado = \"final\")\n\n# combino y selecciono d√©cadas\nd &lt;- bind_rows(tbl_1950, tbl_2020) |&gt; \n  mutate(estado = fct(estado, levels = c(\"inicio\", \"final\"))) |&gt; \n  filter(year %% 10 == 0)\n\n# figura ------------------------------------------------------------------\n\n# ubicaci√≥n de las banderas\nd_bandera &lt;- d |&gt; \n  filter(\n    (year == 2020 & estado == \"inicio\") | (year == 1960 & estado == \"final\"))\n\n# pa√≠ses involucrados\npaises &lt;- sort(unique(d_bandera$entity))\n\n# traducci√≥n de los nombres de los pa√≠ses \npaises_trad &lt;- c(\n  \"Argentina\", \"Bulgaria\", \"Hungr√≠a\", \"Malasia\", \"Malta\", \"Arabia Saudita\",\n  \"Eslovaquia\", \"Espa√±a\", \"Turqu√≠a\")|&gt; str_c(\"    \")\n\n# obtengo el c√≥digo ISO2C de los pa√≠ses, para poder usar {ggflags}\niso2 &lt;- countrycode::codelist |&gt; \n  select(contains(\"iso\")) |&gt; \n  filter(iso.name.en %in% paises) |&gt; \n  pull(iso2c) |&gt; \n  str_to_lower()\n\n# vector con nombres\nnames(iso2) &lt;- paises\n\n# agrego los c√≥digos de pa√≠s y muevo a la derecha las banderas del 1er panel\nd_bandera_tbl &lt;- d_bandera |&gt; \n  mutate(bandera = iso2[entity]) |&gt; \n  mutate(year = if_else(estado == \"inicio\", year+4, year))\n\n# ejes verticales\neje_vertical &lt;- list(\n  scale_y_continuous(\n    limits = c(60, 85), expand = c(0, 0), breaks = seq(60, 90, 5)),\n  scale_y_continuous(\n    limits = c(40, 80), expand = c(0, 0), breaks = seq(40, 80, 5)))\n\n# rango de edades, Argentina 1950-2020\nrango_label &lt;- gt::vec_fmt_number(\n  rango, decimals = 1, sep_mark = \"\", dec_mark = \",\")\n\n# descripciones\ndesc_tbl &lt;- tibble(\n  x = c(1975, 2020),\n  y = c(rango[1], 62),\n  label = c(\n    glue(\n      \"Cuatro pa√≠ses que en **1950**&lt;br&gt;\",\n      \"ten√≠an casi la misma esperanza&lt;br&gt;\",\n      \"de vida que **Argentina**,&lt;br&gt;\",\n      \"alrededor de {rango_label[1]} a√±os.\"),\n    glue(\n      \"Cuatro pa√≠ses con&lt;br&gt;\",\n      \"similar esperanza de&lt;br&gt;\",\n      \"vida que **Argentina** en&lt;br&gt;\",\n      \"**2020**, aproximadamente&lt;br&gt;\",\n      \"{rango_label[2]} a√±os.\")),\n  estado = c(\"inicio\", \"final\")) |&gt; \n  mutate(estado = fct(estado, levels = c(\"inicio\", \"final\"))) |&gt; \n  mutate(hjust = c(0, 1), vjust = c(0, 1)) |&gt; \n  mutate(xend = c(1953, 2020), yend = c(rango[1], 75))\n\n# edades en 1875 y 1975\nexp_100 &lt;- life_expectancy |&gt; \n  filter(code == \"ARG\" & (year == 1875 | year == 1975)) |&gt; \n  arrange(life_expectancy) |&gt; \n  pull(life_expectancy) |&gt; \n  gt::vec_fmt_number(decimals = 1, sep_mark = \"\", dec_mark = \",\")\n\n# subt√≠tulo\nmi_sub &lt;- glue(\n  \"En 1875, la espectativa de vida al nacer en **Argentina** \",\n  \"era de {exp_100[1]} a√±os.&lt;br&gt;\",\n  \"100 a√±os despu√©s, en 1975, se duplicaba alcanzando los \",\n  \"{exp_100[2]} a√±os.&lt;br&gt;\")\n\n# figura\ng &lt;- ggplot(d, aes(year, life_expectancy, color = entity, fill = entity)) +\n  # puntos y l√≠neas de expectativa de vida\n  geom_line(show.legend = FALSE, linewidth = 2, alpha = 1) +\n  geom_point(size = 2, shape = 23, show.legend = FALSE, stroke = 1,alpha = 1) +\n  geom_point(size = 1.7, show.legend = FALSE, color = c1, shape = 18) +\n  # contorno de las banderas\n  geom_point(\n    data = d_bandera_tbl, aes(year, life_expectancy), size = 14, \n    show.legend = FALSE) +\n  # banderas\n  geom_flag(data = d_bandera_tbl, aes(country = bandera), size = 12) +\n  # aclaraciones\n  geom_richtext(\n    data = desc_tbl, aes(x, y, label = label, hjust = hjust, vjust = vjust), \n    inherit.aes = FALSE, fill = c2, label.color = NA, family = \"ubuntu\",\n    color = c4, size = 5) +\n  # flechas\n  geom_curve(\n    data = desc_tbl, aes(x, y, xend = xend, yend = yend), inherit.aes = FALSE,\n    curvature = .1, arrow = arrow(angle = 20,length = unit(.3, \"line\")),\n    color = c2, arrow.fill = c2) +\n  # punto en la esquina de las aclaraciones\n  geom_point(\n    data = desc_tbl, aes(x, y), inherit.aes = FALSE, size = 2, color = c2) +\n  facet_wrap(vars(estado), nrow = 1, scales = \"free\") +\n  facetted_pos_scales(y = eje_vertical) +\n  scale_x_continuous(breaks = seq(1950, 2020, 10)) +\n  scale_country(labels = paises_trad, breaks = iso2) +\n  MetBrewer::scale_color_met_d(name = \"Redon\") +\n  MetBrewer::scale_fill_met_d(name = \"Redon\") +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    country = NULL, x = NULL, y = NULL, caption = mi_caption, \n    subtitle = mi_sub) +\n  guides(country = guide_legend(nrow = 1)) +\n  theme_minimal() +\n  theme(\n    plot.margin = margin(6.5, 50, 6.5, 40),\n    plot.background = element_rect(\n      fill = c1, color = c5, linewidth = 3),\n    plot.subtitle = element_markdown(\n      size = 22, family = \"ubuntu\", lineheight = unit(1.3, \"line\")),\n    plot.caption.position = \"plot\",\n    plot.caption = element_markdown(color = c4, family = \"ubuntu\", size = 12),\n    panel.background = element_blank(),\n    panel.spacing.x = unit(2,\"line\"),\n    panel.grid.minor = element_blank(),\n    panel.grid = element_line(color = c6, linewidth = .3),\n    aspect.ratio = 2,\n    legend.position = \"bottom\",\n    legend.background = element_rect(fill = c5, color = NA),\n    legend.key = element_blank(),\n    legend.text = element_text(family = \"ubuntu\", color = c4, size = 10),\n    strip.text = element_blank(),\n    axis.text.y = element_text(family = \"victor\", size = 12, color = c5),\n    axis.text.x = element_text(family = \"bebas\", size = 20, color = c5),\n    axis.ticks.x = element_blank())\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_49/viz.png\",\n  width = 30,\n  height = 31.5,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_49/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 49"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_27.html",
    "href": "tidytuesday/2023/semana_27.html",
    "title": "Semana 27",
    "section": "",
    "text": "En el estado de Texas, EE.UU., ubicaci√≥n de sitios hist√≥ricos relacionados con iglesias y cementerios.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(tidytext)\nlibrary(sf)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuentes -----------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#192914\"\nc2 &lt;- \"#1E3D14\"\nc3 &lt;- \"#E7E5CC\"\nc4 &lt;- alpha(\"#FFCD11\", .5)\nc5 &lt;- alpha(\"#B86092\", .5)\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# t√≠tulo\nfont_add_google(name = \"STIX Two Text\", family = \"stix\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 27&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-07-04/readme.md\")\nhistorical_markers &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-07-04/historical_markers.csv')\n\n# sistema de coordenadas de EEUU\ncrs_eeuu &lt;- \"+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs\"\n\n# me interesan los cementerios de Texas\nd &lt;- historical_markers |&gt; \n  # filtro por Texas\n  filter(state_or_prov == \"Texas\") |&gt; \n  # selecciono columnas de coordenadas, t√≠tulo y estado\n  select(title,latitude_minus_s, longitude_minus_w) |&gt; \n  # convierto a min√∫scula\n  mutate(title = str_to_lower(title)) |&gt; \n  # filtro por 'cemetery'\n  filter(str_detect(title, \"church|cemetery\")) |&gt; \n  # divido en Iglesia / Cementerio\n  mutate(sitio = if_else(str_detect(title, \"church\"), \"Iglesia\", \"Cementerio\")) |&gt; \n  # transformo a 'sf'\n  st_as_sf(coords = c(\"longitude_minus_w\", \"latitude_minus_s\"), crs = 4326) |&gt; \n  # convierto a coordenadas de EEUU\n  st_transform(crs = crs_eeuu)\n\n# mapa de los estados de EEUU\nusa &lt;- st_as_sf(maps::map(\"state\", fill = TRUE, plot = FALSE)) |&gt; \n  # convierto a coordenadas de EEUU\n  st_transform(crs = crs_eeuu)\n\n# selecciono Texas\ntexas &lt;- usa |&gt; \n  filter(ID == \"texas\")\n\n# figura ------------------------------------------------------------------\n\n# cantidad de cementerios e iglesias\nn_cementerio &lt;- length(d$sitio[d$sitio == \"Cementerio\"]) |&gt; \n  gt::vec_fmt_number(sep_mark = \".\", dec_mark = \",\", decimals = 0)\n\nn_iglesia &lt;- length(d$sitio[d$sitio == \"Iglesia\"]) |&gt; \n  gt::vec_fmt_number(sep_mark = \".\", dec_mark = \",\", decimals = 0)\n\n# texto descriptivo\ntexto &lt;- tibble(\n  x = -630000,\n  y = -2000000,\n  label = glue(\n    \"Distribuci√≥n geogr√°fica de sitios&lt;br&gt;\n    hist√≥ricos relacionados con&lt;br&gt;\n    &lt;span style='color:#B86092;'&gt;**iglesias**&lt;/span&gt; ({n_iglesia}) y \n    &lt;span style='color:#FFCD11;'&gt;**cementerios**&lt;/span&gt; ({n_cementerio})&lt;br&gt;\n    en el Estado de **Texas**, EE.UU.\"))\n\n# figura\ng &lt;- ggplot() +\n  geom_sf(data = texas, fill = c2, color = c3, linewidth = .05) +\n  geom_sf(\n    data = d, aes(color = sitio), \n    size = 4, alpha = .6, show.legend = FALSE, shape = 18) +\n  geom_richtext(\n    data = texto, aes(x = x, y = y, label = label),\n    color = \"grey90\", label.color = NA, fill = NA, size = 7, hjust = 0,\n    family = \"ubuntu\") +\n  scale_color_manual(values = c(c4, c5)) +\n  labs(caption = mi_caption) +\n  theme_void() +\n  theme(\n    # plot.margin = margin(8, 5, 8, 5),\n    plot.margin = margin(9.3, 5, 9.3, 5),\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    plot.caption = element_markdown(size = 12, color = c4, family = \"ubuntu\")\n  )\n\n# guardo\nggsave(\n    plot = g,\n    filename = \"2023/semana_27/viz.png\",\n    width = 30, \n    height = 29,\n    units = \"cm\",\n    dpi = 300\n  )\n\n# abro\nbrowseURL(\"2023/semana_27/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 27"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_18.html",
    "href": "tidytuesday/2023/semana_18.html",
    "title": "Semana 18",
    "section": "",
    "text": "Roedores de Arizona.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(ggh4x)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggpath)\n\n# fuente ------------------------------------------------------------------\n\n# colores\n# paleta 'Bwenedictus' de MetBrewer\nc1 &lt;- \"#fcebf0\"\nc2 &lt;- \"#f9b4c9\"\nc3 &lt;- \"#b93961\"\nc4 &lt;- \"#9a153d\"\nc5 &lt;- \"#1a318b\"\nc6 &lt;- \"#6996e3\"\n\nfont_add_google(name = \"Share Tech Mono\", family = \"share\") # n√∫meros\nfont_add_google(name = \"Anek Tamil\", family = \"anek\", db_cache = FALSE) # texto gral\nfont_add_google(name = \"Almendra\", family = \"almendra\", db_cache = FALSE) # t√≠tulo\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# √≠conos\nfont_add(\"fa-reg\", \"icon/Font Awesome 6 Free-Regular-400.otf\")\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solid\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 18&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-05-02/readme.md\")\n\nspecies &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-02/species.csv')\n\n# arreglo datos\ndatos &lt;- species |&gt; \n  # selecciono variables de inter√©s\n  select(nombre = commonname, ends_with(\"wgt\"), -juvwgt) |&gt; \n  # renombro removiendo 'wgt'\n  rename_with(~ str_remove(.x, \"wgt\")) |&gt; \n  # divido en RATAS y RATONES\n  mutate(animal = case_when(\n    str_detect(nombre, \"rat\") ~ \"Rata\",\n    str_detect(nombre, \"ouse\") ~ \"Rat√≥n\")) |&gt; \n  # de los nombres de los animales, remuevo 'mouse' y 'rat'\n  mutate(nombre = str_remove(nombre, \"mouse|Mouse|rat\")) |&gt;\n  mutate(nombre = str_trim(nombre)) |&gt; \n  # acomodo el texto\n  mutate(nombre = if_else(animal == \"Rata\", str_wrap(nombre, width = 12), nombre)) |&gt; \n  # ordeno los nombres de acuerdo al peso promedio\n  mutate(nombre = fct_reorder(nombre, mean))\n\n# im√°genes .png de rata y rat√≥n\nbrowseURL(\"https://emojipedia.org/openmoji/\")\n\nlista_i &lt;- list.files(\"2023/semana_18/\",\n                      pattern = \"^i_\",\n                      full.names = TRUE)\n\nroedor &lt;- tibble(min = c(Inf, Inf),\n                 nombre = c(-Inf, -Inf),\n                 animal = c(\"Rata\", \"Rat√≥n\"),\n                 path = lista_i)\n\n# figura ------------------------------------------------------------------\n\n# escalas individuales del eje horizontal\nescalas &lt;- list(\n  # rata\n  scale_x_continuous(breaks = seq(0, 300, 50), limits = c(0, 300)),\n  # rat√≥n\n  scale_x_continuous(breaks = seq(0, 100, 25), limits = c(0, 100)))\n\n# separador de las palabras del t√≠tulo\n# sin este separador queda todo muy pegado, con poco espacio\ns &lt;- glue(\"&lt;span style='color:{c1}'&gt;..&lt;/span&gt;\")\n\n# figura\nggplot(data = datos, aes(x = min, xend = max, y = nombre, yend = nombre)) +\n  # segmento que une max y min\n  geom_segment(color = c2, linewidth = 2, lineend = \"round\") +\n  # min\n  geom_point(aes(x = min), color = c6, size = 4) +\n  # max\n  geom_point(aes(x = max), color = c5, size = 4) +\n  # promedio\n  geom_point(\n    aes(x = mean), shape = \"|\", size = 4, color = c3) +\n  # emoji de rata y rat√≥n\n  geom_from_path(data = roedor, aes(x = min, y = nombre, path = path),\n                 inherit.aes = FALSE, width = 0.3, hjust = 1.25, vjust = .4) +\n  # facetas\n  facet_wrap(~ animal, scales = \"free\") +\n  facetted_pos_scales(x = escalas) +\n  # t√≠tulos\n  labs(x = \"Peso (g)\", y = NULL,\n       title = glue(\"DE{s}RATAS{s}Y{s}RATONES\"),\n       subtitle = glue(\n         \"Tomando datos de **roedores** que habitan el desierto de \n         Arizona (EEUU), se muestran los valores de &lt;span style='color:{c6};'&gt;**peso m√≠nimo**&lt;/span&gt; y\n         &lt;span style='color:{c5};'&gt;**peso m√°ximo**&lt;/span&gt;, para cada especie. Las l√≠neas verticales indican\n         pesos promedio. Se clasificaron los datos entre **ratas** y\n         **ratones**.\"),\n       caption = mi_caption) +\n  # tema\n  theme_minimal() +\n  theme(\n    aspect.ratio = 2,\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 2),\n    plot.title = element_markdown(\n      family = \"almendra\", size = 60, color = c4, hjust = .5),\n    plot.title.position = \"plot\",\n    plot.caption = element_markdown(\n      color = c4, hjust = .4, family = \"anek\", size = 11, \n      margin = margin(20, 0, 0, 0)),\n    plot.subtitle = element_textbox_simple(\n      family = \"anek\", size = 15, color = c3, margin = margin(0, 0, 10, 0)), \n    plot.margin = margin(12, 10, 12, 10),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_blank(),\n    panel.grid.major.x = element_line(color = c2, linewidth = .2),\n    panel.spacing.x = unit(2, \"line\"),\n    axis.text.x = element_text(family = \"share\", size = 17, color = c3),\n    axis.text.y = element_text(family = \"anek\", color = c4, size = 13),\n    axis.title.x = element_markdown(family = \"anek\", size = 23, color = c4),\n    strip.text = element_markdown(color = c4, family = \"anek\", size = 25)\n  )\n\n# guardo\nggsave(\n    filename = \"2023/semana_18/viz.png\",\n    width = 30,\n    height = 28.5,\n    units = \"cm\",\n    dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_18/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 18"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_19.html",
    "href": "tidytuesday/2023/semana_19.html",
    "title": "Semana 19",
    "section": "",
    "text": "Costo asociado al cuidado de beb√©s.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(ggtext)\nlibrary(glue)\nlibrary(showtext)\nlibrary(ggridges)\n\n# fuente ------------------------------------------------------------------\n\n# colores\n# paleta 'Homer1' de MetBrewer\nc1 &lt;- \"#c3f4f6\"\nc2 &lt;- \"#6ad5e8\"\nc3 &lt;- \"#df9ed4\"\nc4 &lt;- \"#16317d\"\nc5 &lt;- \"#a62f00\"\n\n# eje vertical, a√±os\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\")\n# texto gral\nfont_add_google(name = \"Carlito\", family = \"carlito\", db_cache = FALSE)\n# eje horizontal\nfont_add_google(name = \"Inconsolata\", family = \"inconsolata\")\n# t√≠tulo\nfont_add_google(name = \"Noto Serif\", family = \"noto\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 19&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-05-09/readme.md\")\n\nchildcare_costs &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-09/childcare_costs.csv')\ncounties &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-09/counties.csv')\n\n# acomodo los datos\n# selecciono 'infant'\ndatos &lt;- childcare_costs |&gt; \n  select(study_year, ends_with(\"infant\"), mhi_2018) |&gt; \n  pivot_longer(cols = ends_with(\"infant\"),\n               values_to = \"price\",\n               names_to = \"group\") |&gt; \n  separate(group, into = c(\"base\", \"age\"), sep = \"_\") |&gt; \n  mutate(study_year = factor(study_year)) |&gt; \n  select(-age) |&gt; \n  drop_na(price)\n\n# valores de mediana, por 'base' y 'study_year'\nm &lt;- datos |&gt; \n  group_by(study_year, base) |&gt; \n  summarise(price = median(price, na.rm = TRUE)) |&gt; \n  ungroup() |&gt; \n  mutate(label = format(round(price, 1), nsmall = 1)) |&gt; \n  mutate(label = str_replace_all(label, \"\\.\", \",\"))\n\n# figura ------------------------------------------------------------------\n\ng &lt;- ggplot() +\n  # horizontales en gris\n  geom_hline(yintercept = factor(2008:2018), color = c2, linewidth = .5) +\n  # densidad, con fill\n  geom_density_ridges(\n    data = datos, \n    aes(x = price, y = study_year, color = base),\n    alpha = 0, panel_scaling = FALSE, scale = 1, show.legend = FALSE, \n    size = 1) +\n  # punto de mediana\n  geom_text(\n    data = m, \n    aes(x = price, y = study_year, label = \"|\"),\n    size = 3, nudge_y = .05, show.legend = FALSE, color = c2) +\n  # valor de mediana\n  geom_text(\n    data = m, \n    aes(x = price, y = study_year, label = label, color = base),\n    size = 4, nudge_y = .14, family = \"inconsolata\", show.legend = FALSE,\n    fontface = \"bold\") +\n  # manual\n  scale_x_continuous(breaks = seq(0, 500, 100)) +\n  scale_color_manual(values = c(c3, c4)) +\n  labs(x = \"Costo semanal, de tiempo completo (USD, 2018)\", y = NULL,\n       title = \"¬øCu√°nto cuesta cuidar un beb√©?\",\n       subtitle = glue(\n         \"Entre **2008**-**2018** el costo asociado al cuidado de beb√©s (entre reci√©n \n       nacido y los 23 meses) fue aumentando poco a poco en **EE.UU**. Si sucede \n       en la &lt;span style='color:{c3};'&gt;**casa**&lt;/span&gt;, los precios son superiores a \n       si los mand√°s a una &lt;span style='color:{c4};'&gt;**guarder√≠a**&lt;/span&gt;. \n       Se indican los valores de las medianas en cada a√±o.\"),\n       caption = mi_caption) +\n  coord_cartesian(expand = FALSE, xlim = c(0, 500), ylim = c(.95, 11.5),\n                  clip = \"off\") +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1.5,\n    plot.background = element_rect(\n      fill = c1, color = c2, linewidth = 3),\n    plot.title = element_markdown(\n      size = 52, family = \"noto\", color = c4),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_textbox_simple(\n      size = 20, family = \"carlito\", color = c5, margin = margin(25, 0, 36, 0)),\n    plot.caption = element_markdown(\n      size = 15, color = c4, family = \"carlito\", hjust = .4, \n      margin = margin(15, 0, 3, 0)),\n    plot.margin = margin(15, 32, 0, 32),\n    panel.background = element_blank(),\n    panel.grid = element_blank(),\n    panel.grid.major.x = element_line(color = c2, linewidth = .5, linetype = 3),\n    axis.text.y = element_text(\n      size = 40, vjust = 0, family = \"bebas\", color = c5),\n    axis.text.x = element_text(\n      size = 25, family = \"inconsolata\", color = c5),\n    axis.title.x = element_markdown(\n      size = 20, family = \"carlito\", color = c5, margin = margin(15, 0, 0, 0))\n  )\n\n# guardo\nggsave(filename = \"2023/semana_19/viz.png\",\n       width = 30,\n       height = 48,\n       units = \"cm\",\n       dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_19/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 19"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_47.html",
    "href": "tidytuesday/2023/semana_47.html",
    "title": "Semana 47",
    "section": "",
    "text": "Eventos R-Ladies de Argentina.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(sf)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#E8631C\"\nc2 &lt;- \"#E3D885\"\nc3 &lt;- \"white\"\nc4 &lt;- \"#6874AD\"\nc5 &lt;- \"#0D2D4C\"\nc6 &lt;- \"#20222A\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# n√∫meros, fechas, ranking\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# t√≠tulo\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 47. \",\n  \"R-Ladies Chapters: Making talks work for diverse audiences, \",\n  \"**Federica Gazzelloni**&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-11-21/readme.md\")\n\nrladies &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-11-21/rladies_chapters.csv')\n\n# me interesa hacer un mapa con los encuentros de Argentina, en qu√© ciudades, \n# la cantidad, fecha inicial y final\n\n# provincias de Argentina, POSGAR\npcias &lt;- st_read(\"2023/semana_47/pcias_continental.gpkg\")\n\n# ciudades de Argentina donde se realizaron eventos, obtenido de:\nbrowseURL(\"https://rladies.org/\")\n\nciudades &lt;- c(\n  \"bariloche\", \"buenos-aires\", \"cordoba\", \"general-pico\", \"jujuy\", \"mendoza\",\n  \"resistencia-corrientes\", \"santa-fe\", \"santa-rosa\", \"ushuaia\")\n\n# nombres de las ciudades\nciudades_nombres &lt;- c(\n  \"Bariloche\", \"Buenos Aires\", \"Santa Rosa\", \"Mendoza\", \"Santa Fe\", \n  \"Resistencia-Corrientes\", \"General Pico\", \"Ushuaia\", \"C√≥rdoba\", \"Jujuy\")\n\n# coordenadas de las ciudades\nciudad_lon &lt;- c(\n  -71.300000, -58.381944, -64.290556, -68.833333, -60.700000, -58.861760,\n  -63.757766, -68.304444, -64.183333, -65.299444)\nciudad_lat &lt;- c(\n  -41.150000, -34.599722, -36.620278, -32.883333, -31.633333, -27.468502,\n  -35.658688, -54.807222, -31.416667, -24.185556)\n\n# creo un sf con las coordenadas de las ciudades, POSGAR\nciudades_pts &lt;- tibble(\n  ciudad = ciudades_nombres) |&gt; \n  mutate(x = ciudad_lon, y = ciudad_lat) |&gt; \n  st_as_sf(coords = c(\"x\", \"y\")) |&gt; \n  st_set_crs(value = 4326) |&gt; \n  st_transform(crs = st_crs(pcias))\n\n# coordenadas de las ciudades, tibble\nciudades_pts_tbl &lt;- ciudades_pts |&gt; \n  st_coordinates() |&gt; \n  as_tibble()\n  \n# cantidad de eventos, fecha del primer/√∫tlimo evento, nombre de la ciudad, \n# ranking\nciudades_tbl &lt;- rladies |&gt; \n  mutate(chapter = str_remove(chapter, \"rladies-\")) |&gt; \n  filter(chapter %in% ciudades) |&gt; \n  reframe(\n    n = n(),\n    fecha_i = min(date),\n    fecha_f = max(date),\n    .by = chapter) |&gt; \n  arrange(desc(n)) |&gt; \n  mutate(nombre = ciudades_nombres) |&gt; \n  mutate(puesto = row_number())\n\n# longitud de las etiquetas\nder &lt;- 5500000\nizq &lt;- 3600000\n\n# etiquetas por ciudad\nd &lt;- ciudades_tbl |&gt; \n  mutate(fecha_i = format(fecha_i, \"%d/%m/%y\")) |&gt; \n  mutate(fecha_f = format(fecha_f, \"%d/%m/%y\")) |&gt; \n  mutate(label = glue(\n    \"&lt;br&gt;&lt;span style='font-family:victor;font-size:15pt;color:{c3}'&gt;#{puesto}&lt;/span&gt;\",\n    \"&lt;span style='font-family:bebas;font-size:35pt;color:{c2}'&gt;{nombre}&lt;/span&gt;\",\n    \"&lt;span style='font-size:15pt;color:{c3}'&gt; &lt;b style='font-family:victor'&gt;{n}&lt;/b&gt; eventos\",\n    \"Inicio: &lt;b style='font-family:victor'&gt;{fecha_i}&lt;/b&gt;\",\n    \"√öltimo: &lt;b style='font-family:victor'&gt;{fecha_f}&lt;/b&gt;\",\n    \"&lt;/span&gt;\",\n    .sep = \"&lt;br&gt;\")) |&gt; \n  mutate(\n    x = ciudades_pts_tbl$X,\n    y = ciudades_pts_tbl$Y,\n    xend = c(\n      izq, der, 4700000, izq, der, 5000000, der, 3700000, izq, 3900000),\n    yend = c(\n      5411386, 6162069, 5100000, 6347028, 6498473, 7324204, 5400000, 3913285, \n      6524189, 7324204),\n    hjust = c(1, 0, 0, 1, 0, 0, 0, 1, 1, 1),\n    vjust = c(1, 1, 1, 1, 0, 0, 1, 0, 0, 0))\n\n# figura ------------------------------------------------------------------\n\n# logo de R-Ladies Argentina\nlogo &lt;- \"2023/semana_47/logo.png\"\nlogo_label &lt;- glue(\"&lt;img src='{logo}' width='200'&gt;\")\n\n# t√≠tulo\ntit_tbl &lt;- tibble(\n  x = 2800000,\n  y = 5740431,\n  label = glue(\"Encuentros &lt;span style='color:{c3}'&gt;R-Ladies&lt;/span&gt; Argentina\"))\n\n# figura\ng &lt;- ggplot() +\n  # provincias de Argentina\n  geom_sf(data = pcias, fill = c4, color = c1, linewidth = .5) +\n  # l√≠neas entre ciudad y etiqueta\n  geom_segment(\n    data = d, aes(x, y, xend = xend, yend = yend), color = c2,\n    linewidth = .25, linetype = 1) +\n  # puntos de ciudades\n  geom_sf(data = ciudades_pts, color = c3, size = 3.5, shape = 15) +\n  geom_sf(data = ciudades_pts, color = c3, size = 5, shape = 18) +\n  geom_sf(data = ciudades_pts, color = c1, size = 2, shape = 20) +\n  # etiquetas\n  geom_richtext(\n    data = d, aes(xend, yend, label = label, hjust = hjust, vjust = vjust), \n    fill = c5, label.color = NA, label.r = unit(0, \"mm\"), size = 4,\n    family = \"ubuntu\", color = c3, lineheight = unit(1.5, \"mm\")) +\n  # t√≠tulo\n  geom_richtext(\n    data = tit_tbl, aes(x, y, label = label), angle = 90, color = c2,\n    size = 30, family = \"bebas\", fill = NA, label.color = NA) +\n  # logo R-Ladies Argentina\n  annotate(\n    geom = \"richtext\", x = 5300000, y = 3891909, hjust = 0, vjust = 0,\n    label = logo_label, fill = NA, label.color = NA, label.r = unit(0, \"mm\")) +\n  coord_sf(clip = \"off\") +\n  labs(caption = mi_caption) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(fill = c6, color = c5, linewidth = 3),\n    plot.margin = margin(20, 157.5, 20, 0),\n    plot.caption.position = \"plot\",\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 12, color = c1))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_47/viz.png\",\n  width = 33,\n  height = 40,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_47/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 47"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_07.html",
    "href": "tidytuesday/2023/semana_07.html",
    "title": "Semana 07",
    "section": "",
    "text": "Deferencia de edad entre parejas en pel√≠culas de Hollywood.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(here)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuentes -----------------------------------------------------------------\n\nfont_add_google(name = \"Libre Bodoni\", family = \"libre\", db_cache = FALSE) # t√≠tulo\nfont_add_google(name = \"Nunito Sans\", family = \"nunito\") # resto del texto\nfont_add_google(name = \"Share Tech Mono\", family = \"share\") # n√∫meros\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# √≠conos\nfont_add(\"fa-reg\", here(\"icon/Font Awesome 5 Free-Regular-400.otf\"))\nfont_add(\"fa-brands\", here(\"icon/Font Awesome 5 Brands-Regular-400.otf\"))\nfont_add(\"fa-solid\", here(\"icon/Font Awesome 5 Free-Solid-900.otf\"))\n\n# datos -------------------------------------------------------------------\n\nage_gaps &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-14/age_gaps.csv')\n\n# actores ----\n\n# top 100 male, actor 1\ntop_100_m_1 &lt;- age_gaps |&gt; \n  filter(character_1_gender == \"man\") |&gt; \n  # agrupo por pel√≠cula, por si hay m√∫ltiples parejas\n  group_by(movie_name) |&gt; \n  distinct(actor_1_name) |&gt; \n  ungroup() |&gt; \n  # ordeno por cantidad y tomo los primeros 100\n  count(actor_1_name, sort = TRUE) |&gt; \n  slice(1:100) |&gt; \n  pull(actor_1_name)\n\n# con los actores, verifico actor 1&2\ntop_m &lt;- bind_rows(\n  age_gaps |&gt; \n    filter(actor_1_name %in% top_100_m_1),\n  age_gaps |&gt; \n    filter(actor_2_name %in% top_100_m_1)) |&gt; \n  # selecciono columnas de inter√©s y renombro\n  select(movie_name, release_year, age_difference, actor_1_name, actor_2_name, \n         actor_1_age, actor_2_age)\n\n# si el actor es mayor, la diferencia es positiva\n# si el actor es menor, la diferencia es negativa\ndatos_m &lt;- top_m |&gt; \n  mutate(age_difference = case_when(actor_1_name %in% top_100_m_1 ~ age_difference,\n                                    TRUE ~ -age_difference)) |&gt;\n  mutate(ac = if_else(age_difference &gt;= 0, actor_1_name, actor_2_name)) |&gt;  \n  # elijo solamente el top 100 m\n  filter(ac %in% top_100_m_1) |&gt;\n  group_by(ac) |&gt; \n  # obtengo la diferencia de edad media (con signo)\n  summarise(delta = mean(age_difference), .groups = \"drop\") |&gt; \n  # ordeno los actores por delta\n  mutate(ac = fct_reorder(ac, delta)) |&gt; \n  arrange(ac) |&gt; \n  rename(ac1 = ac, delta1 = delta)\n\n# actrices ----\n\n# top 5 female 1\ntop_100_f_1 &lt;- age_gaps |&gt; \n  filter(character_2_gender == \"woman\") |&gt; \n  # agrupo por pel√≠cula, por si hay m√∫ltiples parejas\n  group_by(movie_name) |&gt; \n  distinct(actor_2_name) |&gt; \n  ungroup() |&gt; \n  # ordeno por cantidad y tomo los primeros 100\n  count(actor_2_name, sort = TRUE) |&gt; \n  slice(1:100) |&gt; \n  pull(actor_2_name)\n\n# con las actrices, verifico actriz 1&2\ntop_f &lt;- bind_rows(\n  age_gaps |&gt; \n    filter(actor_1_name %in% top_100_f_1),\n  age_gaps |&gt; \n    filter(actor_2_name %in% top_100_f_1)) |&gt; \n  # selecciono columnas de inter√©s y renombro\n  select(movie_name, release_year, age_difference, actor_1_name, actor_2_name, \n         actor_1_age, actor_2_age)\n\n# si la actriz es mayor, la diferencia es positiva\n# si la actriz es menor, la diferencia es negativa\ndatos_f &lt;- top_f |&gt; \n  mutate(age_difference = case_when(actor_1_name %in% top_100_f_1 ~ age_difference,\n                                    TRUE ~ -age_difference)) |&gt;\n  mutate(ac = if_else(age_difference &gt;= 0, actor_1_name, actor_2_name)) |&gt;  \n  # elijo solamente el top 100 f\n  filter(ac %in% top_100_f_1) |&gt;\n  group_by(ac) |&gt; \n  # obtengo la diferencia de edad media (con signo)\n  summarise(delta = mean(age_difference), .groups = \"drop\") |&gt; \n  # ordeno los actores por delta\n  mutate(ac = fct_reorder(ac, delta)) |&gt; \n  arrange(ac) |&gt; \n  rename(ac2 = ac, delta2 = delta)\n\n# combino ambos datos\nf_m &lt;- bind_cols(datos_f, datos_m)\n\n# figura ------------------------------------------------------------------\n\n# colores ppales\nc_m &lt;- \"#fb9e4f\"\nc_f &lt;- \"#9dd893\"\n\n# caption\nicon_twitter &lt;- \"&lt;span style='font-family:fa-brands; color:white;'&gt;&#xf099;&lt;/span&gt;\"\nicon_github &lt;- \"&lt;span style='font-family:fa-brands; color:white;'&gt;&#xf09b;&lt;/span&gt;\"\nfuente &lt;- \"&lt;span style='color:grey90;'&gt;Datos:&lt;/span&gt; &lt;span style='color:gold;'&gt;&lt;span style='font-family:mono;'&gt;{**tidytuesdayR**}&lt;/span&gt; semana 7&lt;/span&gt;\"\nautor &lt;- \"&lt;span style='color:grey90;'&gt;Autor:&lt;/span&gt; &lt;span style='color:gold;'&gt;**V√≠ctor Gauto**&lt;/span&gt;\"\nsep &lt;- \"&lt;span style = 'color:#a4cac8;'&gt;**|**&lt;/span&gt;\"\nusuario &lt;- \"&lt;span style = 'color:gold;'&gt;**vhgauto**&lt;/span&gt;\"\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# plot\ng1 &lt;- ggplot(data = f_m, aes(y = as.numeric(ac2))) +\n  # vertical en age_gap == 0\n  geom_vline(xintercept = 0, color = \"gold\", linewidth = 1, alpha = 1,\n             linetype = 2) +\n  # actores\n  geom_point(aes(x = delta1), color = c_m, shape = 16) +\n  # actrices\n  geom_point(aes(x = delta2), color = c_f, shape = 18) +\n  # manual\n  scale_x_continuous(labels = scales::label_number(style_positive = \"plus\",\n                                                   style_negative = \"hyphen\"),\n                     limits = c(-30, 30),\n                     expand = c(0, 0),\n                     # segundo eje horizontal arriba\n                     sec.axis = dup_axis(name = NULL)) +\n  scale_y_continuous(breaks = 1:nrow(f_m),\n                     labels = f_m$ac2,\n                     expand = c(0, 0),\n                     # segundo eje vertical a la derecha\n                     sec.axis = sec_axis(~ .,\n                                         breaks = 1:nrow(f_m),\n                                         labels = f_m$ac1)) +\n  coord_cartesian(clip = \"off\") +\n  # ejes\n  labs(y = NULL, \n       x = glue(\n         \"Diferencia de edad (en a√±os) entre la \n         &lt;span style='color:{c_f}'&gt;**actriz**&lt;/span&gt;/&lt;span style='color:{c_m}'&gt;**actor**&lt;/span&gt; \n         y su pareja en pantalla\"),\n       title = \"En &lt;span style='color:gold;'&gt;Hollywood &lt;/span&gt; ellos las&lt;br&gt; \n       prefieren j√≥venes\",\n       subtitle = glue(\n         \"Se calcul√≥ la &lt;span style='color:gold;'&gt;**diferencia de \n         edad**&lt;/span&gt; promedio entre las 100 \n         &lt;span style='color:{c_f};'&gt;**actrices**&lt;/span&gt; \n         y &lt;span style='color:{c_m};'&gt;**actores**&lt;/span&gt; m√°s populares de \n         &lt;span style='color:gold;'&gt;**Hollywood**&lt;/span&gt;. Dicha diferencia es \n         negativa cuando la persona (eje vertical) es menor que su inter√©s \n         amoroso en pantalla. En su inmensa mayor√≠a, \n         &lt;span style='color:{c_m};'&gt;**ellos**&lt;/span&gt; tienen exclusivamente \n         parejas menores, causando que &lt;span style='color:{c_f};'&gt;**ellas**&lt;/span&gt; \n         tengan parejas de mayor edad.\"),\n       caption = mi_caption,) +\n  theme_minimal() +\n  theme(aspect.ratio = 1.8,\n        axis.text.x = element_text(color = \"gold\", family = \"share\", \n                                   size = 10, face = \"bold\"),\n        axis.text.y.left = element_text(color = c_f, family = \"nunito\", \n                                        size = 8),\n        axis.text.y.right = element_text(color = c_m, family = \"nunito\", \n                                         size = 8),\n        axis.title.x.bottom = element_markdown(color = \"grey90\", family = \"nunito\"),\n        panel.grid.minor.y = element_blank(),\n        panel.grid.major.y = element_line(linewidth = .05, color = \"grey30\"),\n        panel.grid.major.x = element_line(linewidth = .05, color = \"grey30\",\n                                          linetype = \"ff\"),\n        panel.grid.minor.x = element_line(linewidth = .03, color = \"grey30\"),\n        panel.background = element_rect(fill = \"grey10\", color = NA),\n        plot.background = element_rect(fill = \"grey10\", color = NA),\n        plot.title = element_markdown(size = 45, family = \"libre\", \n                                      color = \"grey90\"),\n        plot.title.position = \"plot\",\n        plot.subtitle = element_textbox_simple(color = \"grey90\", \n                                               family = \"nunito\",\n                                               margin = margin(0, 0, 10, 0)),\n        plot.caption = element_markdown(hjust = .5, family = \"nunito\",\n                                        margin = margin(10, 0, 0, 0)),\n        plot.caption.position = \"plot\")\n\n# guardo\nggsave(plot = g1,\n       filename = here(\"2023/semana_07/viz.png\"),\n       width = 2300,\n       height = 3600,\n       units = \"px\",\n       dpi = 300)\n\n# abro\nbrowseURL(here(\"2023/semana_07/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 07"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_22.html",
    "href": "tidytuesday/2023/semana_22.html",
    "title": "Semana 22",
    "section": "",
    "text": "La persona m√°s longeva registrada, Jeanne Calment.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(rvest)\nlibrary(ggrepel)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\nc1 &lt;- \"#f7f4f9\"\nc2 &lt;- \"grey10\"\nc3 &lt;- \"#381a61\"\nc4 &lt;- \"#fed9a6\"\nc5 &lt;- \"grey70\"\nc6 &lt;- \"#7c4b73\"\n\n# a√±os, eje vertical\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = TRUE)\n# t√≠tulo\nfont_add_google(name = \"Libre Baskerville\", family = \"libre\", db_cache = FALSE)\n# resto del texto\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\", db_cache = FALSE)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 22, Wikipedia&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-05-30/readme.md\")\n\ncentenarians &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-30/centenarians.csv')\n\n# selecciono la persona m√°s longeva, Jeanne Calment\njeanne &lt;- centenarians |&gt; \n  slice_max(order_by = age, n = 1) |&gt; \n  mutate(y = 0, yend = 1) |&gt; \n  select(name, birth_date, death_date) |&gt; \n  pivot_longer(cols = -name, names_to = \"estado\", values_to = \"fecha\") |&gt; \n  mutate(etq = format(fecha, \"%d/%m/%Y\")) |&gt; \n  mutate(vjust = if_else(estado == \"birth_date\", 1, 0))\n\n# sitio de Wikipedia con una tabla con los presidentes argentinos y fechas\nlink &lt;- \"https://es.wikipedia.org/wiki/Anexo%3APresidentes_de_la_Naci%C3%B3n_Argentina\"\n\n# datos de los presidentes argentinos\nwi &lt;- link %&gt;%\n  read_html() |&gt; \n  html_element(\"table\") %&gt;%\n  html_table()\n\n# limpio datos de presidentes argentinos\npr &lt;- wi |&gt; \n  janitor::clean_names() |&gt; \n  select(-1, -2) |&gt; \n  select(presi = presidente_de_la_nacion_3, inicio = inicio_del_gobierno, fin = fin_del_gobierno) |&gt; \n  filter(!str_detect(presi, \"inexistente\")) |&gt; \n  separate(col = presi, into = c(\"presi\", NA), sep = \"\\(\") |&gt; \n  separate(col = inicio, into = c(\"inicio\", NA), sep = \"\\[\") |&gt; \n  separate(col = fin, into = c(\"fin\", NA), sep = \"\\[\") |&gt; \n  # el presidente actual no posee fecha 'fin'\n  filter(presi != \"Alberto Fern√°ndez\") |&gt; \n  mutate(across(.cols = c(inicio, fin), .fns = dmy)) \n\n# filtro los datos de presidentes al intervalo de Jeanne Calment\npr2 &lt;- pr |&gt; \n  # filter(between(inicio, min(jeanne$fecha), max(jeanne$fecha))) |&gt; \n  filter(between(inicio, min(jeanne$fecha), max(jeanne$fecha))) |&gt; \n  distinct() |&gt; \n  mutate(fila = row_number()) |&gt; \n  mutate()\n\n# divido los datos, presidentes pares a la izquierda\npr2_izq &lt;- pr2 |&gt; \n  filter(fila %% 2 == 0)\n\n# divido los datos, presidentes impares a la derecha\npr2_der &lt;- pr2 |&gt; \n  filter(fila %% 2 != 0)\n\nnic_ave &lt;- pr |&gt; \n  filter(year(inicio) == 1874)\n\n# figura ------------------------------------------------------------------\n\ng &lt;- ggplot() +\n  # horizontales c/25 a√±os\n  geom_hline(\n    yintercept = seq(ymd(18750101), ymd(20000101), \"25 year\"),\n    color = c5, linewidth = .25, linetype = \"ff\") +\n  # vertical central\n  geom_segment(\n    aes(x = 0, xend = 0, y = ymd(\"1875-02-21\"), yend = ymd(\"1997-08-04\")),\n    color = c4, linewidth = 3) +\n  # presidentes\n  geom_text_repel(\n    data = pr2_der, aes(x = 0, y = inicio, label = presi), \n    xlim = c(.1, 2), size = 8, seed = 2023, family = \"ubuntu\", color = c3) +\n  geom_text_repel(\n    data = pr2_izq, aes(x = 0, y = inicio, label = presi), \n    xlim = c(-2, -.1), size = 8, seed = 2023, family = \"ubuntu\", color = c3) +\n  geom_text_repel(\n    data = nic_ave, aes(x = 0, y = inicio, label = presi), \n    xlim = c(-2, -.2), size = 8, seed = 2023, family = \"ubuntu\", color = c3) +\n  # nacimiento/fallecimiento\n  geom_richtext(\n    data = jeanne, aes(x = 0, y = fecha, label = etq, vjust = vjust),\n    color = c3, fill = c4, size = 11, label.padding = unit(.4, \"line\"), \n    label.color = NA, family = \"ubuntu\") +\n  # puntos presidentes sobre vertical central\n  geom_point(data = pr2, aes(x = 0, y = inicio), color = \"#ec7014\", size = 2) +\n  # ejes\n  scale_x_continuous(limits = c(-.7, .7), expand = c(0, 0)) +\n  scale_y_date(\n    breaks = seq(ymd(18750101), ymd(20000101), \"25 year\"), \n    expand = c(0, 0), limits = c(ymd(18700101), ymd(20000101)),\n    date_labels = \"%Y\",) +\n  coord_cartesian(clip = \"off\") +\n  labs(x = NULL, y = NULL, \n       title = \"Jeanne Calment vivi√≥ 122 a√±os\",\n       subtitle = glue(\n         \"**Jeanne Calment** es considerada la persona m√°s longeva de la \n         historia. Naci√≥ en Francia en **1875** y falleci√≥ en **1997**. Para dar \n         dimensi√≥n a su extensa vida, se muestran los **{nrow(pr2)}** presidentes \n         argentinos (democr√°ticos y de facto) que tuvimos durante este per√≠odo.\"),\n       caption = mi_caption) +\n  # tema\n  theme(\n    aspect.ratio = 1.95,\n    plot.margin = margin(5, 29.5, 5, 29.5),\n    plot.background = element_rect(\n      fill = c1, color = c6, linewidth = 3),\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(\n      size = 52, color = c3, family = \"libre\", margin = margin(5, 0, 5, 0), hjust = 0),\n    plot.subtitle = element_textbox_simple(\n      color = c2, size = 22, margin = margin(5, 0, 35, 7), family = \"ubuntu\"),\n    plot.caption = element_markdown(\n      hjust = .3, size = 15, color = c2, family = \"ubuntu\"),\n    panel.background = element_rect(fill = NA, color = NA),\n    panel.grid = element_blank(),\n    axis.text.y = element_text(color = c5, family = \"bebas\", size = 40),\n    axis.text.x = element_blank(),\n    axis.ticks = element_blank())\n\n# guardo\nggsave(\n  filename = \"2023/semana_22/viz.png\",\n  plot = g,\n  width = 30,\n  height = 58,\n  units = \"cm\",\n  dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_22/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 22"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_38.html",
    "href": "tidytuesday/2023/semana_38.html",
    "title": "Semana 38",
    "section": "",
    "text": "Paquetes con nombre ‚Äògg‚Äô y que dependen de ggplot2.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(ggraph)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"grey95\"\nc2 &lt;- \"gold\"\nc3 &lt;- \"grey30\"\nc4 &lt;- \"#C159A0\"\n\n# caption\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# paquetes\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:victor;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 38.  CRAN collaboration graph, **David Schoch**&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-09-19/readme.md\")\n\ncran_20230905 &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-09-19/cran_20230905.csv')\n\n# me interesa ver los paquetes que empiezan con 'gg', como un grafo\n\n# paleta de colores alrededor de 'ggplot2'\nf_paleta &lt;- colorRampPalette(\n  c(\"#475CA7\", \"#4C6CB2\", \"#4CC8F1\", \"#75CAC2\", \"#76C26F\", \"#6FBF50\",\n    \"#7FC24E\", \"#B8D442\", \"gold\", \"#F68235\", \"#EE3738\", \"#EE3356\",\n    \"#ED3894\", \"#C159A0\"))\n\n# elijo los paquetes que empiezan con 'gg' y que tienen 'ggplot2' como\n# dependencia\nd &lt;- cran_20230905 |&gt; \n  select(paq = Package, dep = Depends) |&gt; \n  separate_longer_delim(dep, \",\") |&gt; \n  mutate(dep = str_trim(dep)) |&gt; \n  filter(str_detect(paq, \"^gg\")) |&gt; \n  drop_na(dep) |&gt; \n  filter(str_detect(dep, \"ggplot2\")) |&gt; \n  mutate(dep = \"ggplot2\") |&gt; \n  mutate(co = f_paleta(66))\n\n# √°ngulos de texto de los paquetes alrededor del grafo\ns1 &lt;- seq(90, 0, length.out = 16)\ns2 &lt;- seq(360, 270, length.out = 17)\ns3 &lt;- seq(-270, -360, length.out = 17)\ns4 &lt;- seq(0, -90, length.out = 17)\n\n# agrego hjust, vjust, size y colores\n# en el caso de 'ggplot2', tiene valores diferentes\nd_vertices &lt;- d |&gt; \n  distinct(paq) |&gt; \n  add_row(paq = \"ggplot2\") |&gt; \n  # mutate(hjust = case_when(\n  #   row_number() &lt;= 33 ~ -.05, \n  #   row_number() &gt; 33 ~ 1.05,\n  #   .default = .5)) |&gt; \n  mutate(hjust = if_else(row_number() &lt;= 33, -.075, 1.075)) |&gt; \n  mutate(angle = c(s1, s2, s3, s4)) |&gt; \n  mutate(vjust = .5) |&gt; \n  mutate(size = 7) |&gt; \n  mutate(angle = if_else(paq == \"ggplot2\", 0, angle)) |&gt; \n  mutate(hjust = if_else(paq == \"ggplot2\", .5, hjust)) |&gt; \n  mutate(vjust = if_else(paq == \"ggplot2\", -5.5, vjust)) |&gt;\n  mutate(size = if_else(paq == \"ggplot2\", 20, size)) |&gt; \n  mutate(co = f_paleta(67))\n\n# creo el grafo\ngraph &lt;- igraph::graph_from_data_frame(d, vertices = d_vertices)\n\n# figura ------------------------------------------------------------------\n\ng &lt;- ggraph(graph, layout = 'linear', circular = TRUE) + \n  # flecha apuntando a 'ggplot2'\n  annotate(\n    geom = \"segment\", x = -.047, xend = -.047, y = .99, yend = 1.75, \n    color = c4, arrow = arrow(angle = 10, type = \"closed\"), linewidth = 2) +\n  # arcos que unen 'paq' con 'ggplot2'\n  geom_edge_arc(\n    aes(colour = I(co)), edge_width = 2, linemitre = 1, lineend = \"round\",\n    show.legend = FALSE) + \n  # puntos de color y blancos\n  geom_node_point(aes(colour = I(co)), size = 2) +\n  geom_node_point(color = c1, size = .25) +\n  # texto 'paq'\n  geom_node_text(\n    aes(\n      label = name, angle = angle, hjust = hjust, vjust = vjust, size = size,\n      colour = I(co)),\n    show.legend = FALSE, fontface = \"bold\", family = \"victor\") +\n  coord_fixed(clip = \"off\") +\n  scale_size_identity() +\n  labs(caption = mi_caption) +\n  theme_void() +\n  theme(\n    plot.margin = margin(90, 117.9, 5, 117.9),\n    plot.background = element_rect(fill = c1, color = c4, linewidth = 3),\n    plot.caption = element_markdown(\n      hjust = 1, color = c4, margin = margin(90, 0, 0, 0), size = 9,\n      family = \"ubuntu\"),\n    plot.caption.position = \"plot\"\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_38/viz.png\",\n  width = 30,\n  height = 37,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_38/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 38"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_30.html",
    "href": "tidytuesday/2023/semana_30.html",
    "title": "Semana 30",
    "section": "",
    "text": "Diferentes tratamientos para escorbuto, en un estudio cl√≠nico de 1757.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuentes -----------------------------------------------------------------\n\n# colores, Java\nc1 &lt;- \"#C5DAF6\"\nc2 &lt;- \"#A1C2ED\"\nc3 &lt;- \"#6996E3\"\nc4 &lt;- \"#4060C8\"\nc5 &lt;- \"#1A318B\"\n\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# n√∫meros, eje horizontal\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# t√≠tulo\nfont_add_google(name = \"Waterfall\", family = \"waterfall\", db_cache = FALSE)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 30. **A Treatise on the Scurvy in Three Parts**. James Lind&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-07-25/readme.md\")\n\nscurvy &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-07-25/scurvy.csv')\n\n# traducci√≥n de los tratamientos\ntrad &lt;- c(\n  cider = \"cidra\", dilute_sulfuric_acid = \"√°cido diluido\",\n  vinegar = \"vinagre\", sea_water = \"agua de mar\", citrus = \"c√≠trico\",\n  purgative_mixture = \"purgante\")\n\n# me interesan los valores del estado de salud (0 a 3) por cada s√≠ntoma\n# ordenados por id de los pacientes\nd &lt;- scurvy |&gt; \n  # renombro las columnas por comodidad\n  rename(\n    trat = treatment, dosis = dosing_regimen_for_scurvy,\n    \"da√±o en las enc√≠as\" = gum_rot_d6, \n    \"llagas en la piel\" = skin_sores_d6, \n    \"dolor de rodilla\" = weakness_of_the_knees_d6,\n    cansancio = lassitude_d6, apto = fit_for_duty_d6, id = study_id) |&gt; \n  # extraigo los n√∫meros de la escala de estado de salud\n  mutate(across(.cols = \"da√±o en las enc√≠as\":apto, .fns = parse_number)) |&gt; \n  select(-dosis) |&gt; \n  # tabla larga con los s√≠ntomas\n  pivot_longer(\n    cols = \"da√±o en las enc√≠as\":apto, \n    names_to = \"carac\", \n    values_to = \"valor\") |&gt; \n  filter(carac != \"apto\") |&gt; \n  arrange(id) |&gt; \n  # traduzco, agrego may√∫sculas y convierto a factor\n  mutate(trat_trad = trad[trat]) |&gt; \n  mutate(trat_trad = str_to_upper(trat_trad)) |&gt; \n  mutate(trat_trad = fct_inorder(trat_trad)) |&gt; \n  # agrego +1 a los valores de la escala de s√≠ntomas, para evitar barras = 0\n  mutate(valor = valor + 1) |&gt; \n  # agrego '#' y convierto a factor el id de los pacientes\n  mutate(id_strip = glue(\"#{id}\")) |&gt; \n  mutate(id_strip = fct_inorder(id_strip)) |&gt; \n  mutate(carac = str_to_sentence(carac))\n\n# figura ------------------------------------------------------------------\n\n# t√≠tulo y subt√≠tulo\nmi_title &lt;- \"C√≠tricos para el escorbuto\"\n\nmi_subtitulo &lt;- \"En **1757** un estudio determin√≥ el mejor m√©todo para combatir \nel **escorbuto** en marineros. Se probaron seis tratamientos en 12 participantes, \nde a pares. A los seis d√≠as, se registr√≥ el estado de salud. Los **c√≠tricos**\nmostraron los mejores resultados, con ning√∫n s√≠ntoma, o leves.\"\n\n# figura\ng &lt;- ggplot(data = d, aes(x = valor, y = carac, fill = trat)) +\n  geom_col(color = NA, width = 1, show.legend = FALSE) +\n  geom_vline(xintercept = 0:4, color = c3, linewidth = .25) +\n  geom_hline(yintercept = .5:4.5, color = c3, linewidth = .25) +\n  facet_wrap(id_strip ~ trat_trad, scales = \"free_x\") +\n  scale_x_continuous(\n    breaks = 0:4, labels = c(\"\", \"0\", \"1\", \"2\", \"3\"),\n    limits = c(0, 4), expand = c(0, 0)) +\n  scale_y_discrete(expand = c(0, 0)) +\n  MetBrewer::scale_fill_met_d(name = \"Austria\") +\n  labs(\n    x = \"‚Äî **0** Ninguno ‚Äî **1** Leve ‚Äî **2** Moderado ‚Äî **3** Severo ‚Äî\",\n    y = NULL,\n    title = mi_title,\n    subtitle = mi_subtitulo,\n    caption = mi_caption) +\n  coord_cartesian(clip = \"off\") +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(14, 10.2, 14, 10.2),\n    plot.background = element_rect(\n      fill = c1, color = c2, linewidth = 3),\n    plot.title.position = \"plot\",\n    plot.title = element_text(\n      size = 130, color = c5, family = \"waterfall\", hjust = .5, face = \"bold\"),\n    plot.subtitle = element_textbox_simple(\n      size = 20, color = c4, family = \"ubuntu\", margin = margin(5, -5, 10, 0)),\n    plot.caption = element_markdown(\n      color = c5, size = 12, margin = margin(20, 0, 5, 0)),\n    panel.background = element_rect(fill = NA, color = NA),\n    panel.grid = element_blank(),\n    panel.spacing.x = unit(.75, \"line\"),\n    panel.spacing.y = unit(1, \"line\"),\n    strip.background = element_rect(fill = NA, color = NA),\n    strip.text = element_markdown(family = \"ubuntu\", color = c4, size = 20),\n    axis.title.x = element_markdown(\n      family = \"ubuntu\", size = 22, color = c4, margin = margin(20, 0, 0, 0)),\n    axis.text.x = element_markdown(\n      family = \"victor\", color = c5, size = 15, hjust = 2.7, face = \"bold\"),\n    axis.text.y = element_markdown(family = \"ubuntu\", color = c5, size = 17),\n    axis.ticks = element_blank()\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_30/viz.png\",\n  width = 30,\n  height = 37,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_30/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 30"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_14.html",
    "href": "tidytuesday/2023/semana_14.html",
    "title": "Semana 14",
    "section": "",
    "text": "Premier League.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(glue)\nlibrary(patchwork)\nlibrary(showtext)\nlibrary(fontawesome)\nlibrary(ggtext)\n\n# fuentes -----------------------------------------------------------------\n\nfont_add(family = \"radikal\", regular = here(\"fuente/Nootype - Radikal.otf\")) # t√≠tulos\nfont_add_google(name = \"Share Tech Mono\", family = \"share\") # n√∫meros\nfont_add_google(name = \"Heebo\", family = \"heebo\") # resto del texto\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# √≠conos\nfont_add(\"fa-reg\", \"icon/Font Awesome 5 Free-Regular-400.otf\")\nfont_add(\"fa-brands\", \"icon/Font Awesome 5 Brands-Regular-400.otf\")\nfont_add(\"fa-solid\", \"icon/Font Awesome 5 Free-Solid-900.otf\")\n\n# caption\nicon_twitter &lt;- \"&lt;span style='font-family:fa-brands; color:#e50312;'&gt;&#xf099;&lt;/span&gt;\"\nicon_github &lt;- \"&lt;span style='font-family:fa-brands; color:#e50312;'&gt;&#xf09b;&lt;/span&gt;\"\nfuente &lt;- \"&lt;span style='color:#e50312;'&gt;Datos:&lt;/span&gt; &lt;span style='color:#ffee01;'&gt;&lt;span style='font-family:mono;'&gt;{**tidytuesdayR**}&lt;/span&gt; semana 14&lt;/span&gt;\"\nautor &lt;- \"&lt;span style='color:#e50312;'&gt;Autor:&lt;/span&gt; &lt;span style='color:#ffee01;'&gt;**V√≠ctor Gauto**&lt;/span&gt;\"\nsep &lt;- glue(\"&lt;span style = 'color:#e50312;'&gt;**|**&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style = 'color:#ffee01;'&gt;**vhgauto**&lt;/span&gt;\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(glue(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/\n               2023/2023-04-04/readme.md\"))\n\nfutbol &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-04-04/soccer21-22.csv')\n\nfutbol &lt;- futbol |&gt; \n  janitor::clean_names()\n\n# por √°rbitro -------------------------------------------------------------\n\ndatos_ref &lt;- futbol |&gt; \n  select(referee, ay, ar, hy, hr) |&gt; \n  group_by(referee) |&gt; \n  summarise(ay = sum(ay),\n            ar = sum(ar),\n            hy = sum(hy),\n            hr = sum(hr)) |&gt; \n  ungroup() |&gt; \n  mutate(AMARILLA = hy + ay,\n         ROJA = hr + ar) |&gt; \n  mutate(tot_tar = AMARILLA + ROJA) |&gt; \n  select(-ay, -ar, -hy, -hr) |&gt; \n  left_join(count(futbol, referee), by = \"referee\") |&gt; \n  mutate(\n    AMARILLA = AMARILLA/n,\n    ROJA = ROJA/n,\n    tot_tar = tot_tar/n\n  ) |&gt; \n  select(-n) |&gt; \n  pivot_longer(cols = AMARILLA:ROJA,\n               values_to = \"valor\",\n               names_to = \"tarjeta\") |&gt; \n  select(referee, tarjeta, valor, tot_tar) |&gt; \n  mutate(tarjeta = factor(tarjeta, levels = c(\"ROJA\", \"AMARILLA\"))) |&gt; \n  pivot_wider(names_from = tarjeta,\n              values_from = valor) |&gt; \n  mutate(ROJA_x = ROJA) |&gt; \n  mutate(AMARILLA_x = AMARILLA) |&gt; \n  mutate(across(AMARILLA:ROJA, ~ format(round(.x, 1), nsmall = 1))) |&gt; \n  mutate(referee = fct_reorder(referee, AMARILLA)) |&gt; \n  mutate(ROJA = str_replace(ROJA, \"0\", \"\"))\n\n# por equipos -------------------------------------------------------------\n\nlocal_tar &lt;- futbol |&gt;\n  select(home_team, hy, hr) |&gt;\n  group_by(equipo = home_team) |&gt;\n  summarise(AMARILLA = sum(hy),\n            ROJA = sum(hr))\n\nvisit_tar &lt;- futbol |&gt;\n  select(away_team, ay, ar) |&gt;\n  group_by(equipo = away_team) |&gt;\n  summarise(AMARILLA = sum(ay),\n            ROJA = sum(ar))\n\npath_logos &lt;- \"2023/semana_14/logo_png/\"\n\ndatos_equ &lt;- bind_rows(local_tar,\n                       visit_tar) |&gt;\n  group_by(equipo) |&gt;\n  summarise(AMARILLA = sum(AMARILLA),\n            ROJA = sum(ROJA)) |&gt;\n  pivot_longer(cols = AMARILLA:ROJA,\n               values_to = \"valor\",\n               names_to = \"tarjeta\") |&gt;\n  group_by(equipo) |&gt;\n  mutate(tot_tar = sum(valor)) |&gt;\n  ungroup() |&gt;\n  mutate(tarjeta = factor(tarjeta, levels = c(\"ROJA\", \"AMARILLA\"))) |&gt;\n  # mutate(equipo = fct_reorder(equipo, tot_tar)) |&gt; \n  pivot_wider(names_from = tarjeta,\n              values_from = valor) |&gt; \n  mutate(equipo_png = glue(\"{equipo}.png\")) |&gt; \n  mutate(equipo_label = glue(\"&lt;img src='{paste0(path_logos, {equipo_png})}' width='30'&gt;\")) |&gt; \n  mutate(equipo = fct_reorder(equipo, AMARILLA)) |&gt; \n  mutate(equipo_label = fct_reorder(equipo_label, AMARILLA)) \n\n# figuras -----------------------------------------------------------------\n\n# par√°metros de la figura\ntama√±o_tarjeta &lt;- 7\ntama√±o_nro &lt;- 8\ndesp_equ &lt;- 9\ndesp_ref &lt;- .45\nlogo_a &lt;- \"2023/semana_14/logo_a.png\"\nlogo_r &lt;- \"2023/semana_14/logo_r.png\"\n\n# tema p/ambas figuras\ntheme_set(\n  theme_minimal() +\n    theme(aspect.ratio = 3,\n          text = element_text(color = \"white\"),\n          axis.text.y.left = element_markdown(color = \"white\", family = \"radikal\",\n                                     size = 19, margin = margin(5, 20, 5, 5)),\n          axis.text.x = element_blank(),\n          axis.title.x = element_text(family = \"heebo\", size = 20, \n                                      hjust = .5, margin = margin(5, 0, 5, 40)),\n          plot.background = element_rect(fill = NA, color = NA),\n          plot.title = element_text(hjust = .5, size = 20,\n                                    family = \"radikal\"),\n          panel.background = element_rect(fill = NA, color = NA),\n          panel.grid = element_blank()\n    )\n)\n\n# figura EQUIPOS\ng_equ &lt;- ggplot(data = datos_equ, aes(y = equipo)) +\n  # linea punteada\n  geom_segment(aes(x = ROJA + 17, xend = AMARILLA - 6, yend = equipo), \n               color = \"white\", linetype = 2, linewidth = .25) +\n  # tarjeta ROJA\n  geom_label(aes(x = ROJA, label = \" \"), color = \"#e50312\", \n             fill = \"#e50312\", size = tama√±o_tarjeta, hjust = 0) +\n  geom_text(aes(x = ROJA, label = ROJA), color = \"#e50312\", \n            size = tama√±o_nro,\n            nudge_x = desp_equ, hjust = 0, family = \"share\") +\n  # tarjeta AMARILLA\n  geom_label(aes(x = AMARILLA, label = \" \"), color = \"#ffee01\", \n             fill = \"#ffee01\", size = tama√±o_tarjeta, hjust = 0) +\n  geom_text(aes(x = AMARILLA, label = AMARILLA), color = \"#ffee01\",\n            size = tama√±o_nro,\n            nudge_x = desp_equ, hjust = 0, family = \"share\") +\n  # logo equipos\n  geom_richtext(aes(x = -15, y = equipo, label = equipo_label), fill = NA, \n                color = NA, size = 6) +\n  # manual\n  scale_x_continuous(limits = c(-20, 117), expand = c(0, 0)) +\n  scale_y_discrete(labels = (x) str_to_upper(x)) +\n  scale_fill_manual(breaks = c(\"AMARILLA\", \"ROJA\"),\n                    values = c(\"#ffee01\", \"#e50312\")) +\n  coord_cartesian(clip = \"off\") +\n  # ejes\n  labs(x = \"Cantidad total de tarjetas\",\n       y = NULL) \n\n# figura √ÅRBITROS\ng_ref &lt;- ggplot(data = datos_ref, aes(y = referee,)) +\n  # linea punteada\n  geom_segment(aes(x = ROJA_x + 1.1, xend = AMARILLA_x - .3, yend = referee), \n               color = \"white\", linetype = 2, linewidth = .25) +\n  # tarjeta ROJA\n  geom_label(aes(x = ROJA_x, label = \" \"), color = \"#e50312\", \n             fill = \"#e50312\", size = tama√±o_tarjeta, hjust = 0) +\n  geom_text(aes(x = ROJA_x, label = ROJA), color = \"#e50312\",\n            size = tama√±o_nro,\n            nudge_x = desp_ref, hjust = 0, family = \"share\") +\n  # tarjeta AMARILLA\n  geom_label(aes(x = AMARILLA_x, label = \" \"), color = \"#ffee01\", \n             fill = \"#ffee01\", size = tama√±o_tarjeta, hjust = 0) +\n  geom_text(aes(x = AMARILLA_x, label = AMARILLA), color = \"#ffee01\",\n            size = tama√±o_nro,\n            nudge_x = desp_ref, hjust = 0, family = \"share\") +\n  # manual\n  scale_x_continuous(limits = c(-.1, 6), expand = c(0, 0)) +\n  scale_y_discrete(labels = (x) str_replace(x, \" \", \". \")) +\n  scale_fill_manual(breaks = c(\"AMARILLA\", \"ROJA\"),\n                    values = c(\"#ffee01\", \"#e50312\")) +\n  coord_cartesian(clip = \"off\") +\n  # ejes\n  labs(x = \"Cantidad promedio de tarjetas,npor partido\",\n       y = NULL)\n\n# figura compuesta\ng_comp &lt;- g_equ + plot_spacer() + g_ref + \n  # distribuci√≥n figuras\n  plot_layout(widths = c(.8, .2, .8)) &\n  plot_annotation(\n    title = glue(\n      \"&lt;img src='{logo_r}' width='55'&gt; PREMIER LEAGUE \n      &lt;img src='{logo_a}' width='55'&gt;\"\n      ),\n    subtitle = \"Cantidad de tarjetas &lt;span style='color:#e50312;'&gt;**rojas**&lt;/span&gt; \n    y &lt;span style='color:#ffee01;'&gt;**amarillas**&lt;/span&gt; en la liga inglesa de \n    f√∫tbol, durante la&lt;br&gt;temporada **2021**-**2022**, por equipos (izquierda) y \n    √°rbitros (derecha).\",\n    caption = mi_caption,\n    theme = theme(\n      plot.title = element_markdown(\n        family = \"radikal\", size = 75, hjust = .5, color = \"white\"),\n      plot.title.position = \"plot\",\n      plot.subtitle = element_markdown(\n        color = \"white\", size = 26, family = \"heebo\", margin = margin(10, 0, 15, 0)),\n      plot.background = element_rect(fill = \"#360c3a\", color = NA),\n      plot.margin = margin(5, 12, 5, 12),\n      plot.caption = element_markdown(hjust = .5, size = 18),\n      axis.text.x = element_blank(),\n      panel.background = element_rect(fill = \"#360c3a\", color = NA),\n    )\n  )\n\n# guardo\nggsave(\n  plot = g_comp,\n  filename = here(\"2023/semana_14/viz.png\"),\n  width = 35,\n  height = 35,\n  units = \"cm\",\n  dpi = 300)\n\n# abro\nbrowseURL(here(\"2023/semana_14/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 14"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_08.html",
    "href": "tidytuesday/2025/semana_08.html",
    "title": "Semana 08",
    "section": "",
    "text": "Categor√≠as raciales en papers de ginecolog√≠a y obstetricia.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 08"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_08.html#paquetes",
    "href": "tidytuesday/2025/semana_08.html#paquetes",
    "title": "Semana 08",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggwordcloud)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 08"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_08.html#estilos",
    "href": "tidytuesday/2025/semana_08.html#estilos",
    "title": "Semana 08",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"#FDAD17\"\nc2 &lt;- \"#52C890\"\nc3 &lt;- \"#0D2D4C\"\nc4 &lt;- \"#E99BB9\"\nc5 &lt;- \"white\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 08"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_08.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_08.html#ep√≠grafe",
    "title": "Semana 08",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 08&lt;br&gt;\",\n    \"&lt;b&gt;Racial and ethnic disparities in reproductive medicine in the United&lt;br&gt;\n     States: a narrative review of contemporary high-quality evidence&lt;/b&gt;&lt;br&gt;\n    Lewis, Ayodele G. et al.&lt;br&gt;\n    &lt;i&gt;American Journal of Obstetrics & Gynecology, Volume 232, Issue 1, 82 - 91.e44&lt;/i&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 08"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_08.html#datos",
    "href": "tidytuesday/2025/semana_08.html#datos",
    "title": "Semana 08",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 08)\narticle_dat &lt;- tuesdata$article_dat\nmodel_dat &lt;- tuesdata$model_dat",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 08"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_08.html#procesamiento",
    "href": "tidytuesday/2025/semana_08.html#procesamiento",
    "title": "Semana 08",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa la cantidad de categor√≠as raciales y armar una nube de palabras.\n\n\nOcultar c√≥digo\nd &lt;- article_dat |&gt;\n  select(starts_with(\"race\")) |&gt;\n  select(!ends_with(\"_ss\")) |&gt;\n  pivot_longer(\n    cols = everything(),\n    values_to = \"cat\",\n    names_to = \"col\"\n  ) |&gt;\n  drop_na() |&gt;\n  mutate(\n    cat = tolower(cat)\n  ) |&gt;\n  mutate(\n    cat = str_replace(cat, \"alaskan\", \"alaska\"),\n    cat = str_replace(cat, \"whites\", \"white\"),\n    cat = str_replace(cat, \"blacks\", \"black\"),\n    cat = str_replace(cat, \"others\", \"other\"),\n    cat = str_remove_all(cat, \"-\")\n  ) |&gt;\n  mutate(\n    cat = if_else(\n      str_detect(cat, \"unknown\"),\n      \"unknown\",\n      cat\n    )\n  ) |&gt;\n  count(cat, sort = TRUE) |&gt;\n  filter(n &gt; 1) %&gt;%\n  mutate(\n    col = sample(c(c1, c2), replace = TRUE, size = nrow(.))\n  )",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 08"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_08.html#figura",
    "href": "tidytuesday/2025/semana_08.html#figura",
    "title": "Semana 08",
    "section": "Figura",
    "text": "Figura\nSubt√≠tulo y nube de palabras.\n\n\nOcultar c√≥digo\nmi_subtitle &lt;- glue(\n  \"&lt;b style='color: {c4}'&gt;{nrow(d)}&lt;/b&gt; categor√≠as raciales presentes en\n  trabajos cient√≠ficos de&lt;br&gt;\n  &lt;b&gt;obstetricia&lt;/b&gt; y &lt;b&gt;ginecolog√≠a&lt;/b&gt; entre 2010 y 2023\"\n)\n\ng &lt;- ggplot(d, aes(label = cat, size = n, color = col)) +\n  geom_text_wordcloud(shape = \"square\") +\n  scale_size_area(max_size = 40) +\n  scale_color_identity() +\n  labs(\n    subtitle = mi_subtitle, caption = mi_caption\n  ) +\n  theme_minimal() +\n  theme(\n    plot.background = element_rect(fill = c3, color = NA),\n    plot.subtitle = element_markdown(\n      color = c5, family = \"ubuntu\", size = 30, hjust = .5,\n      lineheight = 1.1, margin = margin(t = 20)\n    ),\n    plot.caption = element_markdown(\n      color = c2, family = \"ubuntu\", size = 15, lineheight = 1.1,\n      margin = margin(b = 10, r = 10)\n    )\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_08.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 08"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_16.html",
    "href": "tidytuesday/2025/semana_16.html",
    "title": "Semana 16",
    "section": "",
    "text": "Tendencias de accidentes fatales diarios en EE.UU, entre 1992 y 2016",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 16"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_16.html#paquetes",
    "href": "tidytuesday/2025/semana_16.html#paquetes",
    "title": "Semana 16",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 16"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_16.html#estilos",
    "href": "tidytuesday/2025/semana_16.html#estilos",
    "title": "Semana 16",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\ncol &lt;- monochromeR::generate_palette(\n  \"#704D9E\", modification = \"go_both_ways\", n_colours = 6\n)\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 16"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_16.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_16.html#ep√≠grafe",
    "title": "Semana 16",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{col[6]};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 16, \",\n    \"&lt;b&gt;The annual cannabis holiday and fatal traffic crashes&lt;br&gt;&lt;/b&gt;\n    S. Harper, A. Palayew.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{col[6]};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{col[6]};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 16"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_16.html#datos",
    "href": "tidytuesday/2025/semana_16.html#datos",
    "title": "Semana 16",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 16)\ndaily_accidents &lt;- tuesdata$daily_accidents",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 16"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_16.html#procesamiento",
    "href": "tidytuesday/2025/semana_16.html#procesamiento",
    "title": "Semana 16",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa visualizar todos los a√±os (d) y mostrar la mediana (d_m), con el d√≠a con la m√°xima cantidad de accidentes (d_max).\n\n\nOcultar c√≥digo\nd &lt;- daily_accidents |&gt;\n  mutate(\n    fecha = make_date(year = 2020, month = month(date), day = day(date)),\n    a√±o = year(date),\n    dia = yday(date)\n  ) |&gt;\n  arrange(dia, date)\n\nd_m &lt;- d |&gt;\n  reframe(\n    m = median(fatalities_count),\n    .by = fecha\n  )\n\nd_max &lt;- slice_max(d_m, order_by = m, n = 1)\nd_min &lt;- slice_min(d_m, order_by = m, n = 1)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 16"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_16.html#figura",
    "href": "tidytuesday/2025/semana_16.html#figura",
    "title": "Semana 16",
    "section": "Figura",
    "text": "Figura\nEtiquetas para el eje horizontal.\n\n\nOcultar c√≥digo\neje_x &lt;- seq.Date(\n  from = ymd(20200101),\n  to = ymd(20210101),\n  by = \"1 month\"\n)\n\n\nT√≠tulo y subt√≠tulo.\n\n\nOcultar c√≥digo\nmi_titulo &lt;- glue(\n  \"Accidentes de tr√°nsito **fatales** diarios, entre 1992 y 2016, en EE.UU.\"\n)\n\nmi_subtitulo &lt;- glue(\n  \"Se destaca la &lt;b style='color:{col[6]}'&gt;mediana&lt;/b&gt; diaria y los d√≠as \n  con la m√°xima y m√≠nima cantidad de accidentes en todo el rango.\"\n)\n\n\nFigura.\n\n\nOcultar c√≥digo\ng &lt;- ggplot(d, aes(fecha, fatalities_count, group = year(date))) +\n  annotate(\n    geom = \"text\", x = eje_x, y = 45, label = format(eje_x, \"%b\"),\n    vjust = -.2, color = col[4], family = \"jet\"\n  ) +\n  geom_segment(\n    data = d_max,\n    aes(x = fecha, y = m, yend = .95*max(d$fatalities_count), xend = fecha),\n    inherit.aes = FALSE, color = col[4], linewidth = 1, linetype = 2\n  ) +\n  geom_segment(\n    data = d_min,\n    aes(x = fecha, y = m, yend = 1.25*min(d$fatalities_count), xend = fecha),\n    inherit.aes = FALSE, color = col[4], linewidth = 1, linetype = 2\n  ) +\n  annotate(\n    geom = \"text\", x = d_max$fecha, y = .952*max(d$fatalities_count),\n    label = \"4 de julio\", hjust = 0, color = col[5], size = 15,\n    size.unit = \"pt\", vjust = -.3, family = \"ubuntu\"\n  ) +\n  annotate(\n    geom = \"text\", x = d_min$fecha-1, y = 1.2*min(d$fatalities_count),\n    label = \"25 de diciembre\", hjust = 1, color = col[5], size = 15,\n    size.unit = \"pt\", vjust = -.3, family = \"ubuntu\"\n  ) +\n  geom_line(alpha = .5, color = col[2]) +\n  geom_line(\n    data = d_m, aes(fecha, m), alpha = 1, color = col[6], linewidth = 1,\n    inherit.aes = FALSE\n  ) +\n  geom_point(\n    data = bind_rows(d_max, d_min), aes(fecha, m), size = 2, color = col[1],\n    shape = 21, stroke = 1, fill = col[5], inherit.aes = FALSE\n  ) +\n  coord_cartesian(clip = \"off\") +\n  labs(title = mi_titulo, subtitle = mi_subtitulo, caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = .7,\n    text = element_text(family = \"ubuntu\"),\n    plot.margin = margin(b = 15, r = 10, l = 10, t = 5),\n    plot.background = element_rect(fill = col[1], color = NA),\n    plot.title = element_markdown(size = 20, color = col[5]),\n    plot.subtitle = element_markdown(size = 14, color = col[5]),\n    plot.caption = element_markdown(color = col[4], lineheight = 1.3, size = 12),\n    panel.grid.major.y = element_line(color = col[2], linewidth = .1),\n    axis.text.y = element_text(\n      margin = margin(r = -20), vjust = -.3, family = \"jet\", size = 12,\n      color = col[4]\n    )\n  )\n\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_16.png\",\n  width = 30,\n  height = 24,\n  units = \"cm\"\n)\n\nbrowseURL(paste0(getwd(), \"/tidytuesday/2025/semana_16.png\"))\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_16.png\",\n  width = 30,\n  height = 24,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 16"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_06.html",
    "href": "tidytuesday/2025/semana_06.html",
    "title": "Semana 06",
    "section": "",
    "text": "Agencias de EE.UU. afectadas por la deshabilitaci√≥n al acceso de bases de datos.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 06"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_06.html#paquetes",
    "href": "tidytuesday/2025/semana_06.html#paquetes",
    "title": "Semana 06",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(treemapify)\nlibrary(ggpath)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 06"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_06.html#estilos",
    "href": "tidytuesday/2025/semana_06.html#estilos",
    "title": "Semana 06",
    "section": "Estilos",
    "text": "Estilos\nColores\n\n\nOcultar c√≥digo\nc1 &lt;- \"#0A3161\"\nc2 &lt;- \"#B31942\"\nc3 &lt;- \"grey90\"\n\n\nFuentes: Ubuntu y JetBrains Mono\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 06"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_06.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_06.html#ep√≠grafe",
    "title": "Semana 06",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 06,&lt;br&gt;\",\n    \"&lt;b&gt;CDC datasets&lt;/b&gt; en &lt;i&gt;archive.org&lt;/i&gt;, Jon Harmon.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 06"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_06.html#datos",
    "href": "tidytuesday/2025/semana_06.html#datos",
    "title": "Semana 06",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 06)\ncdc_datasets &lt;- tuesdata$cdc_datasets\nomb_codes &lt;- tuesdata$omb_codes\nfpi_codes &lt;- tuesdata$fpi_codes",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 06"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_06.html#procesamiento",
    "href": "tidytuesday/2025/semana_06.html#procesamiento",
    "title": "Semana 06",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa la proporci√≥n de agencias en las bases de datos eliminadas.\nLa figura es un treemap, que puede generarse con el paquete {treemapify}.\n\n\nOcultar c√≥digo\nd &lt;- cdc_datasets |&gt;\n  select(bureau_code) |&gt;\n  separate_wider_delim(\n    cols = bureau_code, delim = \":\", names = c(\"agency_code\", \"bureau_code\")\n  ) |&gt;\n  mutate(\n    across(\n      .cols = everything(),\n      .fns = as.numeric\n    )\n  ) |&gt;\n  inner_join(\n    omb_codes, by = join_by(agency_code, bureau_code),\n    relationship = \"many-to-many\") |&gt;\n  select(agency_name, bureau_name) |&gt;\n  count(agency_name, bureau_name, sort = TRUE) |&gt;\n  select(-agency_name) |&gt;\n  mutate(\n    bureau_name = str_wrap(bureau_name, 15)\n  )\n\n\nLogos de las agencias y coordenadas para las flechas curvas.\n\n\nOcultar c√≥digo\nlogos &lt;- c(\n  `Centers for Disease Control and Prevention` = \"https://www.cdc.gov/TemplatePackage/5.0/img/logo/cdc-logo-tag-right.svg\",\n  `Department of Health and Human Services` = \"https://www.hhs.gov/themes/custom/hhs_uswds/logo-desktop.svg\",\n  `Health Resources and Services Administration` = \"https://www.hrsa.gov/themes/hrsa/uswds_hrsa/images/hrsa-logo.png\",\n  `Centers for Medicare and Medicaid Services` = \"https://www.cms.gov/themes/custom/cms_evo/logo.svg\"\n)\n\nlogos_tbl &lt;- tibble(\n  img = logos,\n  x = c(.5, .5, 1.11, 1.11),\n  y = c(.4, .9, .87, 1.03),\n  width = c(.3, .4, .2, .2)\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 06"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_06.html#figura",
    "href": "tidytuesday/2025/semana_06.html#figura",
    "title": "Semana 06",
    "section": "Figura",
    "text": "Figura\nSubt√≠tulo y figura principal\n\n\nOcultar c√≥digo\nmi_subtitulo &lt;- glue(\n  \"La gesti√≥n actual de EE.UU. comenz√≥ a &lt;span style='color:{c2}'&gt;deshabilitar\",\n  \"&lt;/span&gt; el acceso a&lt;br&gt;bases de datos, en particular de agencias de salud \",\n  \"federales.\"\n)\n\ng &lt;- ggplot(d, aes(area = n, label = bureau_name)) +\n  geom_treemap(\n    alpha = 1, layout = \"srow\", linetype = 1, color = c3, size = 1,\n    fill = c1\n  ) +\n  geom_from_path(\n    data = logos_tbl, aes(x, y, path = img, width = width), inherit.aes = FALSE\n  ) +\n  annotate(\n    geom = \"curve\", x = 1.1, y = 1.01, xend = 1.001, yend = .98,\n    curvature = -.1, color = c2, arrow.fill = c2,\n    arrow = arrow(angle = 15, length = unit(5, \"pt\"), type = \"closed\")\n  ) +\n  annotate(\n    geom = \"curve\", x = 1.1, y = .83, xend = 1.001, yend = .8,\n    curvature = -.1, color = c2, arrow.fill = c2,\n    arrow = arrow(angle = 15, length = unit(5, \"pt\"), type = \"closed\")\n  ) +\n  coord_cartesian(\n    xlim = c(0, 1), ylim = c(0, 1), expand = FALSE, clip = \"off\"\n  ) +\n  labs(subtitle = mi_subtitulo, caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    text = element_text(family = \"ubuntu\"),\n    plot.background = element_rect(fill = c3, color = NA),\n    plot.margin = margin(10, 210, 2, 5),\n    plot.subtitle = element_markdown(\n      color = c1, face = \"bold\", size = 20, margin = margin(b = 10),\n      lineheight = 1.2\n    ),\n    plot.caption = element_markdown(\n      color = c2, size = 10, lineheight = 1.4,\n      margin = margin(t = -45, r = -200, l = 10)\n    ),\n    legend.position = \"none\"\n  )\n\n\nGuardo\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_06.png\",\n  width = 30,\n  height = 25,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 06"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_05.html",
    "href": "tidytuesday/2025/semana_05.html",
    "title": "Semana 05",
    "section": "",
    "text": "Lugares m√°s frecuentes de la familia Simpson.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 05"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_05.html#paquetes",
    "href": "tidytuesday/2025/semana_05.html#paquetes",
    "title": "Semana 05",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\nlibrary(patchwork)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 05"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_05.html#estilos",
    "href": "tidytuesday/2025/semana_05.html#estilos",
    "title": "Semana 05",
    "section": "Estilos",
    "text": "Estilos\nColores\n\n\nOcultar c√≥digo\nc1 &lt;- \"#7FABD3\"\nc2 &lt;- \"#3573B9\"\nc3 &lt;- \"#273871\"\nc4 &lt;- \"#FED41D\"\nc5 &lt;- \"white\"\n\n\nFuentes: Ubuntu y JetBrains Mono\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 05"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_05.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_05.html#ep√≠grafe",
    "title": "Semana 05",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{c2};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 05, \",\n    \"&lt;b&gt;The Simpsons Dataset&lt;/b&gt;, Prashant Banerjee.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c2};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c2};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 05"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_05.html#datos",
    "href": "tidytuesday/2025/semana_05.html#datos",
    "title": "Semana 05",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 05)\nlocations &lt;- tuesdata$simpsons_locations\nscript_lines &lt;- tuesdata$simpsons_script_lines",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 05"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_05.html#procesamiento",
    "href": "tidytuesday/2025/semana_05.html#procesamiento",
    "title": "Semana 05",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa asociar lugares a los integrantes principales de la familia Simpson.\nCreo un vector con los nombres y links a sus im√°genes sacado de Wikipedia.\n\n\nOcultar c√≥digo\nfamilia &lt;- c(\n  \"Homer Simpson\", \"Lisa Simpson\", \"Bart Simpson\", \"Marge Simpson\",\n  \"Maggie Simpson\"\n)\n\nlink_familia &lt;- c(\n  Homero = \"https://upload.wikimedia.org/wikipedia/en/0/02/Homer_Simpson_2006.png\",\n  Marge = \"https://upload.wikimedia.org/wikipedia/en/0/0b/Marge_Simpson.png\",\n  Bart = \"https://upload.wikimedia.org/wikipedia/en/a/aa/Bart_Simpson_200px.png\",\n  Lisa = \"https://upload.wikimedia.org/wikipedia/en/e/ec/Lisa_Simpson.png\",\n  Maggie = \"https://upload.wikimedia.org/wikipedia/en/9/9d/Maggie_Simpson.png\"\n)\n\nimg_familia &lt;- glue(\"&lt;img src='{link_familia}' height=90 /&gt;\") |&gt;\n  as.character()\n\nimg_familia &lt;- set_names(img_familia, names(link_familia))\n\n\nFiltro el dataset del gui√≥n obteniendo los 5 sitios m√°s frecuentes por cada integrante.\n\n\nOcultar c√≥digo\nd &lt;- script_lines |&gt;\n  filter(raw_character_text %in% familia) |&gt;\n  count(raw_character_text, location_id) |&gt;\n  inner_join(locations, by = join_by(location_id == id)) |&gt;\n  select(!normalized_name) |&gt;\n  select(\n    personaje = raw_character_text,\n    lugar = name,\n    n\n  ) |&gt;\n  mutate(\n    personaje = str_remove(personaje, \" Simpson\")\n  ) |&gt;\n  mutate(\n    personaje = if_else(personaje == \"Homer\", \"Homero\", personaje)\n  ) |&gt;\n  mutate(\n    personaje = fct(\n      personaje, levels = c(\"Homero\", \"Marge\", \"Bart\", \"Lisa\", \"Maggie\")\n    )\n  ) |&gt;\n  arrange(personaje, n) |&gt;\n  mutate(\n    puesto = row_number(), .by = personaje\n  ) |&gt;\n  arrange(personaje, puesto) |&gt;\n  mutate(\n    p = n/sum(n),\n    .by = personaje\n  ) |&gt;\n  mutate(\n    puesto = factor(puesto)\n  ) |&gt;\n  mutate(\n    img = img_familia[personaje]\n  ) |&gt;\n  mutate(\n    lugar = str_to_sentence(lugar)\n  ) |&gt;\n  mutate(\n    hjust = if_else(lugar == \"Simpson home\", 1.1, 0)\n  ) |&gt;\n  mutate(\n    relleno = if_else(lugar == \"Simpson home\", c3, c2)\n  ) |&gt;\n  slice_max(order_by = puesto, n = 5, by = personaje, with_ties = FALSE)\n\n\nTraduzco los lugares\n\n\nOcultar c√≥digo\nd &lt;- d |&gt;\n  mutate(\n    lugar = case_match(\n      lugar,\n      \"Simpson home\" ~ \"Domicilio Simpson\",\n      \"Springfield nuclear power plant\" ~ \"Planta nuclear Springfield\",\n      \"Moe's tavern\" ~ \"Taverna de Moe\",\n      \"Springfield street\" ~ \"Calle de Springfield\",\n      \"Homer's car\" ~ \"Auto de Homero\",\n      \"Evergreen terrace\" ~ \"Techo del domicilio\",\n      \"Simpson master bedroom\" ~ \"Habitaci√≥n del matrimonio\",\n      \"Marge's car\" ~ \"Auto de Marge\",\n      \"Mother hubbard's sandwich cupboard\" ~ \"Sandwich Armario de la Madre Hubbard\",\n      \"Outer concourse\" ~ \"Afuera del vest√≠bulo\",\n      \"Olympic village\" ~ \"Villa Ol√≠mpica\",\n      \"First church of springfield\" ~ \"1ra Iglesia de Springfield\",\n      \"Springfield elementary school\" ~ \"Escuela Primaria de Springfield\",\n      \"Bart's bedroom\" ~ \"Habitaci√≥n de Bart\",\n      \"Bart's treehouse\" ~ \"Casita del √°rbol de Bart\",\n      \"Lisa's bedroom\" ~ \"Habitaci√≥n de Lisa\",\n      \"Parking structure\" ~ \"Estacionamiento\",\n      \"Springfield zoo\" ~ \"Zool√≥gico de Springfield\",\n      .default = lugar\n    )\n  )",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 05"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_05.html#figura",
    "href": "tidytuesday/2025/semana_05.html#figura",
    "title": "Semana 05",
    "section": "Figura",
    "text": "Figura\nGenero un tibble para las etiquetas del eje horizontal.\n\n\nOcultar c√≥digo\neje_x &lt;- tibble(\n  x = seq(.1, .7, .1), y = .5\n) |&gt;\n  mutate(\n    label = paste0(x*100, \"%\")\n  )\n\n\nFigura principal.\n\n\nOcultar c√≥digo\ng &lt;- ggplot(d, aes(p, puesto)) +\n  geom_segment(\n    aes(x = 0, xend = p, yend = puesto), linewidth = 15, color = c3\n  ) +\n  geom_label(\n    aes(label = lugar, hjust = hjust, fill = I(relleno)),\n    size = 12, size.unit = \"pt\", color = c5, family = \"ubuntu\",\n    label.size = 0, fontface = \"bold\"\n  ) +\n  geom_richtext(\n    aes(I(1), I(.7), label = img), fill = NA, label.color = NA, hjust = 1,\n    vjust = 0\n  ) +\n  labs(caption = mi_caption) +\n  facet_wrap(\n    vars(personaje), ncol = 2, scales = \"free\", strip.position = \"left\",\n    dir = \"h\"\n  ) +\n  scale_x_continuous(\n    breaks = seq(.1, .8, .1),\n    expand = c(.01, 0),\n    labels = scales::label_percent()\n  ) +\n  scale_y_discrete(\n    expand = c(0, .6)\n  ) +\n  coord_cartesian(clip = \"off\") +\n  theme_void() +\n  theme(\n    aspect.ratio = .6,\n    text = element_text(size = 10),\n    plot.margin = margin(t = 15,  b = 15),\n    plot.background = element_rect(fill = c1, color = NA),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 11, color = c3, lineheight = 1.1,\n      margin = margin(t = -20, b = 0, r = 20)\n    ),\n    axis.text.x = element_text(\n      family = \"jet\", color = c5, size = 8, margin = margin(t = -12), hjust = 1\n    ),\n    panel.background = element_rect(fill = c2, color = NA),\n    panel.spacing = unit(1.5, \"line\"),\n    panel.grid.major.x = element_line(\n      color = c1, linewidth = .1, linetype = \"FF\"\n    ),\n    strip.text = element_blank()\n  )\n\n\nAgrego sobre la figura principal el t√≠tulo y subt√≠tulo utilizando patchwork.\n\n\nOcultar c√≥digo\nmi_titulo &lt;- glue(\n  \"En la familia &lt;span style='color:{c4}'&gt;Simpson&lt;/span&gt;&lt;br&gt;todo queda en casa\"\n)\n\nmi_subtitulo &lt;- \"Top 5 de lugares en los que aparece&lt;br&gt;\n  cada integrante de la familia\"\n\nh &lt;- ggplot() +\n  annotate(\n    geom = \"richtext\", x = 0, y = c(0, -.9), color = c5, size = c(13, 7),\n    label = c(mi_titulo, mi_subtitulo), family = \"ubuntu\", fontface = \"bold\",\n    lineheight = 1, hjust = 0, fill = NA, label.color = NA\n  ) +\n  coord_cartesian(\n    expand = FALSE, xlim = c(-.02, 1), ylim = c(-1, .5), clip = \"off\"\n  ) +\n  theme_void() +\n  theme(\n    aspect.ratio = .3\n  )\n\ni &lt;- g +\n  inset_element(\n    h,\n    left = .5,\n    bottom = -.01,\n    right = 1,\n    top = .5,\n    align_to = \"full\",\n    clip = FALSE\n  ) +\n  plot_annotation(\n    theme = theme_void()\n  )\n\n\nGuardo\n\n\nOcultar c√≥digo\nggsave(\n  plot = i,\n  filename = \"tidytuesday/2025/semana_05.png\",\n  width = 30,\n  height = 28,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 05"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_23.html",
    "href": "tidytuesday/2025/semana_23.html",
    "title": "Semana 23",
    "section": "",
    "text": "Categor√≠a racial y g√©nero de jueces federales de EE.UU.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 23"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_23.html#paquetes",
    "href": "tidytuesday/2025/semana_23.html#paquetes",
    "title": "Semana 23",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 23"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_23.html#estilos",
    "href": "tidytuesday/2025/semana_23.html#estilos",
    "title": "Semana 23",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nMoMAColors::moma.colors(palette_name = \"Palermo\")\nc1 &lt;- \"#0C3C5F\"\nc2 &lt;- \"#E24346\"\nc3 &lt;- \"#894143\"\nc4 &lt;- \"#196C9D\"\nc5 &lt;- \"#FCFBFD\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 23"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_23.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_23.html#ep√≠grafe",
    "title": "Semana 23",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 23, \",\n    \"&lt;b&gt;{{historydata}}&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 23"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_23.html#datos",
    "href": "tidytuesday/2025/semana_23.html#datos",
    "title": "Semana 23",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 23)\njudges_people &lt;- tuesdata$judges_people",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 23"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_23.html#procesamiento",
    "href": "tidytuesday/2025/semana_23.html#procesamiento",
    "title": "Semana 23",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa la cantidad de jueces masculinos y femeninos, seg√∫n su categor√≠a racial.\nSelecciono las m√°s frecuentes, agrego sus traducciones y asigno colores.\n\n\nOcultar c√≥digo\nrace_v &lt;- c(\"Asian American\", \"Hispanic\", \"African American\", \"White\")\nrace_trad &lt;- c(\"Asi√°tico\\namericano\", \"Hispano\", \"Afroamericano\", \"Blanco\")\n\nrace_trad &lt;- glue(\n  \"&lt;b style='color: {c(c4, c3, c2, c1)}'&gt;\n  {race_trad}\n  &lt;/b&gt;\"\n)\n\nrace_trad &lt;- set_names(race_trad, race_v)\n\n\nCreo funci√≥n para generar una grilla con puntos aleatorios\n\n\nOcultar c√≥digo\nset.seed(2025)\nf_puntos &lt;- function(n, fila, columna) {\n  lado &lt;- ceiling(sqrt(n))\n  expand_grid(\n    x = seq(fila+.2, fila+.8, length.out = lado),\n    y = seq(columna+.2, columna+.8, length.out = lado)\n  ) |&gt; \n    mutate(\n      x = x+rnorm(lado^2)*.025,\n      y = y+rnorm(lado^2)*.025\n    ) |&gt; \n    slice_head(n = n)\n}\n\n\nCuento la cantidad de jueces por categor√≠a racial y g√©nero. Genero los puntos a partir de las cantidades y posiciones.\n\n\nOcultar c√≥digo\nd &lt;- judges_people |&gt; \n  count(race, gender, sort = TRUE) |&gt; \n  drop_na() |&gt; \n  filter(n &gt;= 9) |&gt; \n  mutate(tipo = race_trad[race]) |&gt; \n  mutate(tipo = fct_reorder(tipo, n)) |&gt; \n  mutate(tipo = fct_rev(tipo)) |&gt;\n  arrange(desc(race), gender) |&gt; \n  mutate(\n    columna = map_dbl(tipo, ~which(.x == race_trad)),\n    fila = if_else(gender == \"F\", 1, 2)\n  )\n\nl &lt;- pmap(\n  .l = list(d$n, d$fila, d$columna),\n  .f = f_puntos\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 23"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_23.html#figura",
    "href": "tidytuesday/2025/semana_23.html#figura",
    "title": "Semana 23",
    "section": "Figura",
    "text": "Figura\nDefino los rect√°ngulos alrededor de las categor√≠as raciales y del g√©nero.\n\n\nOcultar c√≥digo\nfilas_tbl &lt;- tibble(\n  xmin = .3,\n  xmax = 3,\n  ymin = 1:4+.05,\n  ymax = 2:5-.05\n)\n\ncolumnas_tbl &lt;- tibble(\n  xmin = c(1, 2)+.05,\n  xmax = c(2, 3)-.05,\n  ymin = 1,\n  ymax = 5.3\n)\n\n\nT√≠tulo y figura.\n\n\nOcultar c√≥digo\nmi_titulo &lt;- glue(\n  \"Categor√≠as raciales y g√©nero de {sum(d$n)} jueces&lt;br&gt;federales de **EE.UU.** \n  desde 1789.\"\n)\n\ng &lt;- d |&gt; \n  mutate(p = l) |&gt; \n  unnest(p) |&gt; \n  ggplot(aes(x, y, color = tipo)) +\n  geom_rect(\n    data = filas_tbl,\n    aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),\n    fill = alpha(\"grey\", .4), linetype = 1, linewidth = 1, color = NA,\n    inherit.aes = FALSE\n  ) +\n  geom_rect(\n    data = columnas_tbl,\n    aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),\n    fill = alpha(\"grey\", .4), linetype = 1, linewidth = 1, color = NA,\n    inherit.aes = FALSE\n  ) +\n  geom_point(alpha = .5, size = 2, show.legend = FALSE) +\n  annotate(\n    geom = \"richtext\",\n    x = filas_tbl$xmin,\n    y = filas_tbl$ymax,\n    hjust = 0,\n    vjust = 1,\n    fill = NA,\n    label = race_trad,\n    label.color = NA,\n    size = 6.5,\n    family = \"ubuntu\"\n  ) +\n  annotate(\n    geom = \"richtext\",\n    x = columnas_tbl$xmin,\n    y = columnas_tbl$ymax,\n    hjust = 0,\n    vjust = 1,\n    fill = NA,\n    label = c(\"Femenino\", \"Masculino\"),\n    label.color = NA,\n    size = 6.5,\n    family = \"ubuntu\",\n    fontface = \"bold\"\n  ) +\n  labs(title = mi_titulo, caption = mi_caption) +\n  coord_equal() +\n  scale_color_manual(\n    values = c(c1, c2, c3, c4)\n  ) +\n  theme_void(base_size = 20, base_family = \"ubuntu\") +\n  theme(\n    plot.background = element_rect(fill = c5, color = NA),\n    plot.margin = margin(5, 5, 10, 5),\n    plot.title = element_markdown(\n      color = c1, lineheight = 1.2, margin = margin(l = 10, t = 10)\n    ),\n    plot.caption = element_markdown(\n      color = c2, lineheight = 1.2, margin = margin(r = 20)\n    )\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_23.png\",\n  width = 20,\n  height = 35,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 23"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_24.html",
    "href": "tidytuesday/2025/semana_24.html",
    "title": "Semana 24",
    "section": "",
    "text": "Cantidad de APIs por categor√≠a.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 24"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_24.html#paquetes",
    "href": "tidytuesday/2025/semana_24.html#paquetes",
    "title": "Semana 24",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 24"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_24.html#estilos",
    "href": "tidytuesday/2025/semana_24.html#estilos",
    "title": "Semana 24",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"#082844\"\nc2 &lt;- \"#8DADCA\"\nc3 &lt;- \"white\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 24"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_24.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_24.html#ep√≠grafe",
    "title": "Semana 24",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 24, \",\n  \"&lt;b&gt;APIs.guru&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 24"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_24.html#datos",
    "href": "tidytuesday/2025/semana_24.html#datos",
    "title": "Semana 24",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 24)\napi_categories &lt;- tuesdata$api_categories",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 24"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_24.html#procesamiento",
    "href": "tidytuesday/2025/semana_24.html#procesamiento",
    "title": "Semana 24",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesan las categor√≠as de las API.\n\n\nOcultar c√≥digo\nd &lt;- count(api_categories, apisguru_category, sort = TRUE) |&gt;\n  filter(n &gt;= 10) |&gt;\n  mutate(\n    categoria = str_replace_all(apisguru_category, \"_\", \" \") |&gt; toupper()\n  ) |&gt;\n  mutate(\n    categoria = fct_reorder(categoria, n)\n  ) |&gt;\n  mutate(hjust = if_else(n &gt; 10, 1.05, -.05)) |&gt;\n  mutate(color = if_else(n &gt; 10, c1, c2))",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 24"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_24.html#figura",
    "href": "tidytuesday/2025/semana_24.html#figura",
    "title": "Semana 24",
    "section": "Figura",
    "text": "Figura\nLogo y t√≠tulo.\n\n\nOcultar c√≥digo\nmi_titulo &lt;- glue(\n  \"Categor√≠as principales a partir de {nrow(api_categories)} **API**s.\"\n)\n\nlogo_link &lt;- \"https://apis.guru/assets/images/logo.svg\"\nlogo_svg &lt;- paste(readLines(logo_link), collapse = \"\\n\")\n\n\nFigura.\n\n\nOcultar c√≥digo\ng &lt;- ggplot(d, aes(n, categoria)) +\n  geom_col(fill = c2, color = NA) +\n  geom_text(\n    aes(label = categoria, hjust = hjust, color = color),\n    family = \"jet\",\n    size = 8\n  ) +\n  ggsvg::geom_point_svg(\n    x = I(.985),\n    y = I(25.7),\n    svg = logo_svg,\n    size = 10,\n    inherit.aes = FALSE\n  ) +\n  scale_x_log10() +\n  scale_color_identity() +\n  coord_cartesian(\n    ylim = c(0, nrow(d) + 1),\n    xlim = c(.9, 1200),\n    expand = FALSE,\n    clip = \"off\"\n  ) +\n  labs(x = NULL, y = NULL, title = mi_titulo, caption = mi_caption) +\n  ggthemes::theme_par(base_size = 15, base_family = \"jet\") +\n  theme(\n    aspect.ratio = 1,\n    plot.background = element_rect(fill = c2, color = NA),\n    plot.title = element_markdown(\n      family = \"ubuntu\",\n      color = c1,\n      hjust = 0,\n      face = \"plain\"\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\",\n      color = c3,\n      margin = margin(t = 20),\n      lineheight = 1.2,\n      size = 15\n    ),\n    panel.background = element_rect(fill = c1, color = NA),\n    axis.line = element_blank(),\n    axis.ticks = element_blank(),\n    axis.text.x = element_text(color = c1),\n    axis.text.y = element_blank()\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_24.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 24"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_09.html",
    "href": "tidytuesday/2025/semana_09.html",
    "title": "Semana 09",
    "section": "",
    "text": "Nombres m√°s populares de gatos y perros.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 09"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_09.html#paquetes",
    "href": "tidytuesday/2025/semana_09.html#paquetes",
    "title": "Semana 09",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 09"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_09.html#estilos",
    "href": "tidytuesday/2025/semana_09.html#estilos",
    "title": "Semana 09",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"#6497B1\"\nc2 &lt;- \"#FFF2F5\"\nc3 &lt;- \"#6A359C\"\nc4 &lt;- \"#679C35\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nfont_add(\n  family = \"bebas\",\n  regular = \"././fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 09"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_09.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_09.html#ep√≠grafe",
    "title": "Semana 09",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 09, \",\n    \"&lt;b&gt;{{animalshelter}}&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 09"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_09.html#datos",
    "href": "tidytuesday/2025/semana_09.html#datos",
    "title": "Semana 09",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 09)\nlongbeach &lt;- tuesdata$longbeach",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 09"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_09.html#procesamiento",
    "href": "tidytuesday/2025/semana_09.html#procesamiento",
    "title": "Semana 09",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesan los nombres m√°s populares en perros y gatos.\n\n\nOcultar c√≥digo\nnombres &lt;- longbeach |&gt;\n  select(animal_name, animal_type) |&gt;\n  filter(!str_detect(animal_name, fixed(\"*\"))) |&gt;\n  filter(animal_name != \"unknown\") |&gt;\n  filter(!str_detect(animal_name, \"kitten\")) |&gt;\n  count(animal_name, animal_type) |&gt;\n  slice_max(order_by = n, n = 10, by = animal_type, with_ties = FALSE) |&gt;\n  filter(animal_type %in% c(\"dog\", \"cat\")) |&gt;\n  select(-n, \"nombre\" = animal_name, \"tipo\" = animal_type)\n\n\nDispongo los nombres de manera radial.\n\n\nOcultar c√≥digo\nradio &lt;- 1\n\nd &lt;- nombres |&gt;\n  mutate(\n    id = row_number(), .by = tipo\n  ) |&gt;\n  mutate(\n    alfa = id/max(id)*2*pi\n  ) |&gt;\n  mutate(\n    x = radio*cos(alfa),\n    y = radio*sin(alfa)\n  ) |&gt;\n  mutate(\n    color = rep(PrettyCols::prettycols(palette = \"Bold\"), 4)\n  )\n\n\n√çconos de perro y gato para ubicar en el centro de cada panel.\n\n\nOcultar c√≥digo\nicono &lt;- tibble(\n  x = 0,\n  y = -.14,\n  label = c(\"&#xf0a43;\", \"&#xf011b;\"),\n  tipo = c(\"dog\", \"cat\"),\n  color = c(c1, c4)\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 09"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_09.html#figura",
    "href": "tidytuesday/2025/semana_09.html#figura",
    "title": "Semana 09",
    "section": "Figura",
    "text": "Figura\n√çconos coloreados de perro y gato para usar en el subt√≠tulo.\n\n\nOcultar c√≥digo\nperros &lt;- glue(\"&lt;b style='color: {c1}'&gt;perros&lt;/b&gt;\")\ngatos &lt;- glue(\"&lt;b style='color: {c4}'&gt;gatos&lt;/b&gt;\")\n\nmi_subtitulo &lt;- glue(\n  \"Top 10 nombres m√°s populares en {gatos} y {perros} del refugio Long\n  Beach, en California\"\n)\n\n\nFigura.\n\n\nOcultar c√≥digo\ng &lt;- ggplot(d, aes(x, y, label = nombre, color = color)) +\n  geom_segment(\n    aes(x = 0, y = 0, xend = x, yend = y, color = color), linewidth = 1\n  ) +\n  annotate(\n    geom = \"point\", x = 0, y = 0, size = 70, color = c2\n  ) +\n  geom_richtext(\n    family = \"bebas\", size = 10, label.color = NA, fill = c2,\n    label.padding = unit(.1, \"lines\")\n  ) +\n  geom_richtext(\n    data = icono, aes(x, y, label = label, color = color), family = \"jet\",\n    fill = NA, label.color = NA, size = 90, inherit.aes = FALSE\n  ) +\n  facet_wrap(vars(tipo), nrow = 1) +\n  scale_color_identity() +\n  coord_cartesian(\n    clip = \"off\", expand = FALSE, xlim = c(-1, 1), ylim = c(-1, 1)\n  ) +\n  labs(subtitle = mi_subtitulo, caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    text = element_text(family = \"ubuntu\", color = c3),\n    plot.margin = margin(l = 30, r = 30),\n    plot.background = element_rect(fill = c2, color = NA),\n    plot.subtitle = element_markdown(\n      size = 20, hjust = .5, margin = margin(b = 20, t = 10)\n    ),\n    plot.caption = element_markdown(\n      margin = margin(b = 5, t = 30), lineheight = 1.3\n    ),\n    panel.spacing.x = unit(5, \"cm\"),\n    panel.background = element_blank(),\n    strip.text = element_blank()\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_09.png\",\n  width = 30,\n  height = 15,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 09"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_13.html",
    "href": "tidytuesday/2025/semana_13.html",
    "title": "Semana 13",
    "section": "",
    "text": "Capacidad de ataque y defensa para cada tipo principal de Pokemon.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 13"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_13.html#paquetes",
    "href": "tidytuesday/2025/semana_13.html#paquetes",
    "title": "Semana 13",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidytext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 13"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_13.html#estilos",
    "href": "tidytuesday/2025/semana_13.html#estilos",
    "title": "Semana 13",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"#9C1052\"\nc2 &lt;- \"grey95\"\nc3 &lt;- \"#3E4E1E\"\nc4 &lt;- \"#3A5DA8\"\nc5 &lt;- \"grey95\"\nc6 &lt;- \"black\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 13"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_13.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_13.html#ep√≠grafe",
    "title": "Semana 13",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 13, \",\n    \"&lt;b style='font-family:jet;'&gt;{{pokemon}}&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 13"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_13.html#datos",
    "href": "tidytuesday/2025/semana_13.html#datos",
    "title": "Semana 13",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 13)\npokemon &lt;- tuesdata$pokemon_df",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 13"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_13.html#procesamiento",
    "href": "tidytuesday/2025/semana_13.html#procesamiento",
    "title": "Semana 13",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa la distribuci√≥n de los puntos de ataque y defensa por cada tipo principal de Pokemon. Agregar, cuando est√© disponible, los √≠conos de cada Pokemon que tenga el m√°ximo valor por cada tipo.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 13"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_13.html#figura",
    "href": "tidytuesday/2025/semana_13.html#figura",
    "title": "Semana 13",
    "section": "Figura",
    "text": "Figura\nLogo y traducciones de los tipos principales de Pokemon.\n\n\nOcultar c√≥digo\nlink &lt;- \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/International_Pok%C3%A9mon_logo.svg/1024px-International_Pok%C3%A9mon_logo.svg.png\"\nlogo &lt;- glue(\"&lt;img src='{link}' width=150 /&gt;\")\n\ntipos_v &lt;- unique(pokemon$type_1)\ntipos_v_trad &lt;- c(\n  \"Planta\", \"Fuego\", \"Agua\", \"Bicho\", \"Normal\", \"Veneno\", \"El√©ctrico\", \"Tierra\",\n  \"Hada\", \"Lucha\", \"Ps√≠quico\", \"Roca\", \"Fantasma\", \"Hielo\", \"Drag√≥n\",\n  \"Siniestro\", \"Acero\", \"Volador\"\n)\ntipos_v_trad &lt;- set_names(tipos_v_trad, tipos_v)\n\n\nAcomodo los datos y ordeno los tipos de Pokemon por capacidad de ataque y defensa.\n\n\nOcultar c√≥digo\nd &lt;- pokemon |&gt;\n  pivot_longer(\n    cols = c(attack, defense),\n    names_to = \"modo\",\n    values_to = \"puntos\"\n  ) |&gt;\n  select(pokemon, puntos, type_1, url_icon, modo) |&gt;\n  mutate(tipo = tipos_v_trad[type_1]) |&gt;\n  mutate(\n    tipo = reorder_within(x = tipo, by = puntos, within = modo, fun = median)\n  ) |&gt;\n  mutate(modo = if_else(modo == \"attack\", \"Ataque\", \"Defensa\"))\n\n\nAgrego √≠conos de los Pokemon que est√©n disponibles, para el valor m√°ximo de cada tipo principal\n\n\nOcultar c√≥digo\nd_icon &lt;- d |&gt;\n  slice_max(order_by = puntos, n = 1, by = c(tipo, modo), with_ties = FALSE) |&gt;\n  mutate(\n    label = if_else(\n      is.na(url_icon),\n      \"\",\n      glue(\n        \"&lt;img src='https:{url_icon}' width=35 /&gt;\"\n      )\n    )\n  )\n\n\nFigura.\n\n\nOcultar c√≥digo\ng &lt;- ggplot(\n  d, aes(x = puntos, y = tipo, fill = puntos)\n) +\n  geom_richtext(\n    data = d_icon, aes(label = label), fill = NA, hjust = 0,\n    label.color = NA\n  ) +\n  geom_point(\n    position = position_jitter(seed = 2025, height = .1), shape = 21,\n    color = c6, size = 2, alpha = .7\n  ) +\n  facet_wrap(vars(modo), nrow = 1, scales = \"free\") +\n  scale_x_continuous(limits = c(0, 231), breaks = seq(0, 200, 50)) +\n  scale_fill_gradientn(\n    colours = c(c1, c2, c3),\n    values = scales::rescale(\n      c(min(d$puntos, na.rm = TRUE), median(d$puntos, na.rm = TRUE),\n      max(d$puntos, na.rm = TRUE))\n    )\n  ) +\n  scale_y_reordered() +\n  coord_cartesian(clip = \"off\", expand = FALSE, ylim = c(.5, 18.5)) +\n  labs(x = NULL, y = NULL, tag = logo, caption = mi_caption) +\n  ggridges::theme_ridges() +\n  theme(\n    text = element_text(family = \"ubuntu\", size = 15, color = c4),\n    aspect.ratio = 1.5,\n    plot.background = element_rect(fill = c5),\n    plot.margin = margin(r = 40, l = 20, t = 45, b = 10),\n    plot.caption = element_markdown(\n      size = 12, color = c3, lineheight = 1.1, margin = margin(t = 15)\n    ),\n    plot.tag = element_markdown(),\n    plot.tag.position = c(.45, 1.025),\n    plot.tag.location = \"plot\",\n    panel.grid.major.y = element_blank(),\n    axis.text.x = element_text(family = \"jet\", color = c4),\n    axis.text.y = element_text(vjust = .5, color = c4),\n    axis.ticks = element_blank(),\n    legend.position = \"none\",\n    strip.text = element_text(\n      hjust = 0, face = \"bold\", size = 20, margin = margin(b = 5)\n    ),\n    strip.background = element_blank()\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_13.png\",\n  width = 30,\n  height = 22,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 13"
    ]
  },
  {
    "objectID": "tidytuesday/2025/index.html",
    "href": "tidytuesday/2025/index.html",
    "title": "Introducci√≥n",
    "section": "",
    "text": "2025\n\n\n   \n    \n    \n      Ordenar por\n      Por defecto\n      \n        T√≠tulo\n      \n      \n        Fecha - Menos reciente\n      \n      \n        Fecha - M√°s reciente\n      \n      \n        Autor/a\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nSemana 28\n\n\n\ngeom_image\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2025-07-20\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 27\n\n\n\ngeom_tile\n\ngeom_text\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2025-07-20\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 26\n\n\n\ngeom_line\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2025-07-20\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 25\n\n\n\ngeom_line\n\ngeom_point\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 24\n\n\n\ngeom_col\n\ngeom_text\n\ngeom_point_svg\n\n\n\n\n\n\n\n\n\n2025-06-17\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 23\n\n\n\ngeom_rect\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2025-06-10\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 22\n\n\n\ngeom_segment\n\ngeom_point\n\ngeom_marquee\n\n\n\n\n\n\n\n\n\n2025-06-03\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 21\n\n\n\ngeom_text\n\ngeom_rect\n\ngeom_point\n\ngeom_smooth\n\n\n\n\n\n\n\n\n\n2025-05-27\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 20\n\n\n\ngeom_spatvector\n\ngeom_spatvector_text\n\ngeom_spatraster\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2025-07-20\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 19\n\n\n\ngeom_spatraster\n\ngeom_spatvector\n\n\n\n\n\n\n\n\n\n2025-07-20\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 18\n\n\n\nplot_usmap\n\n\n\n\n\n\n\n\n\n2025-07-20\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 17\n\n\n\ngeom_marquee\n\n\n\n\n\n\n\n\n\n2025-04-29\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 16\n\n\n\ngeom_segment\n\ngeom_line\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2025-04-22\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 15\n\n\n\ngeom_spatraster\n\ngeom_spatvector\n\ngeom_spatvector_label\n\n\n\n\n\n\n\n\n\n2025-04-15\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 14\n\n\n\ngeom_vline\n\ngeom_point\n\ngeom_segment\n\ngeom_label\n\n\n\n\n\n\n\n\n\n2025-04-08\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 13\n\n\n\ngeom_richtext\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2025-04-01\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 12\n\n\n\ngeom_line\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2025-03-25\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 11\n\n\n\ngeom_smooth\n\ngeom_abline\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2025-03-18\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 10\n\n\n\ngeom_point\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2025-03-11\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 09\n\n\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2025-03-04\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 08\n\n\n\ngeom_text_wordcloud\n\n\n\n\n\n\n\n\n\n2025-02-25\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 07\n\n\n\ngeom_spatvector\n\nplot_usmap\n\n\n\n\n\n\n\n\n\n2025-02-18\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 06\n\n\n\ngeom_treemap\n\ngeom_from_path\n\n\n\n\n\n\n\n\n\n2025-02-11\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 05\n\n\n\ngeom_segment\n\ngeom_label\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2025-02-04\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 04\n\n\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2025-01-28\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 03\n\n\n\ngeom_area\n\n\n\n\n\n\n\n\n\n2025-01-21\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 02\n\n\n\ngeom_col\n\ngeom_text\n\n\n\n\n\n\n\n\n\n2025-01-14\n\n\nV√≠ctor Gauto\n\n\n\n\n\nNo hay resultados\n\n  \n\n\nAdi√≥s.\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_02.html",
    "href": "tidytuesday/2025/semana_02.html",
    "title": "Semana 02",
    "section": "",
    "text": "Conferencias asociadas a quarto en posit::conf entre 2023 y 2024.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 02"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_02.html#paquetes",
    "href": "tidytuesday/2025/semana_02.html#paquetes",
    "title": "Semana 02",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 02"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_02.html#estilos",
    "href": "tidytuesday/2025/semana_02.html#estilos",
    "title": "Semana 02",
    "section": "Estilos",
    "text": "Estilos\nColores\n\n\nOcultar c√≥digo\nc1 &lt;- \"#447099\"\nc2 &lt;- \"#75AADB\"\nc3 &lt;- \"#F0F5F9\"\nc4 &lt;- \"black\"\n\n\nFuentes: Ubuntu y JetBrains Mono\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 02"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_02.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_02.html#ep√≠grafe",
    "title": "Semana 02",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 2, \",\n    \"&lt;b&gt;&lt;span style='font-family:jet'&gt;posit::conf&lt;/jet&gt;&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 02"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_02.html#datos",
    "href": "tidytuesday/2025/semana_02.html#datos",
    "title": "Semana 02",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 2)\nconf2023 &lt;- tuesdata$conf2023\nconf2024 &lt;- tuesdata$conf2024",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 02"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_02.html#procesamiento",
    "href": "tidytuesday/2025/semana_02.html#procesamiento",
    "title": "Semana 02",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa la cantidad de conferencias que hablan de QUARTO entre 2023 y 2024\n\n\nOcultar c√≥digo\nn2023 &lt;- conf2023 |&gt;\n  mutate(quarto = str_detect(session_abstract, \"quarto|Quarto\")) |&gt;\n  dplyr::filter(quarto) |&gt;\n  nrow()\n\nn2024 &lt;- conf2024 |&gt;\n  mutate(quarto = str_detect(description, \"quarto|Quarto\")) |&gt;\n  dplyr::filter(quarto) |&gt;\n  nrow()\n\nd &lt;- tibble(\n  a√±o = c(2023, 2024),\n  n = c(n2023, n2024)\n) |&gt;\n  mutate(\n    a√±o = paste0(\"posit::conf\\n\", a√±o)\n  )",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 02"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_02.html#figura",
    "href": "tidytuesday/2025/semana_02.html#figura",
    "title": "Semana 02",
    "section": "Figura",
    "text": "Figura\nLogo y subt√≠tulo\n\n\nOcultar c√≥digo\nlogo &lt;- \"https://quarto.org/quarto.png\"\nlogo_img &lt;- glue(\n  \"&lt;img src='{logo}' width=250 /&gt;\"\n)\n\nmi_subitulo &lt;- glue(\n  \"La cantidad de conferencias&lt;br&gt;que incluyen\n  &lt;span style='font-family:jet; color:{c1}'&gt;quarto&lt;/span&gt; &lt;br&gt;\n  amentaron en las ediciones&lt;br&gt;\n  2023 y 2024 de &lt;span style='font-family:jet; color:{c1}'&gt;posit::conf&lt;/span&gt;\"\n)\n\n\nFigura\n\n\nOcultar c√≥digo\ng &lt;- ggplot(d, aes(a√±o, n, label = n)) +\n  geom_col(fill = c1) +\n  geom_text(vjust = -.2, family = \"jet\", size = 9, color = c2) +\n  annotate(\n    geom = \"richtext\", x = 2.12, y = 25, label = logo_img, fill = NA,\n    vjust = -1.2, label.color = NA\n  ) +\n  scale_y_continuous(limits = c(0, 25)) +\n  coord_cartesian(expand = FALSE, xlim = c(.5, 2.5), clip = \"off\") +\n  labs(caption = mi_caption, subtitle = mi_subitulo) +\n  theme_void(base_size = 22, base_family = \"ubuntu\") +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(25, 5, 5, 5),\n    plot.background = element_rect(fill = c3, color = NA),\n    plot.subtitle = element_markdown(\n      color = c4, size = 30, lineheight = 1.3, margin = margin(b = 30, l = 20)\n    ),\n    plot.caption = element_markdown(\n      color = c2, lineheight = 1.2, margin = margin(b = 5, t = 20)\n    ),\n    axis.text.x = element_text(margin = margin(t = 5), family = \"jet\"),\n  )\n\n\nGuardo\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_02.png\",\n  width = 30,\n  height = 40,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 02"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_12.html",
    "href": "tidytuesday/2025/semana_12.html",
    "title": "Semana 12",
    "section": "",
    "text": "Frecuencia de la palabra amazon en los reportes anuales de Amazon.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 12"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_12.html#paquetes",
    "href": "tidytuesday/2025/semana_12.html#paquetes",
    "title": "Semana 12",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 12"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_12.html#estilos",
    "href": "tidytuesday/2025/semana_12.html#estilos",
    "title": "Semana 12",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"#FF6200\"\nc2 &lt;- \"#101722\"\nc3 &lt;- \"grey80\"\nc4 &lt;- \"grey90\"\n\n\nFuentes: Ubuntu, JetBrains Mono y Bebas Neue.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nfont_add(\n  family = \"bebas\",\n  regular = \"././fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 12"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_12.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_12.html#ep√≠grafe",
    "title": "Semana 12",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 12, \",\n    \"&lt;b&gt;Reporte anual de Amazon&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 12"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_12.html#datos",
    "href": "tidytuesday/2025/semana_12.html#datos",
    "title": "Semana 12",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 12)\npalabras &lt;- tuesdata$report_words_clean",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 12"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_12.html#procesamiento",
    "href": "tidytuesday/2025/semana_12.html#procesamiento",
    "title": "Semana 12",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa la cantidad de veces que aparece la palabra amazon en cada reporte anual.\n\n\nOcultar c√≥digo\nd &lt;- palabras |&gt;\n  filter(str_detect(word, \"amazon\")) |&gt;\n  count(year)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 12"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_12.html#figura",
    "href": "tidytuesday/2025/semana_12.html#figura",
    "title": "Semana 12",
    "section": "Figura",
    "text": "Figura\nLogo de Amazon, t√≠tulo y descripci√≥n.\n\n\nOcultar c√≥digo\nlink &lt;- \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/06/Amazon_2024.svg/960px-Amazon_2024.svg.png\"\nlogo &lt;- glue(\"&lt;img src='{link}' width=110 /&gt;\")\n\nmi_titulo &lt;- glue(\n  \"{logo} hablando de {logo}\"\n)\n\nmi_subtitulo &lt;- glue(\n  \"Cantidad de veces que aparece la palabra\n  &lt;b style='color: {c1}'&gt;amazon&lt;/b&gt;&lt;br&gt; en los reportes anuales de\n  &lt;b style='color: {c1}'&gt;amazon&lt;/b&gt;.\"\n)\n\n\nFigura.\n\n\nOcultar c√≥digo\ng &lt;- ggplot(d, aes(year, n)) +\n  geom_line(\n    color = c1, linewidth = 5, arrow = arrow(), lineend = \"round\"\n  ) +\n  geom_point(data = slice(d, 1:(nrow(d)-1)), color = c4, size = 2) +\n  annotate(\n    geom = \"richtext\", x = I(1), y = I(.25), label = mi_subtitulo, fill = c4,\n    label.color = NA, size = 7, family = \"ubuntu\", hjust = 1\n  ) +\n  scale_x_continuous(limits = c(2002.5, 2023)) +\n  scale_y_continuous(limits = c(-17, 220)) +\n  coord_cartesian(expand = FALSE, clip = \"off\") +\n  labs(title = mi_titulo, caption = mi_caption) +\n  theme_void() +\n  theme(\n    text = element_text(color = c2),\n    aspect.ratio = 1,\n    plot.margin = margin(25, 5, 15, 5),\n    plot.background = element_rect(fill = c4, color = NA),\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(\n      family = \"ubuntu\", color = c2, size = 50, margin = margin(b = 25),\n      hjust = .5\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 15, color = c2, margin = margin(t = 25),\n      lineheight = 1.1\n    ),\n    panel.grid.major = element_line(linewidth = .2, color = c3, linetype = 1),\n    axis.text = element_text(\n      family = \"bebas\", color = c3, face = \"bold\", size = 70\n    ),\n    axis.text.x = element_text(hjust = -0.03, margin = margin(t = -53)),\n    axis.text.y = element_text(\n      vjust = -.1, margin = margin(r = -90), hjust = 1\n    )\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_12.png\",\n  width = 30,\n  height = 33,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 12"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_07.html",
    "href": "tidytuesday/2025/semana_07.html",
    "title": "Semana 07",
    "section": "",
    "text": "Agencias de seguridad en Universidades de EE.UU.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 07"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_07.html#paquetes",
    "href": "tidytuesday/2025/semana_07.html#paquetes",
    "title": "Semana 07",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 07"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_07.html#estilos",
    "href": "tidytuesday/2025/semana_07.html#estilos",
    "title": "Semana 07",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"#005D67\"\nc2 &lt;- \"#1B817F\"\nc3 &lt;- \"#9FCEBA\"\nc4 &lt;- \"#F9FFAF\"\nc5 &lt;- \"white\"\n\n\nFuente: Ubuntu.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 07"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_07.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_07.html#ep√≠grafe",
    "title": "Semana 07",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c4};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 07, \",\n  \"&lt;b&gt;FBI Crime Data API&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c4};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c4};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 07"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_07.html#datos",
    "href": "tidytuesday/2025/semana_07.html#datos",
    "title": "Semana 07",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 07)\nagencies &lt;- tuesdata$agencies",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 07"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_07.html#procesamiento",
    "href": "tidytuesday/2025/semana_07.html#procesamiento",
    "title": "Semana 07",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesan las agencias de seguridad asociadas a universidades.\n\n\nOcultar c√≥digo\nv &lt;- agencies |&gt;\n  filter(agency_type == \"University or College\" & state != \"Alaska\") |&gt;\n  drop_na(latitude, longitude) |&gt;\n  terra::vect(geom = c(\"longitude\", \"latitude\"), crs = \"EPSG:4326\") |&gt;\n  terra::project(\"ESRI:102003\")",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 07"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_07.html#figura",
    "href": "tidytuesday/2025/semana_07.html#figura",
    "title": "Semana 07",
    "section": "Figura",
    "text": "Figura\nLogo y subt√≠tulo.\n\n\nOcultar c√≥digo\nlink_logo &lt;- \"https://cde.ucr.cjis.gov/LATEST/webapp/assets/images/CDE-new-15shad.png\"\nlogo &lt;- glue(\"&lt;img src='{link_logo}' width=250 /&gt;\")\n\nmi_subtitulo &lt;- glue(\n  \"En &lt;b&gt;EE.UU.&lt;/b&gt; existen {nrow(v)} organismos de fuerzas de seguridad\n  con jurisdicci√≥n en &lt;b style='color:{c4}'&gt;Universidades&lt;/b&gt;\"\n)\n\n\nFigura.\n\n\nOcultar c√≥digo\ng &lt;- usmap::plot_usmap(\n    regions = \"states\", exclude = c(\"AK\", \"HI\"), fill = c2, linewidth = 1,\n    color = c1\n  ) +\n  tidyterra::geom_spatvector(\n    data = v, size = 1, alpha = .8, color = c4\n  ) +\n  annotate(\n    geom = \"richtext\", x = I(.2), y = I(.06), label = logo, fill = NA,\n    label.color = NA\n  ) +\n  labs(\n    subtitle = mi_subtitulo, caption = mi_caption\n  ) +\n  theme(\n    plot.background = element_rect(fill = c1, color = NA),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 17, color = c5, hjust = .5,\n      margin = margin(t = 15)\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 10, color = c3, lineheight = 1.1,\n      margin = margin(b = 10, r = 10)\n    )\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_07.png\",\n  width = 30,\n  height = 21,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 07"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_22.html",
    "href": "tidytuesday/2025/semana_22.html",
    "title": "Semana 22",
    "section": "",
    "text": "Cantidad de libros en espa√±ol en el Proyecto Gutenberg.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 22"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_22.html#paquetes",
    "href": "tidytuesday/2025/semana_22.html#paquetes",
    "title": "Semana 22",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(marquee)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 22"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_22.html#estilos",
    "href": "tidytuesday/2025/semana_22.html#estilos",
    "title": "Semana 22",
    "section": "Estilos",
    "text": "Estilos\nColores. Remplazo el color rojo con el del logo de Gutenberg.\n\n\nOcultar c√≥digo\nc1 &lt;- \"#E7A8FB\"\nc2 &lt;- \"#F8B150\"\nc3 &lt;- \"#3B3A3E\"\nc4 &lt;- \"#C2D6A4\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 22"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_22.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_22.html#ep√≠grafe",
    "title": "Semana 22",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 22, \",\n  \"&lt;b&gt;{{gutenbergr}}&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 22"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_22.html#datos",
    "href": "tidytuesday/2025/semana_22.html#datos",
    "title": "Semana 22",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 22)\ngutenberg_metadata &lt;- tuesdata$gutenberg_metadata",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 22"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_22.html#procesamiento",
    "href": "tidytuesday/2025/semana_22.html#procesamiento",
    "title": "Semana 22",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa la cantidad de libros en espa√±ol respecto del total.\n\n\nOcultar c√≥digo\nn_libros &lt;- nrow(gutenberg_metadata)\n\nn_es &lt;- gutenberg_metadata |&gt;\n  filter(language == \"es\") |&gt;\n  nrow()\n\n\nDefino la cantidad de elementos de cada lado y filtro de acuerdo al idioma.\n\n\nOcultar c√≥digo\nlado &lt;- round(sqrt(n_libros))\n\nd &lt;- expand_grid(\n  y = rev(1:lado),\n  x = 1:lado\n) |&gt;\n  mutate(nro = row_number()) |&gt;\n  mutate(espa√±ol = nro &gt; n_es) |&gt;\n  filter(nro &lt;= n_libros)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 22"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_22.html#figura",
    "href": "tidytuesday/2025/semana_22.html#figura",
    "title": "Semana 22",
    "section": "Figura",
    "text": "Figura\nAgrego el estilo de los n√∫meros totales de libros y los que son en espa√±ol, y defino el t√≠tulo.\n\n\nOcultar c√≥digo\nn_libros_label &lt;- glue(\"&lt;span style='font-family: jet'&gt;{n_libros}&lt;/span&gt;\")\nn_es_label &lt;- glue(\"&lt;span style='font-family: jet'&gt;{n_es}&lt;/span&gt;\")\n\nmi_titulo &lt;- glue(\n  \"El &lt;b style='color: {c4}'&gt;Proyecto Gutenberg&lt;/b&gt; es una biblioteca con \n  &lt;span style='color: {c2}'&gt;**{n_libros_label}** libros disponibles&lt;/span&gt;.&lt;br&gt;\n  √önicamente &lt;span style='color: {c1}'&gt;{n_es_label} son en **espa√±ol**.&lt;/span&gt;\"\n)\n\n\nFigura.\n\n\nOcultar c√≥digo\ng &lt;- d |&gt;\n  ggplot(aes(x, y)) +\n  geom_point(aes(color = espa√±ol), size = .3, show.legend = FALSE) +\n  scale_color_manual(\n    breaks = c(FALSE, TRUE),\n    values = c(c1, c2)\n  ) +\n  coord_equal() +\n  labs(title = mi_titulo, caption = mi_caption) +\n  theme_void(base_family = \"ubuntu\", base_size = 20) +\n  theme(\n    plot.background = element_rect(fill = c3, color = NA),\n    plot.title = element_markdown(\n      color = \"white\",\n      lineheight = 1.3,\n      hjust = .5\n    ),\n    plot.caption = element_markdown(\n      color = c2,\n      margin = margin(b = 10, r = 30),\n      lineheight = 1.3\n    )\n  )\n\n\nGuardo\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_22.png\",\n  width = 30,\n  height = 33,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 22"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_04.html",
    "href": "tidytuesday/2025/semana_04.html",
    "title": "Semana 04",
    "section": "",
    "text": "Falta de acceso al agua en EE.UU.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 04"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_04.html#paquetes",
    "href": "tidytuesday/2025/semana_04.html#paquetes",
    "title": "Semana 04",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 04"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_04.html#estilos",
    "href": "tidytuesday/2025/semana_04.html#estilos",
    "title": "Semana 04",
    "section": "Estilos",
    "text": "Estilos\nColores\n\n\nOcultar c√≥digo\nc1 &lt;- \"#4060C8\"\nc2 &lt;- \"#9A153D\"\nc3 &lt;- \"#EAF3FF\"\nc4 &lt;- \"grey50\"\n\n\nFuentes: Ubuntu y JetBrains Mono\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 04"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_04.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_04.html#ep√≠grafe",
    "title": "Semana 04",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 04, \",\n    \"&lt;b&gt;U.S. Census Bureau&lt;/b&gt;, {{tidycensus}}.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 04"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_04.html#datos",
    "href": "tidytuesday/2025/semana_04.html#datos",
    "title": "Semana 04",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 04)\nw23 &lt;- tuesdata$water_insecurity_2023",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 04"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_04.html#procesamiento",
    "href": "tidytuesday/2025/semana_04.html#procesamiento",
    "title": "Semana 04",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa ver la cantidad de gente SIN conexi√≥n a agua potable en 2023.\nCantidad total de viviendas SIN conexi√≥n, y formato para subt√≠tulo\n\n\nOcultar c√≥digo\ns23 &lt;- sum(w23$plumbing, na.rm = TRUE)\ns23_formato &lt;- format(s23, big.mark = \".\", decimal.mark = \",\")\n\n\nTibble que generan puntos con forma de gota y convierto a vector.\nEcuaci√≥n: Teardrop Curve.\n\n\nOcultar c√≥digo\ngota_tbl &lt;- tibble(\n  t = seq(-10, 10, length.out = 1000),\n  x_eje = cos(t),\n  y_eje = sin(t)*sin(t/2)^1.5\n) |&gt;\n  transmute(\n    y = x_eje,\n    x = -y_eje\n  ) |&gt;\n  drop_na()\n\ngota_v &lt;- terra::vect(gota_tbl, geom = c(\"x\", \"y\")) |&gt;\n  terra::as.lines() |&gt;\n  terra::aggregate() |&gt;\n  terra::as.polygons()\n\n\nDentro de la gota agrego puntos aleatoriamente, extraigo las coordenadas para usar con ggplot(). La cantidad de puntos es la de viviendas SIN conexi√≥n\n\n\nOcultar c√≥digo\np23 &lt;- terra::spatSample(gota_v, s23) |&gt;\n  terra::geom(df = TRUE)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 04"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_04.html#figura",
    "href": "tidytuesday/2025/semana_04.html#figura",
    "title": "Semana 04",
    "section": "Figura",
    "text": "Figura\nSubt√≠tulo, rodeando la gota\n\n\nOcultar c√≥digo\nl1 &lt;- glue(\"En 2023, &lt;b style='color:{c1}'&gt;{s23_formato}&lt;/b&gt; viviendas\")\nl2 &lt;- glue(\"&lt;b style='color:{c2}'&gt;NO&lt;/b&gt; ten√≠an instalaciones\")\nl3 &lt;- \"completas* de agua\"\nl4 &lt;- \"en &lt;b&gt;EE.UU.&lt;/b&gt;\"\nmi_subtitulo &lt;- c(l1, l2, l3, l4)\n\n\nAnotaci√≥n, con vi√±etas\n\n\nOcultar c√≥digo\npunto &lt;- \"&lt;span style='font-family:jet; font-size: 10px'&gt;&#xf111;&lt;/span&gt;\"\n\nmi_nota &lt;- glue(\"\n&lt;sup style='color: black; font-size: 20px'&gt;*&lt;/sup&gt;Se considera instalaci√≥n&lt;br&gt;\ncompleta a:&lt;br&gt;\n{punto} Agua corriente fr√≠a/caliente&lt;br&gt;\n{punto} Inodoro&lt;br&gt;\n{punto} Ba√±era/ducha\")\n\n\nFigura\n\n\nOcultar c√≥digo\ng &lt;- ggplot(p23, aes(x, y)) +\n  geom_point(size = .05, aes(color = \"a\"), alpha = .8) +\n  annotate(\n    geom = \"richtext\", x = seq(.02, .15, length.out = 4),\n    y = seq(1, .78, length.out = 4), label = mi_subtitulo,  hjust = 0,\n    vjust = 1, size = 9, family = \"ubuntu\", label.color = NA, fill = NA\n  ) +\n  annotate(\n    geom = \"richtext\", x = -1, y = .3, label = mi_nota, family = \"ubuntu\",\n    hjust = 0, vjust = 1, size = 5, lineheight = 1.1, fill = NA, color = c4,\n    label.color = NA\n  ) +\n  scale_color_manual(\n    breaks = \"a\",\n    values = c1,\n    name = NULL,\n    labels = \"=  Vivienda sin conexi√≥n de agua\"\n  ) +\n  coord_equal(expand = FALSE, clip = \"off\", xlim = range(p23$x)) +\n  labs(caption = mi_caption) +\n  guides(\n    color = guide_legend(override.aes = list(size = 5))\n  ) +\n  theme_void(base_family = \"ubuntu\") +\n  theme(\n    plot.background = element_rect(fill = c3, color = NA),\n    plot.margin = margin(20, 20, 20, 20),\n    plot.subtitle = element_markdown(),\n    plot.caption = element_markdown(\n      size = 15, color = c2, lineheight = 1.2,\n      margin = margin(r = -120, t = 20, b = -15)\n    ),\n    legend.position = \"inside\",\n    legend.position.inside = c(.05, 0),\n    legend.justification.inside = c(.5, 0),\n    legend.text.position = \"right\",\n    legend.key.height = unit(25, \"pt\"),\n    legend.text = element_text(size = 15)\n  )\n\n\nGuardo\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_04.png\",\n  width = 30,\n  height = 31,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 04"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_36.html",
    "href": "tidytuesday/2024/semana_36.html",
    "title": "Semana 36",
    "section": "",
    "text": "Opiniones de usuarios de Argentina en stackoverflow respecto de la Inteligencia Artificial.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\npal &lt;- c(\"#77053C\", \"#9C1052\", \"#D08BAA\")\nc1 &lt;- \"#272F18\"\nc2 &lt;- \"white\"\nc3 &lt;- \"gold\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\n#  IBM Plex Sans\nfont_add_google(name = \"IBM Plex Sans\", family = \"ibm\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{pal[3]};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {36}, \",\n  \"2024 Stack Overflow Annual Developer Survey, &lt;b&gt;Havisha Khurana&lt;/b&gt;.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{pal[3]};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_circulo &lt;- glue(\n  \"&lt;span style='font-family:jet; color: {c3}'&gt;&#xf111;&lt;/span&gt;\")\nicon_so &lt;- glue(\"&lt;span style='font-family:jet'&gt;&#xe710;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{pal[3]};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 36)\nqname &lt;- tuesdata$qname_levels_single_response_crosswalk\nsurvey_questions &lt;- tuesdata$stackoverflow_survey_questions\nsingle_response &lt;- tuesdata$stackoverflow_survey_single_response\n\n# me interesa la opini√≥n de los Argentinos sobre IA\n\n# preguntas y las respuestas asociadas\npreg_level &lt;- inner_join(\n  qname,\n  survey_questions,\n  by = join_by(qname)\n) |&gt; \n  select(question, everything())\n\n# etiqueta de las preguntas\npreg &lt;- c(\"ai_select\", \"ai_acc\", \"ai_complex\", \"ai_threat\")\n\n# respuestas Argentinas\narg_resp &lt;- single_response |&gt; \n  filter(country == \"Argentina\") |&gt; \n  select(any_of(preg)) |&gt; \n  pivot_longer(\n    cols = everything(),\n    names_to = \"qname\",\n    values_to = \"level\"\n  )\n\n# cantidad de respuestas\nd_arg &lt;- inner_join(\n  arg_resp,\n  preg_level,\n  by = join_by(qname, level)\n) |&gt; \n  select(-level) |&gt; \n  count(qname, label, question) |&gt; \n  mutate(tot = sum(n), .by = qname) |&gt; \n  mutate(prop = round(n/tot*100, 1)) |&gt; \n  mutate(qname = fct(qname, levels = preg)) |&gt;\n  mutate(question = fct_reorder(question, as.numeric(qname))) |&gt;\n  mutate(region = \"Argentina\")\n\n# orden de las respuestas\norden_ai_select &lt;- c(\n  \"No, but I plan to soon\",\n  \"No, and I don't plan to\",\n  \"Yes\"\n)\norden_ai_select &lt;- glue(\"1_____{orden_ai_select}\")\n\norden_ai_acc &lt;- c(\n  \"Highly trust\",\n  \"Somewhat trust\",\n  \"Neither trust nor distrust\",\n  \"Somewhat distrust\",\n  \"Highly distrust\"\n)\norden_ai_acc &lt;- glue(\"2_____{orden_ai_acc}\")\n\norden_ai_complex &lt;- c(\n  \"Very poor at handling complex tasks\",\n  \"Bad at handling complex tasks\",\n  \"Neither good or bad at handling complex tasks\",\n  \"Good, but not great at handling complex tasks\",\n  \"Very well at handling complex tasks\"\n)\norden_ai_complex &lt;- glue(\"3_____{orden_ai_complex}\")\n\norden_ai_threat &lt;- c(\n  \"Yes\",\n  \"I'm not sure\",\n  \"No\"\n)\norden_ai_threat &lt;- glue(\"4_____{orden_ai_threat}\")\n\n# acomodo todas las respuestas\nordenes &lt;- c(orden_ai_select, orden_ai_acc, orden_ai_complex, orden_ai_threat)\nordenes_eje &lt;- str_remove(ordenes, \"._____\")\nnames(ordenes_eje) &lt;- ordenes\n\n# traducciones de las respuestas\nordenes_trad &lt;- c(\n  \"No, pero planeo hacerlo pronto\",\n  \"No, y no planeo hacerlo\",\n  \"S√≠\",\n  \"Conf√≠o plenamente\",\n  \"Algo conf√≠o\",\n  \"No conf√≠o ni desconf√≠o\",\n  \"Algo desconf√≠o\",\n  \"Desconf√≠o plenamente\",\n  \"Muy malo operando tareas complejas\",\n  \"Mal operando tareas complejas\",\n  \"Ni bien ni mal operando tareas complejas\",\n  \"Bien operando tareas complejas\",\n  \"Muy bien operando tareas complejas\",\n  \"S√≠\",\n  \"No s√©\",\n  \"No\"\n) |&gt; str_wrap(20)\nnames(ordenes_trad) &lt;- ordenes\n\n# agrego los √≥rdenes a las respuestas\norden_arg &lt;- d_arg |&gt; \n  arrange(qname, label) |&gt; \n  mutate(orden = glue(\"{as.numeric(qname)}_____{label}\")) |&gt; \n  mutate(orden = factor(orden, ordenes)) |&gt; \n  arrange(ordenes) |&gt; \n  mutate(label = fct_inorder(label))\n\n# combino todas las respuestas\nd &lt;- inner_join(orden_arg, d_arg) |&gt; \n  arrange(orden) |&gt; \n  mutate(label = fct_reorder(label, as.numeric(orden)))\n\n# figura ------------------------------------------------------------------\n\n# traducci√≥n de las preguntas\nquestion_trad &lt;- c(\n  \"¬øUs√°s &lt;b&gt;IA&lt;/b&gt; en tu trabajo?\",\n  \"En tu trabajo, ¬øcu√°nta presici√≥n cre√©s que&lt;br&gt;tienen las respuestas generadas por &lt;b&gt;IA&lt;/b&gt;?\",\n  \"Las &lt;b&gt;IA&lt;/b&gt;, ¬øqu√© tan bien manejan las&lt;br&gt;tareas complejas?\",\n  \"En tu trabajo, ¬øcre√©s que la &lt;b&gt;IA&lt;/b&gt; es&lt;br&gt;una amenaza?\")\nquestion_trad &lt;- glue(\"{icon_circulo} {question_trad}\")\nnames(question_trad) &lt;- sort(unique(d$question))\n\n# subt√≠tulo\nmi_subtitulo &lt;- glue(\n  \"Qu√© opinan los usuarios \",\n  \"&lt;b style='color: {c3}; font-family: ibm;'&gt;ARGENTINOS&lt;/b&gt; de \",\n  \"stack &lt;b&gt;overflow&lt;/b&gt; acerca&lt;br&gt;de la Inteligencia Artificial.\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(prop, orden)) +\n  geom_col(show.legend = TRUE, fill = c1) +\n  geom_richtext(\n    aes(label = glue(\"{prop}%\")), hjust = .15, position = position_nudge(y = 0),\n    label.r = unit(0, \"mm\"), label.size = unit(1, \"mm\"), color = c2,\n    label.color = c1, fill = pal[1], family = \"jet\", ) +\n  facet_wrap(\n    vars(question), ncol = 2, scales = \"free\",\n    labeller = as_labeller(question_trad)) +\n  scale_x_continuous(\n    limits = c(0, NA), labels = scales::label_number(suffix = \"%\")\n  ) +\n  scale_y_discrete(labels = ordenes_trad) +\n  coord_cartesian(clip = \"off\", xlim = c(0, NA)) +\n  labs(\n    title = icon_so, subtitle = mi_subtitulo, x = NULL, caption = mi_caption\n  ) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1.1,\n    plot.margin = margin(t = 15, r = 130, l = 16.4, b = 5),\n    plot.background = element_rect(\n      fill = pal[1], color = pal[2], linewidth = 3\n    ),\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(\n      size = 60, color = c3, margin = margin(l = 20)\n    ),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", color = c2, size = 20,\n      margin = margin(l = 120, t = -50)\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c2, size = 12,\n      margin = margin(t = 24, b = 5, r = -110)\n    ),\n    panel.spacing.x = unit(4, \"line\"),\n    panel.spacing.y = unit(2, \"line\"),\n    panel.background = element_rect(fill = pal[2], color = NA),\n    panel.grid.major.x = element_line(\n      colour = pal[3], linetype = \"FF\", linewidth = .1\n    ),\n    axis.text = element_text(color = c2),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(\n      family = \"ubuntu\", hjust = 1, size = 13, margin = margin(r = 5)\n    ),\n    axis.text.x = element_text(\n      family = \"jet\", margin = margin(t = 5), hjust = 0, color = pal[3]\n    ),\n    strip.background = element_blank(),\n    strip.text = element_markdown(\n      family = \"ibm\", color = c2, hjust = 0, size = 15,\n      margin = margin(b = 5)\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s36/viz.png\",\n  width = 30,\n  height = 24,\n  units = \"cm\")\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s36/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 36"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_40.html",
    "href": "tidytuesday/2024/semana_40.html",
    "title": "Semana 40",
    "section": "",
    "text": "Duraci√≥n y cantidad de turnos en el ajedrez.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#8C0172\"\nc2 &lt;- \"#121416\"\nc3 &lt;- \"grey95\"\nc4 &lt;- \"grey60\"\nc5 &lt;- \"grey40\"\nc6 &lt;- \"#62E6CD\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {40}, \",\n  \"&lt;b&gt;lichess.org&lt;/b&gt;.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 40)\nchess &lt;- tuesdata$chess\n\n# me interesa la duraci√≥n de las partidas y la cantidad de movimientos\n\n# convierto los tiempos en fechas y calculo la diferencia en horas\nd &lt;- chess |&gt; \n  select(start_time, end_time, turns) |&gt; \n  mutate(start_time = as.POSIXlt(start_time/1000)) |&gt; \n  mutate(end_time = as.POSIXlt(end_time/1000)) |&gt; \n  mutate(dif = end_time - start_time) |&gt; \n  filter(dif &gt; duration(0)) |&gt; \n  mutate(dif_h = dif/duration(3600))\n\n# 10000 segundos\nh &lt;- duration(1e4)/duration(3600)\nh_label &lt;- format(h, decimal.mark = \",\", digits = 3)\n\nd2 &lt;- filter(d, dif == duration(1e4)) \n\n# figura -----------------------------------------------------------------\n\n# breaks y etiquetas del eje horizontal\nx_horas &lt;- c(1e-3, 1e-2, 1e-1, 1e0, 1e1, 1e2)\nx_horas_format &lt;- format(\n  x_horas, decimal.mark = ',', scientific = FALSE, drop0trailing = TRUE,\n  trim = TRUE)\n\nduration(x_horas*3600)\n\nx_duracion &lt;- c(\"(3,6s)\", \"(36s)\", \"(~6m)\", \"\", \"\", \"(~4d 4h)\")\nx_label &lt;- glue(\"{x_horas_format}hn{x_duracion}\")\n\n# aclaraci√≥n y posici√≥n\netq_label &lt;- glue(\n  \"Hay una cantidad inusualmente\",\n  \"alta de duraciones exactamente\",\n  \"iguales a 10.000s ({h_label}h).\",\n  .sep = \"&lt;br&gt;\"\n)\n\nx_esq &lt;- 7\ny_esq &lt;- 210\n\n# logo de lichess\nlink &lt;- \"https://raw.githubusercontent.com/lichess-org/lila/refs/heads/master/public/logo/logo-black.png\"\nlogo &lt;- glue(\"&lt;img src='{link}' width=100 /&gt;\")\n\n# subt√≠tulo\nmi_subtitulo &lt;- glue(\n  \"Cantidad de turnos en partidas de &lt;b style='color:{c6}'&gt;ajedrez&lt;/b&gt; \",\n  \"y el tiempo total de juego.\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(dif_h, turns)) +\n  # resalto los 10000s\n  geom_hex(data = d2, bins = 70, color = c5, linewidth = 6, fill = c2) +\n  # hex\n  geom_hex(bins = 70, color = c3, linewidth = .5) +\n  # logo\n  annotate(\n    geom = \"richtext\", x = I(0), y = I(1.01), label = logo, hjust = 0, vjust = 1,\n    fill = NA, label.color = NA\n  ) +\n  # aclaraci√≥n de los 10000s\n  annotate(\n    geom = \"richtext\", x = x_esq, y = y_esq, label = etq_label, hjust = 0, \n    vjust = 0, fill = c2, color = c3, size = 6, label.r = unit(0, \"mm\"),\n    label.color = NA\n  ) +\n  # flecha\n  annotate(\n    geom = \"curve\", x = x_esq+20, y = y_esq, xend = h+1, yend = 147, \n    curvature = -.2, color = c3,\n    arrow = arrow(angle = 15, length = unit(.3, \"cm\"), type = \"closed\"),\n    \n  ) +\n  scale_x_log10(\n    breaks = x_horas,\n    labels = x_label\n  ) +\n  scico::scale_fill_scico(\n    palette = \"hawaii\",\n    limits = c(1, 120),\n    breaks = c(1, seq(30, 120, 30))\n  ) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    x = \"Duraci√≥n\", y = \"# de turnos\", fill = \"#\", caption = mi_caption,\n    subtitle = mi_subtitulo\n  ) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(b = 15, r = 65, l = 15),\n    plot.background = element_rect(\n      fill = c2, color = c1, linewidth = 3\n    ),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", color = c3, size = 20, hjust = .5,\n      margin = margin(b = 25, t = 15)\n    ),\n    plot.caption = element_markdown(\n      color = c6, size = 13, family = \"ubuntu\", lineheight = unit(1.2, \"line\")\n    ),\n    panel.background = element_rect(fill = c2, color = NA),\n    panel.grid.major = element_line(\n      color = c4, linewidth = .2, linetype = \"77\"\n    ),\n    panel.grid.minor = element_blank(),\n    axis.line = element_blank(),\n    axis.text = element_text(family = \"jet\", color = c3, size = 14),\n    axis.title = element_text(family = \"ubuntu\", color = c3, size = 20),\n    axis.title.x = element_text(margin = margin(t = 20)),\n    legend.background = element_blank(),\n    legend.position = \"bottom\",\n    legend.justification = c(0, 0),\n    legend.key.width = unit(1.4, \"cm\"),\n    legend.ticks = element_line(color = c2),\n    legend.ticks.length = unit(2, \"mm\"),\n    legend.title = element_text(\n      color = c3, family = \"ubuntu\", size = 16, margin = margin(b = 15, r = 10)\n    ),\n    legend.text = element_text(color = c3, family = \"jet\", size = 13)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s40/viz.png\",\n  width = 30,\n  height = 33.6,\n  units = \"cm\")\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s40/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 40"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_08.html",
    "href": "tidytuesday/2024/semana_08.html",
    "title": "Semana 08",
    "section": "",
    "text": "Financiamiento de proyectos de R Consortium.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(waffle)\nlibrary(tidyverse)\n\n# uso del paquete {waffle}\nbrowseURL(\"https://github.com/hrbrmstr/waffle/\")\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"grey90\"\nc2 &lt;- \"#F6F2EE\"\nc3 &lt;- \"#003967\"\nc4 &lt;- \"#A82203\"\nc5 &lt;- \"#F1AF3A\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# fuente: Victor\nfont_add(\n  family = \"victor\", \n  regular = \"fuente/VictorMono-ExtraLight.ttf\",\n  bold = \"fuente/VictorMono-VariableFont_wght.ttf\",\n  italic = \"fuente/VictorMono-ExtraLightItalic.ttf\")\n\n# fuente: Bebas Neue\nfont_add(\n  family = \"bebas\", \n  regular = \"fuente/BebasNeue-Regular.ttf\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {8}. \",\n  \"R Consortium Infrastructure Steering Committee.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 8)\nisc_grants &lt;- tuesdata$isc_grants\n\n# me interesan la cantidad de becas por a√±o, y de cuanto dinero \n\n# divido las becas en rangos de 10000 USD\n# primero utilizo nros enteros para luego usar labels y transformar a factor a\n# partir de esos nros enteros\nd &lt;- isc_grants |&gt; \n  filter(funded != 0) |&gt; \n  select(year, funded) |&gt; \n  mutate(\n    rango = case_when(\n      funded &lt; 1e4 ~ 1,\n      between(funded, 1e4, 2e4) ~ 2,\n      between(funded, 2e4, 3e4) ~ 3,\n      between(funded, 3e4, 4e4) ~ 4,\n      between(funded, 4e4, 5e4) ~ 5,\n      funded &gt; 5e4 ~ 6\n    )\n  ) |&gt; \n  mutate(label = case_match(\n    rango,\n    1 ~ \"&lt; 10.000\",\n    2 ~ \"10.000 ~ 20.000\",\n    3 ~ \"20.000 ~ 30.000\",\n    4 ~ \"30.000 ~ 40.000\",\n    5 ~ \"40.000 ~ 50.000\",\n    6 ~ \"&gt; 50.000\",\n  )) |&gt; \n  mutate(label = fct_reorder(label, rango)) |&gt; \n  count(label, year, rango)\n\n# figura ------------------------------------------------------------------\n\n# valores para usar en el subt√≠tulo\ngrant_n &lt;- nrow(isc_grants)\ngrant_s &lt;- sum(isc_grants$funded) |&gt; \n  format(x = _, big.mark = \".\", decimal.mark = \",\")\ngrant_i &lt;- min(isc_grants$year)\ngrant_f &lt;- max(isc_grants$year)\n\n# subt√≠tulo\nmi_subtitle &lt;- glue(\n  \"**R Consortium** financi√≥ {grant_n} proyectos entre {grant_i} y {grant_f}, \",\n  \"por un total de &lt;b style='color:{c4};'&gt;USD {grant_s}&lt;/b&gt;.&lt;br&gt;\",\n  \"Este a√±o el per√≠odo de presentaci√≥n de propuestas inicia el **1ro de marzo**.\"\n)\n\n# logo de R Consortium\nlogo &lt;- \"&lt;img src='2024/s08/logo.png' width='150'&gt;&lt;/img&gt;\"\n\n# ep√≠grafe completo\ncaption_logo &lt;- glue(\n  \"{logo}\",\n  \"&lt;span style='color:{c2};'&gt;{str_flatten(rep('.', 100))}&lt;/span&gt;\",\n  \"{mi_caption}\")\n\n# figura\ng &lt;- ggplot(d, aes(fill = label, values = n)) +\n  # waffle\n  geom_waffle(\n    color = c1, size = 7, alpha = 1, flip = TRUE, n_rows = 4) +\n  # faceta\n  facet_wrap(vars(year), nrow = 2) +\n  # ejes\n  scale_x_continuous(expand = c(0, .1)) +\n  scale_y_continuous(expand = c(0, .1)) +\n  MetBrewer::scale_fill_met_d(name = \"Juarez\") +\n  coord_equal() +\n  labs(\n    fill = \"USD\", subtitle = mi_subtitle, \n    caption = caption_logo) +\n  guides(fill = guide_legend(nrow = 1)) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(fill = c2, color = c5, linewidth = 3),\n    plot.margin = margin(r = 12, l = 12, t = 20, b = 20),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 20, color = c3, margin = margin(b = 13.9),\n      lineheight = unit(1.25, \"line\")),\n    plot.caption = element_markdown(\n      color = c4, family = \"ubuntu\", margin = margin(b = 0, r = 10, t = 25)),\n    panel.background = element_rect(fill = c1, color = NA),\n    panel.spacing.x = unit(1.5, \"line\"),\n    panel.spacing.y = unit(.5, \"line\"),\n    strip.text = element_text(size = 30, color = c4, family = \"bebas\"),\n    legend.position = \"bottom\",\n    legend.direction = \"horizontal\",\n    legend.key.size = unit(6, \"mm\"),\n    legend.margin = margin(t = 10),\n    legend.title = element_text(family = \"victor\", size = 20, color = c3),\n    legend.text = element_text(size = 11, family = \"victor\")\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s08/viz.png\",\n  width = 30,\n  height = 22.41,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(\"2024/s08/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 08"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_37.html",
    "href": "tidytuesday/2024/semana_37.html",
    "title": "Semana 37",
    "section": "",
    "text": "Diferencia entre los ingresos a Universidades de Elite, comparado con Universidades p√∫blicas, seg√∫n los ingresos en el hogar.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggthemes)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#1F77B4\"\nc2 &lt;- \"#E377C2\"\nc3 &lt;- \"#9467BD\"\nc4 &lt;- \"grey90\"\nc5 &lt;- \"#F0F0F0\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {37}, \",\n  \"&lt;b&gt;Opportunity Insights&lt;/b&gt;.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue( \n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 37)\ncollege_admissions &lt;- tuesdata$college_admissions\n\n# me interesa comparar la admisi√≥n a universidades top y p√∫blicas, seg√∫n los\n# ingresos del hogar\n\nd &lt;- college_admissions |&gt; \n  select(par_income_lab, par_income_bin, rel_att_cond_app, tier) |&gt; \n  filter(\n    tier %in% c(\"Ivy Plus\", \"Selective public\")\n  ) |&gt; \n  mutate(par_income_lab = fct_reorder(par_income_lab, par_income_bin)) |&gt; \n  drop_na()\n\n# figura ------------------------------------------------------------------\n\n# subt√≠tulo y t√≠tulos de eje\nmi_subt√≠tulo &lt;- glue(\n  \"Las &lt;b style='color:{c1};'&gt;Universidades de Elite&lt;/b&gt; tienden a aceptar\",\n  \"las solicitudes de inscripci√≥n de los m√°s pudientes,\",\n  \"comparado con las &lt;b style='color:{c2};'&gt;Universidades P√∫blicas&lt;/b&gt;.\",\n  .sep = \"&lt;br&gt;\"\n)\n\neje_x &lt;- glue(\n  \"Relaci√≥n entre la asistencia\",\n  \"y las aplicaciones universitarias\",\n  .sep = \"&lt;br&gt;\"\n)\n\neje_y &lt;- glue(\n  \"Percentil de ingresos\",\n  \"en el hogar\",\n  .sep = \"&lt;br&gt;\"\n)\n\n# figura\ng &lt;- ggplot(\n  d,\n  aes(rel_att_cond_app, par_income_lab, color = tier, shape = tier)\n) +\n  geom_jitter(alpha = .4, size = 7, height = .2) +\n  scale_color_manual(\n    values = c(c1, c2),\n    breaks = c(\"Ivy Plus\", \"Selective public\"),\n    labels = c(\"Ivy Plus\", \"P√∫blica selectiva\")\n  ) +\n  scale_shape_manual(\n    values = c(18, 20),\n    breaks = c(\"Ivy Plus\", \"Selective public\"),\n    labels = c(\"Ivy Plus\", \"P√∫blica selectiva\")\n  ) +\n  scale_x_continuous(\n    minor_breaks = scales::breaks_width(.1)\n  ) +\n  labs(\n    x = eje_x, y = eje_y, color = NULL, shape = NULL, subtitle = mi_subt√≠tulo,\n    caption = mi_caption) +\n  guides(\n    color = guide_legend(\n      override.aes = list(alpha = 1), ncol = 1)\n  ) +\n  theme_fivethirtyeight() +\n  theme(\n    aspect.ratio = 1,\n    plot.title.position = \"plot\",\n    plot.background = element_rect(fill = c4),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 20, lineheight = unit(1.3, \"line\"), fill = c5,\n      padding = unit(.2, \"cm\")\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 11, color = c1, hjust = 1,\n      lineheight = unit(1.2, \"line\")\n    ),\n    panel.grid = element_line(linetype = \"55\"),\n    axis.text = element_text(family = \"jet\", size = 12),\n    axis.title.y = element_markdown(\n      family = \"ubuntu\", size = 15, angle = 0, vjust = .5, hjust = 1,\n      lineheight = unit(1.3, \"line\"), fill = c5, padding = unit(.1, \"cm\")\n    ),\n    axis.title.x = element_markdown(\n      family = \"ubuntu\", size = 15, lineheight = unit(1.3, \"line\"), hjust = 0,\n      margin = margin(t = 5), fill = c5, padding = unit(.1, \"cm\")\n    ),\n    legend.text = element_text(family = \"ubuntu\", size = 12),\n    legend.position = \"inside\",\n    legend.background = element_rect(fill = c5),\n    legend.key = element_blank(),\n    legend.justification.inside = c(1, .5),\n    legend.position.inside = c(1, .5)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s37/viz.png\",\n  width = 30,\n  height = 26,\n  units = \"cm\")\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s37/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 37"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_39.html",
    "href": "tidytuesday/2024/semana_39.html",
    "title": "Semana 39",
    "section": "",
    "text": "Participaci√≥n Argentina en las Olimpiadas de Matem√°ticas Internacionales.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"black\"\nc2 &lt;- \"grey30\"\nc3 &lt;- \"grey60\"\nc4 &lt;- \"white\"\nc5 &lt;- \"#F6B40E\"\nc6 &lt;- \"#75AEE0\"\nc7 &lt;- \"#97C124\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c5};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {39}, \",\n  \"&lt;b&gt;International Mathematical Olympiad&lt;/b&gt; (IMO).&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c5};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c5};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 39)\nindividual_results_df &lt;- tuesdata$individual_results_df\n\n# me interesa la cantidad y tipo de premio de Argentina, por a√±o\n\n# orden y etiquetas de los premios\norden_award &lt;- c(\n  \"Honourable mention\", \"Bronze medal\", \"Silver medal\", \"Gold medal\"\n)\n\netq_award &lt;- c(\"Menci√≥nnde honor\", \"Bronce\", \"Plata\", \"Oro\")\n\n# obtengo los datos de Argentina y resumo por a√±o\nd &lt;- individual_results_df |&gt; \n  filter(country == \"Argentina\") |&gt; \n  count(year, award) |&gt; \n  drop_na() |&gt; \n  mutate(\n    award = factor(award, levels = orden_award, labels = etq_award)\n  ) |&gt;\n  mutate(\n    n = factor(n)\n  )\n\n# figura ------------------------------------------------------------------\n\n# bandera y logo del IMO\nbandera &lt;- \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/1a/Flag_of_Argentina.svg/640px-Flag_of_Argentina.svg.png\"\n\nimo &lt;- \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/IMO_logo.svg/640px-IMO_logo.svg.png\"\n\n# funci√≥n para hacer una separaci√≥n entre la bandera y el logo\nf_espacio &lt;- function(n) {\n  str_flatten(rep(\"_\", n))\n}\n\n# nombre para shape y size\netq &lt;- \"Cantidadnde premios\"\n\n# subt√≠tulo y t√≠tulo\nmi_subtitulo &lt;- glue(\n  \"&lt;img src={bandera} width=120 /&gt;\",\n  \"&lt;span style='color:{c2}'&gt;\",\n  \"{f_espacio(85)}&lt;/span&gt;\",\n  \"&lt;img src={imo} width=120 /&gt;\"\n)\n\nmi_titulo &lt;- glue(\n  \"Participaci√≥n de &lt;b style='color:{c5}'&gt;Argentina&lt;/b&gt; \",\n  \"en las &lt;b style='color:{c6};'&gt;Olimpiadas Internacionales de Matem√°tica&lt;/b&gt;.\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(year, award, size = n, fill = n)) +\n  geom_point(shape = 21, color = c1, stroke = 1) +\n  scale_x_continuous(\n    breaks = scales::breaks_width(2),\n    labels = (x) glue(\"'{str_sub(x, 3, 4)}\"),\n    expand = c(0, 1)\n  ) +\n  scale_y_discrete(expand = c(0, .2)) +\n  scale_fill_manual(\n    values = MoMAColors::moma.colors(palette_name = \"Liu\", n = 5)\n  ) +\n  scale_size_manual(\n    values = seq(2, 11, length.out = 5)\n  ) +\n  labs(\n    x = NULL, y = NULL, fill = etq, size = etq, title = mi_titulo,\n    subtitle = mi_subtitulo, caption = mi_caption) +\n  ggthemes::theme_pander() +\n  theme(\n    aspect.ratio = .5,\n    plot.background = element_rect(fill = c2, color = c7, linewidth = 3),\n    plot.margin = margin(t = 40, b = 10, l = 10, r = 10),\n    plot.title = element_markdown(\n      size = 13, family = \"ubuntu\", face = \"plain\", hjust = .5, color = c4\n    ),\n    plot.subtitle = element_markdown(margin = margin(t = -50, b = 10)),\n    plot.caption = element_markdown(\n      color = c6, family = \"ubuntu\", size = 10, lineheight = unit(1.1, \"line\"),\n      margin = margin(t = 16.5)\n    ),\n    panel.grid = element_line(color = c3),\n    axis.text = element_text(color = c4),\n    axis.text.x = element_text(family = \"jet\", size = 10),\n    axis.text.y = element_text(family = \"ubuntu\", size = 16),\n    legend.position = \"bottom\",\n    legend.title = element_text(\n      family = \"ubuntu\", size = 12, face = \"plain\", hjust = 1, color = c4\n    ),\n    legend.background = element_blank(),\n    legend.text = element_text(\n      margin = margin(l = 2, r = 10), color = c4, family = \"jet\"\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s39/viz.png\",\n  width = 30,\n  height = 21,\n  units = \"cm\")\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s39/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 39"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_16.html",
    "href": "tidytuesday/2024/semana_16.html",
    "title": "Semana 16",
    "section": "",
    "text": "Paquetes que dependen de {ggplot2}, asociados a {shiny}.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"grey90\"\nc2 &lt;- \"#A82203\"\nc3 &lt;- \"#003967\"\nc4 &lt;- \"#ABA366\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# fuente: Victor\nfont_add(\n  family = \"victor\", \n  regular = \"fuente/VictorMono-ExtraLight.ttf\",\n  bold = \"fuente/VictorMono-VariableFont_wght.ttf\",\n  italic = \"fuente/VictorMono-ExtraLightItalic.ttf\")\n\n# √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {16}. \",\n  \"ShinyConf2024.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 16)\n\n# me interesan los paquetes que dependen de {ggplot2}\npackage_details &lt;- tuesdata$package_details\n\n# selecciono los paquetes\np &lt;- package_details |&gt; \n  filter(str_detect(Depends, \"ggplot2\")) |&gt; \n  select(Package)\n\n# cantidad de paquetes\nnrow(p) # 400\n\n# cantidad de filas y columnas\neje_x &lt;- 10\neje_y &lt;- 400/eje_x\n\n# paleta de colores\npaleta &lt;- MetBrewer::met.brewer(name = \"Juarez\", n = eje_x)\n\n# agrego colores y formo las filas con los nombres de los paquetes\nd &lt;- p |&gt; \n  mutate(x = rep(1:eje_x, length.out = nrow(p))) |&gt; \n  mutate(y = rep(1:eje_y, each = 400/eje_y, length.out = nrow(p))) |&gt; \n  mutate(color = rep(paleta, length.out = nrow(p))) |&gt; \n  mutate(label = glue(\"&lt;b style='color:{color}'&gt;{Package}&lt;/b&gt;\")) |&gt; \n  reframe(\n    l = str_flatten(label, \" \"),\n    .by = y\n  )\n\n# figura ------------------------------------------------------------------\n\n# logos de {shiny} y {ggplot2}\nlogo_shiny &lt;- \"https://raw.githubusercontent.com/rstudio/shiny/main/man/figures/logo.png\"\nlogo_ggplot2 &lt;- \"https://raw.githubusercontent.com/tidyverse/ggplot2/main/man/figures/logo.png\"\n\n# t√≠tulo y subt√≠tulo\nmi_title &lt;- glue(\n  \"&lt;img src='{logo_ggplot2}' height=100&gt;&lt;/img&gt;.........................\",\n  \"&lt;img src='{logo_shiny}' height=100&gt;&lt;/img&gt;\")\n\nmi_subtitle &lt;- glue(\n  \"Lista de paquetes que dependen de&lt;br&gt;\",\n  \"&lt;span style='font-family:jet'&gt;{{ggplot2}&lt;/span&gt;, asociados a \",\n  \"&lt;span style='font-family:jet'&gt;{{shiny}}&lt;/span&gt;\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(0, y/1.3, label = l)) +\n  geom_richtext(\n    family = \"jet\", size = 3.5, hjust = .5, fill = NA, label.color = NA,\n    fontface = \"bold\") +\n  coord_cartesian(\n    xlim = c(-2, 2), ylim = c(0, 29), expand = TRUE, clip = \"off\") +\n  labs(title = mi_title, subtitle = mi_subtitle, caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(l = 50, r = 50, t = 2.4),\n    plot.background = element_rect(fill = c1, color = c4, linewidth = 3),\n    plot.title = element_markdown(\n      hjust = .5, size = 50, color = c1, margin = margin(t = 10)),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", color = c3, size = 14, hjust = .5, \n      margin = margin(t = -75), lineheight = unit(1.2, \"line\")),\n    plot.caption = element_markdown(\n      color = c2, family = \"ubuntu\", size = 10, lineheight = unit(1.2, \"line\"),\n      margin = margin(r = -10, b = 10))\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s16/viz.png\",\n  width = 30,\n  height = 33.5,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(\"2024/s16/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 16"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_35.html",
    "href": "tidytuesday/2024/semana_35.html",
    "title": "Semana 35",
    "section": "",
    "text": "Popularidad y puntaje de episodios de los Power Rangers, dividido entr las primeras y las √∫ltimas cinco temporadas.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggthemes)\nlibrary(patchwork)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\npal &lt;- c(\"#F28AAA\", \"#A1C2ED\", \"#9CC184\", \"#F9D14A\", \"#DF9ED4\")\nc1 &lt;- \"#EAF3FF\"\nc2 &lt;- \"white\"\nc3 &lt;- \"grey10\"\nc4 &lt;- \"grey90\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nfont_add_google(\n  name = \"Ultra\",\n  family = \"ultra\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{pal[4]};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {35}, \",\n  \"Power Rangers Dataset.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{pal[4]};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_imdb &lt;- glue(\n  \"&lt;span style='font-family:jet; font-size:40px'&gt;&#xf2d8;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{pal[4]};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} \",\n  \"{icon_instagram} {icon_mastodon} {usuario}\"\n)\n\nurl_pr &lt;- \"https://upload.wikimedia.org/wikipedia/en/b/bd/Power_Rangers_Logo.webp\"\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 35)\nepisodes &lt;- tuesdata$power_rangers_episodes\n\n# me interesa la popularidad y el puntaje de los episodios al inicio y en la \n# actualidad de la serie\n\n# agrego el a√±o de inicio a la temporada\nd &lt;- episodes |&gt; \n  mutate(season_title = str_replace(season_title, \"Season \", \"T\")) |&gt; \n  mutate(a√±o_i = year(min(air_date)), .by = season_title) |&gt; \n  mutate(\n    a√±o_i = glue(\n      \"&lt;span style='font-family: jet; font-size: 15px; color: {pal[1]}'&gt;\",\n      \"{a√±o_i}&lt;/span&gt;\"\n    )\n  ) |&gt; \n  mutate(season_title = glue(\"{season_title}&lt;br&gt;{a√±o_i}\")) |&gt; \n  mutate(season_title = fct_reorder(season_title, air_date))\n\n# cantidad de temporadas\nn_season &lt;- length(unique(d$season_title))\n\n# figura ------------------------------------------------------------------\n\n# t√≠tulo de los ejes\neje_horizontal &lt;- glue(\"Votos&lt;br&gt;{icon_imdb}\")\neje_vertical &lt;- glue(\"Puntaje&lt;br&gt;{icon_imdb}\")\n\n# funci√≥n que genera una figura para las primeras/√∫ltimas temporadas\nf_gg &lt;- function(tbl, subtitulo) {\n  g &lt;- ggplot(tbl, aes(total_votes, IMDB_rating, fill = season_title)) +\n    # todas las temporadas\n    geom_point(\n      data = select(d, -season_title), aes(total_votes, IMDB_rating),\n      inherit.aes = FALSE, alpha = .1, size = .6, show.legend = FALSE,\n      color = c2, shape = 20\n    ) +\n    # temporadas de inter√©s, a destacar\n    geom_point(\n      alpha = .9, size = 2, show.legend = FALSE, shape = 21\n    ) +\n    facet_wrap(vars(season_title), ncol = 5, scales = \"free\") +\n    scale_x_log10(\n      limits = c(10, 1000), expand = c(0, 0), breaks = c(10, 100, 1000)\n    ) +\n    scale_y_continuous(limits = c(4, 10), expand = c(0, 0), breaks = 4:10) +\n    scale_fill_manual(\n      values = rep(pal, length.out = n_season)\n    ) +\n    labs(x = eje_horizontal, y = eje_vertical, subtitle = subtitulo) +\n    coord_cartesian(clip = \"off\") +\n    theme_linedraw() +\n    theme(\n      aspect.ratio = 1,\n      plot.margin = margin(b = -20),\n      plot.background = element_blank(),\n      plot.subtitle = element_markdown(\n        size = 16, family = \"ubuntu\", color = c1, margin = margin(b = 5, t = 20)\n      ),\n      panel.background = element_blank(),\n      panel.grid = element_blank(),\n      panel.spacing.x = unit(1.3, \"line\"),\n      axis.ticks = element_blank(),\n      axis.title.x = element_markdown(\n        family = \"ubuntu\", hjust = .1, margin = margin(t = 10), color = c2\n      ),\n      axis.title.y = element_markdown(\n        family = \"ubuntu\", angle = 0, vjust = .5, margin = margin(r = 10),\n        color = c2\n      ),\n      axis.text = element_text(family = \"jet\", color = c2),\n      axis.text.y = element_text(vjust = 0),\n      strip.text = element_markdown(\n        hjust = 0, family = \"ubuntu\", color = pal[2], size = 13, face = \"bold\"\n      ),\n      strip.background = element_blank()\n    )\n  \n  return(g)\n}\n\n# n√∫mero de las primeras/√∫ltimas temporadas\nn_head &lt;- unique(as.numeric(d$season_title))[1:5]\nn_tail &lt;- unique(as.numeric(d$season_title))[(n_season-4):n_season]\n\n# filtro a partir del n√∫mero de las primeras/√∫ltimas temporadas\nd_head &lt;- d |&gt; \n  filter(as.numeric(season_title) %in% n_head)\n\nd_tail &lt;- d |&gt; \n  filter(as.numeric(season_title) %in% n_tail)\n\n# subt√≠tulo de cada figura\npr &lt;- glue(\n  \"&lt;span style='font-family: ultra; color: {pal[4]};'&gt;POWER RANGERS&lt;/span&gt;\"\n)\n\nsub_head &lt;- glue(\n  \"Las primeras temporadas de {pr} tuvieron la m√°xima popularidad, \",\n  \"con puntajes mixtos.\"\n)\n\nsub_tail &lt;- glue(\n  \"Las √∫ltimas temporadas cayeron en popularidad, pero la calidad de los \",\n  \"episodios mejor√≥.\"\n)\n\n# logo de los Power Rangers\ng_pr &lt;- ggplot() +\n  ggpath::geom_from_path(\n    data = tibble(x = 0, y = 0, path = url_pr),\n    aes(x, y, path = path)) +\n  coord_cartesian(xlim = c(-.02, .02212), clip = \"off\") +\n  theme_void()\n\n# composici√≥n final de la figura\ng &lt;- f_gg(d_head, sub_head) / g_pr / f_gg(d_tail, sub_tail) +\n  plot_layout(heights = c(.43, .13, .43)) +\n  plot_annotation(\n    caption = mi_caption,\n    theme = theme(\n      plot.margin = margin(r = 20, l = 10, t = 10, b = 5),\n      plot.background = element_rect(fill = c3, color = pal[3], linewidth = 3),\n      plot.caption = element_markdown(\n        family = \"ubuntu\", size = 11, color = pal[1], margin = margin(t = -20)\n      )\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s35/viz.png\",\n  width = 30,\n  height = 22,\n  units = \"cm\")\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s35/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 35"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_42.html",
    "href": "tidytuesday/2024/semana_42.html",
    "title": "Semana 42",
    "section": "",
    "text": "Avistamiento de orcas en el Mar de los Salish.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(terra)\nlibrary(tidyterra)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#3961FF\"\nc2 &lt;- \"#9D6227\"\nc3 &lt;- \"darkred\"\nc4 &lt;- \"#E4E4E4\"\nc5 &lt;- \"black\"\nc6 &lt;- \"grey30\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c2};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {42}, \",\n  \"&lt;b&gt;Center for Whale Research&lt;/b&gt;.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c2};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c2};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 42)\norcas &lt;- tuesdata$orcas\n\n# me interesa los sitios de avistamiento de orcas sobre el relieve de la regi√≥n\n\n# convierto datos a vector\norcas_sf &lt;- vect(\n  orcas, geom = c(\"begin_longitude\", \"begin_latitude\"), crs = \"EPSG:4326\"\n)\n\n# regi√≥n de inter√©s\nusa_sf &lt;- rgeoboundaries::gb_adm0(country = \"USA\")\ncnd_sf &lt;- rgeoboundaries::gb_adm0(country = \"Canada\")\naoi_sf &lt;- rbind(usa_sf, cnd_sf) |&gt; \n  vect()\n\n# obtengo el relieve de la regi√≥n de inter√©s\nbb &lt;- (ext(orcas_sf)*1.2) |&gt; \n  vect(crs = \"EPSG:4326\")\n\ndem &lt;- elevatr::get_elev_raster(\n  locations = sf::st_as_sf(bb),\n  z = 10,\n  clip = \"bbox\"\n) |&gt; \n  rast()\n\n# guardo r√°ster\nwriteRaster(dem, \"2024/s42/dem.tif\", overwrite = FALSE)\ndem &lt;- rast(\"2024/s42/dem.tif\")\n\n# figura ------------------------------------------------------------------\n\n# subt√≠tulo\nmi_subtitulo &lt;- glue(\n  \"Posiciones de avistamiento de &lt;b style='color: {c3};'&gt;orcas&lt;/b&gt; en el \",\n  \"&lt;b style='color: {c1}; '&gt;Mar de los Salish&lt;/b&gt;.&lt;br&gt;Entre 2017 a 2024 se \",\n  \"contabilizaron &lt;b&gt;{nrow(orcas_sf)}&lt;/b&gt; registros.\"\n)\n\n# coordenadas\nlon &lt;- -125:-123\nlon_label &lt;- glue(\"{lon}¬∞\")\n\nlat &lt;- 48:50\nlat_label &lt;- glue(\"+{lat}¬∞\")\n\n# figura\ng &lt;- ggplot() +\n  geom_spatraster(\n    data = dem, show.legend = FALSE, maxcell = size(dem)\n  ) +\n  geom_spatvector(\n    data = orcas_sf, color = c3, alpha = .4, size = 3\n  ) +\n  scale_fill_hypso_c(palette = \"gmt_globe\") +\n  scale_x_continuous(\n    breaks = lon,\n    labels = lon_label\n  ) +\n  scale_y_continuous(\n    breaks = lat,\n    labels = lat_label\n  ) +\n  coord_sf(expand = FALSE) +\n  labs(subtitle = mi_subtitulo, caption = mi_caption) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(\n      fill = c4, color = c1, linewidth = 3\n    ),\n    plot.margin = margin(t = 17, r = 20, b = 15, l = 20),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 20, hjust = .5, margin = margin(b = 10)\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c1, size = 15, lineheight = unit(1.2, \"line\"),\n      margin = margin(b = 5, r = 0, t = 15)\n    ),\n    panel.background = element_rect(fill = NA, color = c5, linewidth = 1),\n    panel.grid.major = element_line(\n      color = c6, linetype = \"FF\", linewidth = .2\n    ),\n    panel.ontop = TRUE,\n    axis.text = element_text(\n      family = \"jet\", margin = margin(t = 5, r = 5), size = 15\n    ),\n    axis.ticks.length = unit(2, \"mm\"),\n    axis.ticks = element_line(color = c5, linewidth = .7)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s42/viz.png\",\n  width = 30,\n  height = 34,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s42/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 42"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_51.html",
    "href": "tidytuesday/2024/semana_51.html",
    "title": "Semana 51",
    "section": "",
    "text": "Cantidad de hechizos por escuela y nivel en Dungeons & Dragons.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\ncc &lt;- MetBrewer::met.brewer(name = \"Tam\")\nc1 &lt;- \"white\"\nc2 &lt;- \"#9F5690\"\nc3 &lt;- \"#E50712\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\n# Tangerine\nfont_add_google(\n  name = \"Tangerine\",\n  family = \"tangerine\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{cc[1]};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {51}, \",\n  \"&lt;b&gt;Dungeons and Dragons Free Rules (2024 edition)&lt;/b&gt;.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{cc[1]};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{cc[1]};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 51)\nspells &lt;- tuesdata$spells\n\n# me interesa el conteo de hechizos por nivel y escuela\n\n# traducciones de las escuelas\nescuelas &lt;- unique(spells$school)\nescuelas_trad &lt;- c(\n  \"Evocaci√≥n\", \"Abjuraci√≥n\", \"Transmutaci√≥n\", \"Encantamiento\", \"Necromancia\",\n  \"Adivinaci√≥n\", \"Ilusionismo\", \"Conjuraci√≥n\"\n)\nescuelas_trad &lt;- set_names(escuelas_trad, escuelas)\n\n# √≠conos\nsombrero &lt;- glue(\"&lt;span style='font-family:jet; color:{cc[2]}'&gt;&#xf1477;&lt;/span&gt;\")\nvarita &lt;- glue(\"&lt;span style='font-family:jet; color:{cc[2]}'&gt;&#xf1844;&lt;/span&gt;\")\n\n# cantidad de hechizos por escuela\nd_n &lt;- count(spells, school) |&gt; \n  mutate(school = escuelas_trad[school]) |&gt; \n  mutate(school = glue(\"{sombrero} {school} {varita}\")) |&gt; \n  mutate(school = fct_reorder(school, n)) |&gt; \n  mutate(label = glue(\"n={n}\")) |&gt; \n  rename(\"n_top\" = n)\n\n# cantidad de hechizos por escuela y nivel\nd &lt;- spells |&gt; \n  select(name, level, school) |&gt; \n  reframe(\n    n = n(),\n    .by = c(level, school)\n  ) |&gt; \n  arrange(level) |&gt; \n  mutate(level = factor(level)) |&gt;\n  mutate(\n    es_max = n == max(n),\n    .by = c(school)\n  ) |&gt; \n  mutate(school = escuelas_trad[school]) |&gt; \n  mutate(school = glue(\"{sombrero} {school} {varita}\")) |&gt; \n  mutate(school = factor(school)) |&gt; \n  \n  inner_join(d_n, by = join_by(school)) |&gt; \n  \n  mutate(school = fct_reorder(school, n_top)) |&gt; \n  mutate(school = fct_rev(school))\n\n# figura ------------------------------------------------------------------\n\n# logo de D&D y subt√≠tulo\nlogo &lt;- \"https://upload.wikimedia.org/wikipedia/en/thumb/8/8e/Dungeons_%26_Dragons_5th_Edition_logo.svg/1024px-Dungeons_%26_Dragons_5th_Edition_logo.svg.png\"\nlogo_label &lt;- glue(\"&lt;img src='{logo}' width=100&gt;\")\n\nmi_subtitulo &lt;- glue(\n  \"En &lt;b style='color:{cc[8]}'&gt;Dungeons & Dragons&lt;/b&gt;, hay m√°s del doble de \n  hechizos de &lt;b&gt;transmutaci√≥n&lt;/b&gt; que &lt;b&gt;ilusionismos&lt;/b&gt;. El nivel 1 es \n  el m√°s frecuente de los &lt;b&gt;encantamientos&lt;/b&gt;.&lt;br&gt;Se destacan en cada escuela \n  el nivel de hechizo m√°s &lt;b style='color:{cc[1]}'&gt;frecuente&lt;/b&gt;.\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(n, level, fill = es_max)) +\n  geom_col(show.legend = FALSE) +\n  geom_label(\n    data = d_n, aes(Inf, Inf, label = label), hjust = .99, vjust = .99, size = 3,\n    family = \"jet\", color = cc[1], inherit.aes = FALSE, show.legend = FALSE,\n    fill = c2, label.size = unit(0, \"pt\"), label.r = unit(0, \"pt\"),\n    label.padding = unit(.5, \"lines\")\n  ) +\n  scale_x_continuous(\n    breaks = seq(0, 16, 2),\n    expand = c(0, 0),\n    limits = c(0, 15)\n  ) +\n  scale_y_discrete(\n    expand = c(0, 0),\n    limits = as.character(0:9)\n  ) +\n  scale_fill_manual(\n    values = c(cc[7], cc[1])\n  ) +\n  facet_wrap(vars(school), nrow = 2, scales = \"free\") +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    x = \"# de hechizos\",\n    y = \"Nivel del hechizo\",\n    subtitle = mi_subtitulo,\n    caption = mi_caption,\n    tag = logo_label\n  ) +\n  theme_minimal(base_size = 9) +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(10.3, 10, 10, 10),\n    plot.title.position = \"plot\",\n    plot.background = element_rect(fill = c2, color = cc[5], linewidth = 3),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 12, color = c1, hjust = .5, lineheight = 1.1\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 9, color = c1, margin = margin(t = 15),\n      lineheight = 1\n    ),\n    plot.tag.location = \"plot\",\n    plot.tag.position = c(.08, .04),\n    plot.tag = element_markdown(),\n    panel.spacing = unit(15, \"pt\"),\n    panel.background = element_rect(fill = cc[8], color = NA),\n    panel.grid = element_blank(),\n    panel.grid.major.x = element_line(\n      color = cc[6], linewidth = .1, linetype = \"66\"\n    ),\n    axis.text = element_text(color = c1, family = \"jet\"),\n    axis.title = element_text(color = c1, family = \"ubuntu\", size = 14),\n    axis.title.x = element_text(margin = margin(t = 10)),\n    axis.title.y = element_text(margin = margin(r = 10)),\n    strip.text = element_markdown(\n      color = c1, family = \"tangerine\", hjust = 0, size = 22,\n      face = \"bold\", margin = margin(b = 0)\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s51/viz.png\",\n  width = 30,\n  height = 19.3,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(paste0(getwd(), \"/2024/s51/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 51"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_31.html",
    "href": "tidytuesday/2024/semana_31.html",
    "title": "Semana 31",
    "section": "",
    "text": "Puntaje de pel√≠culas con summer en el t√≠tulo, y la mejor calificada por g√©nero.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#A62F00\"\nc2 &lt;- \"#FFF178\"\nc3 &lt;- \"#6AD5E8\"\nc4 &lt;- \"#3C4B99\"\nc5 &lt;- \"#E7E1EF\"\nc6 &lt;- \"#F7F4F9\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\n# Bebas Neue\nfont_add(\n  family = \"bebas\",\n  regular = \"fuente/BebasNeue-Regular.ttf\"\n)\n\nfont_add_google(\n  name = \"Send Flowers\",\n  family = \"flor\",\n  db_cache = FALSE\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {31}, \",\n  \"Internet Movie Database.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 31)\n\nsummer_movie_genres &lt;- tuesdata$summer_movie_genres\nsummer_movies &lt;- tuesdata$summer_movies\n\n# me interesan los puntajes de las pel√≠culas, por g√©nero, e indicar las\n# mejores puntuadas\n\nd &lt;- summer_movies |&gt; \n  separate_longer_delim(\n    cols = genres,\n    delim = \",\"\n  ) |&gt; \n  drop_na()\n\n# traducciones de los g√©neros\ntrad &lt;- tribble(\n  ~genres, ~generos,\n  \"Drama\"      ,\"Drama\",\n  \"Comedy\"     ,\"Comedia\",\n  \"Fantasy\"    ,\"Fantas√≠a\",\n  \"Romance\"    ,\"Romance\",\n  \"Crime\"      ,\"Crimen\",\n  \"Film-Noir\"  ,\"Cine negro\",\n  \"History\"    ,\"Historia\",\n  \"Music\"      ,\"M√∫sica\",\n  \"Musical\"    ,\"Musical\",\n  \"Action\"     ,\"Acci√≥n\",\n  \"War\"        ,\"B√©lica\",\n  \"Documentary\",\"Documental\",\n  \"Animation\"  ,\"Animaci√≥n\",\n  \"Mystery\"    ,\"Misterio\",\n  \"Thriller\"   ,\"Suspenso\",\n  \"Family\"     ,\"Familia\",\n  \"Sport\"      ,\"Deporte\",\n  \"Adventure\"  ,\"Aventura\",\n  \"Sci-Fi\"     ,\"Ciencia ficci√≥n\",\n  \"Horror\"     ,\"Terror\",\n  \"Biography\"  ,\"Biograf√≠a\",\n  \"Western\"    ,\"Western\",\n  \"Short\"      ,\"Cortometraje\",\n  \"Talk-Show\"  ,\"Entrevistas\"\n)\n\n# incorporo las traducciones y mantengo las m√°s comunes\nd_trad &lt;- inner_join(d, trad, by = join_by(genres)) |&gt; \n  mutate(generos = fct_reorder(generos, average_rating, max)) |&gt; \n  mutate(n = n(), .by = generos) |&gt; \n  filter(n &gt; 5)\n\n# obtengo la pel√≠cula con mejor puntaje p/c g√©nero y aplico estilo\nd_top &lt;- d_trad |&gt; \n  slice_max(\n    order_by = average_rating,\n    by = generos,\n    with_ties = FALSE\n  ) |&gt; \n  select(primary_title, year, generos, average_rating) |&gt; \n  mutate(primary_title = str_wrap(primary_title, 40)) |&gt; \n  mutate(primary_title = str_replace_all(primary_title, fixed(\"n\"), \"&lt;br&gt;\")) |&gt; \n  mutate(\n    primary_title = str_replace(\n      primary_title,\n      \"Summer\",\n      glue(\"&lt;b style='color:{c1}'&gt;Summer&lt;/b&gt;\"))) |&gt; \n  mutate(\n    primary_title = str_replace(\n      primary_title,\n      \"summer\",\n      glue(\"&lt;b style='color:{c1}'&gt;summer&lt;/b&gt;\"))) |&gt; \n  mutate(\n    primary_title = glue(\n      \"{primary_title}&lt;br&gt;&lt;span style='font-family: jet; color:{c4}'&gt;\",\n      \"({year})&lt;/span&gt;\")\n)\n\n# t√≠tulo y subt√≠tulo\nmi_titulo &lt;- \"Pel√≠culas veraniegas\"\nmi_subtitulo &lt;- glue(\n  \"G√©nero y puntaje de pel√≠culas que tienen &lt;span style='font-family: jet;\",\n  \"color:{c1}'&gt;summer&lt;/span&gt; en el t√≠tulo.&lt;br&gt;\",\n  \"Para cada g√©nero se indica la pel√≠cula con mejor valoraci√≥n.\"\n)\n\n# eje horizontal con logo IMDb\nlogo_imdb &lt;- glue(\n  \"&lt;span style='font-family:jet; font-size:90px'&gt;&#xf2d8;&lt;/span&gt;\")\ntitulo_x &lt;- glue(\"Puntaje&lt;br&gt;{logo_imdb}\")\n\n# figura\ng &lt;- ggplot(d_trad, aes(average_rating, generos)) +\n  geom_point(\n    aes(fill = average_rating), alpha = .8, size = 5, shape = 23, \n    color = \"black\", stroke = .3\n  ) +\n  geom_richtext(\n    data = d_top, aes(average_rating, generos, label = primary_title), size = 5,\n    hjust = 0, nudge_x = .3, lineheight = unit(1, \"line\"), family = \"ubuntu\",\n    label.color = NA, fill = c5, label.r = unit(0, \"mm\"),\n    label.padding = unit(.16, \"line\")\n  ) +\n  scale_x_continuous(\n    limits = c(.9, 10.1),\n    breaks = 1:10,\n    expand = c(0, 0)\n  ) +\n  scale_fill_gradient2(\n    low = c1,\n    mid = c2,\n    high = c3,\n    midpoint = 5.5,\n    limits = range(d_trad$average_rating)\n  ) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = mi_titulo, subtitle = mi_subtitulo, x = titulo_x, y = NULL,\n    caption = mi_caption\n  ) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 2.2,\n    plot.background = element_rect(\n      fill = c6, color = c3, linewidth = 3\n    ),\n    plot.margin = margin(r = 263.6, l = 20),\n    plot.title = element_text(\n      family = \"flor\", size = 60, color = c1, margin = margin(t = 20),\n      face = \"bold\"\n    ),\n    plot.title.position = \"panel\",\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 23, margin = margin(b = 15, t = 5),\n      lineheight = unit(1.2, \"line\")\n    ),\n    plot.caption = element_markdown(\n      size = 13, color = c4, margin = margin(r = -210, b = 10)\n    ),\n    panel.background = element_blank(),\n    panel.grid.major.x = element_line(\n      linetype = \"FF\", color = \"grey30\", linewidth = .1\n    ),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.title.x = element_markdown(\n      color = c4, size = 20, family = \"ubuntu\", margin = margin(t = 15)\n    ),\n    axis.text.x = element_text(\n      family = \"jet\", size = 15, margin = margin(t = 5), color = c4\n    ),\n    axis.text.y = element_text(family = \"bebas\", size = 30, color = c4),\n    axis.ticks = element_blank(),\n    legend.position = \"none\"\n)\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s31/viz.png\",\n  width = 30,\n  height = 43,\n  units = \"cm\")\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s31/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 31"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_26.html",
    "href": "tidytuesday/2024/semana_26.html",
    "title": "Semana 26",
    "section": "",
    "text": "G√©neros de pel√≠culas con tem√°tica LGBTQ.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggrepel)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"grey20\"\nc2 &lt;- \"grey90\"\nc3 &lt;- \"black\"\n\ncol &lt;- MetBrewer::met.brewer(name = \"Tara\")\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\n# bebas neue\nfont_add(\n  family = \"bebas\",\n  regular = \"fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{col[1]};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {26}, \",\n  \"TidyRainbow.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{col[1]};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{col[1]};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 26)\nmovies &lt;- tuesdata$lgbtq_movies\n\n# me interesa contar los g√©neros de las pel√≠culas\n\n# c√≥digo de los g√©neros de las pel√≠culas\n# https://www.themoviedb.org/talk/5daf6eb0ae36680011d7e6ee\ngenero_tbl &lt;- tribble(\n  ~genero, ~genre_ids,\n  \"acci√≥n\" ,28,\n  \"aventura\" ,12,\n  \"animaci√≥n\" ,16,\n  \"comedia\" ,35,\n  \"crimen\" ,80,\n  \"documental\" ,99,\n  \"drama\" ,18,\n  \"familiar\" ,10751,\n  \"fantas√≠a\" ,14,\n  \"historia\" ,36,\n  \"terror\" ,27,\n  \"musical\" ,10402,\n  \"misterio\" ,9648,\n  \"rom√°tica\" ,10749,\n  \"ciencia ficci√≥n\" ,878,\n  \"pel√≠cula para TV\" ,10770,\n  \"thriller\" ,53,\n  \"b√©lica\" ,10752,\n  \"western\" ,37\n)\n\nd &lt;- movies |&gt; \n  mutate(a√±o = year(release_date)) |&gt; \n  mutate(genre_ids = str_remove(genre_ids, \"\\[\")) |&gt; \n  mutate(genre_ids = str_remove(genre_ids, \"\\]\")) |&gt; \n  mutate(genre_ids = str_remove_all(genre_ids, \" \")) |&gt; \n  separate_longer_delim(cols = genre_ids, delim = \",\") |&gt; \n  mutate(genre_ids = as.numeric(genre_ids)) |&gt; \n  inner_join(genero_tbl, by = join_by(genre_ids)) |&gt; \n  count(genero, sort = TRUE) |&gt; \n  mutate(color = rep(col, length.out = 19)) |&gt; \n  mutate(label = glue(\"&lt;span style='color:{color}'&gt;{genero}&lt;/span&gt;\")) |&gt; \n  mutate(label = fct_reorder(label, n))\n\n# figura ------------------------------------------------------------------\n\n# subt√≠tulos\nmi_subtitulo &lt;- glue(\n  \"A partir de {nrow(movies)} pel√≠culas con tem√°tica \",\n  \"&lt;b style='color:{col[1]}'&gt;LGBTQ&lt;/b&gt;, \",\n  \"se encuentra que los g√©neros&lt;br&gt;\",\n  \"m√°s populares son los &lt;b style='color:{col[4]}'&gt;dramas&lt;/b&gt; \",\n  \"y &lt;b style='color:{col[4]}'&gt;romances&lt;/b&gt;. En el extremo \",\n  \"opuesto se ubican&lt;br&gt;\",\n  \"los &lt;b style='color:{col[4]}'&gt;westerns&lt;/b&gt; y pel√≠culas \",\n  \"&lt;b style='color:{col[4]}'&gt;b√©licas&lt;/b&gt;.\"\n)\n\n# LGBTQ\narcoiris &lt;- tibble(\n  color = gglgbtq::palette_lgbtq(\"rainbow\"),\n  y = 5:10,\n  x = 1000\n)\n\n# figura\ng &lt;- ggplot(d, aes(n, label, color = color)) +\n  geom_segment(\n    aes(x = 0, xend = n, yend = label, color = color), linewidth = 1,\n    linetype = \"11\") +\n  geom_point(\n    size = 14, shape = 18) +\n  geom_point(\n    size = 3, shape = 19, color = c1) +\n  geom_tile(\n    data = arcoiris, aes(x, y, fill = color), color = c1, linewidth = 2,\n    width = .19) +\n  scale_x_log10(limits = c(10, NA)) +\n  scale_color_identity() +\n  scale_fill_identity() +\n  labs(\n    y = NULL, x = \"# de pel√≠culas\", caption = mi_caption, \n    subtitle = mi_subtitulo) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1.4,\n    plot.margin = margin(r = 24.3, l = 24.3),\n    plot.background = element_rect(fill = c1, color = col[5], linewidth = 3),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_markdown(\n      color = c2, family = \"ubuntu\", size = 22,\n      margin = margin(l = 10, b = 10, t = 20), lineheight = unit(1.3, \"line\")),\n    plot.caption = element_markdown(\n      color = col[4], family = \"ubuntu\", size = 15, \n      margin = margin(t = 20, b = 10, r = 10), lineheight = unit(1.3, \"line\")),\n    panel.grid.major.x = element_line(\n      color = c2, linewidth = .1, linetype = \"FF\"),\n    axis.ticks = element_blank(),\n    axis.title.x = element_text(\n      family = \"ubuntu\", size = 22, color = c2, margin = margin(t = 10),\n      hjust = 0),\n    axis.text.y = element_markdown(\n      family = \"bebas\", size = 30, hjust = 1, margin = margin(r = 10)),\n    axis.text.x = element_text(\n      family = \"jet\", size = 20, color = c2, margin = margin(t = 10))\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s26/viz.png\",\n  width = 30,\n  height = 39,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(\"2024/s26/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 26"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_23.html",
    "href": "tidytuesday/2024/semana_23.html",
    "title": "Semana 23",
    "section": "",
    "text": "M√°ximo contenido graso de diferentes quesos por pa√≠s.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#3B99B1\"\nc2 &lt;- \"#EACB2B\"\nc3 &lt;- \"#F5191C\"\nc4 &lt;- \"grey95\"\nc5 &lt;- \"grey20\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {23}, \",\n  \"&lt;b&gt;cheese.com&lt;/b&gt;&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 23)\ncheeses &lt;- tuesdata$cheeses\n\n# me interesa el queso con mayor contenido graso por pa√≠s\n\nd &lt;- cheeses |&gt; \n  mutate(id = row_number()) |&gt; \n  mutate(fat_content = str_remove(fat_content, \" g/100g\")) |&gt; \n  mutate(fat_content = str_remove(fat_content, \"%\")) |&gt; \n  separate_longer_delim(cols = fat_content, delim = \"-\") |&gt; \n  mutate(fat_content = parse_number(fat_content)) |&gt; \n  reframe(\n    fat_content = mean(fat_content),\n    .by = c(country, cheese, id)\n  ) |&gt; \n  select(-id) |&gt; \n  drop_na() |&gt; \n  mutate(country = fct_reorder(country, fat_content)) |&gt; \n  filter(!str_detect(country, \",\")) |&gt; \n  slice_max(order_by = fat_content, by = country, n = 1, with_ties = FALSE) |&gt; \n  mutate(cheese = str_remove(cheese, \"Cremig Extra W√ºrzig, \"))\n\n# browseURL(\"https://github.com/fonttools/region-flags/tree/gh-pages\")\n\n# enlace a repositorio con .png de banderas\nlink &lt;- \"https://raw.githubusercontent.com/fonttools/region-flags/gh-pages/png/\"\n\n# agrego el c√≥digo de pa√≠s de dos letras e incorporo los links a las banderas\ne &lt;- countrycode::codelist |&gt; \n  select(cctld, country = country.name.en) |&gt; \n  inner_join(d, by = join_by(country)) |&gt; \n  mutate(cctld = str_remove(cctld, \".\")) |&gt; \n  mutate(cctld = toupper(cctld)) |&gt; \n  mutate(bandera = glue(\"{link}{cctld}.png\")) |&gt;\n  mutate(\n    label = glue(\"&lt;img src='{bandera}' height='25'/&gt;\")\n  ) |&gt; \n  mutate(label = fct_reorder(label, fat_content)) |&gt; \n  arrange(label) |&gt; \n  mutate(fila = row_number()) |&gt; \n  mutate(hjust = if_else(fila %% 2 == 0, 0, 1)) |&gt; \n  mutate(cheese_x = if_else(hjust == 0, fat_content+2, fat_content-2))\n\n# figura ------------------------------------------------------------------\n\n# t√≠tulo y subt√≠tulo\nicon_queso &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe264;&lt;/span&gt;\")\n\nmi_subtitulo &lt;- glue(\n  \"Los quesos con m√°s contenido graso por pa√≠s.\"\n)\n\n# mediana para la paleta de color\nm &lt;- median(e$fat_content)\n\n# figura\ng &lt;- ggplot(e, aes(fat_content, label, fill = fat_content)) +\n  geom_point(alpha = 1, size = 10, shape = 23, color = c5) +\n  geom_point(color = c5, alpha = 1, size = 4, shape = 21, fill = c4) +\n  geom_label(\n    aes(x = cheese_x,label = cheese, hjust = hjust, color = fat_content), \n    family = \"ubuntu\", size = 6, fill = c4, label.size = unit(0, \"mm\"),\n    fontface = \"bold\") +\n  scale_x_continuous(\n    limits = c(0, 83),\n    labels = scales::label_number(suffix = \"%\"),\n    expand = c(0, 0),\n    breaks = seq(0, 80, 20)) +\n  scale_fill_gradient2(low = c1, mid = c2, high = c3, midpoint = m) +\n  scale_color_gradient2(low = c1, mid = c2, high = c3, midpoint = m) +\n  labs(\n    x = \"Contenido de grasa\", y = NULL, title = icon_queso, \n    subtitle = mi_subtitulo, caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1.5,\n    plot.margin = margin(b = 10, r = 26, l = 26, t = 2.5),\n    plot.background = element_rect(fill = c5, color = c4, linewidth = 3),\n    plot.title.position = \"panel\",\n    plot.title = element_markdown(\n      size = 90, color = c2, hjust = 0, margin = margin(b = -20)),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 24, color = c4, \n      margin = margin(b = 10, t = -35, l = 70)),\n    plot.caption = element_markdown(\n      color = c2, family = \"ubuntu\", size = 17, \n      margin = margin(t = 55, b = 10)),\n    panel.background = element_rect(fill = c4, color = NA),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_line(\n      linetype = 1, color = c5, linewidth = .06),\n    panel.grid.major.y = element_line(\n      linetype = \"FF\", color = c5, linewidth = .1),\n    axis.ticks = element_blank(),\n    axis.title.x = element_text(\n      family = \"ubuntu\", size = 25, hjust = .99, margin = margin(t = -60),\n      color = c5),\n    axis.text.x = element_text(\n      family = \"jet\", size = 20, color = c4, margin = margin(t = 10)),\n    axis.text.y = element_markdown(hjust = .5, margin = margin(r = 10)),\n    legend.position = \"none\"\n  )\n\n# abro\nggsave(\n  plot = g,\n  filename = \"2024/s23/viz.png\",\n  width = 30,\n  height = 45,\n  units = \"cm\")\n\n# guardo\nbrowseURL(\"2024/s23/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 23"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_46.html",
    "href": "tidytuesday/2024/semana_46.html",
    "title": "Semana 46",
    "section": "",
    "text": "C√≥digos ISO 3166-1 de 3 letras que son iguales al inicio del nombre del pa√≠s, en ingl√©s.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#20235B\"\nc2 &lt;- \"#05A3BD\"\nc3 &lt;- \"#EAF3FF\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c2};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {46}, \",\n  \"&lt;span style='font-family: jet;'&gt;{{ISOcodes}}&lt;/span&gt;.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c2};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c2};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 46)\ncountries &lt;- tuesdata$countries\n\n# me interesa mostrar los pa√≠ses que inician con las mismas letras que el \n# c√≥digo ISO 3166-1 de tres letras\n\nd &lt;- countries |&gt; \n  select(alpha_3, name) |&gt; \n  mutate(\n    tres = str_sub(name, 1, 3) |&gt; toupper()\n  ) |&gt; \n  mutate(\n    es_igual = alpha_3 == tres\n  )\n\n# figura ------------------------------------------------------------------\n\n# √≠conos de igualdad/desigualdad\ndesigual &lt;- \"&lt;span style='font-family:jet;'&gt;&#xf098e;&lt;/span&gt;\"\nigual &lt;- \"&lt;span style='font-family:jet;'&gt;&#xf01fc;&lt;/span&gt;\"\n\n# subt√≠tulo, notas de igualdad/desigualdad y\n# ejemples (Argentina y Jap√≥n)\nmi_subtitulo &lt;- glue(\n  \"El est√°ndar &lt;b&gt;ISO 3166-1 alpha-3&lt;/b&gt; define c√≥digos de \",\n  \"tres letras para identificar pa√≠ses.&lt;br&gt;\",\n  \"A veces, esa letras coinciden con el inicio del nombre del pa√≠s, en ingl√©s.\"\n)\n\nnota1 &lt;- glue(\"C√≥digo {igual} inicio de pa√≠s\")\nnota2 &lt;- glue(\"C√≥digo {desigual} inicio de pa√≠s\")\n\nargentina &lt;- glue(\"ARG {igual} ARGENTINA\")\njapon &lt;- glue(\"JPN {igual} JAPAN\")\n\n# coordenadas de las notas\npos_x &lt;- .007\npos_y &lt;- .15\n\n# figura\ng &lt;- countries::quick_map(\n  data = d,\n  col_border = c3,\n  plot_col = \"es_igual\"\n) +\n  # igual\n  annotate(\n    geom = \"richtext\", x = I(pos_x), y = I(pos_y+.06), label = nota1, size = 4,\n    hjust = 0, vjust = 1, fill = c1, family = \"jet\", color = c3,\n    label.color = NA, label.r = unit(0, \"mm\")\n  ) +\n  # desigual\n  annotate(\n    geom = \"richtext\", x = I(pos_x), y = I(pos_y), label = nota2, size = 4,\n    hjust = 0, vjust = 1, fill = c2, family = \"jet\", color = c3,\n    label.color = NA, label.r = unit(0, \"mm\")\n  ) +\n  # Argentina\n  annotate(\n    geom = \"richtext\", x = I(.31), y = I(.12), label = argentina, size = 2.7,\n    hjust = 0, vjust = 1, fill = c1, family = \"jet\", color = c3,\n    label.color = NA, label.r = unit(0, \"mm\")\n  ) +\n  # Jap√≥n\n  annotate(\n    geom = \"richtext\", x = I(.87), y = I(.68), label = japon, size = 2.7,\n    hjust = 0, vjust = 1, fill = c2, family = \"jet\", color = c3,\n    label.color = NA, label.r = unit(0, \"mm\")\n  ) +\n  scale_fill_manual(\n    breaks = c(TRUE, FALSE),\n    values = c(c1, c2)\n  ) +\n  labs(\n    subtitle = mi_subtitulo,\n    caption = mi_caption\n  ) +\n  theme(\n    plot.background = element_rect(\n      fill = c3, color = c2, linewidth = 3\n    ),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 13, margin = margin(b = 25, t = 4),\n      lineheight = unit(1.2, \"line\")\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 9, margin = margin(b = 4, r = 4),\n      lineheight = unit(1.2, \"line\")\n    ),\n    panel.background = element_rect(fill = c3, color = NA),\n    legend.position = \"none\"\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s46/viz.png\",\n  width = 30,\n  height = 15,\n  units = \"cm\")\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s46/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 46"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_11.html",
    "href": "tidytuesday/2024/semana_11.html",
    "title": "Semana 11",
    "section": "",
    "text": "Empresas con categor√≠a 501(c)(3), por d√©cada.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\ncol &lt;- viridis::plasma(3)\nc1 &lt;- \"grey90\"\nc2 &lt;- \"grey60\"\nc3 &lt;- \"black\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# fuente: Victor\nfont_add(\n  family = \"victor\", \n  regular = \"fuente/VictorMono-ExtraLight.ttf\",\n  bold = \"fuente/VictorMono-VariableFont_wght.ttf\",\n  italic = \"fuente/VictorMono-ExtraLightItalic.ttf\")\n\n# fuente: Bebas Neue\nfont_add(\n  family = \"bebas\", \n  regular = \"fuente/BebasNeue-Regular.ttf\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{col[1]};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {11}. \",\n  \"R4DS Online Learning Community&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{col[1]};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{col[1]};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 11)\nfiscal &lt;- tuesdata$fiscal_sponsor_directory\n\n# me interesa sumar las organizaciones por d√©cada, y agregar los nombres de \n# algunas \n\n# nombres de las etiquetas\nd_label &lt;- fiscal |&gt; \n  select(name, year_501c3) |&gt; \n  drop_na() |&gt; \n  mutate(decada = year_501c3 - year_501c3 %% 10) |&gt; \n  mutate(n = n(), .by = decada) |&gt; \n  slice_sample(n = 5, by = decada) |&gt; \n  mutate(n_name = n - n(), .by = decada) |&gt; \n  reframe(\n    label = str_flatten_comma(name),\n    .by = c(decada, n_name)\n  ) |&gt; \n  mutate(\n    l = if_else(\n      n_name != 0,\n      str_c(label, glue(\" y {n_name} m√°s.\")),\n      glue(\"{label}.\")\n    )\n  ) |&gt; \n  mutate(l = str_wrap(l, 65))\n\nd &lt;- fiscal |&gt; \n  select(name, year_501c3) |&gt; \n  drop_na() |&gt; \n  mutate(decada = year_501c3 - year_501c3 %% 10) |&gt; \n  count(decada) |&gt; \n  inner_join(d_label, by = join_by(decada)) |&gt; \n  mutate(decada = factor(decada))\n\n# puntos, para geom_jitter()\nd_punto &lt;- d |&gt; \n  select(decada, n) |&gt; \n  mutate(p = map(n, ~ seq(1, .x, 1))) |&gt; \n  unnest(p)\n\n# figura ------------------------------------------------------------------\n\n# subt√≠tulo y eje vertical\nmi_subtitle &lt;- glue(\n  \"En &lt;b&gt;EE.UU.&lt;/b&gt; una compa√±√≠a \",\n  \"&lt;b style='color:{col[2]}'&gt;501(**c**)(3)&lt;/b&gt; es una&lt;br&gt;\",\n  \"organizaci√≥n sin fines de lucro exenta de&lt;br&gt;\",\n  \"impuestos. Se indican algunos nombres de&lt;br&gt;\",\n  \"empresas y la d√©cada en la que alcanzaron&lt;br&gt;\",\n  \"esta categor√≠a.\"\n)\n\ndec &lt;- d$decada |&gt; \n  as.character() |&gt; \n  as.integer() |&gt; \n  str_sub(3, 4)\n\neje_y &lt;- glue(\"'{dec}\")\n\n# figura\ng &lt;- ggplot(d, aes(n, decada)) +\n  geom_col(aes(fill = n), alpha = .6, color = NA, show.legend = FALSE) +\n  geom_label(\n    aes(x = n+3, label = l, fill = n), hjust = 0, size = 3.3, alpha = .2,\n    family = \"ubuntu\", label.size = 0, show.legend = FALSE) +\n  geom_point(\n    data = d_punto, aes(p, decada, fill = n), size = 1, alpha = 1, \n    position = position_jitter(seed = 2024),\n    show.legend = FALSE, color = c3, shape = 21) +\n  annotate(\n    geom = \"richtext\", x = 110, y = 3, label = mi_subtitle, family = \"ubuntu\",\n    hjust = 0, size = 4, color = col[1], fill = NA, label.color = NA) +\n  scale_x_continuous(\n    breaks = c(1, seq(10, 100, 10)), expand = c(0, 0)) +\n  scale_y_discrete(labels = eje_y) +\n  scale_color_viridis_c(option = \"plasma\") +\n  scale_fill_viridis_c(option = \"plasma\") +\n  coord_cartesian(clip = \"off\") +\n  labs(y = NULL, x = \"# de sponsors por d√©cada\", caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(t = 10, r = 330, b = 10, l = 10),\n    plot.background = element_rect(fill = c1, color = col[3], linewidth = 3),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", margin = margin(t = 15, r = -300), color = col[2],\n      lineheight = unit(1.2, \"line\")),\n    axis.text.x = element_text(margin = margin(t = 5), family = \"victor\"),\n    axis.text.y = element_text(\n      vjust = .5, margin = margin(r = 5), size = 25, family = \"bebas\",\n      color = col[2]),\n    axis.title.x = element_text(\n      family = \"ubuntu\", hjust = 1.33, margin = margin(t = -10)),\n    panel.grid.major.x = element_line(\n      linetype = \"ff\", linewidth = .1, color = c2)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s11/viz.png\",\n  width = 30,\n  height = 19.435,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s11/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 11"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_45.html",
    "href": "tidytuesday/2024/semana_45.html",
    "title": "Semana 45",
    "section": "",
    "text": "Porcentaje de democracias, presidencias y monarqu√≠as.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#F04C44\"\nc2 &lt;- \"#110C3A\"\nc3 &lt;- \"#76BE72\"\nc4 &lt;- \"#FFF5F5\"\nc5 &lt;- \"grey40\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nfont_add_google(\n  name = \"Bebas Neue\",\n  family = \"bebas\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\npaper &lt;- str_wrap(\"Regime types and regime change: A new dataset on democracy, coups, and political institutions\", 50) |&gt; \n  str_replace_all(\"\\n\", \"&lt;br&gt;\")\npaper_autor &lt;- \"Bj√∏rnskov & Rode\"\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {45}, \",\n  \"&lt;b&gt;{paper}&lt;/b&gt;, {paper_autor}.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 45)\ndemocracy_data &lt;- tuesdata$democracy_data\n\n# porcentaje anual de democracias, monarqu√≠as y presidenciales\n\nd &lt;- democracy_data |&gt; \n  select(year, is_democracy, is_monarchy, is_presidential) |&gt; \n  drop_na() |&gt; \n  mutate(\n    across(\n      .cols = everything(),\n      .fns = (x) mean(x)\n    ),\n    .by = year\n  ) |&gt; \n  pivot_longer(\n    cols = starts_with(\"is\"),\n    names_to = \"estado\",\n    values_to = \"prop\"\n  ) |&gt; \n  distinct() |&gt; \n  mutate(\n    estado_tran = case_match(\n      estado,\n      \"is_democracy\" ~ \"Democracia\",\n      \"is_monarchy\" ~ \"Monarqu√≠a\",\n      \"is_presidential\" ~ \"Presidencial\"\n    )\n  )\n\n# etiquetas\nd_2005 &lt;- filter(d, year == 2005) |&gt; \n  mutate(\n    vjust = c(1.2, 1.6, 1.4)\n  )\n\n# figura ------------------------------------------------------------------\n\nmi_subtitulo &lt;- glue(\n  \"En los √∫ltimos 70 a√±os, mientras las&lt;br&gt;\",\n  \"&lt;b style='color: {c1}'&gt;democracias&lt;/b&gt; est√°n en aumento,&lt;br&gt;\",\n  \"las &lt;b style='color: {c3}'&gt;presidencias&lt;/b&gt; y las \",\n  \"&lt;b style='color: {c2}'&gt;monarqu√≠as&lt;/b&gt;&lt;br&gt;\",\n  \"se estabilizaron.\"\n)\n\ng &lt;- ggplot(d, aes(year, prop, color = estado_tran)) +\n  geom_line(\n    linewidth = 2.7, show.legend = FALSE, lineend = \"round\"\n  ) +\n  geom_line(\n    aes(group = estado_tran), color = c4, linetype = \"44\",\n    linewidth = .4, show.legend = FALSE, lineend = \"round\"\n  ) +\n  geom_label(\n    data = d_2005, aes(label = estado_tran, fill = estado_tran, vjust = vjust),\n    show.legend = FALSE, size = 8, fontface = \"bold\", color = c4, hjust = 0,\n    label.r = unit(0, \"mm\")\n  ) +\n  annotate(\n    geom = \"richtext\", x = I(.01), y = I(.99), label = mi_subtitulo, size = 8,\n    family = \"ubuntu\", fill = c4, label.color = c5, hjust = 0, vjust = 1,\n    color = c5, label.padding = unit(.4, \"lines\"), label.r = unit(0, \"mm\")\n  ) +\n  scale_x_continuous(\n    breaks = scales::breaks_width(10),\n    expand = c(0, 0)\n  ) +\n  scale_y_continuous(\n    limits = c(.18, .65),\n    expand = c(0, 0),\n    breaks = seq(.1, .7, .1),\n    labels = scales::label_percent()\n  ) +\n  scale_color_manual(\n    values = c(c1, c2, c3)\n  ) +\n  scale_fill_manual(\n    values = c(c1, c2, c3)\n  ) +\n  coord_cartesian(clip = \"off\") +\n  labs(x = NULL, y = NULL, caption = mi_caption) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(r = 35, l = 10, b = 10, t = 8),\n    plot.background = element_rect(fill = c4, color = c3, linewidth = 3),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 14, color = c2, lineheight = unit(1.1, \"line\"),\n      margin = margin(t = 25)\n    ),\n    panel.grid.major = element_line(\n      color = c5, linetype = 1,linewidth = .2\n    ),\n    panel.grid.minor = element_line(\n      color = c5, linetype = 2, linewidth = .1\n    ),\n    axis.text.x = element_text(family = \"bebas\", size = 30, color = c2),\n    axis.text.y = element_text(family = \"jet\", size = 20, color = c2)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s45/viz.png\",\n  width = 30,\n  height = 31,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s45/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 45"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_09.html",
    "href": "tidytuesday/2024/semana_09.html",
    "title": "Semana 09",
    "section": "",
    "text": "29 personas nacidas/muertas un 29 de febrero, de acuerdo al art√≠culo de Wikipedia dedicado a la fecha.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#4F53B7\"\nc2 &lt;- \"#DDDDEE\"\nc3 &lt;- \"#6B6100\"\nc4 &lt;- \"#E0DDC9\"\nc5 &lt;- \"#C75DAA\"\nc6 &lt;- \"#F3DEEE\"\n\n# fuente: ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# fuente: victor\nfont_add(\n  family = \"victor\", \n  regular = \"fuente/VictorMono-ExtraLight.ttf\",\n  bold = \"fuente/VictorMono-VariableFont_wght.ttf\",\n  italic = \"fuente/VictorMono-ExtraLightItalic.ttf\")\n\n# fuente: abril\nfont_add_google(\n  name = \"Abril Fatface\",\n  family = \"abril\"\n)\n\n# fuente: bebas\nfont_add(\n  family = \"bebas\",\n  regular = \"fuente/BebasNeue-Regular.ttf\"\n)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {9}. \",\n  \"Art√≠culo *February 29*, Wikipedia.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 9)\nbirths &lt;- tuesdata$births\ndeaths &lt;- tuesdata$deaths\n\n# me interesa un listado de 29 nacimientos/muertes, se√±alando el caso de \n# James Milne Wilson, que naci√≥ y muri√≥ un 29/2\njmw &lt;- inner_join(deaths, births, by = join_by(person)) |&gt; \n  pull(person)\n\njmw_n &lt;- births |&gt; \n  filter(person == jmw) |&gt; \n  pull(year_birth)\n\njmw_m &lt;- births |&gt; \n  filter(person == jmw) |&gt; \n  pull(year_death)\n\n# para asegurar la reproducibilidad\nset.seed(2024)\n\n# cantidad de personas y desplazamiento horizontal\nn_nombres &lt;- 28\nnud &lt;- .2\n\n# nacimientos\nn_28 &lt;- births |&gt; \n  select(persona = person) |&gt; \n  filter(persona != jmw) |&gt; \n  slice_sample(n = n_nombres) |&gt; \n  mutate(tipo = \"nacimiento\")\n\nn_jmw &lt;- births |&gt; \n  filter(person == jmw) |&gt; \n  select(persona = person) |&gt; \n  mutate(tipo = \"nacimiento\")\n\nd_nac &lt;- bind_rows(n_28, n_jmw) |&gt; \n  slice_sample(n = n_nombres+1) |&gt; \n  mutate(x = rep_len(c(1-nud, 1+nud), n_nombres + 1))\n\n# muertes\nm_28 &lt;- deaths |&gt; \n  select(persona = person) |&gt; \n  filter(persona != jmw) |&gt; \n  slice_sample(n = n_nombres) |&gt; \n  mutate(tipo = \"muerte\")\n\nm_jmw &lt;- deaths |&gt; \n  filter(person == jmw) |&gt; \n  select(persona = person) |&gt; \n  mutate(tipo = \"muerte\")\n\nd_mue &lt;- bind_rows(m_28, m_jmw) |&gt; \n  slice_sample(n = n_nombres+1) |&gt; \n  mutate(x = rep_len(c(3-nud, 3+nud), n_nombres + 1))\n\n# combino datos\nd &lt;- bind_rows(d_nac, d_mue) |&gt; \n  mutate(y = row_number(), .by = tipo) |&gt; \n  mutate(nudge_x = rep_len(c(.2, -.2), n_nombres + 1), .by = tipo) |&gt; \n  mutate(persona = str_wrap(persona, 15)) |&gt; \n  mutate(persona = str_replace_all(persona, fixed(\"n\"), \"&lt;br&gt;\")) |&gt; \n  mutate(tipo = factor(tipo, levels = c(\"nacimiento\", \"muerte\")))\n\n# figura ------------------------------------------------------------------\n\n# subt√≠tulo\nmi_subtitle &lt;- glue(\n  \"29 personas que &lt;b style='color:{c1}'&gt;nacieron&lt;/b&gt; √≥ \",\n  \"&lt;b style='color:{c3}'&gt;murieron&lt;/b&gt; el **29 de febrero**.&lt;br&gt;\",\n  \"Es curioso el caso de &lt;b style='color:{c5}'&gt;{jmw}&lt;/b&gt; \",\n  \"({jmw_n}-{jmw_m}), Primer&lt;br&gt;Ministro de Tasmania, \",\n  \"muerto el d√≠a de su cumplea√±os.\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(x, y, label = persona, color = tipo)) +\n  # personas\n  geom_richtext(\n    size = 6, family = \"bebas\", fill = NA, label.color = NA,\n    show.legend = FALSE) +\n  # JMW\n  geom_richtext(\n    data = filter(d, str_detect(persona, \"Milne\")), aes(fill = tipo),\n    family = \"bebas\", size = 6, show.legend = FALSE, label.color = NA,\n    label.padding = unit(c(5, 5, 5, 5), \"mm\"), label.r = unit(0, \"lines\")) +\n  # 29\n  annotate(\n    geom = \"text\", x = 2, y = (n_nombres+1)/2, label = \"2n9\", fontface = \"bold\",\n    size = 150, family = \"abril\", lineheight = unit(1, \"line\"), \n    color = c5) +\n  annotate(\n    geom = \"text\", x = 2, y = (n_nombres+1)/2, label = \"Febrero\", size = 20,\n    fontface = \"bold\", family = \"abril\", lineheight = unit(1, \"line\"), \n    color = c5) +\n  scale_color_manual(\n    values = c(c1, c3)) +\n  scale_fill_manual(\n    values = c(c2, c4)) +\n  coord_cartesian(\n    clip = \"off\", xlim = c(.5, 3.5), expand = FALSE) +\n  labs(subtitle = mi_subtitle, caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.background = element_rect(color = c5, fill = c6, linewidth = 3),\n    plot.margin = margin(t = 25, r = 28.7, b = 25, l = 28.7),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 20, margin = margin(b = 50), hjust = .5,\n      lineheight = unit(1.3, \"line\")),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 14, color = c1, margin = margin(t = 60))\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s09/viz.png\",\n  width = 30,\n  height = 37,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s09/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 09"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_27.html",
    "href": "tidytuesday/2024/semana_27.html",
    "title": "Semana 27",
    "section": "",
    "text": "Datos geogr√°ficos presentes en los datasets de TidyTuesday.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#040404\"\nc2 &lt;- \"#FCFCFC\"\npal &lt;- PrettyCols::prettycols(palette = \"Light\", n = 5)\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{pal[3]};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {27}, \",\n  \"&lt;span style='font-family:jet;'&gt;{{ttmeta}}&lt;/span&gt;.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{pal[3]};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{pal[3]};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"&lt;span style='font-size:27px; color:{pal[5]}'&gt;{fuente}&lt;br&gt;{autor} {sep} \",\n  \"{icon_github} {icon_twitter} {icon_instagram} {icon_mastodon} \",\n  \"{usuario}&lt;/span&gt;\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 27)\n\ntt_datasets &lt;- tuesdata$tt_datasets\ntt_variables &lt;- tuesdata$tt_variables\n\n# me interesan los datasets que incluyen variables geogr√°ficas\n# y comparar con los otros datasets SIN datos geogr√°ficos\n\n# filtro por datos geogr√°ficos\ngeo_tbl &lt;- tt_variables |&gt; \n  filter(\n    str_detect(variable, \"^lat$|latitude|^lon$|longitude|lng|^long$|coord\")\n  ) |&gt; \n  distinct(dataset_name, year, week) |&gt; \n  arrange(year, week) |&gt; \n  mutate(geo = \"Con datos geogr√°ficos\")\n\n# combino los datos geogr√°ficos con el resto\nd &lt;- full_join(tt_datasets, geo_tbl, by = join_by(year, week, dataset_name)) |&gt; \n  mutate(geo = if_else(is.na(geo), \"Sin datos geogr√°ficos\", geo)) |&gt; \n  filter(geo == \"Con datos geogr√°ficos\") |&gt; \n  select(year, week, geo)\n\n# agrego los datos NO geogr√°ficos\ne &lt;- tt_datasets |&gt; \n  distinct(year, week) |&gt; \n  full_join(d, by = join_by(year, week)) |&gt; \n  mutate(geo = if_else(is.na(geo), \"Sin datos geogr√°ficos\", geo))\n\n# incluyo todas las semanas posibles\nsemanas_tbl &lt;- expand_grid(\n  year = unique(tt_datasets$year), \n  week = unique(tt_datasets$week)) |&gt;\n  arrange(year, week)\n\n# √∫ltima semana\nmax_dataset &lt;- tt_datasets |&gt; \n  filter(year == max(tt_datasets$year)) |&gt; \n  slice_max(order_by = week, n = 1)\n\n# combino todos los datos\ne2 &lt;- full_join(e, semanas_tbl, by = join_by(year, week)) |&gt; \n  mutate(geo = if_else(is.na(geo), \"Semana sin datos\", geo)) |&gt; \n  distinct() |&gt; \n  arrange(year, week) |&gt; \n  mutate(\n    estado = if_else(\n      year == max_dataset$year & week &gt;= max_dataset$week,\n      \"out\",\n      \"in\"\n    )\n  ) |&gt; \n  filter(estado == \"in\")\n\n# figura ------------------------------------------------------------------\n\n# etiquetas del eje horizontal\neje_x_tbl &lt;- unique(d$year) |&gt; \n  str_split(pattern = \"\") |&gt; \n  map(.x = _, ~ glue(\"{.x}&lt;br&gt;\"))\n\neje_x_label &lt;- tibble(eje_x_tbl) |&gt; \n  mutate(label = map(.x = eje_x_tbl, str_flatten)) |&gt; \n  unnest(label) |&gt; \n  pull(label)\n\n# cantidad de datos\nn_datasets &lt;- tt_datasets |&gt; \n  distinct(year, week) |&gt; \n  nrow()\n\nn_geo &lt;- e2 |&gt; \n  filter(geo == \"Con datos geogr√°ficos\") |&gt; \n  nrow()\n\n# subt√≠tulo\nmi_subtitulo &lt;- glue(\n  \"Desde 2018 &lt;b style='color:{pal[2]}'&gt;TidyTuesday&lt;/b&gt; ofrece\",\n  \"datasets reales para aprender\",\n  \"a manejar, modelar y visualizar\",\n  \"datos.&lt;br&gt;\",\n  \"De las {n_datasets} semanas, solamente\",\n  \"{n_geo} presentan &lt;b style='color:{pal[3]}'&gt;coordenadas\",\n  \"geogr√°ficas&lt;/b&gt;. Se indican tambi√©n\",\n  \"las semanas &lt;b style='color:{pal[4]}'&gt;sin datos&lt;/b&gt;.\",\n  .sep = \"&lt;br&gt;\"\n)\n\n# figura\ng &lt;- ggplot(e2, aes(year, week, color = geo, fill = geo)) +\n  geom_tile(\n    color = c1, linewidth = 1, show.legend = TRUE) +\n  geom_tile(\n    color = c1, fill = alpha(c2, .3), linewidth = 1, \n    show.legend = TRUE) +\n  geom_point(\n    size = 5, shape = 21, color = c1, stroke = 1, show.legend = TRUE) +\n  scale_x_continuous(\n    breaks = 2018:2024, limits = c(2017.5, 2024.5), \n    expand = c(0, 0), labels = eje_x_label) +\n  scale_y_continuous(\n    breaks = c(1, seq(5, 50, 5)), limits = c(.5, 52.5), expand = c(0, 0),\n    sec.axis = sec_axis(\n      breaks = c(45, 5),\n      labels = c(mi_subtitulo, mi_caption),\n      transform = ~ .\n    )) +\n  scale_color_manual(values = pal[3:5]) +\n  scale_fill_manual(values = pal[3:5]) +\n  guides(\n    color = guide_legend(position = \"inside\", override.aes = list(size = 7)),\n    fill = guide_legend(position = \"inside\", override.aes = list(size = 7))\n  ) +\n  coord_fixed(clip = \"off\") +\n  theme_void(base_size = 4) +\n  theme(\n    plot.margin = margin(b = 15, r = 105, l = 50, t = 20),\n    plot.background = element_rect(fill = c1, color = pal[4], linewidth = 3),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 18, color = pal[5], margin = margin(r = -100)),\n    axis.text.x = element_markdown(\n      family = \"jet\", color = pal[1], size = 30, margin = margin(t = 10)),\n    axis.text.y = element_text(\n      family = \"jet\", color = pal[1], size = 26, margin = margin(r = 10),\n      hjust = 1),\n    axis.text.y.right = element_markdown(\n      family = \"ubuntu\", size = 30, hjust = 0, margin = margin(l = 20),\n      vjust = 1, lineheight = unit(1.3, \"line\"), color = c2),\n    legend.key.size = unit(1.2, \"cm\"),\n    legend.text = element_text(\n      color = c2, family = \"ubuntu\", size = 23, margin = margin(l = 10)),\n    legend.position.inside = c(1.2, .3),\n    legend.justification.inside = c(0, 0)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s27/viz.png\",\n  width = 30,\n  height = 55,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s27/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 27"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_18.html",
    "href": "tidytuesday/2024/semana_18.html",
    "title": "Semana 18",
    "section": "",
    "text": "Edad media de los empleados p√∫blicos y privados, en el sector salud y educaci√≥n, en Argentina.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\n\nc1 &lt;- \"grey10\"\nc2 &lt;- \"grey30\"\nc3 &lt;- \"grey70\"\nc4 &lt;- \"grey90\"\nc5 &lt;- \"#96410D\"\nc6 &lt;- \"#2B614E\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# fuente: Bebas Neue\nfont_add(\n  family = \"bebas\", \n  regular = \"fuente/BebasNeue-Regular.ttf\")\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c5};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {18}. \",\n  \"Worldwide Bureaucracy Indicators, &lt;b&gt;World Bank&lt;/b&gt;.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c5};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c5};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 18)\n\nwwbi_data &lt;- tuesdata$wwbi_data\nwwbi_series &lt;- tuesdata$wwbi_series\n\n# me interesan las edades de empleados p√∫blicos y privados, en educaci√≥n y \n# salud en Argentina\n\n# agrego las descripciones de los c√≥digos de los indicadores y filtro por \n# Argentina\nd_arg &lt;- wwbi_data |&gt; \n  filter(country_code == \"ARG\") |&gt; \n  inner_join(\n    wwbi_series,\n    by = join_by(indicator_code)\n  ) |&gt; \n  select(a√±o = year, valor = value, indicador = indicator_name)\n\n# edad de empleados p√∫blicos y privados\nedad_publicos &lt;- \"Mean age of public paid employees, by\"\nedad_privados &lt;- \"Mean age of private paid employees, by\"\n\n# profesiones\nprofesiones &lt;- c(\"Education|Health\")\n\n# filtro por empleados p√∫blicos y privados, y por las profesiones\nd &lt;- d_arg |&gt; \n  filter(str_detect(indicador, glue(\"{edad_privados}|{edad_publicos}\"))) |&gt; \n  filter(str_detect(indicador, profesiones)) |&gt; \n  mutate(sector = if_else(\n    str_detect(indicador, \"private\"),\n    \"privado\",\n    \"p√∫blico\"\n  )) |&gt; \n  mutate(prof = str_replace(indicador, \".*\\: (.*)\", \"\\1\")) |&gt; \n  select(-indicador) |&gt; \n  mutate(\n    prof = if_else(\n      prof == \"Education\",\n      \"Educaci√≥n\",\n      \"Salud\"\n    )\n  )\n\n# figura ------------------------------------------------------------------\n\n# √≠conos para empleados p√∫blicos y privados\nicon_triangulo &lt;- glue(\"&lt;b style='font-family:jet; color:{c5};'&gt;&#xf0537;&lt;/b&gt;\")\nicon_circulo &lt;- glue(\"&lt;b style='font-family:jet; color:{c6};'&gt;&#xeabc;&lt;/b&gt;\")\n\n# subt√≠tulo\nmi_subtitle &lt;- glue(\n  \"En &lt;b&gt;Argentina&lt;/b&gt;, entre {min(d$a√±o)} y {max(d$a√±o)}, aument√≥ la &lt;b&gt;edad \",\n  \"promedio&lt;/b&gt; de los empleados en&lt;br&gt;\",\n  \"educaci√≥n y salud, siendo los trabajadores \",\n  \"&lt;b style='color:{c5};'&gt;p√∫blicos&lt;/b&gt; ({icon_triangulo}) mayores que los \",\n  \"&lt;b style='color:{c6};'&gt;privados&lt;/b&gt; ({icon_circulo}).\"\n)\n\n# t√≠tulo eje vertical\neje_y &lt;- \"Edad &lt;b style='font-family:jet;'&gt;&#xf178; &#xf178; &#xf178;&lt;/b&gt;\"\n\n# figura\ng &lt;- ggplot(d, aes(a√±o, valor, shape = sector, color = sector)) +\n  # tendencias\n  geom_line(\n    stat = \"smooth\", method = lm, formula = y ~ x, linewidth = 2,\n    lineend = \"round\", alpha = .4) +\n  geom_line(\n    stat = \"smooth\", method = lm, formula = y ~ x, linewidth = .5,\n    lineend = \"square\", color = c4) +\n  # puntos\n  geom_point(size = 2, alpha = 1) +\n  geom_point(size = .5, alpha = 1, color = c4) +\n  facet_wrap(vars(prof), nrow = 1, scales = \"free\") +\n  scale_x_continuous(\n    limits = c(2000, 2017), expand = c(0, 0), breaks = scales::breaks_width(5),\n    minor_breaks = 2000:2017) +\n  scale_y_continuous(\n    limits = c(37, 45), expand = c(0, 0), breaks = scales::breaks_width(1)) +\n  scale_color_manual(\n    values = c(c6, c5)) +\n  coord_cartesian(clip = \"off\") +\n  labs(x = NULL, y = eje_y, subtitle = mi_subtitle, caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(l = 20, r = 20, b = 10, t = 15.3),\n    plot.background = element_rect(fill = c4, linewidth = 3, color = c3),\n    plot.subtitle = element_markdown(\n      color = c1, family = \"ubuntu\", size = 13, lineheight = unit(1.1, \"line\"),\n      margin = margin(b = 18)),\n    plot.caption = element_markdown(\n      size = 8, color = c2, family = \"ubuntu\", margin = margin(t = 20)),\n    panel.grid.major = element_line(color = c3, linetype = 2, linewidth = .17),\n    panel.grid.minor.x = element_line(color = c3, linetype = 3, linewidth = .1),\n    panel.spacing.x = unit(3, \"line\"),\n    axis.ticks = element_line(color = c3),\n    axis.ticks.length = unit(2, \"mm\"),\n    axis.text.x = element_text(\n      family = \"bebas\", color = c2, size = 22, hjust = 0,\n      margin = margin(t = 5)),\n    axis.text.y = element_text(\n      family = \"jet\", color = c2, vjust = 0, margin = margin(r = 5),\n      size = 8),\n    \n    axis.title.y = element_markdown(\n      color = c3, family = \"ubuntu\", size = 15, angle = 90, \n      margin = margin(r = 10)),\n    \n    strip.text = element_text(\n      family = \"ubuntu\", color = c2, size = 20, margin = margin(b = 10)),\n    legend.position = \"none\"\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s18/viz.png\",\n  width = 30,\n  height = 18,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s18/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 18"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_19.html",
    "href": "tidytuesday/2024/semana_19.html",
    "title": "Semana 19",
    "section": "",
    "text": "Semanas en el ranking de Rolling Stone, separados por g√©nero del √°lbum.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#AB740F\"\nc2 &lt;- \"#3E7671\"\nc3 &lt;- \"#122C43\"\nc4 &lt;- \"black\"\nc5 &lt;- \"white\"\nc6 &lt;- \"grey95\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {19}, \",\n  \"&lt;b&gt;The Pudding&lt;/b&gt;, Rolling Stone&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 19)\nrolling_stone &lt;- tuesdata$rolling_stone\n\n# me interesa la cantidad de semanas en Bilboard de todos los √°lbums de m√∫sica\n\nd &lt;- rolling_stone |&gt; \n  select(clean_name, weeks_on_billboard, artist_gender, genre) |&gt; \n  drop_na() |&gt; \n  separate_longer_delim(cols = genre, delim = \"/\") |&gt; \n  mutate(genre = toupper(genre)) |&gt; \n  mutate(genre = case_when(\n    str_detect(genre, \"ROCK\") ~ \"ROCK\",\n    str_detect(genre, \"PUNK\") ~ \"PUNK\",\n    str_detect(genre, \"RHYTHM & BLUES\") ~ \"R&B\",\n    .default = genre\n  )) |&gt; \n  mutate(genre = fct_reorder(genre, weeks_on_billboard)) |&gt; \n  arrange(genre) |&gt; \n  mutate(id = as.numeric(genre))\n\n# paleta de colores\npaleta &lt;- MetBrewer::met.brewer(name = \"Veronese\", n = length(unique(d$genre)))\n\n# agrego paleta de colores al eje vertical\ne &lt;- d |&gt; \n  mutate(color = paleta[id]) |&gt; \n  mutate(genre = str_replace(genre, \"-\", \"&lt;br&gt;\")) |&gt; \n  mutate(label_y = glue(\"&lt;b style='color:{color}'&gt;{genre}&lt;/b&gt;\")) |&gt; \n  mutate(label_y = fct_reorder(label_y, weeks_on_billboard))\n\n# obtengo medianas\ne_s &lt;- e |&gt; \n  reframe(\n    s = median(weeks_on_billboard),\n    .by = c(label_y, color))\n\n# figura ------------------------------------------------------------------\n\n# tibble para las barras horizontales\ne_col &lt;- tibble(\n  x = 1000,\n  label_y = unique(e$label_y),\n  color = unique(e$color)\n  )\n\n# logo de Rolling Stones\nlogo &lt;- \"&lt;img src='2024/s19/logo.png' width=250&gt;&lt;/img&gt;\"\n\n# subt√≠tulo\nmi_subtitle &lt;- glue(\n  \"Semanas en el ranking de &lt;b&gt;Rolling Stones&lt;/b&gt; de&lt;br&gt;\",\n  \"{nrow(rolling_stone)} alb√∫ms\",\n  \"de m√∫sica, por g√©nero entre {min(rolling_stone$release_year)} y \",\n  \"{max(rolling_stone$release_year)}\")\n\n# figura\ng &lt;- ggplot(e, aes(weeks_on_billboard, label_y, color = color)) +\n  # barras horizontales\n  geom_col(\n    data = e_col, aes(x, label_y, fill = label_y), alpha = .2, color = NA) +\n  geom_point(position = position_jitter(height = .3, seed = 2024), alpha = .8) +\n  # medianas\n  geom_point(data = e_s, aes(s, label_y, color = color), size = 6) +\n  geom_point(data = e_s, aes(s, label_y), color = c5, size = 4) +\n  geom_point(\n    data = e_s, aes(s, label_y, color = color), size = 2) +\n  geom_point(data = e_s, aes(s, label_y), color = c5, size = .5) +\n  scale_x_log10(breaks = c(1, 10, 100, 1000), expand = c(0, 0)) +\n  scale_color_identity() +\n  scale_fill_manual(values = paleta) +\n  coord_cartesian(xlim = c(.9, NA)) +\n  labs(\n    y = NULL, x = \"Semanas en Billboard\", title = logo, subtitle = mi_subtitle,\n    caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1.2,\n    plot.background = element_rect(fill = c6, color = c2, linewidth = 3),\n    plot.margin = margin(l = 20, r = 25, t = 7.3),\n    plot.title = element_markdown(margin = margin(b = -50)),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 19, hjust = 1, margin = margin(b = 10),\n      lineheight = unit(1.2, \"line\"), color = c3),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 12, color = c1, margin = margin(t = 20, b = 10),\n      lineheight = unit(1.2, \"line\")),\n    panel.grid.major.x = element_line(\n      color = c4, linetype = \"77\", linewidth = .1),\n    axis.text.x = element_text(family = \"jet\", size = 14),\n    axis.text.y = element_markdown(family = \"ubuntu\", size = 14, hjust = 1),\n    legend.position = \"none\"\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s19/viz.png\",\n  width = 30,\n  height = 35,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s19/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 19"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_02.html",
    "href": "tidytuesday/2024/semana_02.html",
    "title": "Semana 02",
    "section": "",
    "text": "Diferencias en los meses de nacimientos en Canad√° y NHL.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\nMetBrewer::met.brewer(name = \"VanGogh2\")\nMetBrewer::met.brewer(name = \"Benedictus\")\n\n# colores\nc1 &lt;- \"#F9E0E8\"\nc2 &lt;- \"#D8527C\"\nc3 &lt;- \"#9A133D\"\nc4 &lt;- \"#BD3107\"\nc5 &lt;- \"#D9700F\"\nc6 &lt;- \"#454B87\"\nc7 &lt;- \"#89A6BB\"\nc8 &lt;- \"#F9B4C9\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# horas, d√≠as\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 2. \",\n  \"Statistics Canada & NHL API.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2024/2024-01-09/readme.md\")\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, week = 2)\n\n# me interesa las diferencias entre el porcentaje de nacimientos por mes, entre\n# la poblaci√≥n general de Canad√° y los integrantes de la NHL\ncanada &lt;- tuesdata$canada_births_1991_2022\nnhl &lt;- tuesdata$nhl_player_births\n\n# etiquetas de los meses\nmeses &lt;- ymd(glue(\"2020-{1:12}-01\")) |&gt; \n  format(\"%b\") |&gt; \n  str_to_upper() |&gt; \n  str_remove(pattern = \"\\.\")\n\nnames(meses) &lt;- 1:12\n\n# datos de Canad√°\nd_canada &lt;- canada |&gt; \n  reframe(\n    suma_mes = sum(births),\n    .by = month) |&gt; \n  mutate(porcent = suma_mes/sum(suma_mes)*100) |&gt; \n  select(mes = month, porcent) |&gt; \n  mutate(tipo = \"Canad√°\")\n\nd_nhl &lt;- nhl |&gt; \n  count(birth_month) |&gt; \n  mutate(porcent = n/sum(n)*100) |&gt; \n  select(mes = birth_month, porcent) |&gt; \n  mutate(tipo = \"NHL\")\n\n# porcentajes de nacimientos por mes, de la poblaci√≥n de Canad√° y NHL\nd &lt;- bind_rows(d_canada, d_nhl) |&gt; \n  mutate(color = if_else(tipo == \"Canad√°\", c4, c6))\n\n# tabla ancha, para agregar etiquetas de cambio de porcentajes y flechas\nd2 &lt;- d |&gt; \n  select(-color) |&gt; \n  pivot_wider(names_from = tipo, values_from = porcent) |&gt; \n  mutate(dif = NHL - Canad√°) |&gt; \n  mutate(y_medio = Canad√° + dif/2) |&gt; \n  mutate(label = format(dif, digits = 2)) |&gt; \n  mutate(label = str_replace(label, \"\\.\", \",\")) |&gt; \n  mutate(label = str_replace(label, \" \", \"+\")) |&gt; \n  mutate(color = if_else(dif &gt; 0, c5, c7)) |&gt; \n  mutate(NHL = ifelse(dif &gt; 0, NHL*.995, NHL*1.005)) |&gt; \n  mutate(y_mes = if_else(Canad√° &lt; NHL, Canad√°, NHL)) |&gt; \n  mutate(label_mes = meses[mes]) |&gt; \n  mutate(label_mes = str_split(label_mes, \"\")) |&gt; \n  mutate(label_mes = map(label_mes, ~ str_flatten(.x, collapse = \"n\"))) |&gt; \n  unnest(label_mes)\n\n# figura ------------------------------------------------------------------\n\nmi_subtitle &lt;- glue(\n  \"Diferencias en el porcentaje de nacimientos&lt;br&gt;\",\n  \"mensuales, entre la poblaci√≥n general de &lt;b style='color:{c4}'&gt;Canad√°&lt;/b&gt;&lt;br&gt;\",\n  \"y los jugadores de la &lt;b style='color:{c6}'&gt;National Hockey League&lt;/b&gt;.&lt;br&gt;\",\n  \"Se indica en cada mes si la diferencia es &lt;b style='color:{c5}'&gt;positiva&lt;/b&gt; o&lt;br&gt;\",\n  \"&lt;b style='color:{c7}'&gt;negativa&lt;/b&gt;. En la **NHL** hay una una mayor presencia&lt;br&gt;\",\n  \"de nacidos a principio de a√±o que en el resto&lt;br&gt;\",\n  \"de la poblaci√≥n.\"\n)\n\ni_canada &lt;- \"2024/s01/i_canada.png\"\ni_nhl &lt;- \"2024/s01/i_nhl.png\"\n\ni_y1 &lt;- d[d$mes == 1 & d$tipo == \"NHL\",]$porcent\ni_y2 &lt;- d[d$mes == 12 & d$tipo == \"Canad√°\",]$porcent\n\ni_tbl &lt;- tibble(img = c(i_nhl, i_canada)) |&gt; \n  mutate(label = glue(\"&lt;img src={img} height='50'&gt;\")) |&gt; \n  mutate(x = c(1, 12), y = c(i_y1, i_y2))\n\ng &lt;- ggplot(d, aes(mes, porcent)) +\n  # flechas\n  geom_segment(\n    data = d2, \n    aes(x = mes, xend = mes, y = Canad√°, yend = NHL, color = color),\n    arrow = arrow(angle = 20, length = unit(3, \"mm\"), type = \"open\"), \n    linewidth = 1) +\n  # l√≠neas\n  geom_line(aes(color = color), linewidth = 3) +\n  # puntos\n  geom_point(aes(color = color), size = 4) +\n  geom_point(color = c1, size = 2) +\n  # porcentaje de cambio\n  geom_label(\n    data = d2, aes(\n      mes, y_mes, label = label, fill = alpha(color, .6)), hjust = .5, \n    nudge_x = 0, nudge_y = -.45, family = \"victor\", size = 4, color = \"black\",\n    label.size = unit(0, \"mm\"), vjust = 1) +\n  # meses\n  geom_text(\n    data = d2, aes(mes, y_mes, label = label_mes), family = \"ubuntu\", \n    color = c2, nudge_y = -.28, fontface = \"italic\", size = 6,\n    lineheight = unit(.8, \"line\")) +\n  # im√°genes de NHL & Canad√°\n  geom_richtext(\n    data = i_tbl, aes(x, y, label = label), fill = NA, label.color = NA, \n    vjust = 0, nudge_y = .03) +\n  # subt√≠tulo\n  annotate(\n    geom = \"richtext\", x = 6.5, y = 11, label = mi_subtitle, hjust = 0, vjust = 1,\n    color = \"black\", fill = NA, label.color = NA, family = \"ubuntu\", size = 6) +\n  # ep√≠grafe\n  annotate(\n    geom = \"richtext\", x = 1, y = 6, label = mi_caption, hjust = 0, vjust = 0,\n    color = \"black\", fill = NA, label.color = NA, family = \"ubuntu\", size = 4) +\n  scale_x_continuous(breaks = 1:12, labels = meses, limits = c(.9, 12.7)) +\n  scale_y_continuous(\n    limits = c(6, 11), breaks = 6:11, \n    labels = scales::label_number(suffix = \"%\")) +\n  scale_color_identity() +\n  scale_fill_identity() +\n  coord_cartesian(clip = \"off\", expand = FALSE) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(28.5, 10, 28.5, 10),\n    plot.background = element_rect(fill = c1, color = c8, linewidth = 3),\n    plot.subtitle = element_markdown(family = \"ubuntu\"),\n    plot.caption = element_markdown(family = \"ubuntu\"),\n    panel.background = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_line(\n      linetype = 2, linewidth = .5, color = c8),\n    axis.text.y = element_text(\n      family = \"victor\", size = 15, margin = margin(r = 10), color = c3)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s02/viz.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s02/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 02"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_12.html",
    "href": "tidytuesday/2024/semana_12.html",
    "title": "Semana 12",
    "section": "",
    "text": "Personajes de X-Men populares.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggbump)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\ncol &lt;- MetBrewer::met.brewer(name = \"Isfahan2\", n = 5)\nc1 &lt;- \"grey20\"\nc2 &lt;- \"grey40\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# fuente: Victor\nfont_add(\n  family = \"victor\", \n  regular = \"fuente/VictorMono-ExtraLight.ttf\",\n  bold = \"fuente/VictorMono-VariableFont_wght.ttf\",\n  italic = \"fuente/VictorMono-ExtraLightItalic.ttf\")\n\n# fuente: Bebas Neue\nfont_add(\n  family = \"bebas\", \n  regular = \"fuente/BebasNeue-Regular.ttf\")\n\n# fuente: Marvel\nfont_add_google(\n  name = \"Marvel\",\n  family = \"marvel\"\n)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-regular\", \"icon/Font Awesome 6 Free-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{col[1]};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {12}. \",\n  \"Mutant Moneyball: A Data Driven Ultimate X-Men, &lt;b&gt;Anderson Evans&lt;/b&gt;&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{col[1]};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{col[1]};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 12)\nmutant &lt;- tuesdata$mutant_moneyball\n\n# me interesa la evoluci√≥n en la popularidad (en precio promedio de los issues)\n# de los 10 personajes m√°s frecuentes\n\n# 10 m√°s frecuentes\npop &lt;- mutant |&gt; \n  slice_max(TotalIssues, n = 10) |&gt; \n  pull(Member) |&gt; \n  sort()\n\n# acomodo los nombres y el ranking por d√©cada\nd &lt;- mutant |&gt; \n  filter(Member %in% pop) |&gt; \n  janitor::clean_names() |&gt; \n  select(member, starts_with(\"pp\") & ends_with(\"ebay\")) |&gt; \n  mutate(member = str_replace_all(member, \"([A-Z])\", \" \\1\")) |&gt; \n  mutate(member = str_to_title(member)) |&gt; \n  mutate(\n    across(\n      .cols = -member,\n      .fns = ~ parse_number(.x)\n    )\n  ) |&gt;\n  pivot_longer(\n    cols = -member,\n    names_to = \"decada\",\n    values_to = \"precio\"\n  ) |&gt; \n  mutate(decada = str_remove(decada, \"ppi\") |&gt; str_remove(\"s_ebay\")) |&gt; \n  mutate(decada = as.numeric(decada)) |&gt; \n  mutate(r = rank(precio, ties.method = \"first\"), .by  = decada) |&gt; \n  mutate(member = str_wrap(member, 6))\n\n# arreglo el orden de los nombres y tipo de l√≠nea\nd_rank &lt;- d |&gt; \n  filter(decada == 60) |&gt; \n  mutate(member = fct_reorder(member, r)) |&gt; \n  arrange(desc(member)) |&gt; \n  mutate(linetype = if_else(as.numeric(member) &gt; 5, \"1\", \"2\")) |&gt; \n  select(member, pos = r, linetype)\n\n# nombres en la d√©cada de los 60 y 90\nd_lim &lt;- d |&gt; \n  filter(decada == 60 | decada == 90) |&gt; \n  mutate(hjust = if_else(decada == 60, 1, 0)) |&gt; \n  mutate(decada = if_else(decada == 60, decada-.5, decada+.5))\n\n# combino los datos\ne &lt;- inner_join(d, d_rank, by = join_by(member)) |&gt; \n  mutate(member = fct_reorder(member, pos))\n\n# figura ------------------------------------------------------------------\n\n# subt√≠tulo y aclaraci√≥n\nmi_subtitle &lt;- glue(\n  \"Ranking de los personajes m√°s populares del c√≥mic \",\n  \"&lt;b style='color:{col[2]}'&gt;X-MEN&lt;/b&gt;,&lt;br&gt;\",\n  \"por precio&lt;b style='color:{col[4]};'&gt;*&lt;/b&gt; promedio por publicaci√≥n en 4 \",\n  \"d√©cadas\"\n)\n\neje_x &lt;- glue(\"&lt;b style='color:{col[4]};'&gt;*&lt;/b&gt;basado en ventas en &lt;i&gt;eBay&lt;/i&gt;\")\n\n# figura\ng &lt;- ggplot(e, aes(decada, r, color = member, linetype = linetype)) +\n  geom_bump(linewidth = 1.3) +\n  geom_point(size = 3, shape = 23, fill = c1, stroke = 1) +\n  geom_text(\n    data = d_lim, aes(decada, r, label = member, hjust = hjust, color = member),\n    size = 8, family = \"marvel\", lineheight = unit(.8, \"line\"),\n    inherit.aes = FALSE) +\n  scale_x_continuous(\n    labels = (x) glue(\"'{x}\")) +\n  scale_y_continuous(\n    breaks = 1:10, labels = glue(\"#{10:1}\")) +\n  scale_color_manual(values = c(col, col)) +\n  scale_linetype_manual(values = c(\"solid\", \"83\")) +\n  labs(\n    subtitle = mi_subtitle, \n    caption = mi_caption, \n    x = eje_x) +\n  coord_cartesian(clip = \"off\") +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(l = 30, r = 80),\n    plot.background = element_rect(fill = c1, color = col[1], linewidth = 3),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_markdown(\n      color = \"white\", size = 22, hjust = .5, family = \"ubuntu\",\n      margin = margin(t = 10, b = 15)),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 12, color = col[4],\n      margin = margin(t = 20, r = -70, b = 10), lineheight = unit(1.2, \"line\")),\n    legend.position = \"none\",\n    text = element_text(size = 5),\n    axis.title.x = element_markdown(\n      hjust = 0, color = c2, family = \"ubuntu\", size = 17, \n      margin = margin(t = 5, l = -80)),\n    axis.text.x = element_text(\n      family = \"bebas\", size = 50, color = c2, margin = margin(t = 10)),\n    axis.text.y = element_text(\n      margin = margin(r = 90), size = 20, family = \"victor\", color = c2,\n      vjust = 1)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s12/viz.png\",\n  width = 30,\n  height = 28.3,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s12/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 12"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_21.html",
    "href": "tidytuesday/2024/semana_21.html",
    "title": "Semana 21",
    "section": "",
    "text": "Proporci√≥n entre empresas estatales y privadas en la generaci√≥n de CO2.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#312A56\"\nc2 &lt;- \"#11C638\"\nc3 &lt;- \"#95D69A\"\nc4 &lt;- \"#EF9708\"\nc5 &lt;- \"#F0BC95\"\nc6 &lt;- \"#E2E2E2\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\n# bebas\nfont_add(\n  family = \"bebas\",\n  regular = \"fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {21}, \",\n  \"Carbon Majors.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 21)\nemissions &lt;- tuesdata$emissions\n\n# me interesa la relaci√≥n entre las emisiones de empresas privadas y estatales\n\nd &lt;- emissions |&gt; \n  filter(parent_type != \"Nation State\") |&gt; \n  reframe(\n    s = sum(total_emissions_MtCO2e),\n    .by = c(year, parent_type)\n  ) |&gt; \n  filter(year &gt;= 1900) |&gt; \n  rename(\n    a√±o = year,\n    tipo = parent_type\n  )\n\n# a√±o en el que las empresas estatales superan el 50% de las emisiones de CO2\nd_50 &lt;- d |&gt;\n  pivot_wider(\n    names_from = tipo,\n    values_from = s\n  ) |&gt; \n  mutate(\n    tot = `State-owned Entity` + `Investor-owned Company`\n  ) |&gt; \n  mutate(\n    estatal = `State-owned Entity`/tot,\n    privado = `Investor-owned Company`/tot\n  ) |&gt; \n  arrange(a√±o) |&gt; \n  filter(between(estatal, .49, .52))\n\n# figura ------------------------------------------------------------------\n\n# subt√≠tulo y aclaraci√≥n\nmi_subtitle &lt;- glue(\n  \"Las empresas productoras de cemento, petr√≥leo, gas y carb√≥n son grandes&lt;br&gt;\",\n  \" generadoras de CO&lt;sub&gt;2&lt;/sub&gt;. Desde el s. XX, la proporci√≥n de las \",\n  \"emisiones causadas&lt;br&gt;por empresas &lt;b style='color: {c4};'&gt;estatales&lt;/b&gt;\",\n  \" ha aumentado respecto de las &lt;b style='color: {c2};'&gt;privadas&lt;/b&gt;.\"\n)\n\nmi_label &lt;- glue(\n  \"A partir del &lt;b&gt;{d_50$a√±o}&lt;/b&gt;, las empresas \n  &lt;b style='color: {c4};'&gt;estatales&lt;/b&gt;&lt;br&gt;\",\n  \"han producido m√°s del &lt;b&gt;50%&lt;/b&gt; de las emisiones.\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(a√±o, s, fill = tipo, color = tipo)) +\n  geom_col(position = position_fill(), linewidth = .5, alpha = 1, color = c1) +\n  geom_hline(\n    yintercept = .5, color = c6, linewidth = 1, alpha = .6, linetype = \"33\") +\n  annotate(\n    geom = \"richtext\", x = 1945, y = .6, hjust = .5, vjust = 0, \n    color = c6, family = \"ubuntu\", size = 6, label = mi_label, fill = c1, \n    label.color = NA, label.r = unit(0, \"mm\"), label.padding = unit(5, \"mm\")\n  ) +\n  annotate(\n    geom = \"curve\", x = 1975, y = .6, xend = d_50$a√±o-1, yend = d_50$estatal,\n    color = c6, linewidth = 1,\n    arrow = arrow(length = unit(3, \"mm\"), type = \"closed\", angle = 20)\n  ) +\n  scale_x_continuous(\n    breaks = scales::breaks_width(20)\n  ) +\n  scale_y_continuous(\n    breaks = scales::breaks_width(.25),\n    labels = scales::label_percent()\n  ) +\n  scale_fill_manual(\n    values = c(c2, c4)\n  ) +\n  coord_cartesian(expand = FALSE) +\n  labs(subtitle = mi_subtitle, caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(22, 30, 10, 23),\n    plot.background = element_rect(fill = c1, color = c3, linewidth = 3),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 20, margin = margin(b = 20), color = c6,\n      lineheight = unit(1.3, \"line\")\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c5, size = 15, margin = margin(t = 25),\n      lineheight = unit(1.3, \"line\")\n    ),\n    panel.grid.major = element_line(\n      color = c6, linewidth = .2, linetype = \"44\"\n    ),\n    axis.text.x = element_text(\n      family = \"bebas\", size = 30, color = c6, margin = margin(t = 10)\n    ),\n    axis.text.y = element_text(\n      family = \"jet\", size = 15, color = c6, margin = margin(r = 10), vjust = 0,\n      hjust = 1\n    ),\n    legend.position = \"none\"\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s21/viz.png\",\n  width = 30,\n  height = 34,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s21/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 21"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_20.html",
    "href": "tidytuesday/2024/semana_20.html",
    "title": "Semana 20",
    "section": "",
    "text": "¬øCu√°nto es lo m√°ximo que pagaron por caf√©? La respuesta var√≠a seg√∫n si la persona conoce o no el origen del caf√©.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#F4FAFE\"\nc2 &lt;- \"#A41400\"\nc3 &lt;- \"#00B7A7\"\nc4 &lt;- \"#C1DBEC\"\nc5 &lt;- \"#7FABD3\"\nc6 &lt;- \"#273871\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {20}, \",\n  \"Great American Coffee Taste Test.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ncoffee_survey &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-05-14/coffee_survey.csv')\n\n# me interesa ver la diferencia entre los que conocen el origen del caf√©. y el\n# dinero que est√°n dispuestos a pagar\n\n# factores de precios\nprecio &lt;- c(\n  \"Less than $2\", \"$2-$4\", \"$4-$6\", \"$6-$8\", \"$8-$10\", \"$10-$15\", \"$15-$20\",\n  \"More than $20\")\n\nprecio_label &lt;- c(\n  \"&lt; $2\", \"$2-$4\", \"$4-$6\", \"$6-$8\", \"$8-$10\", \"$10-$15\", \"$15-$20\",\n  \"&gt; $20\") |&gt; \n  str_replace(\"-\", \"~\")\n\n# √≠conos\nicono_si &lt;- glue(\"&lt;span style='font-family:jet; color: {c2}'&gt;&#xf0f4;&lt;/span&gt;\")\nicono_no &lt;- glue(\"&lt;span style='font-family:jet; color: {c3}'&gt;&#xf0f4;&lt;/span&gt;\")\n\n# l√≠neas verticales\nverticales &lt;- c(1:10, (1:10)*10, (1:10)*100) |&gt; unique()\n\n# datos\nd &lt;- coffee_survey |&gt; \n  select(know_source, most_paid) |&gt; \n  drop_na() |&gt; \n  mutate(\n    most_paid = factor(most_paid, levels = precio, labels = precio_label)\n  ) |&gt; \n  count(know_source, most_paid) |&gt; \n  mutate(color = if_else(\n    know_source == \"No\",\n    c3,\n    c2\n  )) |&gt; \n  mutate(label = if_else(\n    know_source == \"No\",\n    icono_no,\n    icono_si\n  ))\n\n# figura ------------------------------------------------------------------\n\n# √≠conos de caf√©, con transparencia\ncafe1 &lt;- glue(\"&lt;span style='font-family:jet; color: {c5}66'&gt;&#xe26f;&lt;/span&gt;\")\ncafe2 &lt;- glue(\"&lt;span style='font-family:jet; color: {c2}66'&gt;&#xe61b;&lt;/span&gt;\")\ncafe3 &lt;- glue(\"&lt;span style='font-family:jet; color: {c6}66'&gt;&#xf0f4;&lt;/span&gt;\")\ncafe4 &lt;- glue(\"&lt;span style='font-family:jet; color: {c3}66'&gt;&#xe26a;&lt;/span&gt;\")\n\ncafe_tbl &lt;- tibble(\n  x = c(3, 10, 3, 10),\n  y = c(4, 4, 5, 5),\n  label = c(cafe1, cafe2, cafe3, cafe4)\n)\n\n# subt√≠tulo\nmi_subtitle &lt;- glue(\n  \"En una encuesta, ante la pregunta: &lt;i&gt;¬øCu√°nto es lo m√°ximo que&lt;br&gt;\",\n  \"pagaste por una taza de caf√©?&lt;/i&gt;, los que m√°s gastaron fueron los&lt;br&gt;\",\n  \"que &lt;b style='color: {c2}'&gt;s√≠ conoc√≠an el origen del caf√©&lt;/b&gt; \",\n  \"({icono_si}). Las personas que &lt;b style='color: {c3}'&gt;no sab√≠an&lt;br&gt;\",\n  \"de d√≥nde proven√≠a el caf√©&lt;/b&gt; ({icono_no}), por lo general \",\n  \"pagaron menos.\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(n, most_paid)) +\n  geom_richtext(\n    aes(label = label), fill = NA, label.color = NA, size = 18) +\n  # punto con √≠conos\n  annotate(\n    geom = \"point\", x = 5.5, y = 4.5, size = 160, fill = c1, shape = 21, \n    color = c4, stroke = 1.6\n  ) +\n  # √≠conos caf√©\n  geom_richtext(\n    data = cafe_tbl, aes(x, y, label = label), inherit.aes = FALSE, size = 40,\n    fill = NA, label.color = NA\n  ) +\n  scale_x_log10(\n    limits = c(1, 1000), guide = \"axis_logticks\", minor_breaks = verticales,\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(expand = c(0, 0)) +\n  scale_color_manual(values = c(c3, c2)) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    y = NULL, x = \"Cantidad de personas\", subtitle = mi_subtitle, \n    caption = mi_caption\n  ) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(r = 30, l = 10, t = 20),\n    plot.background = element_rect(fill = c1, color = c6, linewidth = 3),\n    plot.title.position = \"panel\",\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", color = c6, size = 20, hjust = 0, \n      margin = margin(b = 37.3), lineheight = unit(1.3, \"line\")),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c6, size = 15, margin = margin(t = 25, b = 10)),\n    panel.grid.major = element_line(\n      color = c4, linewidth = 1, linetype = 1),\n    panel.grid.minor = element_line(\n      color = c4, linewidth = .2, linetype = 1),\n    axis.title.x = element_text(family = \"ubuntu\", color = c6, size = 20),\n    axis.text.y = element_text(\n      family = \"jet\", color = c5, hjust = 1, size = 20, vjust = 0,\n      margin = margin(r = 10)),\n    axis.text.x = element_text(\n      family = \"jet\", color = c5, size = 20, margin = margin(t = 25), hjust = 1)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s20/viz.png\",\n  width = 30,\n  height = 35,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s20/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 20"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_32.html",
    "href": "tidytuesday/2024/semana_32.html",
    "title": "Semana 32",
    "section": "",
    "text": "Participaci√≥n de Argentina en los Juegos Ol√≠mpicos.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggsvg)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#2B579A\"\nc2 &lt;- colorspace::lighten(c1, .7)\nc3 &lt;- colorspace::lighten(c1, .9)\nc4 &lt;- \"#A41620\"\nc5 &lt;- \"white\"\n\n# colores de las medallas\nmd &lt;- \"#FFD700\"\nmp &lt;- \"#BABABA\"\nmb &lt;- \"#BF8970\"\n\npal_medallas &lt;- c(\n  Gold = md,\n  Silver = mp,\n  Bronze = mb\n) |&gt; \n  fct()\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\n# bebas neue\nfont_add(\n  family = \"bebas\", \n  regular = \"fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {32}, \",\n  \"120 years of Olympic history.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 32)\nolympics &lt;- tuesdata$olympics\n\n# me interesa la participaci√≥n de Argentina y las medallas recibidas\n# selecciono √∫nicamente los JJOO post 1920\n\n# aspecto de tiles\nlargo &lt;- 13\nalto &lt;- 3\nfilas &lt;- 10\n\n# bandera\nbandera &lt;- \"&lt;img src='2024/s32/arg.png' width=30&gt;\"\n\n# participaci√≥n de Argentina en los JJOO\narg_part &lt;- olympics |&gt;\n  filter(season == \"Summer\" & team == \"Argentina\" & year &gt; 1920) |&gt; \n  distinct(event, year) |&gt; \n  arrange(year) |&gt; \n  count(year) |&gt; \n  mutate(\n    x_part = map(n, ~ rep(1:largo, length.out = .x))\n  ) |&gt; \n  mutate(\n    y_part = map(n, ~ rep(1:largo, length.out = .x, each = largo))\n  ) |&gt; \n  unnest(cols = c(x_part, y_part)) |&gt; \n  mutate(year = glue(\"{year} {bandera}\"))\n\n# medallas recibidas por Argentina en los JJOO\narg_med &lt;- olympics |&gt;\n  filter(season == \"Summer\" & team == \"Argentina\" & year &gt; 1920) |&gt; \n  drop_na(medal) |&gt; \n  distinct(event, year) |&gt; \n  arrange(year) |&gt; \n  count(year) |&gt; \n  mutate(\n    x_med = map(n, ~ rep(1:largo, length.out = .x))\n  ) |&gt; \n  mutate(\n    y_med = map(n, ~ rep(1:largo, length.out = .x, each = largo))\n  ) |&gt; \n  unnest(cols = c(x_med, y_med)) |&gt; \n  mutate(year = glue(\"{year} {bandera}\"))\n\n# funci√≥n que devuelve √≠cono del color y tama√±o deseado\nf_icon &lt;- function(color, tama√±o = 40) {\n  glue(\n    \"&lt;span style='font-family:jet; color: {color}; font-size: {tama√±o}px'&gt;\",\n    \"&#xf0764;&lt;/span&gt;\")\n}\n\n# cantidad de medallas recibidas en los JJOO (oro, plata, bronce)\narg_r &lt;- olympics |&gt;\n  filter(season == \"Summer\" & team == \"Argentina\" & year &gt; 1920) |&gt; \n  drop_na(medal) |&gt; \n  distinct(event, year, medal) |&gt; \n  mutate(col = pal_medallas[medal]) |&gt; \n  arrange(year) |&gt; \n  count(year, medal, col) |&gt; \n  arrange(year, col) |&gt; \n  mutate(\n    l = glue(\"{f_icon(col, 20)} {n}\")\n  ) |&gt; \n  reframe(\n    label = str_flatten(l, collapse = \" \"),\n    .by = year\n  ) |&gt; \n  mutate(year = glue(\"{year} {bandera}\"))\n\n# figura -----------------------------------------------------------------\n\n# logo de los JJOO, agrego a caption\njjoo &lt;- \"&lt;img src='2024/s32/jjoo.png' width=250&gt;\"\nmi_caption_jjoo &lt;- glue(\"{jjoo}&lt;br&gt;{mi_caption}\")\n\n# subt√≠tulo\nmi_subtitle &lt;- glue(\n  \"Desempe√±o de &lt;b style='color: {c1}'&gt;Argentina&lt;/b&gt; en los\",\n  \"&lt;b style='font-family: jet; color: {c4}'&gt;Juegos Ol√≠mpicos&lt;/b&gt;.&lt;br&gt;\",\n  \"{f_icon(c1)} indica participaci√≥n en un evento.\",\n  \"{f_icon(c4)} se√±ala la obtenci√≥n de una medalla.\",\n  .sep = \" \"\n)\n# figura\ng &lt;- ggplot(arg_part, aes(x_part, y_part)) +\n  geom_tile(fill = c1, color = c2, linewidth = 2) +\n  geom_tile(\n    data = arg_med, aes(x = x_med, y = y_med), fill = c4, , color = c2,\n    linewidth = 2\n  ) +\n  # medallas DORADA, PLATEADA, BRONZE\n  geom_richtext(\n    data = arg_r, aes(largo + .5, filas + 1.5, label = label), family = \"jet\",\n    hjust = 1, fill = c5, , label.color = NA, vjust = 1, size = 4,\n    label.padding = unit(c(1, 1, .1, 1), \"mm\"),\n    label.r = unit(0, \"mm\")\n  ) +\n  facet_wrap(vars(year), ncol = 4) +\n  coord_equal(\n    expand = FALSE, xlim = c(.25, largo + .75), ylim = c(.25, filas + 1.8),\n    clip = \"off\"\n  ) +\n  labs(subtitle = mi_subtitle, caption = mi_caption_jjoo) +\n  theme_void() +\n  theme(\n    plot.margin = margin(l = 30.8, r = 30.8, t = 10),\n    plot.background = element_rect(fill = c3, color = c2, linewidth = 3),\n    plot.title = element_markdown(),\n    plot.subtitle = element_textbox_simple(\n      family = \"ubuntu\", size = 22, color = \"black\", margin = margin(b = 20)\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 15, color = c4, lineheight = unit(1.3, \"line\"),\n      margin = margin(t = -130, b = 10)\n    ),\n    panel.background = element_rect(fill = c2, color = NA),\n    panel.grid = element_blank(),\n    panel.spacing.x = unit(1, \"line\"),\n    axis.ticks = element_blank(),\n    axis.text = element_blank(),\n    strip.background = element_blank(),\n    strip.text = element_markdown(\n      size = 28, color = c4, family = \"bebas\", margin = margin(t = 5, b = 2),\n      hjust = 0\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s32/viz.png\",\n  width = 30,\n  height = 45,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s32/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 32"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_25.html",
    "href": "tidytuesday/2024/semana_25.html",
    "title": "Semana 25",
    "section": "",
    "text": "Feriados en EE.UU. y el a√±o en que fueron establecidos.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#FCFFC9\"\nc2 &lt;- \"#E8C167\"\nc3 &lt;- \"#AA5D00\"\nc4 &lt;- \"#913640\"\nc5 &lt;- \"#1D0B14\"\nc6 &lt;- \"#FFFFFF\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\n# bebas\nfont_add(\n  family = \"bebas\", \n  regular = \"fuente/BebasNeue-Regular.ttf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c2};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {25}, \",\n  \"Feriados en EE.UU., &lt;b&gt;Wikipedia&lt;/b&gt;&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c2};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c2};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 25)\n\nfederal_holidays &lt;- tuesdata$federal_holidays\n\n# me interesa indicar el a√±o y si las fechas son inamovibles\n\n# estilos de texto y s√≠mbolo para marcar las fechas inamovibles\nestilo_1 &lt;- glue(\n  \"&lt;span style='font-family:bebas; font-size:40px; color:{c1}'&gt;\")\nestilo_2 &lt;- glue(\n  \"&lt;span style='font-family:jet; font-size:20px; color:{c2}'&gt;\")\nsimbolo_label &lt;- glue(\n  \"&lt;sup style='font-family:jet; font-size:25px; color:{c2}'&gt;‚Ä†&lt;/sup&gt;\")\n\nd &lt;- federal_holidays |&gt; \n  arrange(desc(year_established)) |&gt; \n  mutate(nro = row_number()) |&gt; \n  mutate(official_name = str_wrap(official_name, width = 20)) |&gt; \n  mutate(official_name = str_replace_all(official_name, \"\\n\", \"&lt;br&gt;\")) |&gt; \n  mutate(\n    simbolo = if_else(\n      date_definition == \"fixed date\",\n      simbolo_label,\n      \"\"\n    )\n  ) |&gt; \n  mutate(label = glue(\n    \"{estilo_1}{official_name}&lt;/span&gt;{simbolo}&lt;br&gt;\",\n    \"{estilo_2}{year_established}&lt;/span&gt;\")) |&gt; \n  mutate(nro = if_else(nro == 1, .8, nro))\n\n# figura ------------------------------------------------------------------\n\n# subt√≠tulo\nmi_subtitulo &lt;- glue(\n  \"&lt;span style='font-size:45px'&gt;Feriados nacionales en \",\n  \"&lt;b style='color:{c1}'&gt;EE.UU.&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;\",\n  \"Se muestra el a√±o en que se&lt;br&gt;\",\n  \"estableci√≥ la fecha como tal.&lt;br&gt;&lt;br&gt;\",\n  \"Los feriados con fecha&lt;br&gt;\",\n  \"inamovible se indican con {simbolo_label}.\")\n\n# figura\ng &lt;- ggplot(d, aes(year_established, nro, label = label)) +\n  geom_richtext(\n    size = 5, hjust = 0, vjust = 1, nudge_x = 4, nudge_y = .1, label.color = NA,\n    fill = NA, label.padding = unit(0, \"mm\"), lineheight = unit(1.6, \"line\")) +\n  geom_segment(aes(y = 0, yend = nro), color = c4, linewidth = 2) +\n  geom_point(\n    shape = 23, color = c4, fill = c5, size = 5, stroke = 2) +\n  geom_point(\n    shape = 20, color = c6, size = 1) +\n  annotate(\n    geom = \"richtext\", x = I(1), y = I(.9), label = mi_subtitulo, color = c6,\n    family = \"ubuntu\", size = 8, label.color = NA, fill = NA, hjust = 1,\n    vjust = 1\n  ) +\n  coord_cartesian(\n    clip = \"off\", xlim = c(1868, 2070), ylim = c(0, 11.2), expand = FALSE) +\n  labs(caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1.3,\n    plot.margin = margin(l = 30, r = 40, t = 12),\n    plot.background = element_rect(fill = c5, color = c6, linewidth = 3),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 14, color = c6, \n      margin = margin(t = 15, b = 10))\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s25/viz.png\",\n  width = 30,\n  height = 38,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s25/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 25"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_41.html",
    "href": "tidytuesday/2024/semana_41.html",
    "title": "Semana 41",
    "section": "",
    "text": "Especies nativas y no nativas en Parques Nacionales de EE.UU.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidytext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#6B200C\"\nc2 &lt;- \"#5A5A83\"\nc3 &lt;- \"#000000\"\nc4 &lt;- \"#FBE3C2\"\nc5 &lt;- \"grey20\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\n# bebas neuw\nfont_add_google(\n  name = \"Bebas Neue\",\n  family = \"bebas neue\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c2};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {41}, \",\n  \"&lt;b&gt;NPSpecies - The National Park Service biodiversity database&lt;/b&gt;.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c2};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c2};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 41)\nnps &lt;- tuesdata$most_visited_nps_species_data\n\n# me interesa la cantidad de algunas especies por cada parque, y si son\n# nativas o no\n\n# especies de inter√©s y su traducci√≥n\nanimales &lt;- c(\n  \"Amphibian\", \"Bird\", \"Fish\", \"Fungi\", \"Insect\", \"Mammal\", \"Reptile\"\n)\nanimales_trad &lt;- c(\n  \"Anfibio\", \"Ave\", \"Pez\", \"Fungi\", \"Insecto\", \"Mam√≠fero\", \"Reptil\"\n)\nnames(animales_trad) &lt;- animales\n\n# filtro por las especies de inter√©s y agrego traducciones\nd &lt;- nps |&gt; \n  select(ParkName, CategoryName, Nativeness) |&gt; \n  drop_na() |&gt; \n  filter(Nativeness != \"Unknown\") |&gt; \n  count(ParkName, CategoryName, Nativeness) |&gt; \n  arrange(ParkName, desc(n)) |&gt; \n  mutate(ParkName = str_remove(ParkName, \" National Park\")) |&gt; \n  filter(n &gt; 1) |&gt; \n  filter(CategoryName %in% animales) |&gt; \n  mutate(CategoryName = animales_trad[CategoryName]) |&gt; \n  mutate(ParkName = glue(\"{icon_parque} {ParkName} {icon_parque}\"))\n\n# figura ------------------------------------------------------------------\n\n# √≠cono para el nombre del parque\nicon_parque &lt;- glue(\n  \"&lt;span style='font-family:jet; font-size: 30px; color: {c1}'&gt;&#xf185;&lt;/span&gt;\"\n)\n\n# subt√≠tulo\nmi_subtitulo &lt;- glue(\n  \"N√∫mero de especies &lt;b style='color: {c1}'&gt;nativas&lt;/b&gt; y \",\n  \"&lt;b style='color: {c2}'&gt;no nativas&lt;/b&gt; en &lt;b&gt;Parques Nacionales&lt;/b&gt; \",\n  \"de EE.UU., por categor√≠a.\"\n)\n\n# figura\n# uso 'reorder_within()' junto con 'scale_y_reordered()' para ordenar\n# categor√≠as que se repiten en los paneles\ng &lt;- ggplot(\n  d, \n  aes(n, reorder_within(CategoryName, n, ParkName), fill = Nativeness)) +\n  geom_col(\n    position = position_dodge(preserve = \"single\"), width = .8,\n    show.legend = FALSE, color = c4, linewidth = .6\n  ) +\n  facet_wrap(vars(ParkName), scales = \"free\", ncol = 3) +\n  scale_y_reordered() +\n  scale_x_log10(limits = c(1, 1000), expand = c(0, 0)) +\n  scale_fill_manual(\n    breaks = c(\"Native\", \"Non-native\"),\n    values = c(c1, c2)\n  ) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    x = NULL, y = NULL, fill = NULL, caption = mi_caption,\n    subtitle = mi_subtitulo\n  ) +\n  theme_classic() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(l = 20, r = 34.6),\n    plot.background = element_rect(fill = c4, color = c5, linewidth = 3),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 20, margin = margin(t = 10, b = 20)\n    ),\n    plot.caption = element_markdown(\n      color = c1, family = \"ubuntu\", size = 14,\n      margin = margin(t = 25, b = 10), lineheight = unit(1.1, \"line\")\n    ),\n    panel.background = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_blank(),\n    panel.grid.major.x = element_line(\n      linetype = \"66\", linewidth = .25, color = c5\n    ),\n    panel.spacing.x = unit(2, \"line\"),\n    panel.spacing.y = unit(1, \"line\"),\n    axis.text.x = element_text(family = \"jet\", color = c3),\n    axis.text.y = element_text(family = \"ubuntu\", color = c3, size = 12),\n    axis.ticks = element_blank(),\n    strip.background = element_blank(),\n    strip.text = element_markdown(\n      family = \"bebas neue\", size = 21, hjust = 0, margin = margin(l = -17),\n      color = c3\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s41/viz.png\",\n  width = 30,\n  height = 45,\n  units = \"cm\")\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s41/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 41"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_14.html",
    "href": "tidytuesday/2024/semana_14.html",
    "title": "Semana 14",
    "section": "",
    "text": "Profesiones de personas negras graduadas en 1900 en la Universidad de Atlanta.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(ggsvg)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores de la bandera panafricana\nc1 &lt;- \"#AC3E48\"\nc2 &lt;- \"#000000\"\nc3 &lt;- \"#00863D\"\n# fondo\nc4 &lt;- \"white\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {14}. \",\n  \"&lt;b&gt;W. E. B. Du Bois&lt;/b&gt;, 1900 Paris Exposition.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 14)\ndubois &lt;- tuesdata$dubois_week10\n\n# me interesa representar a cada personas, dividido por profesi√≥n, en un waffle,\n# con √≠conos individuales\n\n# traducci√≥n de las ocupaciones\ntrabajos &lt;- pull(dubois, Occupation)\ntrabajos_trad &lt;- c(\n  \"profesores\", \"ministros (iglesia)\", \"empleados estatales\", \"comerciantes\", \n  \"otros\", \"amas de casa\")\n\nnames(trabajos_trad) &lt;- trabajos\n\n# cantidad de personas por profesi√≥n, siendo 330 el total\nd &lt;- dubois |&gt; \n  mutate(n = round(Percentage, 1)/100*330) |&gt; \n  mutate(n2 = round(n, 1)) |&gt; \n  mutate(n3 = round(n2)) |&gt; \n  mutate(s = sum(n3)) |&gt; \n  select(Occupation, n = n3) |&gt; \n  mutate(ocupacion = trabajos_trad[Occupation]) |&gt; \n  mutate(ocupacion = fct_reorder(ocupacion, n))\n\n# figura ------------------------------------------------------------------\n\n# funci√≥n para crear las coordenadas (x,y) y generar un waffle\nf_waffle &lt;- function(prof) {\n  \n  # cantidad de emojis\n  d_n &lt;- d |&gt; \n    filter(ocupacion == prof) |&gt; \n    pull(n)\n  \n  # eje vertical y horizontal incompleto\n  y_enteros &lt;- d_n %/% ancho\n  x_extra &lt;- d_n %% ancho\n  \n  # si es m√∫ltiplo del ancho, agrega o no una nueva l√≠nea\n  if (x_extra == 0) {\n    tbl &lt;- expand.grid(x = 1:ancho, y = 1:y_enteros) |&gt; \n      tibble() |&gt; \n      mutate(profesion = prof)\n  } else {\n    tbl &lt;- expand.grid(x = 1:ancho, y = 1:y_enteros) |&gt; \n      tibble() |&gt; \n      add_row(x = 1:x_extra, y = y_enteros+1) |&gt; \n      mutate(profesion = prof)\n  }\n  \n  return(tbl)\n  \n}\n\n# funci√≥n que cambia el color de cada letra\nf_label &lt;- function(x) {\n  p_l &lt;- x |&gt; \n    str_split(\"\") |&gt; \n    unlist()\n  \n  prof_label &lt;- tibble(p = p_l) |&gt; \n    mutate(color = rep(c(c1, c2, c3), length.out = length(p_l))) |&gt; \n    mutate(label = glue(\"&lt;span style='color:{color}'&gt;{p}&lt;/span&gt;\")) |&gt; \n    pull(label) |&gt; \n    str_flatten()\n  \n  return(prof_label)\n}\n\n# cantidad de √≠conos, horizontal\nancho &lt;- 7\n\n# creo tibble para figura waffle, con colores/rellenos aleatorios\ne &lt;- map(trabajos_trad, f_waffle) |&gt; \n  list_rbind() |&gt; \n  mutate(n = n(), .by = profesion) |&gt; \n  mutate(profesion = fct_reorder(profesion, -n)) |&gt; \n  mutate(color = sample(c(c1, c2, c3), size = n(), replace = TRUE)) |&gt; \n  mutate(\n    fill = case_match(\n      color,\n      c1 ~ c2,\n      c2 ~ c3,\n      c3 ~ c1\n    )\n  )\n\n# √≠cono de persona\npersona_icon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf064d;&lt;/span&gt;\")\n\n# profesiones con letras de cada color\ne_label &lt;- e |&gt; \n  filter(y == max(y) & x == 1, .by = profesion) |&gt; \n  mutate(y = y+1) |&gt;\n  mutate(label = map(toupper(profesion), (x) f_label(x))) |&gt; \n  unnest(label) |&gt; \n  # agrego enter en algunas profesiones, menos en 'amas de casa'\n  mutate(label = if_else(\n    profesion == trabajos_trad[6],\n    label,\n    str_replace_all(label, \"&gt; &lt;\", \"&gt;&lt;br&gt;&lt;\")\n  ))\n\n\n# leyenda para indicar que cada √≠cono es una persona\nd_legend &lt;- tibble(\n  profesion = fct(\"amas de casa\"),\n  y = 28,\n  x = 1,\n  label = glue(\"{persona_icon} = 1 persona\")\n)\n\n# subt√≠tulo\nmi_subtitle &lt;- tibble(\n  profesion = fct(\"otros\"),\n  y = 22,\n  x = 1,\n  label = glue(\n    \"&lt;span style='color:{c1}'&gt;\",\n    \"Ocupaciones de 330 personas, descendientes de&lt;br&gt;\",\n    \"esclavos, graduadas de la &lt;b&gt;Universidad de Atlanta&lt;/b&gt;&lt;br&gt;\",\n    \"en 1900, EE.UU.&lt;/span&gt;\",\n    \"&lt;br&gt;&lt;br&gt;\",\n    \n    \"&lt;span style='color:{c2}'&gt;\",\n    \"Recreaci√≥n de la l√°mina 37, de &lt;b&gt;W.E.B Du Bois&lt;/b&gt;,&lt;br&gt;\",\n    \"para la Exposici√≥n de Par√≠s.\",\n    \"&lt;/span&gt;\",\n    \"&lt;br&gt;&lt;br&gt;\",\n    \n    \"&lt;span style='color:{c3}'&gt;\",\n    \"La presente paleta de colores&lt;br&gt;\",\n    \"corresponde a la &lt;b&gt;bandera panafricana&lt;/b&gt;:\",\n    \"&lt;/span&gt;\"\n    )\n)\n\n# bandera panafricana, de Wikipedia, .svg\nbandera_url &lt;- \"https://upload.wikimedia.org/wikipedia/commons/a/ab/Flag_of_the_UNIA.svg\"\nbandera_txt &lt;- paste(readLines(bandera_url), collapse = \"n\")\n\n# verifico que la bandera se vea correctamente\ngrid::grid.draw( svg_to_rasterGrob(bandera_txt) )\n\nmi_bandera &lt;- tibble(\n  profesion = fct(\"empleados estatales\"),\n  y = 16,\n  x = 3\n)\n\n# figura\ng &lt;- ggplot(e, aes(x, y)) +\n  # cuadros\n  geom_tile(aes(fill = fill), color = c4, linewidth = 1) +\n  # contorno blanco\n  geom_richtext(\n    color = c4, label = persona_icon, fill = NA, label.color = NA, \n    family = \"jet\", size = 3.3, lineheight = unit(2, \"line\"), nudge_y = -.05, \n    show.legend = FALSE) +\n  # √≠cono de personas\n  geom_richtext(\n    aes(color = color),\n    label = persona_icon, fill = NA, label.color = NA, family = \"jet\", size = 3,\n    lineheight = unit(2, \"line\"), nudge_y = -.05, show.legend = FALSE) +\n  # profesiones\n  geom_richtext(\n    data = e_label, aes(.5, y, label = label), hjust = 0, family = \"ubuntu\",\n    size = 5.5, vjust = 0, fill = NA, label.color = NA, inherit.aes = FALSE) +\n  # leyenda\n  geom_richtext(\n    data = d_legend, aes(x, y, label = label), fill = NA, label.color = NA,\n    family = \"jet\", size = 3, color = c1, hjust = 0\n  ) +\n  # subt√≠tulo\n  geom_richtext(\n    data = mi_subtitle, aes(x, y, label = label), fill = NA, label.color = NA,\n    family = \"ubuntu\", size = 6, color = c1, hjust = 0\n  ) +\n  # bandera\n  geom_point_svg(\n    data = mi_bandera, aes(x, y), svg = bandera_txt, size = 35, hjust = .5, \n    vjust = 1) + \n  facet_wrap(vars(profesion), nrow = 1) +\n  scale_color_identity() +\n  scale_fill_identity() +\n  coord_equal(clip = \"off\") +\n  labs(caption = mi_caption) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(fill = c4, color = c1, linewidth = 3),\n    plot.caption = element_markdown(\n      color = c1, family = \"ubuntu\", size = 10, lineheight = unit(1.1, \"line\"),\n      margin = margin(b = 5, r = 5)),\n    panel.spacing.x = unit(.3, \"line\"),\n    strip.text = element_blank()\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s14/viz.png\",\n  width = 30,\n  height = 20.715,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s14/viz.png\")\n\n# figura original\nbrowseURL(\"https://raw.githubusercontent.com/ajstarks/dubois-data-portraits/master/challenge/2024/challenge10/original-plate-37.jpg\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 14"
    ]
  },
  {
    "objectID": "mapas/mapa1.html",
    "href": "mapas/mapa1.html",
    "title": "mapa 1",
    "section": "",
    "text": "Contenido S01\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\n# {glue}, {ggtext}, {showtext}, {tidyverse}\n# se cargan autom√°ticamente\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#447099\"\nc2 &lt;- \"#75AADB\"\nc3 &lt;- \"#F0F5F9\"\nc4 &lt;- \"black\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nmi_caption &lt;- caption(\n  fuente1 = \"&lt;span style='font-family:jet'&gt;posit::conf&lt;/jet&gt;\",\n  col = c1,\n  week = 2\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 2)\nconf2023 &lt;- tuesdata$conf2023\nconf2024 &lt;- tuesdata$conf2024\n\n# me interesa la cantidad de conferencias que hablan de QUARTO entre 2023 y 2024\n\n# cantidad de conferencias que mencionan QUARTO, 2023/2024\nn2023 &lt;- conf2023 |&gt; \n  mutate(quarto = str_detect(session_abstract, \"quarto|Quarto\")) |&gt; \n  dplyr::filter(quarto) |&gt; \n  nrow()\n\nn2024 &lt;- conf2024 |&gt; \n  mutate(quarto = str_detect(description, \"quarto|Quarto\")) |&gt; \n  dplyr::filter(quarto) |&gt; \n  nrow()\n\nd &lt;- tibble(\n  a√±o = c(2023, 2024),\n  n = c(n2023, n2024)\n) |&gt; \n  mutate(\n    a√±o = paste0(\"posit::conf\\n\", a√±o)\n  )\n\n# figura ------------------------------------------------------------------\n\n# logo y subt√≠tulo\nlogo &lt;- \"https://quarto.org/quarto.png\"\nlogo_img &lt;- glue(\n  \"&lt;img src='{logo}' width=250 /&gt;\"\n)\n\nmi_subitulo &lt;- glue(\n  \"La cantidad de conferencias&lt;br&gt;que incluyen\n  &lt;span style='font-family:jet; color:{c1}'&gt;quarto&lt;/span&gt; &lt;br&gt;\n  amentaron en las ediciones&lt;br&gt;\n  2023 y 2024 de &lt;span style='font-family:jet; color:{c1}'&gt;posit::conf&lt;/span&gt;\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(a√±o, n, label = n)) +\n  geom_col(fill = c1) +\n  geom_text(vjust = -.2, family = \"jet\", size = 9, color = c2) +\n  annotate(\n    geom = \"richtext\", x = 2.12, y = 25, label = logo_img, fill = NA,\n    vjust = -1.2, label.color = NA\n  ) +\n  scale_y_continuous(limits = c(0, 25)) +\n  coord_cartesian(expand = FALSE, xlim = c(.5, 2.5), clip = \"off\") +\n  labs(caption = mi_caption, subtitle = mi_subitulo) +\n  theme_void(base_size = 22, base_family = \"ubuntu\") +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(25, 5, 5, 5),\n    plot.background = element_rect(fill = c3, color = NA),\n    plot.subtitle = element_markdown(\n      color = c4, size = 30, lineheight = 1.3, margin = margin(b = 30, l = 20)\n    ),\n    plot.caption = element_markdown(\n      color = c2, lineheight = 1.2, margin = margin(b = 5, t = 20)\n    ),\n    axis.text.x = element_text(margin = margin(t = 5), family = \"jet\"),\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2025/s02/viz.png\",\n  width = 30,\n  height = 40,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(paste0(getwd(), \"/2025/s02/viz.png\"))\n\n\n\n\n\n\n Subir"
  },
  {
    "objectID": "tidytuesday/2024/semana_04.html",
    "href": "tidytuesday/2024/semana_04.html",
    "title": "Semana 04",
    "section": "",
    "text": "Logros educativos y su relaci√≥n con los ingresos, en Reino Unido.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"grey90\"\nc2 &lt;- \"grey70\"\nc3 &lt;- \"grey40\"\nc4 &lt;- \"grey20\"\nc5 &lt;- \"darkviolet\"\nc6 &lt;- \"white\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# fuente: Victor\nfont_add(\n  family = \"victor\", \n  regular = \"fuente/VictorMono-ExtraLight.ttf\",\n  bold = \"fuente/VictorMono-VariableFont_wght.ttf\",\n  italic = \"fuente/VictorMono-ExtraLightItalic.ttf\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {4}. \",\n  \"UK Office for National Statistics.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 4)\n\nenglish_education &lt;- tuesdata$english_education\n\n# me interesa la relaci√≥n entre los ingresos y el nivel educativo\n\n# descarga de los datos\n# https://www.ons.gov.uk/visualisations/dvc2651b/fig3/datadownload.xlsx\n\n# datos de logros educativos y privaci√≥n en los ingresos, para ciudades de UK\nprivacion &lt;- readxl::read_xlsx(\"2024/s04/datadownload.xlsx\", skip = 4) |&gt; \n  rename(\n    \"ciudad\" = `Town name`,\n    \"educacion\" = `Educational attainment score`,\n    \"ingreso\" = `Income deprivation score`) |&gt; \n  janitor::clean_names()\n\n# tama√±o de las ciudades\ntama√±o_ciudad &lt;- english_education |&gt; \n  select(town11cd, size_flag) |&gt; \n  mutate(size_flag = str_to_lower(size_flag)) |&gt; \n  mutate(size_flag = str_remove(size_flag, \" towns\")) |&gt; \n  mutate(size_flag = if_else(\n    str_detect(size_flag, \"london\"),\n    \"london\",\n    size_flag))\n\n# combino ambos datos\nd &lt;- inner_join(privacion, tama√±o_ciudad, by = join_by(town11cd))\n\n# ciudades min/max para se√±alar\nciudad_max &lt;- d |&gt; \n  slice_max(educacion, n = 1) |&gt; \n  mutate(ciudad = str_remove(ciudad, \" BUASD\")) |&gt; \n  mutate(\n    x = educacion*.85,\n    y = ingreso*1.005,\n    xend = educacion*.98,\n    yend = ingreso,\n    hjust = 1.1)\n\nciudad_min &lt;- d |&gt; \n  slice_min(ingreso, n = 1) |&gt; \n  mutate(ciudad = str_remove(ciudad, \" BUA\")) |&gt; \n  mutate(\n    x = educacion*.85,\n    y = ingreso,\n    xend = educacion*.98,\n    yend = ingreso,\n    hjust = -.1)\n\nciudades &lt;- rbind(ciudad_max, ciudad_min)\n\n# figura ------------------------------------------------------------------\n\n# rangos de datos de ambos ejes, para las flechas\nrango_educacion &lt;- diff(range(d$educacion))\nrango_ingreso &lt;- diff(range(d$ingreso))\n\n# flechas y texto explicativo\nflecha_x &lt;- tibble(\n  xend = max(d$educacion),\n  y = min(d$ingreso),\n  yend = min(d$ingreso)) |&gt; \n  mutate(\n    x = xend - .13*rango_educacion,\n    label = \"Mayores logros\",\n    angle = 0)\n\nflecha_y &lt;- tibble(\n  yend = max(d$ingreso),\n  x = -10,\n  xend = min(d$educacion)) |&gt; \n  mutate(\n    y = yend - .13*rango_ingreso,\n    label = \"Menor privaci√≥n\",\n    angle = 90)\n\nflechas &lt;- rbind(flecha_x, flecha_y)\n\n# subt√≠tulo\nmi_subtitle &lt;- glue(\n  \"En **Reino Unido**, Las ciudades con mayor nivel educativo tienen bajos \",\n  \"niveles de privaci√≥n de ingresos.\") |&gt; \n  str_wrap(width = 30) |&gt; \n  str_replace_all(pattern = fixed(\"n\"), \"&lt;br&gt;\")\n\n# figura\ng &lt;- ggplot(d, aes(educacion, ingreso)) +\n  # puntos\n  geom_point(alpha = .6, size = 5, shape = 17, color = c5) +\n  # aclaraci√≥n en flechas\n  geom_richtext(\n    data = flechas, aes(x, y, label = label, angle = angle), family = \"ubuntu\",\n    inherit.aes = FALSE, vjust = 0, hjust = 0, fill = c1, label.color = NA, \n    color = c3) +\n  # flechas\n  geom_segment(\n    data = flechas, aes(x, y, xend = xend, yend = yend), inherit.aes = FALSE,\n    arrow = arrow(angle = 15, length = unit(4, \"mm\"), type = \"closed\"), \n    linewidth = 1, color = c3) +\n  # ciudades min/max\n  geom_curve(\n    data = ciudades, aes(x, y, xend = xend, yend = yend), curvature = -.1, \n    arrow = arrow(angle = 12, length = unit(3, \"mm\"), type = \"closed\"), \n    color = c2) +\n  geom_text(\n    data = ciudades, aes(x, y, label = ciudad, hjust = hjust), family = \"ubuntu\",\n    size = 4, color = c3) +\n  # subt√≠tulo\n  annotate(\n    geom = \"richtext\", x = 4, y = .75, label = mi_subtitle, fill = c6, \n    color = c5, label.color = NA, hjust = 0, vjust = 1, family = \"ubuntu\",\n    size = 6, label.r = unit(0, \"mm\")) +\n  scale_x_continuous(\n    limits = c(-11, 13), expand = c(0, 0), breaks = seq(-12, 12, 2)) +\n  scale_y_continuous(\n    limits = c(.65, 1), expand = c(0, 0),\n    labels = scales::label_number(\n      big.mark = \"\", decimal.mark = \",\", accuracy = .1)) +\n  labs(\n    x = \"Logros educativos\", y = \"Privaci√≥n en ingresos\", caption = mi_caption) +\n  theme_classic() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(t = 20.5, r = 25, l = 20, b = 10),\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    plot.caption = element_markdown(color = c4, family = \"ubuntu\", size = 11),\n    panel.background = element_rect(fill = c1, color = NA),\n    panel.grid.major = element_line(linetype = \"FF\", linewidth = .3, color = c2),\n    axis.title = element_text(family = \"ubuntu\", size = 18, color = c4),\n    axis.text = element_text(family = \"victor\", size = 15, color = \"black\"),\n    axis.text.y = element_text(vjust = 0))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s04/viz.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s04/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 04"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_30.html",
    "href": "tidytuesday/2024/semana_30.html",
    "title": "Semana 30",
    "section": "",
    "text": "Audiencia de American Idol.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggarchery)\nlibrary(ggsvg)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#399483\"\nc2 &lt;- \"#B54EA3\"\nc3 &lt;- \"#F2FBFC\"\nc4 &lt;- \"black\"\nc5 &lt;- \"#00186D\"\nc6 &lt;- \"#06C7FF\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\n# bebas neue\nfont_add(\n  family = \"bebas\",\n  regular = \"fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c2};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {30}, \",\n  \"art√≠culo &lt;b&gt;American Idol&lt;/b&gt; en Wikipedia.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c2};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c2};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 30)\nratings &lt;- tuesdata$ratings\n\n# me interesa la audiencia en todas las temporadas, y si aumenta/baja la \n# audiencia con los episodios\n\nd &lt;- ratings |&gt; \n  select(season, show_number, airdate, viewers_in_millions) |&gt; \n  mutate(fecha_X = mdy(airdate)) |&gt; \n  mutate(airdate = if_else(\n    is.na(fecha_X),\n    glue(\"{airdate}, 2014\"),\n    airdate\n  )) |&gt; \n  mutate(fecha = mdy(airdate)) |&gt; \n  select(-fecha_X) |&gt; \n  drop_na(viewers_in_millions) |&gt; \n  mutate(a√±o = year(fecha))\n\n# el aumento/baja de la audiencia con los episodios lo defino con la pendiente\n# positiva/negativa de un modelos lineal: audiencia = f(episodios)\nd_mod &lt;- d |&gt; \n  mutate(a√±o = year(fecha)) |&gt; \n  nest(.by = a√±o) |&gt; \n  mutate(mod = map(.x = data, ~lm(viewers_in_millions ~ fecha, data = .x))) |&gt; \n  mutate(\n    mod = map(mod, broom::tidy)\n  ) |&gt; \n  unnest(mod) |&gt; \n  filter(term == \"fecha\") |&gt; \n  mutate(sube = if_else(\n    estimate &gt; 0,\n    c1,\n    c2\n  ))\n\n# identifico las temporadas m√°s populares\nd |&gt; \n  mutate(a√±o = year(fecha)) |&gt; \n  reframe(\n    viewers_in_millions = median(viewers_in_millions),\n    fecha = mean(fecha),\n    .by = c(a√±o, season)\n  ) |&gt; \n  arrange(desc(viewers_in_millions))\n\n\n# combino fechas y audiencias con pendientes del modelo lineal\nd2 &lt;- inner_join(d, d_mod, by = join_by(a√±o)) |&gt; \n  select(any_of(names(d)), sube)\n\n# n√∫mero de temporada ubicado debajo y en el medio de cada conjunto\nd_season &lt;- d |&gt; \n  mutate(a√±o = year(fecha)) |&gt; \n  reframe(\n    fecha = mean(fecha),\n    .by = c(season, a√±o)\n  ) |&gt; \n  mutate(\n    label = if_else(\n      season &lt; 10,\n      glue(\"T0{season}\"),\n      glue(\"T{season}\")\n    )\n  ) |&gt; \n  inner_join(d2, by = join_by(season, a√±o)) |&gt; \n  rename(fecha = fecha.x) |&gt; \n  reframe(\n    fecha = median(fecha),\n    viewers_in_millions = min(viewers_in_millions)-.6,\n    .by = c(label, sube)\n  )\n\n# 1er programa\nfecha_1 &lt;- d |&gt; \n  slice(1) |&gt; \n  pull(fecha) |&gt; \n  format(\"%d de %B de %Y\")\n\nfecha_1_label &lt;- glue(\n  \"El 1&lt;sup&gt;er&lt;/sup&gt; programa se emite&lt;br&gt;\",\n  \"el {fecha_1}.\"\n)\n\n# figura ------------------------------------------------------------------\n\n# t√≠tulo de eje vertical y subt√≠tulo\ntitulo_y &lt;- \"Espectadores&lt;br&gt;&lt;span style='font-size:17px'&gt;(en millones)&lt;/span&gt;\"\n\nmi_subtitulo &lt;- glue(\n  \"La popularidad de &lt;b style='color:{c6}'&gt;AMERICAN IDOL&lt;/b&gt; tuvo su m√°ximo en\",\n  \"las temporadas &lt;b&gt;5&lt;/b&gt; y &lt;b&gt;6&lt;/b&gt;. Por lo general, la audiencia\",\n  \"&lt;b style='color:{c2}'&gt;disminuye&lt;/b&gt; con el progreso de los episodios.\",\n  \"√önicamente en 3 temporadas (1, 2 y 17) la popularidad fue en\",\n  \"&lt;b style='color:{c1}'&gt;aumento&lt;/b&gt;.\",\n  .sep = \" \"\n)\n\n# logo (.svg) de American Idol\nsvg_url &lt;- \n  \"https://upload.wikimedia.org/wikipedia/commons/8/87/American_Idol_logo.svg\"\nsvg_txt &lt;- paste(readLines(svg_url), collapse = \"n\")\n\n# figura\ng &lt;- ggplot(d2, aes(fecha, viewers_in_millions)) +\n  # tendencia\n  geom_smooth(\n    se = FALSE, color = alpha(c1, .3), method = loess, formula = y ~ x,\n    linetype = 1, linewidth = 4, lineend = \"round\") +\n  geom_smooth(\n    se = FALSE, color = alpha(c2, .3), method = loess, formula = y ~ x,\n    linetype = \"33\", linewidth = 4) +\n  # puntos\n  geom_point(\n    fill = d2$sube, shape = 21, size = 4, color = c4, alpha = .8) +\n  # temporadas\n  geom_richtext(\n    data = d_season, aes(fecha, viewers_in_millions, label = label), size = 6,\n    family = \"bebas\", vjust = 1, fill = d_season$sube, color = c3,\n    label.padding = unit(0.2, \"lines\"), label.colour = c4, \n    label.r = unit(0, \"mm\")\n  ) +\n  # American Idol logo\n  geom_point_svg(\n    x = ymd(20210101),y = 40, svg = svg_txt, size = 45, hjust = 1, vjust = 1) +\n  # 1er programa\n  annotate(\n    geom = \"richtext\", x = d_season$fecha[1]-months(5),\n    y = d_season$viewers_in_millions[1]-1, label = fecha_1_label, fill = c3,\n    label.color = NA, family = \"ubuntu\", size = 5, hjust = 0, vjust = 1,\n    color = c5\n  ) +\n  scale_x_date(\n    date_breaks = \"1 year\", date_labels = \"'%y\", position = \"bottom\",\n    limits = ymd(20020101, 20210101), expand = c(0, 0)) +\n  scale_y_continuous(\n    breaks = seq(5, 40, 5),\n    limits = c(3, 40),\n    expand = c(0, 0)) +\n  labs(x = NULL, y = titulo_y, subtitle = mi_subtitulo, caption = mi_caption) +\n  theme_linedraw() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(r = 34, l = 14),\n    plot.background = element_rect(\n      fill = c3, color = c5, linewidth = 3),\n    plot.subtitle = element_textbox_simple(\n      family = \"ubuntu\", size = 19, color = c5,\n      margin = margin(b = 10, t = 14.2)),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 13, color = c1, \n      margin = margin(t = 20, b = 10)),\n    panel.background = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major = element_line(linetype = \"FF\"),\n    axis.line = element_blank(),\n    axis.ticks = element_blank(),\n    axis.text.x = element_text(\n      family = \"bebas\", size = 27, color = c5),\n    axis.text.y = element_text(family = \"jet\", size = 15, color = c5),\n    axis.title.y = element_markdown(\n      family = \"ubuntu\", size = 20, color = c5),\n    legend.position = \"none\"\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s30/viz.png\",\n  width = 30,\n  height = 32,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s30/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 30"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_38.html",
    "href": "tidytuesday/2024/semana_38.html",
    "title": "Semana 38",
    "section": "",
    "text": "L√≠neas habladas por los personajes principales en tres obras de William Shakespeare.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"grey20\"\nc2 &lt;- \"grey95\"\nc3 &lt;- \"#FAB255\"\nc4 &lt;- \"#43B284\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\n# fuente de los nombres de los libros\nfont_add_google(\n  name = \"Updock\",\n  family = \"updock\",\n  db_cache = FALSE\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {38}, \",\n  \"&lt;b&gt;shakespeare.mit.edu.&lt;/b&gt;&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 38)\nhamlet &lt;- tuesdata$hamlet\nmacbeth &lt;- tuesdata$macbeth\nromeo_juliet &lt;- tuesdata$romeo_juliet\n\n# me interesa se√±alar las l√≠neas habladas por los personajes principales\n\n# funciones para generar las posiciones de los tiles de cada l√≠nea de cada libro\nf_datos &lt;- function(libro, nombre_libro) {\n  \n  libro_n &lt;- libro |&gt; \n    drop_na() |&gt; \n    nrow()\n  \n  alto &lt;- ceiling(libro_n/ancho)\n  \n  d_d &lt;- tibble(n = libro_n) |&gt; \n    mutate(\n      x = map(n, ~ rep(1:ancho, length.out = .x)),\n      y = map(n, ~ rep(1:alto, length.out = .x, each = ancho))\n    ) |&gt; \n    unnest(cols = c(x, y)) |&gt; \n    mutate(book = nombre_libro)\n  \n  return(d_d)\n  \n}\n\n# funci√≥n para indicar las l√≠neas habladas por los personajes ppales, por libro\nf_personaje &lt;- function(libro, nombre_libro, personaje) {\n  d_c &lt;- libro |&gt; \n    drop_na() |&gt; \n    mutate(l = row_number()) |&gt; \n    mutate(character = if_else(\n      character == personaje,\n      personaje,\n      NA\n    )) |&gt; \n    select(character)\n  \n  d_e &lt;- bind_cols(\n    select(f_datos(libro, nombre_libro), x, y),\n    d_c\n  ) |&gt; \n    drop_na() |&gt; \n    mutate(book = nombre_libro)\n  \n  return(d_e)\n}\n\n# tiles de ancho\nancho &lt;- 40\n\n# indico el orden los los libros y personajes\norden_libros &lt;- c(\"Romeo & Julieta\", \"Hamlet\", \"Macbeth\")\norden_personajes &lt;- c(\"Romeo\", \"Juliet\", \"Hamlet\", \"Macbeth\")\n\n# obtengo los tiles por libro, y se√±alo los personajes\nhamlet_d &lt;- f_datos(hamlet, \"Hamlet\")\nhamlet_c &lt;- f_personaje(hamlet, \"Hamlet\", \"Hamlet\")\n\nmacbeth_d &lt;- f_datos(macbeth, \"Macbeth\")\nmacbeth_c &lt;- f_personaje(macbeth, \"Macbeth\", \"Macbeth\")\n\nromeo_juliet_d &lt;- f_datos(romeo_juliet, \"Romeo & Julieta\")\nromeo_juliet_c_romeo &lt;- f_personaje(romeo_juliet, \"Romeo & Julieta\", \"Romeo\")\nromeo_juliet_c_julieta &lt;- f_personaje(romeo_juliet, \"Romeo & Julieta\", \"Juliet\")\n\n# unifico los datos\nd &lt;- bind_rows(hamlet_d, macbeth_d, romeo_juliet_d) |&gt; \n  mutate(book = factor(book, orden_libros))\n\nd_c &lt;- bind_rows(\n  hamlet_c, macbeth_c, romeo_juliet_c_romeo, romeo_juliet_c_julieta\n) |&gt; \n  mutate(character = factor(character, orden_personajes))\n\n# figura ------------------------------------------------------------------\n\nmi_subtitulo &lt;- glue(\n  \"De todas las l√≠neas de cada libro escrito por\",\n  \"&lt;b style='color: {c2}'&gt;William Shakespeare&lt;/b&gt;,&lt;br&gt;\",\n  \"se destacan las habladas por los personajes principales.\"\n)\n\ng &lt;- ggplot(d, aes(x, y)) +\n  geom_tile(color = c1, fill = c2, linewidth = .6) +\n  geom_tile(\n    data = d_c, aes(fill = character), color = c1, linewidth = .6) +\n  facet_wrap(vars(book), nrow = 1) +\n  scale_x_continuous(breaks = scales::breaks_width(1)) +\n  scale_y_continuous(breaks = scales::breaks_width(1)) +\n  scale_fill_manual(\n    values = MetBrewer::met.brewer(\"Egypt\", direction = -1),\n    breaks = c(\"Hamlet\", \"Macbeth\", \"Romeo\", \"Juliet\"),\n    labels = c(\"Hamlet\", \"Macbeth\", \"Romeo\", \"Julieta\")\n  ) +\n  coord_equal(expand = FALSE, clip = \"off\") +\n  labs(fill = NULL, caption = mi_caption, subtitle = mi_subtitulo) +\n  theme_void(base_size = 7) +\n  theme(\n    plot.margin = margin(l = 10, r = 10, b = 5, t = 21),\n    plot.background = element_rect(fill = c1, color = c4, linewidth = 3),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 18, hjust = .5, color = c3,\n      margin = margin(b = 5)\n    ),\n    plot.caption = element_markdown(\n      color = c2, family = \"ubuntu\", size = 12, margin = margin(t = 20),\n      lineheight = unit(1.2, \"line\")\n    ),\n    panel.spacing.x = unit(.6, \"cm\"),\n    legend.position = \"bottom\",\n    legend.text = element_text(\n      family = \"ubuntu\", size = 20, margin = margin(r = 70, l = 5),\n      color = c2\n    ),\n    strip.text = element_text(\n      family = \"updock\", size = 50, color = c2, face = \"bold\"\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s38/viz.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\")\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s38/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 38"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_22.html",
    "href": "tidytuesday/2024/semana_22.html",
    "title": "Semana 22",
    "section": "",
    "text": "Plantaciones por lote y a√±o del paquete {gardenR}\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(sf)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#A71B4B\"\nc2 &lt;- \"#22C4B3\"\nc3 &lt;- \"#584B9F\"\nc4 &lt;- \"grey95\"\nc5 &lt;- \"grey20\"\nc6 &lt;- \"white\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\n# bebas neue\nfont_add(\n  family = \"bebas\",\n  regular = \"fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {22}, \",\n  \"&lt;b&gt;Lisa Lendway&lt;/b&gt;, &lt;span style='font-family:jet;'&gt;{{gardenR}}&lt;/span&gt;.\",\n  \"&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 22)\ngarden_coords &lt;- gardenR::garden_coords\n\n# me interesan las plantaciones por a√±o, sobre los lotes\n\n# combino los datos de 2020 y 2021\nplanting_2020 &lt;- tuesdata$planting_2020\nplanting_2021 &lt;- tuesdata$planting_2021\n\nplanting &lt;- bind_rows(\n  planting_2020 |&gt; mutate(a√±o = 2020),\n  planting_2021 |&gt; mutate(a√±o = 2021)\n) |&gt; \n  mutate(vegetable = case_match(\n    vegetable,\n    \"pumpkins\" ~ \"pumpkin\",\n    .default = vegetable\n  )) |&gt; \n  mutate(plot = str_remove(plot, \"pot\")) |&gt; \n  filter(plot %in% unique(garden_coords$plot))\n\n# funci√≥n que genera un sf a partir de las coordenadas de los lotes\nf_plot &lt;- function(plot_id) {\n  p &lt;- filter(garden_coords, plot == plot_id)\n  \n  v &lt;- st_cast(st_linestring(cbind(p$x, p$y)),\"POLYGON\") |&gt; \n    st_sfc() |&gt; \n    st_sf() |&gt; \n    rename(\"geom\" = 1) |&gt; \n    mutate(plot = plot_id, .before = 1)\n  \n  return(v)\n}\n\n# a partir de la cantidad de plantaciones agrego puntos sobre los lotes\nf_puntos &lt;- function(x_a√±o, y_plot) {\n  y &lt;- filter(planting, a√±o == x_a√±o) |&gt; \n    reframe(\n      s = sum(number_seeds_planted, na.rm = TRUE),\n      .by = plot\n    ) |&gt; \n    inner_join(\n      plot_sf,\n      by = join_by(plot)\n    ) |&gt; \n    filter(plot == y_plot) |&gt; \n    st_sf()\n  \n  p &lt;- st_sample(y, size = y$s) |&gt; \n    st_sf() |&gt; \n    rename(geom = 1) |&gt; \n    mutate(plot = y_plot, .before = 1) |&gt; \n    mutate(a√±o = x_a√±o)\n  \n  return(p)\n  \n}\n\n# sf delos lotes\nplot_sf &lt;- map(unique(garden_coords$plot), f_plot) |&gt; \n  list_rbind() |&gt; \n  st_sf()\n\n# combino las plantaciones de 2020 y 2021\nplot_2020 &lt;- filter(planting, a√±o == 2020) |&gt; \n  drop_na(number_seeds_planted) |&gt; \n  distinct(plot) |&gt; \n  pull()\n\nplot_2021 &lt;- filter(planting, a√±o == 2021) |&gt; \n  drop_na(number_seeds_planted) |&gt; \n  distinct(plot) |&gt; \n  pull()\n\np_2020 &lt;- map2(\n  .x = rep(2020, length(plot_2020)),\n  .y = plot_2020,\n  ~ f_puntos(x_a√±o = .x, y_plot = .y)\n) |&gt; \n  list_rbind() |&gt; \n  st_sf()\n\np_2021 &lt;- map2(\n  .x = rep(2021, length(plot_2021)),\n  .y = plot_2021,\n  ~ f_puntos(x_a√±o = .x, y_plot = .y)\n) |&gt; \n  list_rbind() |&gt; \n  st_sf()\n\np &lt;- rbind(p_2020, p_2021)\n\n# extensi√≥n de los lotes\nplot_bb &lt;- st_as_sfc(st_bbox(plot_sf))\n\n# cantidad de semillas plantadas por a√±o\nn_a√±o &lt;- planting |&gt; \n  reframe(\n    s = sum(number_seeds_planted, na.rm = TRUE),\n    .by = a√±o\n  ) |&gt; \n  mutate(\n    label = glue(\"\\# de semillas plantadas = &lt;b style='color:{c1}'&gt;{s}&lt;/b&gt;\")\n  )\n\n# figura ------------------------------------------------------------------\n\n# paleta de colores\npal &lt;- hcl.colors(\n  n = length(unique(garden_coords$plot)), \n  palette = \"Zissou 1\") |&gt; \n  sample()\n\n# t√≠tulo y subt√≠tulo\nmi_subtitle &lt;- glue(\n  \"El paquete &lt;span style='font-family:jet; color:{c1}'&gt;{{gardenR}}&lt;/span&gt;, \",\n  \"de &lt;b style='color:{c3}'&gt;Lisa Lendway&lt;/b&gt;, registra los vegetales de su \",\n  \"jard√≠n.&lt;br&gt;\",\n  \"Se muestran las plantaciones de 2020 y 2021 por cada lote, junto con los \",\n  \"nombres.\"\n)\n\n# logo de {gardenR}\nlogo_url &lt;- \"https://raw.githubusercontent.com/llendway/gardenR/main/man/figures/logo.png\"\nmi_title &lt;- glue(\"&lt;img src={logo_url} width=75 /&gt;\")\n\n# figura\ng &lt;- ggplot() +\n  # extensi√≥n\n  geom_sf(\n    data = plot_bb, fill = c6, color = NA\n  ) +\n  # lotes\n  geom_sf(\n    data = plot_sf, aes(fill = plot, color = plot), alpha = .1, linewidth = 1,\n    color = c5\n  ) +\n  # plantaciones\n  geom_sf(\n    data = p, aes(color = plot), alpha = .4, size = 2\n  ) +\n  # nombre de los lotes\n  geom_sf_label(\n    data = plot_sf, aes(label = plot), family = \"jet\", fill = c4, color = c5\n  ) +\n  geom_richtext(\n    data = n_a√±o, aes(x = 17.5, y = 1, label = label), family = \"jet\", \n    hjust = .1, fill = NA, label.color = NA\n  ) +\n  facet_wrap(vars(a√±o), nrow = 1) +\n  scale_fill_manual(values = pal) +\n  scale_color_manual(values = pal) +\n  labs(subtitle = mi_subtitle, caption = mi_caption, title = mi_title) +\n  theme_void() +\n  theme(\n    plot.margin = margin(t = 4.6, r = 20, b = 0, l = 20),\n    plot.background = element_rect(fill = c4, color = c2, linewidth = 3),\n    plot.title = element_markdown(margin = margin(b = -70, l = 20, t = 10)),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 15, lineheight = unit(1.3, \"line\"),\n      margin = margin(b = 40, t = 10, l = 130)),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c1, size = 11, lineheight = unit(1.3, \"line\"),\n      margin = margin(b = 10, r = 20)),\n    strip.text = element_text(family = \"bebas\", size = 30, color = c2),\n    legend.position = \"none\"\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s22/viz.png\",\n  width = 30,\n  height = 25,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s22/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 22"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_07.html",
    "href": "tidytuesday/2024/semana_07.html",
    "title": "Semana 07",
    "section": "",
    "text": "Consumos durante San Valent√≠n y cambio en el porcentaje de personas que participan.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(patchwork)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"black\"\nc2 &lt;- \"red\"\nc3 &lt;- alpha(\"red\", .6)\nc4 &lt;- \"white\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# fuente: Victor\nfont_add(\n  family = \"victor\", \n  regular = \"fuente/VictorMono-ExtraLight.ttf\",\n  bold = \"fuente/VictorMono-VariableFont_wght.ttf\",\n  italic = \"fuente/VictorMono-ExtraLightItalic.ttf\")\n\n# fuente: Bebas Neue\nfont_add(\n  family = \"bebas\", \n  regular = \"fuente/BebasNeue-Regular.ttf\")\n\n# t√≠tulo\nfont_add_google(\n  name = \"Metamorphous\",\n  family = \"metamorphous\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c2};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {7}. \",\n  \"National Retail Federation.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c2};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c2};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\ndolar &lt;- glue(\"&lt;span style='color:{c2};'&gt;**$** = USD&lt;/span&gt;\")\n\nmi_caption &lt;- glue(\n  \"{dolar} {sep} {fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} \n  {icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 7)\nhistorical_spending &lt;- tuesdata$historical_spending\n\n# me interesa ver la evoluci√≥n de dinero dedicado a cada producto, y el \n# porcentaje de personas que festeja San Valent√≠n\n\n# categor√≠as, vector en ingl√©s\ncc_vec &lt;- historical_spending |&gt; \n  janitor::clean_names() |&gt; \n  pivot_longer(\n    cols = -year,\n    names_to = \"categ\",\n    values_to = \"valor\"\n  ) |&gt; \n  rename(a√±o = year) |&gt; \n  distinct(categ) |&gt; \n  pull()\n\n# reordeno las categor√≠as\ncc_vec &lt;- c(cc_vec[2:5], cc_vec[1], cc_vec[6:9])\n\n# traducci√≥n de las categor√≠as\ncc_trad &lt;- c(\n  \"Por persona\", \"Golosinas\", \"Flores\", \"Joyas\", \n  \"Personas que festejannSan Valent√≠n\",\n  \"Tarjeta de felicitaciones\", \"Salida de noche\", \"Ropa\",\n  \"Tarjeta de regalos\")\n\nnames(cc_trad) &lt;- cc_vec\n\n# agrego las traducciones y cambio a tabla larga\nd &lt;- historical_spending |&gt; \n  janitor::clean_names() |&gt; \n  pivot_longer(\n    cols = -year,\n    names_to = \"categ\",\n    values_to = \"valor\"\n  ) |&gt; \n  rename(a√±o = year) |&gt; \n  mutate(cate = cc_trad[categ]) |&gt; \n  select(-categ)\n\n# figura ------------------------------------------------------------------\n\n# eje vertical, por categor√≠a\neje_y &lt;- list(\n  \"Personas que festejannSan Valent√≠n\" = \n    scale_y_continuous(\n      limits = c(50, 62), breaks = seq(50, 62, 2),\n      labels = scales::label_number(suffix = \"%\")),\n  \"Por persona\" =\n    scale_y_continuous(\n      limits = c(100, 200), breaks = seq(100, 200, 25),\n      labels = scales::label_dollar()),\n  \"Golosinas\" =\n    scale_y_continuous(\n      limits = c(5, 20), breaks = seq(5, 20, 5), \n      labels = scales::label_dollar()),\n  \"Flores\" =\n    scale_y_continuous(\n      limits = c(12, 18), breaks = seq(12, 18, 1),\n      labels = scales::label_dollar()),\n  \"Joyas\" = \n    scale_y_continuous(\n      limits = c(20, 50), breaks = seq(20, 50, 5), \n      labels = scales::label_dollar()),\n  \"Tarjeta de felicitaciones\" =\n    scale_y_continuous(\n      limits = c(5, 10), breaks = seq(5, 10, 1), \n      labels = scales::label_dollar()),\n  \"Salida de noche\" =\n    scale_y_continuous(\n      limits = c(20, 35), breaks = seq(20, 35, 5), \n      labels = scales::label_dollar()),\n  \"Ropa\" =\n    scale_y_continuous(\n      limits = c(10, 25), breaks = seq(10, 25, 5), \n      labels = scales::label_dollar()),\n  \"Tarjeta de regalos\" = \n    scale_y_continuous(\n      limits = c(5, 20), breaks = seq(5, 20, 5), \n      labels = scales::label_dollar())\n)\n\n# colores, por categor√≠a\n# elimino un color, amarillento, no queda bien en la figura final\npaleta_colores &lt;- MoMAColors::moma.colors(palette_name = \"Klein\", n = 10)\n\nco &lt;- paleta_colores[paleta_colores != \"#f9c000\"]\nnames(co) &lt;- cc_trad\n\n# colores de fondo, por categor√≠a\nco2 &lt;- c(\n  \"#FFEDF0\", \"#EEF5F6\", \"#FCF1E7\", \"#F3F7EA\", \"#000000\", \"#F2F7F3\", \"#F2E8EA\",\n  \"#EAE9ED\", \"#F9EAE6\"\n)\nnames(co2) &lt;- cc_trad\n\n# t√≠tulo y subt√≠tulo\nmi_title &lt;- \"D√≠a de los Enamorados\"\nmi_subtitle &lt;- glue(\n  \"Cada vez menos parejas festejan el **14 de febrero**.&lt;br&gt;\",\n  \"Pero quienes s√≠ lo hacen, gastan m√°s.\"\n)\n\n# funci√≥n que genera una figura p/c categor√≠a\n# el cambio en el tiempo de personas que festejan San Valent√≠n tiene un color\n# diferente del resto, y se ubica en el medio\nf_gg &lt;- function(x) {\n  \n  # datos filtrados\n  tbl &lt;- filter(d, cate == x)\n  \n  # eje vertical\n  eje_y_break &lt;- eje_y[[x]]\n  \n  # colores y ancho de l√≠nea del contorno\n  color_fondo &lt;- co2[x]\n  color_linea &lt;- co[x]\n  color_eje &lt;- co[x]\n  color_titulo &lt;- co[x]\n  color_punto &lt;- alpha(co[x], .7)\n  color_borde &lt;- co[x]\n  linea &lt;- 2\n  \n  # espec√≠ficos de esta categor√≠a\n  if (x == \"Personas que festejannSan Valent√≠n\") {\n    color_fondo &lt;- c1\n    color_linea &lt;- c2\n    color_eje &lt;- c4\n    color_titulo &lt;- c2\n    color_punto &lt;- c3\n    color_borde &lt;- c2\n    linea &lt;- 5\n  }\n  \n  # figura\n  g &lt;- ggplot(tbl, aes(a√±o, valor)) +\n    geom_smooth(\n      se = FALSE, formula = y ~ x, method = loess, color = color_linea,\n      linewidth = 2) +\n    geom_point(color = color_punto, size = 1, shape = 19) +\n    scale_x_continuous(\n      labels = c(2010, 2015, 2020), \n      breaks = c(2010, 2015, 2020), \n      limits = c(2009.5, 2022.5)) +\n    eje_y_break +\n    coord_cartesian(clip = \"off\", expand = FALSE) +\n    labs(x = NULL, y = NULL, title = x) +\n    theme_minimal() +\n    theme(\n      aspect.ratio = 1,\n      plot.margin = margin(10, 10, 10, 10),\n      plot.background = element_rect(\n        fill = color_fondo, color = color_borde, linewidth = linea),\n      plot.title.position = \"plot\",\n      plot.title = element_text(\n          family = \"ubuntu\", color = color_titulo, margin = margin(b = 20),\n          size = 20, hjust = .5),\n      panel.grid.minor = element_blank(),\n      panel.grid.major = element_line(linewidth = .2, color = c4),\n      axis.text.x = element_text(\n        family = \"bebas\", color = color_eje, size = 22),\n      axis.text.y = element_text(\n        family = \"victor\", color = color_eje, vjust = 0, size = 12)\n    )\n  \n  return(g)\n}\n\n# lista con todas las figuras\ngg_lista &lt;- map(cc_trad, f_gg)\n\n# figura\ng &lt;- wrap_plots(gg_lista, ncol = 3) +\n  plot_annotation(\n    title = mi_title,\n    subtitle = mi_subtitle,\n    caption = mi_caption,\n    theme = theme(\n      plot.margin = margin(t = 15, r = 13.6, l = 13.6, b = 5),\n      plot.background = element_rect(fill = c1, color = c3, linewidth = 3),\n      plot.title = element_text(\n        family = \"metamorphous\", size = 60, hjust = .5, color = c2),\n      plot.subtitle = element_markdown(\n        family = \"ubuntu\", size = 20, hjust = .5, color = c2, \n        lineheight = unit(1.2, \"line\")),\n      plot.caption = element_markdown(family = \"ubuntu\", size = 15, color = c3),\n      panel.background = element_rect(fill = c4)\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s07/viz.png\",\n  width = 30,\n  height = 39,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s07/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 07"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_47.html",
    "href": "tidytuesday/2024/semana_47.html",
    "title": "Semana 47",
    "section": "",
    "text": "Uso de signos de exclamaci√≥n e interrogaci√≥n en episodios de Bob‚Äôs Burger.\n\nScript\n\n\nC√≥digo\n#\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#D1A358\"\nc2 &lt;- \"#67B2A9\"\nc3 &lt;- \"#EE2631\"\nc4 &lt;- \"#fff8f9\"\nc5 &lt;- \"grey20\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nfont_add_google(\n  name = \"Ultra\",\n  family = \"ultra\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {47}, \",\n  \"&lt;span style='font-family:jet;'&gt;{{bobsburgersR}}&lt;/span&gt;, Steven Ponce.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 47)\nep &lt;- tuesdata$episode_metrics\n\n# me interesa comparar el uso de signos de interrogaci√≥n/exclamaci√≥n en\n# cada temporada\n\n# proporciones medias por temporada\nd &lt;- ep |&gt;\n  reframe(\n    preg = median(question_ratio),\n    excl = median(exclamation_ratio),\n    .by = season\n  ) |&gt;\n  pivot_longer(\n    cols = c(preg, excl),\n    names_to = \"dialogo\",\n    values_to = \"prop\"\n  )\n\n# proporciones medias por temporada y episodio\nd_largo &lt;- ep |&gt;\n  select(season, question_ratio, exclamation_ratio) |&gt;\n  pivot_longer(\n    cols = c(question_ratio, exclamation_ratio),\n    names_to = \"dialogo\",\n    values_to = \"prop\"\n  ) |&gt;\n  mutate(\n    dialogo = if_else(\n      dialogo == \"question_ratio\",\n      \"preg\",\n      \"excl\"\n    )\n  )\n\n# figura ------------------------------------------------------------------\n\n# logo y figura de la familia Belcher\nimg_link &lt;- \"https://upload.wikimedia.org/wikipedia/en/7/7f/Bob%27s_Burgers_promo.png\"\nimg_label &lt;- glue(\"&lt;img src='{img_link}' width=200 /&gt;\")\n\nlogo_link &lt;- \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Bob%27s_Burgers_logo.svg/1024px-Bob%27s_Burgers_logo.svg.png\"\nlogo_label &lt;- glue(\"&lt;img src='{logo_link}' width=170 /&gt;\")\n\n# t√≠tulo y subt√≠tulo\nmi_titulo &lt;- glue(\n  \"La familia &lt;b style='font-family: ultra; color: {c3}'&gt;Belcher&lt;/b&gt; se \",\n  \"asombra cada vez menos\"\n)\n\nmi_subtitulo &lt;- glue(\n  \"Porcentaje de l√≠neas de di√°logo que contienen&lt;br&gt;\",\n  \"&lt;b style='color: {c2}'&gt;signos de exclamaci√≥n&lt;/b&gt; o \",\n  \"&lt;b style='color: {c1}'&gt;signos de interrogaci√≥n&lt;/b&gt;\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(prop, season, fill = dialogo)) +\n  # medianas\n  geom_point(\n    show.legend = FALSE, size = 11, shape = 23, color = c5, stroke = 1,\n    alpha = .4\n  ) +\n  # episodios\n  geom_point(\n    data = d_largo, color = c5, size = 2, shape = 21, show.legend = FALSE,\n    alpha = .8\n  ) +\n  # familia Belcher\n  annotate(\n    geom = \"richtext\", x = -Inf, y = -Inf, label = img_label, fill = NA,\n    label.color = NA, hjust = 0, vjust = 0\n  ) +\n  # lobo Bob's Burger\n  annotate(\n    geom = \"richtext\", x = Inf, y = Inf, label = logo_label, fill = NA,\n    label.color = NA, hjust = 1, vjust = 1\n  ) +\n  scale_x_continuous(\n    breaks = scales::breaks_width(.05),\n    expand = c(0, 0),\n    limits = c(0, .30001),\n    labels = scales::label_percent()\n  ) +\n  scale_y_continuous(\n    breaks = scales::breaks_width(1),\n    labels = (x) ifelse(x &lt; 10, paste0(\"0\", x), x),\n    limits = c(.8, 14.2),\n    expand = c(0, 0)\n  ) +\n  scale_fill_manual(\n    breaks = c(\"preg\", \"excl\"),\n    values = c(c1, c2)\n  ) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    x = NULL,\n    y = \"Temporada\",\n    title = mi_titulo,\n    subtitle = mi_subtitulo,\n    caption = mi_caption\n  ) +\n  ggthemes::theme_tufte(base_size = 20) +\n  theme(\n    aspect.ratio = 1.2,\n    plot.margin = margin(t = 22, b = 10, l = 25, r = 42),\n    plot.background = element_rect(fill = c4, color = c1, linewidth = 3),\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(\n      family = \"ubuntu\", size = 33, color = c5, hjust = .5\n    ),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", color = c5, size = 24, lineheight = 1.2, hjust = .5,\n      margin = margin(b = 25)\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c2, size = 15, margin = margin(t = 20)\n    ),\n    panel.grid.major = element_line(\n      color = \"grey85\", linewidth = .3, linetype = \"44\"\n    ),\n    axis.ticks = element_blank(),\n    axis.title = element_text(family = \"ubuntu\", size = 22),\n    axis.text.x = element_text(family = \"jet\", color = c5),\n    axis.text.y = element_text(family = \"ultra\", color = c5, size = 24)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s47/viz.png\",\n  width = 30,\n  height = 38,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s47/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 47"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_10.html",
    "href": "tidytuesday/2024/semana_10.html",
    "title": "Semana 10",
    "section": "",
    "text": "Tendencias en la recolecci√≥n de basura de Mr.¬†Trash Wheel.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggfx)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\ncolores &lt;- MetBrewer::met.brewer(name = \"Redon\", n = 10) |&gt; \n  as.character()\n\nc1 &lt;- colores[1]\nc2 &lt;- colores[10]\nc3 &lt;- \"black\"\nc4 &lt;- \"grey95\"\nc5 &lt;- \"grey30\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# fuente: Victor\nfont_add(\n  family = \"victor\", \n  regular = \"fuente/VictorMono-ExtraLight.ttf\",\n  bold = \"fuente/VictorMono-VariableFont_wght.ttf\",\n  italic = \"fuente/VictorMono-ExtraLightItalic.ttf\")\n\n# fuente: Bebas Neue\nfont_add(\n  family = \"bebas\", \n  regular = \"fuente/BebasNeue-Regular.ttf\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {10}, \",\n  \"**Mr. Trash Wheel Baltimore Healthy Harbor**&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 10)\ntrashwheel &lt;- tuesdata$trashwheel\n\n# me interesa ver las tendencias de cantidad de toneladas mensuales, por a√±o\nd &lt;- trashwheel |&gt; \n  mutate(Date = mdy(Date)) |&gt; \n  select(peso = Weight, fecha = Date) |&gt; \n  mutate(mes = month(fecha)) |&gt; \n  mutate(a√±o = year(fecha)) |&gt; \n  drop_na() |&gt; \n  mutate(a√±o = factor(a√±o))\n\n# figura ------------------------------------------------------------------\n\n# iniciales de los meses, eje horizontal\nx_meses &lt;- ymd(glue(\"2024-{1:12}-01\")) |&gt; \n  format(\"%B\") |&gt; \n  str_to_upper() |&gt; \n  str_sub(start = 0, end = 1) |&gt; \n  fct_inorder()\n\n# rect√°ngulo para los paneles\nx_i &lt;- .5\nx_f &lt;- 12.5\ny_i &lt;- 1.5\ny_f &lt;- 4\n\nrect_tbl &lt;- tibble(\n  xmin = x_i,\n  xmax = x_f,\n  ymin = y_i,\n  ymax = y_f,\n  a√±o = unique(d$a√±o)\n)\n\n# meses en eje horizontal, en todos los paneles\nmeses_lst &lt;- tibble(\n  x = 1:12,\n  y = y_i,\n  label = x_meses\n) |&gt; list()\n\nmeses_tbl &lt;- tibble(\n  a√±o = unique(d$a√±o),\n  data = meses_lst\n) |&gt; \n  unnest(data)\n\n# a√±os, en cada panel\na√±o_tbl &lt;- tibble(\n  x = 6.5, y = 4, a√±o = factor(2014:2023)\n)\n\n# pesos sobre las horizontales\npeso_tbl &lt;- tibble(\n  x = rep(.7, 4),\n  y = rep(2:3, 2),\n  label = rep(glue(\"{2:3}tn\"), 2),\n  a√±o = fct(c(\"2014\", \"2014\", \"2019\", \"2019\"))\n)\n\n# logo de Mr. Trash Wheel\nlogo &lt;- \"&lt;img src='2024/s10/logo.png' width='70'&gt;&lt;/img&gt;\"\n\n# t√≠tulo\nmi_title &lt;- glue(\n  \"{logo} &lt;b style='color:{c1}'&gt;Mr. Trash Wheel&lt;/b&gt; se \",\n  \"encarga de interceptar la basura sobre un curso de agua, \",\n  \"en la ciudad de Baltimore, &lt;b&gt;EEUU&lt;/b&gt;. Tendencias anuales \",\n  \"en la recolecci√≥n de residuos.\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(mes, peso, color = a√±o)) +\n  # horizontales\n  geom_hline(\n    yintercept = c(2, 3), linetype = 2, linewidth = .1\n  ) +\n  # pesos\n  geom_text(\n    data = peso_tbl, aes(x, y, label = label), hjust = 0, vjust = -.1,\n    family = \"victor\", size = 2.5, color = c3\n  ) +\n  # paneles\n  geom_rect(\n    data = rect_tbl, \n    aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = a√±o),\n    inherit.aes = FALSE, show.legend = FALSE) +\n  # tendencias, con sombra\n  with_shadow(\n    geom_smooth(\n    method = loess, formula = y ~ x, se = FALSE, show.legend = FALSE,\n    lineend = \"round\"),\n    sigma = 10, x_offset = 8, y_offset = 8\n    ) +\n  # meses\n  geom_text(\n    data = meses_tbl, aes(x, y, label = label, color = a√±o),\n    size = 5, family = \"bebas\", vjust = -.1, show.legend = FALSE\n  ) +\n  # a√±o\n  geom_text(\n    data = a√±o_tbl, aes(x, y, label = a√±o, color = a√±o), show.legend = FALSE,\n    family = \"bebas\", size = 7, vjust = 1.1\n  ) +\n  facet_wrap(vars(a√±o), nrow = 2, scales = \"free\") +\n  scale_x_continuous(\n    breaks = 1:12, labels = x_meses\n  ) +\n  scale_y_continuous(\n    breaks = seq(.5, 6, .5)\n  ) +\n  scale_color_manual(\n    values = colores\n  ) +\n  scale_fill_manual(\n    values = alpha(colores, .4)\n  ) +\n  labs(title = mi_title, caption = mi_caption) +\n  coord_cartesian(\n    ylim = c(1.5, 4), xlim = c(.5, 12.5), expand = FALSE, clip = \"off\") +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(r = 10, l = 10),\n    plot.background = element_rect(fill = c4, color = c5, linewidth = 3),\n    plot.title = element_markdown(\n      color = c5, family = \"ubuntu\", size = 10,\n      margin = margin(b = 10, t = 5)),\n    plot.caption = element_markdown(\n      color = c2, family = \"ubuntu\", margin = margin(t = 15, b = 5, r = 5), \n      size = 8),\n    strip.text = element_blank(),\n    panel.spacing = unit(.5, \"line\")\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s10/viz.png\",\n  width = 30,\n  height = 14.922,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s10/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 10"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_53.html",
    "href": "tidytuesday/2024/semana_53.html",
    "title": "Semana 53",
    "section": "",
    "text": "Restaurantes ganadores del premio James Beard.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#185461\"\nc2 &lt;- \"#D8DEE9\"\nc3 &lt;- \"#ECEFF4\"\nc4 &lt;- \"black\"\nc5 &lt;- \"white\"\nc6 &lt;- \"#001959\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {53}, \",\n  \"&lt;b&gt;James Beard Awards&lt;/b&gt;, PythonCoderUnicorn.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 53)\nrestaurant_and_chef &lt;- tuesdata$restaurant_and_chef\n\n# me interesa un mapa con la cantidad de ganadores por Estado\n\n# obtengo cantidad de ganadores y nombre del Estado\nd &lt;- restaurant_and_chef |&gt; \n  filter(rank == \"Winner\") |&gt; \n  filter(str_detect(city, \",\")) |&gt; \n  separate_wider_delim(\n    cols = city,\n    delim = \", \",\n    names = c(\"ciudad\", \"estado_nombre\")\n  ) |&gt; \n  count(estado_nombre, sort = TRUE)\n\n# mapa de EEUU\nusa_sf &lt;- rgeoboundaries::gb_adm1(country = \"USA\") |&gt; \n  select(\"estado_nombre\" = shapeName)\n\n# remuevo Hawaii para obtener √∫nicamente la parte continental\nd_sf &lt;- inner_join(d, usa_sf, by = join_by(estado_nombre)) |&gt;\n  filter(estado_nombre != \"Hawaii\") |&gt; \n  sf::st_as_sf()\n\n# recorto USA a la extensi√≥n\next &lt;- sf::st_bbox(d_sf) |&gt; \n  sf::st_as_sfc()\n\nusa_crop_sf &lt;- sf::st_intersection(usa_sf, ext) |&gt; \n  sf::st_drop_geometry()\n\n# todos los Estados continentales\nestados_cont &lt;- inner_join(usa_sf, usa_crop_sf, by = join_by(estado_nombre))\n\n# divido en rangos\nd_sf &lt;- full_join(d, estados_cont, by = join_by(estado_nombre)) |&gt; \n  sf::st_as_sf() |&gt;\n  sf::st_transform(crs = sf::st_crs(\"ESRI:102003\")) |&gt; \n  mutate(rango = cut_width(n, 10)) |&gt; \n  mutate(lim_i = str_extract(rango, \"(?&lt;=\\(|\\[)[-0-9.]+\")) |&gt; \n  mutate(lim_s = str_extract(rango, \"(?&lt;=,)[-0-9.]+(?=\\]|\\))\")) |&gt; \n  mutate(\n    r = if_else(\n      lim_i &lt; 0,\n      paste0(\"&lt;\", lim_s),\n      paste0(lim_i, \"-\", lim_s)\n    )\n  ) |&gt; \n  mutate(r = fct_reorder(r, n, .na_rm = TRUE, .desc = TRUE))\n\n# figura ------------------------------------------------------------------\n\n# agrego las capitales de Estado\ncapitales &lt;- maps::us.cities |&gt; \n  as_tibble() |&gt; \n  filter(capital == 2) |&gt; \n  sf::st_as_sf(coords = c(\"long\", \"lat\"), crs = 4326) |&gt; \n  sf::st_intersection(ext) |&gt; \n  sf::st_transform(crs = sf::st_crs(\"ESRI:102003\")) |&gt; \n  sf::st_as_sfc()\n\n# logo y top 2 Estados\nlogo &lt;- \"https://pbs.twimg.com/profile_images/1138814510528114691/plI3Ufxt_400x400.png\"\nlogo_label &lt;- glue(\"&lt;img src='{logo}' width=100 /&gt;\")\n\nny &lt;- slice(d_sf, 1)\nca &lt;- slice(d_sf, 2)\n\n# subt√≠tulo\nmi_subtitulo &lt;- glue(\n  \"Entre 1984 y 2024, {ny$n} restaurantes de &lt;b style='color:{c6}'&gt;New York&lt;/b&gt; \n  han recibido el prestigioso premio&lt;br&gt; &lt;b&gt;James Beard&lt;/b&gt;. Le sigue \n  &lt;b style='color:{c6}'&gt;California&lt;/b&gt;, con {ca$n} establecimientos.\"\n)\n\n# figura\ng &lt;- ggplot() +\n  geom_sf(data = d_sf, aes(fill = r), color = c4) +\n  geom_sf(\n    data = capitales, shape = 21, fill = c5, color = c4, size = 1\n  ) +\n  annotate(\n    geom = \"richtext\", x = I(.025), y = -I(.025), label = logo_label, hjust = 0,\n    vjust = 0, fill = NA, label.color = NA\n  ) +\n  scico::scale_fill_scico_d(\n    palette = \"batlow\",\n    na.value = c2,\n    labels = c(as.character(sort(unique(d_sf$r)))[1:6], \"Sin ganadores\")\n  ) +\n  coord_sf(clip = \"off\") +\n  guides(\n    fill = guide_legend(override.aes = list(color = NA))\n  ) +\n  labs(\n    subtitle = mi_subtitulo,\n    fill = \"Cantidad denrestaurantesnganadores\",\n    caption = mi_caption\n  ) +\n  theme_void(base_size = 12, base_family = \"ubuntu\") +\n  theme(\n    plot.background = element_rect(fill = c3, color = c6, linewidth = 3),\n    plot.margin = margin(b = 14.3, l = 5, r = 5, t = 14),\n    plot.subtitle = element_markdown(\n      color = c1, size = 18, hjust = .5, lineheight = 1.2\n    ),\n    plot.caption = element_markdown(\n      color = c4, lineheight = 1.2, size = 11, margin = margin(r = 5)\n    ),\n    legend.title = element_text(),\n    legend.text = element_text(family = \"jet\"),\n    legend.position = \"inside\",\n    legend.position.inside = c(.87, .05),\n    legend.justification = c(0, 0)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s53/viz.png\",\n  width = 30,\n  height = 22,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(paste0(getwd(), \"/2024/s53/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 53"
    ]
  },
  {
    "objectID": "tidytuesday/2024/index.html",
    "href": "tidytuesday/2024/index.html",
    "title": "Introducci√≥n",
    "section": "",
    "text": "2024\n\n\n   \n    \n    \n      Ordenar por\n      Por defecto\n      \n        T√≠tulo\n      \n      \n        Fecha - Menos reciente\n      \n      \n        Fecha - M√°s reciente\n      \n      \n        Autor/a\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nSemana 53\n\n\nFigura semana 53\n\n\n\ngeom_sf\n\n\n\n\n\n\n\n\n\n2025-01-06\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 52\n\n\nFigura semana 52\n\n\n\ngeom_blank\n\ngeom_tile\n\ngeom_text\n\n\n\n\n\n\n\n\n\n2024-12-30\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 51\n\n\nFigura semana 51\n\n\n\ngeom_col\n\ngeom_label\n\n\n\n\n\n\n\n\n\n2024-12-23\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 50\n\n\nFigura semana 50\n\n\n\ngeom_rect\n\ngeom_col\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2024-12-16\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 49\n\n\nFigura semana 49\n\n\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2024-12-09\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 48\n\n\nFigura semana 48\n\n\n\ngeom_text\n\ngeom_bump\n\ngeom_point\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2024-12-02\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 47\n\n\nFigura semana 47\n\n\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2024-11-25\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 46\n\n\nFigura semana 46\n\n\n\nargentina\n\n\n\n\n\n\n\n\n\n2024-11-18\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 45\n\n\nFigura semana 45\n\n\n\ngeom_line\n\ngeom_label\n\n\n\n\n\n\n\n\n\n2024-11-11\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 44\n\n\nFigura semana 44\n\n\n\n\n\n\n\n\n\n\n\n2024-11-04\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 43\n\n\nFigura semana 43\n\n\n\ngeom_vline\n\ngeom_col\n\ngeom_richtext\n\nargentina\n\n\n\n\n\n\n\n\n\n2024-10-28\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 42\n\n\nFigura semana 42\n\n\n\ngeom_spatraster\n\ngeom_spatvector\n\n\n\n\n\n\n\n\n\n2024-10-21\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 41\n\n\nFigura semana 41\n\n\n\ngeom_col\n\n\n\n\n\n\n\n\n\n2024-10-14\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 40\n\n\nFigura semana 40\n\n\n\ngeom_hex\n\n\n\n\n\n\n\n\n\n2024-10-07\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 39\n\n\nFigura semana 39\n\n\n\ngeom_point\n\nargentina\n\n\n\n\n\n\n\n\n\n2024-09-30\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 38\n\n\nFigura semana 38\n\n\n\ngeom_tile\n\n\n\n\n\n\n\n\n\n2024-09-23\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 37\n\n\nFigura semana 37\n\n\n\ngeom_jitter\n\n\n\n\n\n\n\n\n\n2024-09-16\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 36\n\n\nFigura semana 36\n\n\n\ngeom_col\n\ngeom_richtext\n\nargentina\n\n\n\n\n\n\n\n\n\n2024-09-09\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 35\n\n\nFigura semana 35\n\n\n\ngeom_point\n\ngeom_from_path\n\n\n\n\n\n\n\n\n\n2024-09-02\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 34\n\n\nFigura semana 34\n\n\n\ngeom_abline\n\ngeom_point\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2024-08-26\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 33\n\n\nFigura semana 33\n\n\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2024-08-19\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 32\n\n\nFigura semana 32\n\n\n\ngeom_tile\n\ngeom_richtext\n\nargentina\n\n\n\n\n\n\n\n\n\n2024-08-12\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 31\n\n\nFigura semana 31\n\n\n\ngeom_point\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2024-08-05\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 30\n\n\nFigura semana 30\n\n\n\ngeom_smooth\n\ngeom_point\n\ngeom_richtext\n\ngeom_point_svg\n\n\n\n\n\n\n\n\n\n2024-07-29\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 29\n\n\nFigura semana 29\n\n\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2024-07-22\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 28\n\n\nFigura semana 28\n\n\n\ngeom_col\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2024-07-15\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 27\n\n\nFigura semana 27\n\n\n\ngeom_tile\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2024-07-08\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 26\n\n\nFigura semana 26\n\n\n\ngeom_segment\n\ngeom_point\n\ngeom_tile\n\n\n\n\n\n\n\n\n\n2024-07-01\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 25\n\n\nFigura semana 25\n\n\n\ngeom_richtext\n\ngeom_segment\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2024-06-24\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 24\n\n\nFigura semana 24\n\n\n\ngeom_point\n\ngeom_text\n\n\n\n\n\n\n\n\n\n2024-06-17\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 23\n\n\nFigura semana 23\n\n\n\ngeom_point\n\ngeom_label\n\n\n\n\n\n\n\n\n\n2024-06-10\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 22\n\n\nFigura semana 22\n\n\n\ngeom_sf\n\ngeom_sf_label\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2024-06-03\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 21\n\n\nFigura semana 21\n\n\n\ngeom_col\n\ngeom_hline\n\n\n\n\n\n\n\n\n\n2024-05-27\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 20\n\n\nFigura semana 20\n\n\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2024-05-20\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 19\n\n\nFigura semana 19\n\n\n\ngeom_col\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2024-05-13\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 18\n\n\nFigura semana 18\n\n\n\ngeom_line\n\ngeom_point\n\nargentina\n\n\n\n\n\n\n\n\n\n2024-05-06\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 17\n\n\nFigura semana 17\n\n\n\ngeom_sf\n\ngeom_step\n\ngeom_richtext\n\nargentina\n\n\n\n\n\n\n\n\n\n2024-04-29\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 16\n\n\nFigura semana 16\n\n\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2024-04-22\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 15\n\n\nFigura semana 15\n\n\n\ngeom_sf\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2024-04-15\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 14\n\n\nFigura semana 14\n\n\n\ngeom_tile\n\ngeom_richtext\n\ngeom_point_svg\n\n\n\n\n\n\n\n\n\n2024-04-08\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 13\n\n\nFigura semana 13\n\n\n\ngeom_tile\n\n\n\n\n\n\n\n\n\n2024-04-01\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 12\n\n\nFigura semana 12\n\n\n\ngeom_bump\n\ngeom_point\n\ngeom_text\n\n\n\n\n\n\n\n\n\n2024-03-25\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 11\n\n\nFigura semana 11\n\n\n\ngeom_jitter\n\ngeom_col\n\ngeom_label\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2024-03-18\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 10\n\n\nFigura semana 10\n\n\n\ngeom_hline\n\ngeom_text\n\ngeom_rect\n\ngeom_smooth\n\n\n\n\n\n\n\n\n\n2024-03-11\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 09\n\n\nFigura semana 09\n\n\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2024-03-04\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 08\n\n\nFigura semana 08\n\n\n\ngeom_waffle\n\n\n\n\n\n\n\n\n\n2024-02-26\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 07\n\n\nFigura semana 07\n\n\n\ngeom_smooth\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2024-02-19\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 06\n\n\nFigura semana 06\n\n\n\ngeom_sf\n\ngeom_segment\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2024-02-12\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 05\n\n\nFigura semana 05\n\n\n\ngeom_from_path\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2024-02-05\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 04\n\n\nFigura semana 04\n\n\n\ngeom_point\n\ngeom_richtext\n\ngeom_segment\n\ngeom_curve\n\ngeom_text\n\n\n\n\n\n\n\n\n\n2024-01-29\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 03\n\n\nFigura semana 03\n\n\n\ngeom_sf\n\ngeom_richtext\n\ngeom_tile\n\ngeom_text\n\n\n\n\n\n\n\n\n\n2024-01-22\n\n\nV√≠ctor Gauto\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 02\n\n\nFigura semana 02\n\n\n\ngeom_segment\n\ngeom_line\n\ngeom_point\n\ngeom_label\n\ngeom_text\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2024-01-15\n\n\nV√≠ctor Gauto\n\n\n\n\n\nNo hay resultados\n\n  \n\n\nAdi√≥s.\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_13.html",
    "href": "tidytuesday/2024/semana_13.html",
    "title": "Semana 13",
    "section": "",
    "text": "Expectativas e historial de la Asociaci√≥n Nacional Deportiva Universitaria, en EE.UU.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(patchwork)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"grey80\"\nc2 &lt;- \"#8C0272\"\nc3 &lt;- \"#9B7424\"\nc4 &lt;- \"#A7F2F9\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# fuente: Victor\nfont_add(\n  family = \"victor\", \n  regular = \"fuente/VictorMono-ExtraLight.ttf\",\n  bold = \"fuente/VictorMono-VariableFont_wght.ttf\",\n  italic = \"fuente/VictorMono-ExtraLightItalic.ttf\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {13}. \",\n  \"NCAA Men's March Madness.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 13)\nteam_results &lt;- tuesdata$`team-results`\npublic_picks &lt;- tuesdata$`public-picks`\n\n# me interesan las expectativas del p√∫blico y el historial de los equipos de \n# la NCAA\n\n# listado de equipos coincidentes en ambos datasets\nequipos_interes &lt;- inner_join(\n  select(team_results, TEAM),\n  select(public_picks, TEAM),\n  by = join_by(TEAM)\n) |&gt; \n  pull()\n\n# etiquetas de las rondas\neje_x_label &lt;- c(\n  \"32&lt;sup&gt;avos&lt;/sup&gt;&lt;br&gt;|&lt;br&gt;|&lt;br&gt;|&lt;br&gt;|&lt;br&gt;|&lt;br&gt;|\", \n  \"16&lt;sup&gt;avos&lt;/sup&gt;&lt;br&gt;|&lt;br&gt;|&lt;br&gt;|&lt;br&gt;|&lt;br&gt;|\", \n  \"8&lt;sup&gt;avos&lt;/sup&gt;&lt;br&gt;|&lt;br&gt;|&lt;br&gt;|&lt;br&gt;|\",\n  \"4&lt;sup&gt;tos&lt;/sup&gt;&lt;br&gt;|&lt;br&gt;|&lt;br&gt;|\", \n  \"Semi&lt;br&gt;|&lt;br&gt;|\",\n  \"&lt;span style='font-size:17px;'&gt;Final&lt;/span&gt;\")\n\n# expectativas, en porcentajes\nd_expectativa &lt;- public_picks |&gt;\n  filter(TEAM %in% equipos_interes) |&gt; \n  select(TEAM, R64, R32, S16, E8, F4, FINALS) |&gt;\n  mutate(\n    across(\n      .cols = -TEAM,\n      .fns = ~ str_remove(.x, \"%\") |&gt; as.numeric()\n    )\n  ) |&gt;\n  pivot_longer(\n    cols = -TEAM,\n    names_to = \"pos\",\n    values_to = \"valor\"\n  ) |&gt;\n  mutate(pos = fct(\n    pos,\n    levels = c(\"R64\", \"R32\", \"S16\", \"E8\", \"F4\", \"FINALS\"))) |&gt;\n  rename(equipo = TEAM) |&gt;\n  mutate(s = sum(valor), .by = equipo) |&gt;\n  mutate(equipo = fct_reorder(equipo, s)) |&gt;\n  mutate(eje_x = as.numeric(pos)) |&gt;\n  mutate(tipo = \"expectativa\") |&gt;\n  select(equipo, valor, eje_x, tipo) |&gt; \n  filter(as.numeric(equipo) &gt;= 29)\n\n# historial, en cantidad de partidos\nd_historia &lt;- team_results |&gt; \n  filter(TEAM %in% equipos_interes) |&gt; \n  select(TEAM, R64, R32, S16, E8, F4, CHAMP) |&gt; \n  pivot_longer(\n    cols = -TEAM,\n    names_to = \"pos\",\n    values_to = \"valor\"\n  ) |&gt; \n  mutate(suma = sum(valor), .by = TEAM) |&gt; \n  mutate(TEAM = fct_reorder(TEAM, suma)) |&gt; \n  select(equipo = TEAM, pos, valor) |&gt; \n  mutate(pos = fct(\n    pos, \n    levels = c(\"R64\", \"R32\", \"S16\", \"E8\", \"F4\", \"CHAMP\"))) |&gt; \n  mutate(s = sum(valor), .by = equipo) |&gt; \n  mutate(eje_x = as.numeric(pos)) |&gt; \n  mutate(tipo = \"historia\") |&gt; \n  select(equipo, valor, eje_x, tipo) |&gt; \n  filter(as.numeric(equipo) &gt;= 29)\n\n# figura ------------------------------------------------------------------\n\n# heatmap de las expectativas\ng_expectativa &lt;- ggplot(d_expectativa, aes(eje_x, equipo, fill = valor)) +\n  geom_tile(color = c1, linewidth = 1) +\n  scale_x_continuous(\n    breaks = 1:6, sec.axis = dup_axis(\n      labels = eje_x_label\n    )) +\n  scico::scale_fill_scico(\n    palette = \"hawaii\",\n    breaks = seq(0, 100, 25),\n    limits = c(0, 100),\n    labels = (x) glue(\"{x}%\")) +\n  coord_equal() +\n  labs(\n    x = NULL, y = NULL, title = \"Expectativa\", \n    fill = \"% de la gente que vot√≥nal equipo en cada ronda\") +\n  guides(fill = guide_colorbar(title.position = \"top\")) +\n  theme_void() +\n  theme(\n    plot.title = element_text(\n      family = \"ubuntu\", color = c3, size = 20, hjust = 0),\n    axis.text.x.top = element_markdown(\n      vjust = 0, hjust = 0, color = c2, family = \"victor\"),\n    axis.text.y = element_text(family = \"ubuntu\", hjust = 1, size = 15),\n    legend.position = c(1, 0),\n    legend.justification = c(1, 1),\n    legend.direction = \"horizontal\",\n    legend.title = element_text(family = \"ubuntu\", margin = margin(t = 10)),\n    legend.key.width = unit(10, \"mm\"),\n    legend.text = element_text(family = \"victor\")\n  )\n\n# heatmap del historial\ng_historia &lt;- ggplot(d_historia, aes(eje_x, equipo, fill = valor)) +\n  geom_tile(color = c1, linewidth = 1) +\n  scale_x_continuous(\n    breaks = 1:6, sec.axis = dup_axis(\n      labels = eje_x_label\n    )) +\n  scico::scale_fill_scico(\n    palette = \"hawaii\",\n    breaks = seq(0, 15, 5)) +\n  coord_equal() +\n  labs(\n    x = NULL, y = NULL, title = \"Historial\",\n    fill = \"# de veces que elnequipo alcanz√≥ cada ronda\") +\n  guides(fill = guide_colorbar(title.position = \"top\")) +\n  theme_void() +\n  theme(\n    plot.title = element_text(\n      family = \"ubuntu\", color = c3, size = 20, hjust = 0),\n    axis.text.x.top = element_markdown(\n      vjust = 0, hjust = 0, color = c2, family = \"victor\"),\n    axis.text.y = element_markdown(\n      family = \"ubuntu\", hjust = 1, margin = margin(l = 25), size = 15),\n    legend.position = c(1, 0),\n    legend.justification = c(1, 1),\n    legend.direction = \"horizontal\",\n    legend.title = element_text(family = \"ubuntu\", margin = margin(t = 10)),\n    legend.key.width = unit(10, \"mm\"),\n    legend.text = element_text(family = \"victor\")\n  )\n\n# combino ambas figuras\ng &lt;- g_expectativa + g_historia +\n  plot_annotation(\n    subtitle = glue(\n      \"Predicciones e historial del torneo de b√©isbol de&lt;br&gt;\",\n      \"la **Asociaci√≥n Nacional Deportiva Universitaria**,&lt;br&gt;\",\n      \"**EE.UU.**,para 30 equipos de los 68 participates.\",\n    ),\n    caption = mi_caption,\n    theme = theme(\n      plot.margin = margin(t = 10, r = 30, l = 30),\n      plot.background = element_rect(\n        fill = c1, color = c4, linewidth = 3),\n      plot.title.position = \"plot\",\n      plot.subtitle = element_markdown(\n        family = \"ubuntu\", size = 17, color = c2, hjust = 0, \n        lineheight = unit(1.1, \"line\")),\n      plot.caption = element_markdown(\n        color = c2, family = \"ubuntu\", size = 11, \n        margin = margin(t = 90, b = 10))\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s13/viz.png\",\n  width = 20,\n  height = 31,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s13/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 13"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_43.html",
    "href": "tidytuesday/2024/semana_43.html",
    "title": "Semana 43",
    "section": "",
    "text": "Posici√≥n Argentina en superficie, acceso a internet, poblaci√≥n y expectativa de vida.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(ggh4x)\nlibrary(showtext)\nlibrary(tidytext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\ncol &lt;- MoMAColors::moma.colors(palette_name = \"Smith\")\n# col &lt;- MoMAColors::moma.colors(palette_name = \"Budnitz\")\nc1 &lt;- \"grey40\"\nc2 &lt;- \"white\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{col[4]};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {43}, \",\n  \"&lt;b&gt;CIA World Factbook&lt;/b&gt;.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{col[4]};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{col[4]};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 43)\ncia &lt;- tuesdata$cia_factbook\n\n# me interesa la posici√≥n de Argentina respecto del resto de los pa√≠ses\n\n# par√°metros de inter√©s y sus traducciones\nparam_c &lt;- c(\"area\", \"life_exp_at_birth\", \"population\", \"internet_ratio\")\nparam_trad &lt;- c(\n  glue(\"&lt;b style='color: {col[1]}'&gt;Superficie (km&lt;sup&gt;2&lt;/sup&gt;)&lt;/b&gt;\"),\n  glue(\"&lt;b style='color: {col[2]}'&gt;Expectativa de vida&lt;/b&gt;\"),\n  glue(\"&lt;b style='color: {col[3]}'&gt;Poblaci√≥n&lt;/b&gt;\"),\n  glue(\"&lt;b style='color: {col[4]}'&gt;Poblaci√≥n que usa internet (%)&lt;/b&gt;\")\n)\nnames(param_trad) &lt;- param_c\n\n# acomodo los datos y obtengo el porcentaje de personas con internet\nd &lt;- cia |&gt; \n  select(country, area, internet_users, life_exp_at_birth, population) |&gt; \n  mutate(\n    internet_ratio = internet_users/population*100\n  ) |&gt; \n  drop_na() |&gt; \n  pivot_longer(\n    cols = -country,\n    names_to = \"param\",\n    values_to = \"valor\"\n  ) |&gt; \n  mutate(\n    arg = if_else(\n      country == \"Argentina\",\n      \"Arg\",\n      param\n    )\n  ) |&gt; \n  filter(param != \"internet_users\") |&gt; \n  mutate(trad = param_trad[param])\n\n# figura ------------------------------------------------------------------\n\n# cantidad de pa√≠ses y grilla de posiciones\nn_pais &lt;- length(unique(d$country))\n\ngrid_label &lt;- tibble(\n  x = 1:n_pais,\n  y = Inf,\n  label = rev(x)\n) |&gt; \n  filter(label == label - (label %% 25) | x == n_pais) |&gt; \n  mutate(label = glue(\"#{label}\"))\n\n# escalas individuales del eje vertical (facetas)\nejes_y &lt;- list(\n  # espectativa de vida\n  scale_y_continuous(\n    breaks = seq(0, 100, 20),\n    limits = c(0, 100),\n    expand = c(0, 0)\n  ),\n  # poblaci√≥n\n  scale_y_log10(\n    breaks = 10^(0:9),\n    limits = c(1, 10^9),\n    labels = format(\n      10^(0:9), scientific = FALSE, big.mark = \".\", decimal.mark = \",\"\n    )\n  ),\n  # internet\n  scale_y_continuous(\n    breaks = seq(0, 100, 20),\n    limits = c(0, 100),\n    expand = c(0, 0)\n  ),\n  # superficie\n  scale_y_log10(\n    breaks = 10^(0:9),\n    labels = format(\n      10^(0:9), scientific = FALSE, big.mark = \".\", decimal.mark = \",\"\n    )\n  )\n)\n\n# bandera e √≠cono\nbandera &lt;- glue(\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/1a/\",\n  \"Flag_of_Argentina.svg/320px-Flag_of_Argentina.svg.png\"\n)\n  \ntriangulo &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf1a09;&lt;/span&gt;\")\n\n# posici√≥n de Argentina en cada par√°metro\nd_arg &lt;- d |&gt; \n  arrange(param, desc(valor)) |&gt; \n  mutate(pos = row_number(), .by = param) |&gt; \n  filter(country == \"Argentina\") |&gt; \n  mutate(\n    label = glue(\n      \"#{pos}&lt;br&gt;&lt;img src='{bandera}' width=30&gt;&lt;/img&gt;&lt;br&gt;{triangulo}\"\n    )\n  )\n\n# par√°metros y estilo de c/u para el subt√≠tulo\np1 &lt;- glue(\"&lt;b style='color: {col[2]};'&gt;expectativa de vida&lt;/b&gt;\")\np2 &lt;- glue(\"&lt;b style='color: {col[3]};'&gt;poblaci√≥n&lt;/b&gt;\")\np3 &lt;- glue(\"&lt;b style='color: {col[4]};'&gt;acceso a internet&lt;/b&gt;\")\np4 &lt;- glue(\"&lt;b style='color: {col[1]};'&gt;superficie&lt;/b&gt;\")\n\nmi_subt√≠tulo &lt;- glue(\n  \"Posici√≥n &lt;b&gt;Argentina&lt;/b&gt; en {p1}, {p2}, {p3}&lt;br&gt;y {p4} a nivel mundial, \",\n  \"considerando 208 paises.\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(reorder_within(country, valor, trad), valor, fill = arg)) +\n  \n  geom_vline(\n    data = grid_label, aes(xintercept = x), color = c1, linewidth = .2\n  ) +\n  geom_col(color = NA, show.legend = FALSE, width = 1) +\n  geom_richtext(\n    data = grid_label, aes(x, y, label = label), inherit.aes = FALSE,\n    family = \"jet\", label.color = NA, fill = col[5], color = c1, size = 3\n  ) +\n  \n  geom_richtext(\n    data = d_arg, aes(label = label), fill = NA, label.color = NA, vjust = .1,\n    size = 5, color = c2, lineheight = .1, family = \"jet\"\n  ) +\n  \n  facet_wrap(vars(trad), ncol = 2, scales = \"free\") +\n  coord_cartesian(clip = \"off\") +\n  facetted_pos_scales(y = ejes_y) +\n  scale_fill_manual(\n    breaks = unique(d$arg),\n    values = as.character(c(col))\n  ) +\n  labs(x = NULL, y = NULL, subtitle = mi_subt√≠tulo, caption = mi_caption) +\n  theme_classic() +\n  theme(\n    plot.margin = margin(r = 20, l = 10),\n    plot.background = element_rect(\n      fill = col[5], color = col[3], linewidth = 3\n    ),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", size = 23, hjust = .5, color = c2,\n      lineheight = unit(1.1, \"line\"), margin = margin(b = 20, t = 10)\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 13, color = col[2],\n      margin = margin(b = 10, t = 15)\n    ),\n    axis.ticks = element_blank(),\n    axis.text = element_text(family = \"jet\", color = c2, size = 11),\n    axis.text.x = element_blank(),\n    axis.line = element_blank(),\n    panel.background = element_rect(fill = col[5]),\n    panel.grid.major.y = element_line(color = c1, linewidth = .2),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.spacing.x = unit(1.5, \"line\"),\n    panel.spacing.y = unit(1.1, \"line\"),\n    panel.border = element_blank(),\n    strip.background = element_blank(),\n    strip.text = element_markdown(\n      family = \"ubuntu\", hjust = 0, size = 20, color = col[4],\n      margin = margin(b = 15)\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s43/viz.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s43/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 43"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_49.html",
    "href": "tidytuesday/2024/semana_49.html",
    "title": "Semana 49",
    "section": "",
    "text": "Velocidad de veh√≠culos, por tama√±o y horario, en Inglaterra.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#582851\"\nc2 &lt;- \"#40606D\"\nc3 &lt;- \"#69A257\"\nc4 &lt;- \"#C4024D\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\n# Bebas Neue\nfont_add(\n  family = \"bebas\",\n  regular = \"fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {49}, \",\n  \"&lt;b&gt;National Highways Traffic Flow&lt;/b&gt;.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 49)\na64 &lt;- tuesdata$A64_traffic\n\n# me interesa las velocidades seg√∫n la hora del d√≠a, por categor√≠a de tama√±o\n# de veh√≠culo\n\nd &lt;- a64 |&gt;\n  janitor::clean_names() |&gt;\n  select(time_period_ending, avg_mph, contains(\"cm\")) |&gt;\n  pivot_longer(\n    cols = ends_with(\"_cm\"),\n    names_to = \"tama√±o\",\n    values_to = \"cantidad\"\n  ) |&gt;\n  filter(cantidad &gt; 0) |&gt;\n  mutate(\n    tama√±o = factor(\n      x = tama√±o,\n      levels = c(\"x0_520_cm\", \"x521_660_cm\", \"x661_1160_cm\", \"x1160_cm\"),\n      labels = c(\"&lt;5,2 m\", \"5,21‚Äî6,6 m\", \"6,61‚Äî11,6 m\", \"&gt;11,6 m\")\n    )\n  ) |&gt;\n  mutate(kmh = avg_mph*1.60934) |&gt;\n  mutate(\n    color = case_match(\n      tama√±o,\n      \"&lt;5,2 m\" ~ c1,\n      \"5,21‚Äî6,6 m\" ~ c2,\n      \"6,61‚Äî11,6 m\" ~ c3,\n      \"&gt;11,6 m\" ~ c4\n    )\n  ) |&gt;\n  mutate(\n    tama√±o_label = glue(\n      \"Tama√±o:&lt;b style='color:{color}; font-family:jet'&gt; {tama√±o}&lt;/b&gt;\"\n    )\n  ) |&gt;\n  mutate(\n    tama√±o_label = fct_reorder(tama√±o_label, as.numeric(tama√±o))\n  )\n\n# figura ------------------------------------------------------------------\n\n# factor de conversi√≥n entre km/h y mph\nconv &lt;- 1.60934\n\n# subt√≠tulo y s√≠mbolo de flechas\nmi_subtitulo &lt;- glue(\n  \"&lt;b style='color:{c4}'&gt;Velocidad&lt;/b&gt;, por \",\n  \"&lt;b style='color:{c4}'&gt;tama√±o&lt;/b&gt; de veh√≠culo, seg√∫n \",\n  \"la &lt;b style='color:{c4}'&gt;hora&lt;/b&gt; en caminos \",\n  \"de **Inglaterra**. Las mayores velocidades ocurren a la madrugada y \",\n  \"generalmente circulan a 45 km/h o 75 km/h.\"\n)\n\nflecha1 &lt;- \"&lt;span style='font-family:jet;'&gt;&#xf0054;&lt;/span&gt;\"\nflecha2 &lt;- \"&lt;span style='font-family:jet;'&gt;&#xf004d;&lt;/span&gt;\"\n\n# figura\ng &lt;- ggplot(d, aes(time_period_ending, kmh, color = tama√±o_label)) +\n  geom_point(alpha = .4, shape = 20, size = 2, show.legend = FALSE) +\n  facet_wrap(vars(tama√±o_label), nrow = 2, scales = \"free\") +\n  scale_x_time(\n    labels = scales::label_time(format = \"%H:%M\"),\n    breaks = scales::breaks_width(\"4 hour\"),\n    expand = expansion(mult = .02, add = 0),\n    sec.axis = sec_axis(transform = ~ .)\n  ) +\n  scale_y_continuous(\n    limits = c(10, 130),\n    breaks = scales::breaks_width(20),\n    expand = c(0, 0),\n    name = glue(\"{flecha1} Velocidad {flecha1}&lt;br&gt;**km/h**\"),\n    sec.axis = sec_axis(\n      transform = ~ ./conv,\n      name = glue(\"{flecha2} Velocidad {flecha2}&lt;br&gt;**mph**\"),\n      breaks = seq(20/conv, 120/conv, length.out = 6),\n      labels = scales::label_number(accuracy = 1)\n    )\n  ) +\n  scale_color_manual(\n    values = c(c1, c2, c3, c4)\n  ) +\n  coord_cartesian(clip = \"off\") +\n  labs(x = NULL, subtitle = mi_subtitulo, caption = mi_caption) +\n  ggthemes::theme_par(base_size = 5) +\n  theme(\n    aspect.ratio = 1,\n    plot.title.position = \"plot\",\n    plot.subtitle = element_textbox_simple(\n      family = \"ubuntu\", size = 20, color = c2, margin = margin(b = 10, t = 10)\n    ),\n    plot.margin = margin(0, 15, 0, 15.8),\n    plot.background = element_rect(\n      fill = \"grey98\", color = c1, linewidth = 3\n    ),\n    plot.caption.position = \"plot\",\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 14, color = c4, margin = margin(t = 45, b = 10)\n    ),\n    panel.grid.major = element_line(\n      linetype = 1, linewidth = .1, color = \"grey40\"\n    ),\n    panel.grid.minor = element_line(linetype = 2, color = \"grey85\"),\n    panel.spacing = unit(25, \"pt\"),\n    axis.ticks = element_blank(),\n    axis.text.x = element_text(\n      family = \"bebas\", size = 18, margin = margin(t = -5)\n    ),\n    axis.text.x.top = element_blank(),\n    axis.text.y.left = element_text(\n      family = \"jet\", size = 12, margin = margin(r = -2), hjust = 1\n    ),\n    axis.text.y.right = element_text(\n      family = \"jet\", size = 12, margin = margin(l = -2), hjust = 0\n    ),\n    axis.title.y = element_markdown(family = \"ubuntu\", size = 17),\n    strip.text.x.top = element_markdown(\n      family = \"ubuntu\", hjust = 0, size = 15, margin = margin(t = 0)\n    ),\n    strip.background = element_blank(),\n    strip.placement = \"outside\"\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s49/viz.png\",\n  width = 30,\n  height = 31,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(\"2024/s49/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 49"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_48.html",
    "href": "tidytuesday/2024/semana_48.html",
    "title": "Semana 48",
    "section": "",
    "text": "Encuentros en las fronteras Norte y Sur de Estados Unidos.\n\nScript\n\n\nC√≥digo\n#\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggbump)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\ncc &lt;- c(\"#451B40\", \"#324D5A\", \"#589445\", \"#B5003C\")\nc1 &lt;- \"grey70\"\nc2 &lt;- \"grey95\"\nc3 &lt;- \"black\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\n# bebas neue\nfont_add(\n  family = \"bebas\",\n  regular = \"fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{cc[1]};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {48}, \",\n  \"&lt;b&gt;U.S. Customs and Border Protection&lt;/b&gt;.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{cc[1]};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{cc[1]};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 48)\ncbp_resp &lt;- tuesdata$cbp_resp\n\n# me interesan los pa√≠ses m√°s frecuentes y su evoluci√≥n anual\n\ntop_paises &lt;- 20\n\n# funci√≥n para generar los datos por frontera N/S\n\nf_frontera &lt;- function(frontera, frontera_label) {\n  cbp_resp |&gt;\n    filter(land_border_region == frontera) |&gt;\n    select(fiscal_year, citizenship) |&gt;\n    count(citizenship, fiscal_year) |&gt;\n    filter(citizenship != \"OTHER\") |&gt;\n    slice_max(order_by = n, by = fiscal_year, n = top_paises) |&gt;\n    arrange(fiscal_year, desc(n)) |&gt;\n    mutate(puesto = row_number(), .by = fiscal_year) |&gt;\n    mutate(lado = frontera_label)\n}\n\n# combino datos frontera N/S\ncbp_n &lt;- f_frontera(\"Northern Land Border\", \"NORTE\")\ncbp_s &lt;- f_frontera(\"Southwest Land Border\", \"SUR\")\n\nd &lt;- rbind(cbp_n, cbp_s) |&gt;\n  mutate(citizenship = if_else(\n    citizenship == \"CHINA, PEOPLES REPUBLIC OF\",\n    \"CHINA\",\n    citizenship\n  ))\n\n# agrego colores a las l√≠neas y nombres de pa√≠ses\npaises &lt;- unique(d$citizenship)\ncolores &lt;- rep(cc, 5)\nnames(colores) &lt;- paises\n\nd &lt;- mutate(d, color = colores[citizenship]) |&gt;\n  mutate(\n    puesto_label = if_else(puesto &lt; 10, glue(\"0{puesto}\"), glue(\"{puesto}\"))\n  )\n\n# etiquetas de puestos, en a√±os extremos\ncbp_ext &lt;- filter(d, fiscal_year == 2020 | fiscal_year == 2024) |&gt;\n  mutate(hjust = if_else(fiscal_year == 2020, 1, 0)) |&gt;\n  mutate(citizenship = str_to_title(citizenship))\n\n# figura ------------------------------------------------------------------\n\n# N/S y subt√≠tulo\nlugares &lt;- tibble(\n  fiscal_year = 2022,\n  puesto = 3,\n  lado = c(\"NORTE\", \"SUR\"),\n  color = c1\n)\n\nmi_subtitulo &lt;- glue(\n  \"Nacionalidades de ciudadanos **expulsados**, **aprehendidos** o\n  **inadmisibles** en la frontera Norte/Sur de\n  &lt;b style='color:{cc[4]}'&gt;Estados Unidos&lt;/b&gt;\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(fiscal_year, puesto, color = color, fill = color)) +\n  # N & S\n  geom_text(data = lugares, aes(label = lado), size = 50, family = \"bebas\") +\n  # bump & puntos\n  geom_bump(aes(group = citizenship), linewidth = 1.3, show.legend = FALSE) +\n  geom_point(\n    shape = 21, fill = c2, size = 2, stroke = 2, show.legend = FALSE\n  ) +\n  # izquierda\n  geom_richtext(\n    data = filter(cbp_ext, fiscal_year == 2020),\n    aes(label = citizenship, hjust = hjust), fill = NA,\n    size = 7, show.legend = FALSE, family = \"ubuntu\", label.color = NA,\n    label.padding = unit(c(0, 15, 0, 0), \"pt\")\n  ) +\n  # derecha\n  geom_richtext(\n    data = filter(cbp_ext, fiscal_year == 2024),\n    aes(label = citizenship, hjust = hjust), fill = NA,\n    size = 7, show.legend = FALSE, family = \"ubuntu\", label.color = NA,\n    label.padding = unit(c(0, 0, 0, 15), \"pt\")\n  ) +\n  # puestos\n  geom_richtext(\n    data = cbp_ext, aes(label = puesto_label), family = \"bebas\", size = 6,\n    label.color = NA, color = c1, fill = c2, label.r = unit(5, \"pt\"),\n    label.padding = unit(c(2, 2, 2, 2), \"pt\")\n  ) +\n  facet_wrap(vars(lado), ncol = 2, scales = \"free\") +\n  scale_y_reverse(\n    expand = c(0, 0)\n  ) +\n  scale_color_identity() +\n  scale_fill_identity() +\n  coord_cartesian(clip = \"off\") +\n  labs(x = NULL, y = NULL, subtitle = mi_subtitulo, caption = mi_caption) +\n  theme_minimal(base_size = 12) +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(r = 110, l = 110, t = 30, b = 18),\n    plot.background = element_rect(fill = c2, color = cc[3], linewidth = 3),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", color = c3, size = 25, margin = margin(b = 25),\n      hjust = .5\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = cc[4], size = 15,\n      margin = margin(t = 20, r = -70)\n    ),\n    panel.grid = element_blank(),\n    panel.spacing.x = unit(250, \"pt\"),\n    axis.text.x = element_text(\n      family = \"jet\", size = 22, color = c3, margin = margin(t = 15)\n    ),\n    axis.text.y = element_blank(),\n    strip.text = element_blank()\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s48/viz.png\",\n  width = 50,\n  height = 23,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s48/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 48"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_24.html",
    "href": "tidytuesday/2024/semana_24.html",
    "title": "Semana 24",
    "section": "",
    "text": "El Campus Pride Index clasifica los campus universitarios de EE.UU.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#4FB6CA\"\nc2 &lt;- \"#178F92\"\nc3 &lt;- \"#175F5D\"\nc4 &lt;- \"#054544\"\nc5 &lt;- \"#4E3810\"\nc6 &lt;- \"grey30\"\nc7 &lt;- \"#EDE2CC\"\narcoiris &lt;- c(\"#E40303\", \"#FF8C00\", \"#FFED00\", \"#008026\", \"#24408E\", \"#732982\")\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\n# bebas neue\nfont_add(\n  family = \"bebas\",\n  regular = \"fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {24}, \",\n  \"Campus Pride Index.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 24)\n\npride_index &lt;- tuesdata$pride_index\npride_index_tags &lt;- tuesdata$pride_index_tags\n\n# me interesa analizar el √≠ndice agrupado por estado, y la cantidad de\n#  estudiantes\n\nd &lt;- inner_join(\n  pride_index_tags,\n  pride_index,\n  by = join_by(campus_name, campus_location)\n) |&gt; \n  mutate(\n    estado = str_sub(campus_location, start = -2, end = -1), .before = 2\n  ) |&gt; \n  select(rating, estado, students) |&gt; \n  reframe(\n    r = median(rating),\n    s = sum(students),\n    .by = estado\n  ) |&gt; \n  mutate(estado = fct_reorder(estado, r)) |&gt; \n  arrange(estado) |&gt; \n  mutate(\n    label_x = if_else(\n      row_number() %% 2 == 0,\n      r - .17,\n      r + .17\n    )\n  )\n\n\n# figura ------------------------------------------------------------------\n\n# estrellas en el eje horizontal\nestrella &lt;- glue(\n  \"&lt;span style='font-family:jet;'&gt;&#xf005;&lt;/span&gt;\")\n\neje_x &lt;- seq(1, 5, 1)\neje_x_nombres &lt;- c(\n  estrella,\n  glue(\"{str_flatten(rep(estrella, 2))}\"),\n  glue(\"{str_flatten(rep(estrella, 3))}\"),\n  glue(\"{str_flatten(rep(estrella, 4))}\"),\n  glue(\"{str_flatten(rep(estrella, 5))}\")\n)\n\nnames(eje_x) &lt;- eje_x_nombres\n\n# subt√≠tulo\nmi_subtitulo &lt;- glue(\n  \"&lt;br&gt;&lt;br&gt;El &lt;b&gt;Campus Pride Index&lt;/b&gt;, de rango 1 a 5,&lt;br&gt;\",\n  \"permite puntuar la tolerancia a la comunidad&lt;br&gt;\",\n  \"&lt;b style='color:{c1}'&gt;LGBTQ&lt;/b&gt; en √°mbitos universitarios de EE.UU.&lt;br&gt;&lt;br&gt;\",\n  \"Tomando {nrow(pride_index)} instituciones, cada c√≠rculo&lt;br&gt;\",\n  \"representa la mediana del √≠ndice en las&lt;br&gt;\",\n  \"universidades de cada Estado, siendo el&lt;br&gt;\",\n  \"tama√±o proporcional al n√∫mero de&lt;br&gt;\",\n  \"estudiantes.\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(r, estado)) +\n  geom_point(alpha = .7, aes(size = s, color = r)) +\n  geom_text(\n    aes(label = estado, x = label_x), family = \"jet\", color = c6, \n    fontface = \"bold\", size = 6, show.legend = FALSE) +\n  annotate(\n    geom = \"richtext\", x = I(.01), y = I(nrow(d)), hjust = 0, vjust = 1, \n    family = \"ubuntu\", label = mi_subtitulo, size = 8, color = c6, fill = c7,\n    label.color = NA\n  ) +\n  scale_x_continuous(\n    breaks = eje_x,\n    limits = c(1, 5.2),\n    labels = names(eje_x)\n  ) +\n  scale_color_gradientn(colors = arcoiris) +\n  scale_size_binned(\n    breaks = c(1e5, 2e5),\n    labels = c(\"100.000\", \"200.000\"),\n    range = c(1, 20)\n  ) +\n  coord_cartesian(clip = \"off\", expand = FALSE) +\n  labs(\n    x = NULL, y = NULL, caption = mi_caption,\n    size = \"Cantidad total&lt;br&gt;de estudiantes&lt;br&gt;universitarios\"\n    ) +\n  guides(\n    color = guide_none(),\n    size = guide_bins(\n      override.aes = list(fill = NA, color = c6),\n      position = \"inside\")\n  ) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1.3,\n    plot.margin = margin(t = 21.3, b = 10, l = 37, r = 37),\n    plot.background = element_rect(fill = c7, color = c2, linewidth = 3),\n    plot.caption = element_markdown(\n      color = c5, family = \"ubuntu\", size = 16, margin = margin(t = 13)),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    panel.grid.major.x = element_line(\n      linewidth = .2, linetype = \"66\", color = c6),\n    panel.grid.minor.x = element_line(\n      linewidth = .1, linetype = \"66\", color = c6),\n    axis.text.x = element_markdown(\n      size = 40, color = c5, margin = margin(t = 14)),\n    axis.text.y = element_blank(),\n    legend.justification.inside = c(.01, .4),\n    legend.text = element_text(family = \"jet\", size = 20, color = c6),\n    legend.background = element_rect(fill = c7, color = NA),\n    legend.title = element_markdown(family = \"ubuntu\", size = 20, color = c6)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s24/viz.png\",\n  width = 30,\n  height = 40,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s24/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 24"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_03.html",
    "href": "tidytuesday/2024/semana_03.html",
    "title": "Semana 03",
    "section": "",
    "text": "Lugares de votaci√≥n en EE.UU., para cuatro elecciones.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(sf)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"white\"\nc2 &lt;- \"#3F6C81\"\nc3 &lt;- \"#EBEB99\"\nc4 &lt;- \"grey20\"\nc5 &lt;- \"grey10\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# horas, d√≠as\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 3. \",\n  \"The Center for Public Integrity.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2024/2024-01-09/readme.md\")\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, week = 3)\n\ndatos &lt;- tuesdata$polling_places\n\n# me interesa la distribuci√≥n de lugares de votaci√≥n por condado, para las \n# elecciones de 2014 a 2020\n\ncount(datos, election_date)\n\n# remuevo las fechas con menor cantidad de datos y selecciono los √∫ltimos 4\n# a√±os\nfechas_interes &lt;- ymd(c(\"2014-11-04\", \"2016-11-08\", \"2018-11-06\", \"2020-11-03\"))\n\n# cantidad de sitios por condado, para las cuatro fechas\nd_tbl &lt;- datos |&gt; \n  filter(election_date %in% fechas_interes) |&gt;\n  count(election_date, state, county_name) |&gt; \n  drop_na() |&gt; \n  mutate(county_name = str_to_lower(county_name)) |&gt; \n  rename(estado_abr = state, condado = county_name)\n\n# nombre de los estados y sus abreviaturas, tibble\nestados_tbl &lt;- tibble(estado_abr = state.abb, estado = state.name) |&gt; \n  mutate(estado = str_to_lower(estado))\n\n# pol√≠gonos de los condados y a qu√© estado corresponden\ncondados_sf &lt;- st_as_sf(maps::map(\"county\", fill = TRUE, plot = FALSE)) |&gt; \n  separate_wider_delim(\n    cols = ID, delim = \",\", names = c(\"estado\", \"condado\")) |&gt; \n  rename(geometry = geom) |&gt; \n  st_as_sf() |&gt; \n  st_transform(crs = 2163)\n\n# combino los condados, estados y cantidad de sitios\nd_sf &lt;- inner_join(d_tbl, estados_tbl, by = join_by(estado_abr)) |&gt; \n  right_join(condados_sf, by = join_by(estado, condado)) |&gt; \n  rename(fecha = election_date) |&gt; \n  mutate(label_fecha = glue(\n    \"{day(fecha)} de {format(fecha, '%B')} de {year(fecha)}\")) |&gt; \n  st_as_sf() |&gt; \n  drop_na() |&gt; \n  mutate(label_fecha = fct_reorder(label_fecha, fecha))\n\n# figura ------------------------------------------------------------------\n\n# leyenda de los condados sin datos\nstrip_label &lt;- tibble(\n  x = st_bbox(condados_sf)[\"xmax\"]*.5,\n  y = st_bbox(condados_sf)[\"ymin\"]*1.1,\n  label = \"Sin datos\",\n  label_fecha = fct(\"3 de noviembre de 2020\"))\n\n# subt√≠tulo\nmi_subtitle &lt;- glue(\n  \"Cantidad de sitios de votaci√≥n por&lt;br&gt;\",\n  \"condado en **EE.UU.**, para cuatro&lt;br&gt;\",\n  \"elecciones, entre 2014 y 2020.\")\n\nsub_label &lt;- tibble(\n  x = st_bbox(condados_sf)[\"xmax\"]*.85,\n  y = st_bbox(condados_sf)[\"ymin\"],\n  label = mi_subtitle,\n  label_fecha = fct(\"4 de noviembre de 2014\"))\n\n# figura\ng &lt;- ggplot() +\n  # condados de EEUU\n  geom_sf(data = condados_sf, fill = c4, linewidth = .05, color = c1) +\n  # lugares de votaci√≥n\n  geom_sf(data = d_sf, aes(fill = n), linewidth = .03, color = c1) +\n  # subt√≠tulo\n  geom_richtext(\n    data = sub_label, aes(x, y, label = label), color = c3, size = 4, \n    hjust = 0, vjust = .5, family = \"ubuntu\", fill = c4, label.color = NA,\n    label.r = unit(0, \"mm\")) +\n  # sin datos\n  geom_tile(\n    data = strip_label, aes(x, y, width = 150000, height = 150000), color = c1,\n    fill = c4) +\n  geom_text(\n    data = strip_label, aes(x, y, label = label), color = c1, size = 4, \n    hjust = 0, family = \"ubuntu\", nudge_x = 85000) +\n  # faceta\n  facet_wrap(vars(label_fecha), nrow = 2) +\n  scico::scale_fill_scico(\n    palette = \"nuuk\", trans = \"log10\",\n    breaks = 10^seq(0, 4, 1),\n    labels = scales::label_number(big.mark = \".\", decimal.mark = \",\")) +\n  coord_sf(expand = FALSE, clip = \"off\") +\n  labs(caption = mi_caption, fill = \"# de lugaresnde votaci√≥n\") +\n  guides(fill = guide_colorbar(ticks.colour = c5)) +\n  theme_void() +\n  theme(\n    plot.margin = margin(12.4, 10, 12.4, 10),\n    plot.background = element_rect(fill = c5, color = c3, linewidth = 3),\n    plot.caption = element_markdown(color = c1, family = \"ubuntu\"),\n    panel.background = element_blank(),\n    panel.grid = element_blank(),\n    legend.position = \"bottom\",\n    legend.direction = \"horizontal\",\n    legend.key.height = unit(.5, \"cm\"),\n    legend.key.width = unit(2, \"cm\"),\n    legend.title = element_text(\n      color = c1, family = \"ubuntu\", margin = margin(r = 10, b = 10)),\n    legend.text = element_text(color = c1, family = \"victor\", face = \"bold\"),\n    strip.text = element_text(\n      color = c1, family = \"ubuntu\", size = 13, face = \"bold\"))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s03/viz.png\",\n  width = 30,\n  height = 24,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s03/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 03"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_50.html",
    "href": "tidytuesday/2024/semana_50.html",
    "title": "Semana 50",
    "section": "",
    "text": "Popularidad en fragancias de perfumes.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\ncc &lt;- PrettyCols::prettycols(palette = \"Dark\")\nc1 &lt;- \"grey20\"\nc2 &lt;- \"black\"\nc3 &lt;- \"grey95\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\n# Bebas Neue\nfont_add(\n  family = \"bebas\",\n  regular = \"fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{cc[2]};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {50}, \",\n  \"&lt;b&gt;Parfumo&lt;/b&gt;.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{cc[2]};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{cc[2]};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 50)\nparfumo &lt;- tuesdata$parfumo_data_clean\n\n# me interesan las fragancias principales y la cantidad de veces que se us√≥ \n# desde el 1900\n\n# las 9 fragancias principales\ntop_accords &lt;- parfumo |&gt; \n  select(Main_Accords) |&gt; \n  drop_na() |&gt;\n  separate_longer_delim(\n    cols = Main_Accords,\n    delim = \", \"\n  ) |&gt; \n  count(Main_Accords, sort = TRUE) |&gt; \n  slice_max(order_by = n, n = 9) |&gt; \n  pull(Main_Accords)\n\n# obtengo la cantidad de fragancias por a√±o\nd &lt;- parfumo |&gt; \n  select(Release_Year, Main_Accords) |&gt; \n  drop_na() |&gt;\n  separate_longer_delim(\n    cols = Main_Accords,\n    delim = \", \"\n  ) |&gt; \n  filter(Main_Accords %in% top_accords) |&gt; \n  count(Release_Year, Main_Accords) |&gt; \n  filter(between(Release_Year, 1900, 2023)) |&gt; \n  mutate(Main_Accords = fct_reorder(Main_Accords, n, max)) |&gt; \n  mutate(Main_Accords = fct_rev(Main_Accords)) |&gt; \n  filter(n &gt;= 5)\n\n# figura ------------------------------------------------------------------\n\n# datos para el fondo de cada panel\nrect_tbl &lt;- tibble(\n  xmin = 1900,\n  xmax = 2025,\n  ymin = 0,\n  ymax = 1000,\n  Main_Accords = unique(d$Main_Accords)\n)\n\n# etiquetas de las fragancias (strip)\nburbujas &lt;- \"&lt;span style='font-family:jet;'&gt;&#xf05e3;&lt;/span&gt;\"\nesencias &lt;- sort(unique(d$Main_Accords))\nesencias_label &lt;- glue(\n  \"&lt;b style='color:{c(cc, cc[1:4])}'&gt;{burbujas} {esencias} {burbujas}&lt;/b&gt;\"\n)\nesencias_label &lt;- set_names(esencias_label, esencias)\n\n# eje horizontal\neje_x &lt;- c(seq(1900, 2000, 25), max(d$Release_Year))\n\n# logo de Parfumo\nlogo &lt;- \"https://images.parfumo.de/logos/logo.png\"\nlogo_label &lt;- glue(\"&lt;img src='{logo}' width=120 /&gt;\")\nlogo_tbl &lt;- tibble(\n  x = 1900,\n  y = -375,\n  label = logo_label,\n  Main_Accords = factor(\"Citrus\")\n)\n\n# subt√≠tulo\nmi_subtitulo &lt;- glue(\n  \"Las 9 &lt;b&gt;fragancias&lt;/b&gt; m√°s populares en perfumes muestran un&lt;br&gt;\",\n  \"crecimiento exponencial desde el inicio del S. XX.\"\n)\n\n# figura\ng &lt;- ggplot(d, aes(Release_Year, n, color = Main_Accords, fill = Main_Accords)) +\n  geom_rect(\n    data = rect_tbl, inherit.aes = FALSE, show.legend = FALSE,\n    aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = Main_Accords)\n  ) +\n  geom_col(\n    color = NA,show.legend = FALSE, alpha = 1, width = 1\n  ) +\n  geom_richtext(\n    data = logo_tbl, aes(x, y, label = logo_label), hjust = 0,\n    vjust = 0, fill = NA, label.color = NA, show.legend = FALSE\n  ) +\n  facet_wrap(\n    vars(Main_Accords), nrow = 3, scales = \"free\",\n    labeller = as_labeller(esencias_label)\n  ) +\n  scale_x_continuous(\n    breaks = eje_x,\n    limits = c(1900, 2025),\n    labels = eje_x,\n    expand = c(0, 0)\n  ) +\n  scale_y_continuous(\n    expand = c(0, 0)\n  ) +\n  scale_fill_manual(\n    values = alpha(c(cc, cc), .3)\n  ) +\n  scale_color_manual(\n    values = c(cc, cc)\n  ) +\n  coord_cartesian(clip = \"off\", xlim = c(1900, 2025), ylim = c(0, 1000)) +\n  labs(x = NULL, subtitle = mi_subtitulo, caption = mi_caption) +\n  theme_void(base_size = 15) +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(r = 25, l = 13, b = 5, t = 5),\n    plot.background = element_rect(fill = c3, color = cc[3], linewidth = 3),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", color = c2, size = 27, margin = margin(t = 15, b = 15),\n      hjust = .5, lineheight = 1\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = cc[3], margin = margin(t = 25, b = 5),\n      size = 14\n    ),\n    panel.spacing = unit(25, \"pt\"),\n    panel.grid.major = element_line(\n      color = c1, linewidth = .1, linetype = 2\n    ),\n    axis.text.x = element_text(\n      family = \"bebas\", color = c2, margin = margin(t = 12), size = 20\n    ),\n    axis.text.y = element_text(\n      family = \"jet\", color = c2, margin = margin(r = 5), hjust = 1\n    ),\n    strip.background = element_blank(),\n    strip.text = element_markdown(\n      family = \"ubuntu\", hjust = 0, margin = margin(b = 0), size = 22\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s50/viz.png\",\n  width = 30,\n  height = 34.5,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(paste0(getwd(), \"/2024/s50/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 50"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_05.html",
    "href": "tidytuesday/2024/semana_05.html",
    "title": "Semana 05",
    "section": "",
    "text": "Marmotas que predicen el clima.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggpath)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#EAF3FF\"\nc2 &lt;- \"#123E7E\"\nc3 &lt;- \"#5773C0\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# fuente: Victor\nfont_add(\n  family = \"victor\", \n  regular = \"fuente/VictorMono-ExtraLight.ttf\",\n  bold = \"fuente/VictorMono-VariableFont_wght.ttf\",\n  italic = \"fuente/VictorMono-ExtraLightItalic.ttf\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {5}. \",\n  \"Groundhog Day Predictions, groundhog-day.com.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 5)\n\ngroundhogs &lt;- tuesdata$groundhogs\n\n# me interesan las im√°genes de las marmotas √∫nicamente\nd &lt;- groundhogs |&gt; \n  filter(is_groundhog) |&gt; \n  select(image, name) |&gt; \n  arrange(name) |&gt; \n  mutate(name = str_remove(name, \" the Groundhog\")) |&gt; \n  mutate(nro = row_number()) |&gt; \n  mutate(label = glue(\n    \"&lt;b style='font-family:victor; font-size:8pt; color: {c3}'&gt;{nro}.&lt;/b&gt;\",\n    \"{name}\")) |&gt; \n  mutate(label = fct_inorder(label))\n\n# figura ------------------------------------------------------------------\n\n# etiquetas de los paneles (facet_wrap)\nnombres &lt;- as.character(d$label)\nnames(nombres) &lt;- d$nro\n\n# t√≠tulo y subt√≠tulo\nmi_title &lt;- \"Marmotas pronosticadoras\"\n\nmi_subtitle &lt;- glue(\n  \"El **D√≠a de la Marmota** consiste en dos creencias populares,\",\n  \"una sobre el **clima** (soleado o nublado) y otra sobre **animales que\",\n  \"hibernan** (si ya est√°n despiertos o no). La tradici√≥n moderna en esencia\",\n  \"tiene sus ra√≠ces en el clima: si es un d√≠a soleado, la **marmota** ve su\",\n  \"sombra, lo que significa un *invierno* m√°s largo. Si est√° nublado, se\",\n  \"adelanta la *primavera*.\",\n  .sep = \" \") |&gt; \n  str_wrap(width = 65) |&gt; \n  str_replace_all(fixed(\"n\"), \"&lt;br&gt;\")\n\nmi_subtitle_tbl &lt;- tibble(\n  nro = 33) |&gt;\n  mutate(subtitulo = mi_subtitle)\n\n# figura\ng &lt;- ggplot(d, aes(0, 0, path = image)) +\n  geom_from_path(width = 1) +\n  geom_richtext(\n    data = mi_subtitle_tbl, aes(0, 0, label = subtitulo), hjust = 0, color = c2,\n    family= \"ubuntu\", size = 4.5, inherit.aes = FALSE, fill = NA, \n    label.color = NA) +\n  facet_wrap(vars(nro), ncol = 5, labeller = as_labeller(nombres)) +\n  coord_cartesian(expand = FALSE, clip = \"off\") +\n  labs(title = mi_title, caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.background = element_rect(fill = c1, color = c3, linewidth = 3),\n    plot.margin = margin(r = 20, l = 20, t = 10, b = 10),\n    plot.title = element_text(\n      family = \"miltonian\", size = 61, color = c2, hjust = .5,\n      margin = margin(b = 15)),\n    plot.caption = element_markdown(family = \"ubuntu\", color = c3, size = 13),\n    panel.spacing.x = unit(1, \"line\"),\n    panel.spacing.y = unit(1.1, \"line\"),\n    strip.text = element_markdown(\n      color = c2, family = \"ubuntu\", size = 12, face = \"bold\",\n      hjust = 0)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s05/viz.png\",\n  width = 30,\n  height = 47.51,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s05/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 05"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_15.html",
    "href": "tidytuesday/2024/semana_15.html",
    "title": "Semana 15",
    "section": "",
    "text": "Ciudades alcanzadas total o parcialmente por los eclipses solares de 2023 y 2024, en EE.UU.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(sf)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#4B3232\"\nc2 &lt;- \"white\"\nc3 &lt;- \"gold\"\nc4 &lt;- \"black\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# fuente: Victor\nfont_add(\n  family = \"victor\", \n  regular = \"fuente/VictorMono-ExtraLight.ttf\",\n  bold = \"fuente/VictorMono-VariableFont_wght.ttf\",\n  italic = \"fuente/VictorMono-ExtraLightItalic.ttf\")\n\n# √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {15}. \",\n  \"Scientific Visualization Studio, &lt;b&gt;NASA&lt;/b&gt;.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 15)\n\n# me interesa distinguir las ciudades con eclipse total de las ciudades con \n# eclipse parcial, y agregar los horarios en rangos de 10min\necl_2023 &lt;- tuesdata$eclipse_annular_2023\npar_2023 &lt;- tuesdata$eclipse_partial_2023\n\necl_2024 &lt;- tuesdata$eclipse_total_2024\npar_2024 &lt;- tuesdata$eclipse_partial_2024\n\n# EE.UU.\n# quito estos estados\nno_estados &lt;- c(\n  \"Alaska\", \"Hawaii\", \"Commonwealth of the Northern Mariana Islands\", \"Guam\", \n  \"Puerto Rico\", \"United States Virgin Islands\", \"American Samoa\")\n\n# combino los estados y cambio de proyecci√≥n\nusa &lt;- rgeoboundaries::gb_adm1(country = \"USA\") |&gt; \n  filter(!shapeName %in% no_estados) |&gt; \n  st_union() |&gt; \n  st_transform(crs = 5070)\n\n# funci√≥n que convierte tibble en sf y calcula el tiempo (hora:minuto)\nf_sf &lt;- function(df, a√±o, paleta = \"tokyo\") {\n  d &lt;- df |&gt; \n    mutate(minuto = minute(eclipse_3), hora = hour(eclipse_3)) |&gt; \n    mutate(minuto = minuto - minuto %% 10) |&gt;\n    select(lat, lon, hora, minuto) |&gt; \n    mutate(hora_minuto = hm(glue(\"{hora}:{minuto}\"))) |&gt; \n    mutate(hm_fct = glue(\"{hora}:{minuto}\")) |&gt; \n    mutate(hm_fct = if_else(hm_fct == \"19:0\", \"19:00\", hm_fct)) |&gt; \n    mutate(hm_fct = fct_reorder(hm_fct, hora_minuto)) |&gt; \n    st_as_sf(coords = c(\"lon\", \"lat\")) |&gt; \n    st_set_crs(value = 4326) |&gt; \n    st_transform(crs = 5070) |&gt; \n    mutate(year = a√±o)\n  \n  p &lt;- scico::scico(n = length(unique(d$hm_fct)), palette = paleta)\n  \n  d |&gt; \n    mutate(color = p[hm_fct])\n}\n\n# funci√≥n que obtiene el centro de cada regi√≥n hora:minuto\nf_centro &lt;- function(df, a√±o) {\n  df |&gt; \n    select(hm_fct) |&gt; \n    nest(.by = hm_fct) |&gt; \n    mutate(uni = map(.x = data, ~ st_union(.x))) |&gt; \n    mutate(centro = map(.x = uni, ~ st_centroid(.x))) |&gt; \n    unnest(centro) |&gt; \n    select(hm_fct, centro) |&gt; \n    st_as_sf() |&gt; \n    mutate(year = a√±o) |&gt; \n    mutate(coord = map(.x = centro, st_coordinates)) |&gt; \n    mutate(coord = map(.x = coord, as_tibble)) |&gt; \n    unnest(coord) |&gt; \n    st_drop_geometry() |&gt; \n    mutate(\n      X = if_else(year == 2023, X + 1.6e5, X - 1.6e5),\n      Y = if_else(year == 2023, Y + 1.1e5, Y + 1.2e5)) |&gt; \n    mutate(angle = if_else(year == 2023, -45, 43)) |&gt; \n    st_as_sf(coords = c(\"X\", \"Y\")) |&gt; \n    st_set_crs(value = 5070)\n}\n\n# funci√≥n para convertir tibble a sf, para otras ciudades\nf_parcial &lt;- function(df, a√±o) {\n  df |&gt; \n    st_as_sf(coords = c(\"lon\", \"lat\")) |&gt; \n    st_set_crs(value = 4326) |&gt; \n    st_transform(crs = 5070) |&gt; \n    mutate(year = a√±o) |&gt; \n    st_crop(usa) |&gt; \n    select(year)\n}\n\n# ciudades con eclipse total\nd_2023 &lt;- f_sf(ecl_2023, 2023, paleta = \"hawaii\")\nd_2024 &lt;- f_sf(ecl_2024, 2024, paleta = \"hawaii\")\n\nd &lt;- rbind(d_2023, d_2024)\n\n# horarios ubicados en el centro de las regiones\nd_centro_2023 &lt;- f_centro(d_2023, 2023)\nd_centro_2024 &lt;- f_centro(d_2024, 2024)\n\nd_centro &lt;- rbind(d_centro_2023, d_centro_2024) |&gt; \n  mutate(coord = map(.x = geometry, st_coordinates)) |&gt; \n  mutate(coord = map(.x = coord, as_tibble)) |&gt; \n  unnest(coord) |&gt; \n  st_drop_geometry()\n\n# ciudades con eclipse parcial\nd_parcial_2023 &lt;- f_parcial(par_2023, 2023)\nd_parcial_2024 &lt;- f_parcial(par_2024, 2024)\n\nd_parcial &lt;- rbind(d_parcial_2023, d_parcial_2024)\n\n# figura ------------------------------------------------------------------\n\n# subt√≠tulo\nmi_subtitle &lt;- glue(\n  \"Este a√±o y el a√±o pasado se vieron eclipses solares en regiones del \",\n  \"&lt;b&gt;Hemisferio Norte&lt;/b&gt;.&lt;br&gt;\",\n  \"Se muestran ciudades de EE.UU. con \",\n  \"&lt;b style='color:{c2}'&gt;eclipses parciales&lt;/b&gt; y los horarios de inicio del&lt;br&gt;\",\n  \"evento en donde el eclipse fue total.\"\n)\n\n# a√±os de los eclipses\nflecha_icon &lt;- \"&lt;span style='font-family:jet;font-size:20pt;'&gt;&#xf061;&lt;/span&gt;\"\n\nlabel_a√±o &lt;- c(\n  glue(\n    \"{flecha_icon} 14 de octubre de 2023, eclipse \",\n    \"&lt;b style='color:gold'&gt;solar&lt;/b&gt; anular\"), \n  glue(\n    \"{flecha_icon} 8 de abril de 2024, eclipse \",\n    \"&lt;b style='color:gold'&gt;solar&lt;/b&gt; total\"))\nnames(label_a√±o) &lt;- c(2023, 2024)\n\n# figura\ng &lt;- ggplot() +\n  # USA\n  geom_sf(data = usa, fill = NA, color = c2, linewidth = .1) +\n  # otras ciudades\n  geom_sf(data = d_parcial, color = c2, size = .25, alpha = .25) +\n  # eclipse\n  geom_sf(\n    data = d, aes(color = color), size = 1, alpha = .7, show.legend = FALSE) +\n  # horas:minutos\n  geom_richtext(\n    data = d_centro, aes(X, Y, label = hm_fct, angle = angle), color = c3, \n    size = 5, hjust = .5, family = \"jet\", fill = alpha(c4, .6), \n    label.r = unit(0, \"mm\"), label.color = NA, \n    label.padding = unit(c(.1, .1, .1, .1), \"lines\")) +\n  facet_wrap(vars(year), ncol = 1, labeller = as_labeller(label_a√±o)) +\n  # escalas\n  scale_color_identity() +\n  labs(subtitle = mi_subtitle, caption = mi_caption) +\n  guides(\n    color = guide_legend(override.aes = list(alpha = 1, size = 5, shape = 15))\n  ) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", color = c3, size = 20, \n      margin = margin(b = 20, t = 10, l = 10), lineheight = unit(1.1, \"line\")),\n    plot.margin = margin(t = 11, r = 6.4, b = 11, l = 6.4),\n    plot.caption = element_markdown(\n      color = c2, family = \"ubuntu\", size = 14, lineheight = unit(1.1, \"line\"),\n      margin = margin(b = 10, r = 10)),\n    strip.text = element_markdown(\n      family = \"ubuntu\", color = c2, size = 20, hjust = .05)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s15/viz.png\",\n  width = 30,\n  height = 44,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s15/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 15"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_29.html",
    "href": "tidytuesday/2024/semana_29.html",
    "title": "Semana 29",
    "section": "",
    "text": "Presencia en las tribunas de los partidos de F√∫tbol Femenino Ingl√©s, indicando el equipo m√°s popular por a√±o.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#0D2D4C\"\nc2 &lt;- \"#D0C8C1\"\nc3 &lt;- \"#F6F2EE\"\nc4 &lt;- \"#FD6E89\"\nc5 &lt;- \"#55092A\"\nc6 &lt;- \"black\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\n# bebas neue\nfont_add(\n  family = \"bebas\", \n  regular = \"fuente/BebasNeue-Regular.ttf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c4};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {29}, \",\n  \"&lt;b&gt;The English Women's Football Database&lt;/b&gt;.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c4};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c4};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 29)\newf_matches &lt;- tuesdata$ewf_matches\n\n# me interesa la popularidad anual de la asistencia a los estadios, y marcar\n# el equipo m√°s popular anual\n\nd &lt;- ewf_matches |&gt; \n  mutate(a√±o = year(date)) |&gt; \n  select(a√±o, attendance) |&gt; \n  drop_na()\n\n# medianas anuales\nd_m &lt;- d |&gt; \n  reframe(\n    m = median(attendance),\n    .by = a√±o\n  )\n\n# equipo m√°s convocante por a√±o\ntops &lt;- ewf_matches |&gt; \n  mutate(a√±o = year(date)) |&gt; \n  slice_max(order_by = attendance, by = a√±o, n = 1) |&gt; \n  select(a√±o, home_team_name, attendance)\n\n# combino datos\nd2 &lt;- full_join(d, tops, by = join_by(a√±o, attendance)) |&gt; \n  mutate(home_team_name = if_else(\n    is.na(home_team_name),\n    \"Otros\",\n    home_team_name\n  )\n) |&gt; \n  mutate(home_team_name = fct_reorder(home_team_name, attendance)) |&gt; \n  mutate(home_team_name = fct_rev(home_team_name))\n\n# figura ------------------------------------------------------------------\n\n# paleta de colores\npal &lt;- c(MoMAColors::moma.colors(palette_name = \"Klein\", n = 7), c2)\n\n# cantidad de p√∫blico en todo 2023\nattendance_2023 &lt;- ewf_matches |&gt; \n  filter(year(date) == 2023) |&gt; \n  reframe(\n    s = sum(attendance, na.rm = TRUE)\n  ) |&gt; \n  pull() |&gt; \n  format(big.mark = \".\", decimal.mark = \",\")\n\n# subt√≠tulo\nmi_subtitle &lt;- glue(\n  \"El &lt;b style='color: {c5}'&gt;F√∫tbol Ingl√©s Femenino&lt;/b&gt; crece en\",\n  \"popularidad. En 2023,\",\n  \"en todos los partidos reunieron &lt;b style='color:{c4}'&gt;{attendance_2023}&lt;/b&gt;\",\n  \"personas en las tribunas. Se muestran los equipos m√°s convocantes y las\",\n  \"medianas (con una &lt;b style='color: {c4}'&gt;cruz&lt;/b&gt;) por a√±o.\",\n  .sep = \" \"\n)\n\n# figura\ng &lt;- ggplot(\n  d2, aes(\n    a√±o, attendance, fill = home_team_name, shape = home_team_name,\n    size = home_team_name)) +\n  # puntos\n  geom_point(\n    alpha = .8, position = position_jitter(seed = 2024, width = .2), stroke = 1,\n    color = c6) +\n  # mediana\n  geom_point(\n    data = d_m, aes(a√±o, m), fill = NA, color = c3, size = 7,\n    inherit.aes = FALSE, shape = 4, stroke = 4) +\n  geom_point(\n    data = d_m, aes(a√±o, m), fill = NA, color = c4, size = 8,\n    inherit.aes = FALSE, shape = 4, stroke = 2) +\n  scale_x_continuous(breaks = 2011:2024, labels = glue(\"'{11:24}\")) +\n  scale_y_log10(\n    breaks = 10^(2:5), limits = c(100, 1e5), \n    labels = c(\"100\", \"1.000\", \"10.000\", \"100.000\")) +\n  scale_fill_manual(values = pal) +\n  scale_shape_manual(values = c(21:24, 22:24, 21)) +\n  scale_size_manual(values = c(rep(7, 7), 2)) +\n  labs(\n    x = NULL, y = \"Concurrencia\", fill = NULL, shape = NULL, size = NULL,\n    subtitle = mi_subtitle, caption = mi_caption) +\n  guides(\n    fill = guide_legend(position = \"inside\")\n  ) +\n  theme_linedraw() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(t = 5, l = 5, r = 10, b = 5),\n    plot.background = element_rect(fill = c3, color = c5, linewidth = 3),\n    plot.subtitle = element_textbox_simple(\n      family = \"ubuntu\", size = 20, margin = margin(b = 16, t = 5), color = c1),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 12, margin = margin(t = 15, b = 5), color = c5),\n    panel.background = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.ticks = element_blank(),\n    axis.text.x = element_text(family = \"bebas\", size = 30, color = c1),\n    panel.grid.major = element_line(linetype = \"FF\", color = c1),\n    axis.text.y = element_text(\n      family = \"jet\", size = 14, angle = 90, hjust = .5, color = c1),\n    axis.title.y = element_text(\n      family = \"ubuntu\", size = 20, color = c5),\n    legend.text = element_text(\n      size = 15, family = \"ubuntu\", face = \"bold\", color = c5),\n    legend.position.inside = c(.01, .99),\n    legend.background = element_rect(fill = NA),\n    legend.justification.inside = c(0, 1),\n    legend.key.spacing.y = unit(.3, \"cm\")\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s29/viz.png\",\n  width = 30,\n  height = 34,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s29/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 29"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_06.html",
    "href": "tidytuesday/2024/semana_06.html",
    "title": "Semana 06",
    "section": "",
    "text": "Mapa de Patrimonios de la Humanidad de UNESCO, inspirado en esta figura de 1 dataset, 100 visualizations.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(sf)\nlibrary(patchwork)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#3274DA\"\nc2 &lt;- \"#F05440\"\nc3 &lt;- \"#1B9E77\"\nc4 &lt;- \"#D95F02\"\nc5 &lt;- \"#7570B3\"\nc6 &lt;- \"grey95\"\nc7 &lt;- \"grey90\"\nc8 &lt;- \"grey80\"\nc9 &lt;- \"grey40\"\nc10 &lt;- \"black\"\nc11 &lt;- \"white\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# fuente: Victor\nfont_add(\n  family = \"victor\", \n  regular = \"fuente/VictorMono-ExtraLight.ttf\",\n  bold = \"fuente/VictorMono-VariableFont_wght.ttf\",\n  italic = \"fuente/VictorMono-ExtraLightItalic.ttf\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c2};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {6}. \",\n  \"UNESCO World Heritage Sites.&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c2};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf4f6;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c2};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_mastodon} \n  {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 6)\nheritage &lt;- tuesdata$heritage |&gt; \n  rename(pais = country)\n\n# quiero visualizar la geograf√≠a de Europa, con los pa√≠ses resaltados y la \n# cantidad de sitios, por a√±o, por pa√≠s\n\n# creo un buffer alrededor del centroide de Noruega\nnoruega &lt;- rnaturalearth::ne_countries(\n  country = \"Norway\",\n  scale = \"medium\",\n  returnclass = \"sf\") |&gt; \n  select(pais = sovereignt) |&gt; \n  st_make_valid() |&gt; \n  st_transform(crs = 7005)\n\nnoruega_centro &lt;- st_union(noruega) |&gt; \n  st_make_valid() |&gt; \n  st_centroid()\n\ncentro_buffer &lt;- st_buffer(noruega_centro, dist = 1.8e6, nQuadSegs = 5000) |&gt; \n  st_transform(crs = 7005) |&gt;\n  st_make_valid() |&gt; \n  terra::vect()\n\n# vector de pa√≠ses de Europa\neuropa &lt;- rnaturalearth::ne_countries(\n  continent = \"europe\",\n  scale = \"large\",\n  returnclass = \"sf\") |&gt; \n  select(pais = sovereignt) |&gt; \n  st_transform(crs = 7005) |&gt;\n  st_make_valid() |&gt; \n  terra::vect()\n\n# obtengo un recorte de Europa al buffer\neuropa_crop &lt;- terra::crop(europa, centro_buffer) |&gt;\n  st_as_sf() |&gt; \n  # remuevo Francia, para evitar problemas con sus territorios de ultramar\n  filter(pais != \"France\") |&gt; \n  group_by(pais) |&gt; \n  summarise(geometry = st_union(geometry))\n\n# logo de patrimonios de UNESCO\nlogo &lt;- \"&lt;img src='2024/s06/logo.png' width=20&gt;&lt;/img&gt;\"\n\n# combino los datos de Europa y heritage\nd &lt;- inner_join(heritage, europa_crop, by = join_by(pais)) |&gt; \n  mutate(color = c(c1, c2, c3)) |&gt; \n  st_as_sf()\n\nd_centro &lt;- d |&gt; \n  mutate(centro = st_centroid(geometry, of_largest_polygon = FALSE)) |&gt; \n  as_tibble() |&gt; \n  select(-geometry) |&gt; \n  st_as_sf()\n\n# sitios de los que salen las l√≠neas\nd_capitales &lt;- tibble(\n  pais = d_centro$pais) |&gt; \n  mutate(\n    x = c(-1e6, -1.3e6, -.9e6),\n    y = c(7.1e6, 6.6e6, 6.7e6)) |&gt; \n  st_as_sf(coords = c(\"x\", \"y\")) |&gt; \n  st_set_crs(value = 7005)\n\n# longitud de las l√≠neas\nlargo_linea &lt;- 1.2e6\n\n# anotaciones de las cantidades de patrimonios de UNESCO\nd_lineas &lt;- d_capitales |&gt; \n  st_coordinates() |&gt; \n  as_tibble() |&gt; \n  mutate(pais = d_capitales$pais, .before = 1) |&gt; \n  mutate(\n    xend = case_match(\n      pais,\n      \"Norway\" ~ X,\n      \"Denmark\" ~ X - largo_linea*.3,\n      \"Sweden\" ~ X + largo_linea*.8)) |&gt; \n  mutate(\n    yend = case_match(\n      pais,\n      \"Norway\" ~ Y + largo_linea*.7,\n      \"Denmark\" ~ Y,\n      \"Sweden\" ~ Y)) |&gt; \n  mutate(\n    a√±o_2004 = d$`2004`,\n    a√±o_2022 = d$`2022`) |&gt; \n  mutate(label = glue(\n    \"{logo}&lt;span style='color:{c1}'&gt;{a√±o_2004}&lt;/span&gt;&lt;br&gt;\",\n    \"{logo}&lt;span style='color:{c2}'&gt;{a√±o_2022}&lt;/span&gt;\")) |&gt; \n  mutate(\n    hjust = c(.5, 1, 0),\n    vjust = c(0, 0, .5))\n\n# figura ------------------------------------------------------------------\n\n# etiquetas de los pa√≠ses, leyenda\nlabel_pais &lt;- c(\"Dinamarca\", \"Noruega\", \"Suecia\") |&gt; str_to_upper()\nlabel_color &lt;- c(c3, c4, c5)\nlabel_leyenda &lt;- glue(\"&lt;p style='color:{label_color}'&gt;{label_pais}&lt;/p&gt;\")\n\n# anotaci√≥n de los a√±os\nbb &lt;- st_bbox(centro_buffer)\nlabel_a√±o &lt;- glue(\n  \"{logo}&lt;span style='color:{c1}'&gt;2004&lt;/span&gt;&lt;br&gt;\",\n  \"{logo}&lt;span style='color:{c2}'&gt;2022&lt;/span&gt;\")\n\n# logo UNESCO\nlogo_unesco &lt;- \"&lt;img src='2024/s06/unesco_logo.png' width=120&gt;&lt;/img&gt;\"\n\n# figura\ng &lt;- ggplot() +\n  # oc√©ano\n  geom_sf(\n    data = st_as_sf(centro_buffer), fill = c6, color = NA) +\n  # Europa\n  geom_sf(data = europa_crop, fill = c8, color = c11) +\n  # Noruega, Dinamarca, Suecia\n  geom_sf(data = d, aes(fill = pais), color = NA) +\n  # Europa, contorno\n  geom_sf(data = europa_crop, fill = NA, color = c11) +\n  # c√≠rculo externo\n  geom_sf(\n    data = st_as_sf(centro_buffer), fill = NA, color = c9, linewidth = .5) +\n  # puntos origen de las l√≠neas\n  geom_sf(data = d_capitales, size = 2) +\n  # l√≠neas\n  geom_segment(\n    data = d_lineas, aes(X, Y, xend = xend, yend = yend), color = c10) +\n  # heritage\n  geom_richtext(\n    data = d_lineas, \n    aes(xend, yend, label = label, hjust = hjust, vjust = vjust),\n    fill = c11, label.color = c10, size = 7, family = \"victor\",\n    label.r = unit(0, \"mm\"), label.size = unit(.5, \"mm\")) +\n  # a√±os\n  annotate(\n    geom = \"richtext\", x = bb[\"xmax\"], y = bb[\"ymax\"], label = label_a√±o, \n    fill = c11, label.color = NA, hjust = 1, vjust = 1, family = \"victor\",\n    size = 7) +\n  # logo UNESCO\n  annotate(\n    geom = \"richtext\", x = bb[\"xmin\"], y = bb[\"ymax\"], label = logo_unesco, \n    fill = NA, label.color = NA, hjust = 0, vjust = .8, \n    size = 13) +\n  scale_fill_brewer(palette = \"Dark2\", labels = label_leyenda) +\n  coord_sf(clip = \"off\") +\n  labs(caption = mi_caption, fill = NULL) +\n  guides(fill = guide_legend(override.aes = list(fill = NA))) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(r = 3.3, l = 3.3),\n    plot.background = element_rect(fill = c7, color = c9, linewidth = 3),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c1, size = 13, \n      margin = margin(b = 10, r = 10)),\n    legend.position = c(0, 0),\n    legend.justification = c(0, 0),\n    legend.direction = \"vertical\",\n    legend.text = element_markdown(family = \"ubuntu\", color = c10, size = 25),\n    legend.key.size = unit(2, \"line\")\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s06/viz.png\",\n  width = 30,\n  height = 31,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s06/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 06"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_28.html",
    "href": "tidytuesday/2024/semana_28.html",
    "title": "Semana 28",
    "section": "",
    "text": "Paquetes y funciones m√°s frecuentes en este repositorio, utilizando el paquete {funspotr}.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#110C3A\"\nc2 &lt;- \"grey70\"\nc3 &lt;- \"#55092A\"\nc4 &lt;- \"grey98\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;funspotr&lt;/b&gt;}}&lt;/span&gt;, \",\n  \"{icon_github} vhgauto/tidytuesday.&lt;/span&gt;\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\n# me interesa usar {funspotr} para identificar las funciones m√°s frecuentes \n# en este proyecto de tidytuesday\n\n# https://brshallo.github.io/funspotr/#spot-functions-on-all-files-in-a-project\n\n# d &lt;- funspotr::list_files_wd() |&gt; \n#   funspotr::spot_funs_files() |&gt; \n#   funspotr::unnest_results()\n\n# write_csv(d, \"2024/s28/d.csv\")\n\n# remuevo las funciones desconocidas para dejar las que tienen paquetes \n# identificados\nd &lt;- read_csv(\"2024/s28/d.csv\") |&gt; \n  select(-contains(\"paths\")) |&gt; \n  filter(pkgs != \"(unknown)\") |&gt; \n  count(pkgs, funs, sort = TRUE) |&gt; \n  slice_head(n = 20)\n\n# paleta de colores por paquete\npal &lt;- MoMAColors::moma.colors(palette_name = \"Klein\", n = 8)\nnames(pal) &lt;- unique(d$pkgs)\n\n# incorporo los colores a los paquetes\ne &lt;- d |&gt; \n  mutate(color = pal[pkgs]) |&gt; \n  mutate(ff = glue(\"&lt;b style='color:{color}'&gt;{pkgs}&lt;/b&gt;::{funs}()\")) |&gt; \n  mutate(ff = fct_reorder(ff, n))\n\n# figura ------------------------------------------------------------------\n\n# agrego el logo de {funspotr}\nlogo &lt;- \"https://brshallo.github.io/funspotr/logo.png\"\n\n# nombre de los paquetes con color para incorporar al subt√≠tulo\nff &lt;- e |&gt; \n  distinct(pkgs, color) |&gt; \n  mutate(ff = glue(\"&lt;b style='color:{color}; font-family:jet'&gt;{pkgs}&lt;/b&gt;\")) |&gt; \n  pull(ff) |&gt; \n  str_flatten_comma(last = \" y \")\n\n# subt√≠tulo\nmi_subtitle &lt;- glue(\n  \"El paquete &lt;span style='font-family:jet; color:{c3}'&gt;{{funspotr}}&lt;/span&gt; \",\n  \"permite identificar los paquetes y funciones en un proyecto. \",\n  \"En mi caso, los paquetes m√°s frecuentes son: {ff}.\"\n)\n\n# figura\ng &lt;- ggplot(e, aes(n, ff, label = ff)) +\n  geom_col(\n    aes(x = 175, fill = alpha(color, .1)), width = .97, color = NA,\n    linewidth = 2) +\n  geom_col(\n    aes(color = color, fill = alpha(color, .1)), width = .97, linewidth = .3) +\n  geom_richtext(\n    aes(x = 1), hjust = 0, size = 10, fill = NA, label.color = NA,\n    family = \"jet\", color = c1) +\n  annotate(\n    geom = \"richtext\", label = glue(\"&lt;img src={logo} width=140&gt;&lt;/img&gt;\"), \n    x = 175, y = 10, hjust = 1, vjust = .5, fill = NA, label.color = NA\n  ) +\n  scale_x_continuous(\n    breaks = seq(25, 175, 25), expand = c(0, 0), limits = c(0, 175)) +\n  scale_color_identity() +\n  scale_fill_identity() +\n  labs(\n    x = \"# de veces que la funci√≥n fue usada\", y = NULL, subtitle = mi_subtitle, \n    caption = mi_caption) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    plot.background = element_rect(fill = c4, color = c1, linewidth = 3),\n    plot.margin = margin(t = 11.3, b = 10, l = 19, r = 19),\n    plot.subtitle = element_textbox_simple(\n      family = \"ubuntu\", size = 25, margin = margin(b = 20)),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 15, color = c1, margin = margin(t = 10),\n      lineheight = unit(1.3, \"line\")),\n    panel.grid = element_blank(),\n    panel.grid.major.x = element_line(\n      linewidth = .1, linetype = \"FF\", color = c2),\n    axis.text.x = element_text(\n      family = \"jet\", size = 20, color = c1, hjust = 1),\n    axis.text.y = element_blank(),\n    axis.title.x = element_text(\n      family = \"ubuntu\", color = c1, size = 20, hjust = 0)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s28/viz.png\",\n  width = 30,\n  height = 36,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2024/s28/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 28"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_52.html",
    "href": "tidytuesday/2024/semana_52.html",
    "title": "Semana 52",
    "section": "",
    "text": "Frecuencia de feriados/celebraciones por d√≠a del a√±o.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggrepel)\nlibrary(patchwork)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#1A318B\"\nc2 &lt;- \"#6996E3\"\nc3 &lt;- \"#EAF3FF\"\nc4 &lt;- \"grey20\"\nc5 &lt;- \"#E9AB1B\"\nc6 &lt;- \"white\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\n# Bebas Neue\nfont_add(\n  family = \"bebas\",\n  regular = \"fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {52}&lt;br&gt;\",\n  \"Lai, S., Sorichetta, A., Steele, J. &lt;i&gt;et al&lt;/i&gt;. **Global holiday datasets\n  for &lt;br&gt;understanding seasonal human mobility and population dynamics**.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 52)\nglobal_holidays &lt;- tuesdata$global_holidays\n\n# me interesa la frecuencia de veces que cada d√≠a del a√±o es feriado/celebraci√≥n\n\nd &lt;- global_holidays |&gt;\n  select(Date) |&gt;\n  mutate(dia = day(Date)) |&gt;\n  mutate(mes = month(Date)) |&gt;\n  mutate(a√±o = year(Date)) |&gt;\n  reframe(\n    n = n(),\n    .by = c(mes, dia, a√±o)\n  ) |&gt;\n  arrange(mes, dia, a√±o) |&gt;\n  mutate(fecha = make_date(year = 2016, month = mes, day = dia)) |&gt;\n  mutate(prop = n/length(unique(global_holidays$ADM_name))) |&gt;\n  reframe(\n    prop = mean(prop),\n    .by = fecha\n  )\n\n# d√≠a m√°s frecuente de cada mes\ntop_mes &lt;- d |&gt;\n  mutate(mes = month(fecha)) |&gt;\n  slice_max(order_by = prop, n = 1, by = mes)\n\nlabel_tbl &lt;- inner_join(\n  global_holidays, top_mes, by = join_by(Date == fecha)\n) |&gt;\n  distinct(Date, Name) |&gt;\n  arrange(Date) |&gt;\n  distinct(Date, .keep_all = TRUE) |&gt;\n  rename(\"fecha\" = Date) |&gt;\n  inner_join(d, by = join_by(fecha))\n\n# combino todos los d√≠as con las celebraciones m√°s frecuentes del mes\nd2 &lt;- full_join(d, label_tbl, by = join_by(fecha, prop))\n\n# todas las fechas\nfecha &lt;- tibble(\n    dia_fecha = seq.Date(\n      from = ymd(20160101), to = ymd(20161231), by = \"1 day\"\n    )\n  )\n\n# vector de factores de los meses\nmes_orden &lt;- tibble(\n    mes = seq.Date(from = ymd(20160101), to = ymd(20161231), by = \"1 month\")) |&gt;\n    mutate(mes_n = format(mes, \"%B\")) |&gt;\n    mutate(mes_n = toupper(mes_n)) |&gt;\n    mutate(mes_n = fct_inorder(mes_n)) |&gt;\n    pull(mes_n)\n\n# tibble calendario\ncalendar_df &lt;- fecha |&gt;\n  mutate(\n    a√±o = year(dia_fecha),\n    mes = format(dia_fecha, \"%B\"),\n    # inicio de semana el DOMINGO\n    dia = wday(dia_fecha, label = TRUE, week_start = 7),\n    mday = mday(dia_fecha),\n    # agrego el n√∫mero de semana, dentro del mes\n    mes_semana = (5 + day(dia_fecha) +\n                    wday(\n                      floor_date(dia_fecha, 'month'), week_start = 7\n                    )) %/% 7\n  ) |&gt;\n  mutate(mes = toupper(mes)) |&gt;\n  mutate(mes = fct_inorder(mes)) |&gt;\n  inner_join(d2, by = join_by(dia_fecha == fecha))\n\n# celebraciones m√°s frecuentes de cada mes y traducciones\nceleb &lt;- calendar_df |&gt; \n  distinct(Name) |&gt; \n  drop_na() |&gt; \n  pull() |&gt; \n  sort()\n\nceleb_trad &lt;- c(\n  \"D√≠a de Todos los Santos\", \"Asunci√≥n de Mar√≠a\", \"D√≠a del Ni√±o\", \"Navidad\",\n  \"Viernes Santo\", \"Halloween\", \"D√≠a del Empleado Bancario\",\n  \"D√≠a Internacional de la Mujer\", \"D√≠a Internacional de los Trabajadores\",\n  \"A√±o Nuevo\", \"Eid al-Adha\", \"D√≠a de los Enamorados\"\n)\n\nceleb_trad &lt;- set_names(celeb_trad, celeb)\n\ncalendar_df &lt;- calendar_df |&gt; \n  mutate(nombre = celeb_trad[Name])\n\n# nombres de los d√≠as de la semana\ndia_semana &lt;- tibble(\n    label = c(\"D\", \"L\", \"M\", \"M\", \"J\", \"V\", \"S\"),\n    x = 1:7,\n    y = 1\n  )\n\n# blanco\nb &lt;- tibble(x = 0, y = c(0, 7))\n\nferiados &lt;- drop_na(calendar_df)\n\n# figura ------------------------------------------------------------------\n\n# cantidad de pa√≠ses y subt√≠tulo\nn_pais &lt;- length(unique(global_holidays$ISO3))\n\nmi_subtitulo &lt;- glue(\n  \"Porcentaje de veces que cada d√≠a del a√±o fue feriado/celebraci√≥n en \n  **{n_pais}** pa√≠ses, entre **2010** y **2019**. En cada mes se destaca la \n  fecha m√°s frecuente.\"\n)\n\n# funci√≥n p/generar el calendario de c/mes\nf_cumple &lt;- function(x) {\n  n &lt;- calendar_df |&gt;\n    filter(mes == x) |&gt;\n    nrow()\n  \n  m &lt;- calendar_df |&gt;\n    filter(mes == x) |&gt;\n    filter(Name != \"\") |&gt;\n    pull(Name)\n  \n  u &lt;- calendar_df |&gt;\n    filter(mes == x) |&gt;\n    summarise(semana_max = max(mes_semana)) |&gt;\n    pull()\n  \n  fer &lt;- calendar_df |&gt;\n    filter(mes == x) |&gt;\n    slice_max(order_by = prop, n = 1)\n  \n  g &lt;- calendar_df |&gt;\n    filter(mes == x) |&gt;\n    ggplot(aes(x = dia, y = mes_semana, fill = prop)) +\n    # l√≠mites verticales\n    geom_blank(aes(y = 0)) +\n    geom_blank(aes(y = 7)) +\n    # coloreo los cumplea√±os\n    geom_tile(colour = c3, linewidth = 1, show.legend = TRUE) +\n    # agrego los d√≠as del mes\n    geom_text(\n      aes(label = mday), family = \"jet\", hjust = .5, nudge_y = .2, size = 3,\n      color = c6\n    ) +\n    # d√≠a de la semana\n    geom_text(\n      data = dia_semana, aes(x, y, label = label), inherit.aes = FALSE,\n      nudge_y = 1, family = \"jet\", color = c2, size = 3\n    ) +\n    # celebraciones/feriados\n    geom_text(\n      data = fer, aes(label = nombre, x = 4.5, y = 6.5), hjust = .5, size = 4,\n      family = \"ubuntu\", fontface = \"plain\"\n    ) +\n    geom_tile(data = fer, color = c2, fill = NA, linewidth = 1) +\n    geom_tile(data = fer, color = c1, fill = NA, linewidth = 1, linetype = \"11\") +\n    # manual\n    scale_y_continuous(trans = \"reverse\") +\n    scale_fill_gradientn(\n      colors = hcl.colors(5, \"Zissou1\"),\n      limits = c(0, 1),\n      labels = scales::label_percent()\n    ) +\n    # faceta\n    facet_grid(a√±o ~ mes, switch = \"y\") +\n    # eje\n    labs(fill = NULL) +\n    coord_fixed(clip = \"off\", expand = FALSE) +\n    theme_void() +\n    theme(\n      plot.margin = margin(8, 5, 5, 5),\n      plot.background = element_rect(fill = NA, color = NA),\n      strip.text.x.top = element_text(\n        family = \"bebas\", color = c1, face = \"bold\", size = 20,\n        margin = margin(b = 10)\n      ),\n      strip.text.y.left = element_blank(),\n      legend.position = \"bottom\",\n      legend.direction = \"horizontal\",\n      legend.key.width = unit(40, \"pt\"),\n      legend.text = element_text(family = \"jet\")\n    )\n}\n\n# lista de figuras\nlista_mes &lt;- map(.x = mes_orden, ~ f_cumple(x = .x))\n\ng_cumple &lt;- wrap_plots(lista_mes, ncol = 4) +\n  plot_layout(guides = \"collect\") +\n    plot_annotation(\n      subtitle = mi_subtitulo,\n      caption = mi_caption,\n      theme = theme(\n        plot.margin = margin(20, 19, 19, 19),\n        plot.background = element_rect(\n          fill = c3, color = c5, linewidth = 3\n        ),\n        plot.subtitle = element_textbox_simple(\n          hjust = .5, size = 20, family = \"ubuntu\"\n        ),\n        plot.caption = element_markdown(\n          family = \"ubuntu\", size = 11, color = c4, hjust = 1, lineheight = 1.3,\n          margin = margin(t = 10)\n        ),\n        legend.position = \"bottom\"\n      )\n    )\n\n# guardo\nggsave(\n  plot = g_cumple,\n  filename = \"2024/s52/viz.png\",\n  width = 30,\n  height = 31,\n  units = \"cm\",\n  dpi = 300\n)\n\n# abro\nbrowseURL(paste0(getwd(), \"/2024/s52/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 52"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_44.html",
    "href": "tidytuesday/2024/semana_44.html",
    "title": "Semana 44",
    "section": "",
    "text": "Palabras anteriores y posteriores a los t√≠tulos de pel√≠culas de MONSTRUOS.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidytext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#DF9ED4\"\nc2 &lt;- \"#55092A\"\nc3 &lt;- \"#960B35\"\nc4 &lt;- \"#FD8386\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\",\n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\",\n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\n# Creepster\nfont_add_google(\n  name = \"Creepster\",\n  family = \"creepster\"\n)\n\n# Girassol\nfont_add_google(\n  name = \"Moul\",\n  family = \"moul\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c4};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {44}, \",\n  \"&lt;b&gt;Internet Movie Database&lt;/b&gt;.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c4};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c4};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 44)\nmonster_movies &lt;- tuesdata$monster_movies\n\n# me interesan c√≥mo se formas los t√≠tulos de las pel√≠culas, las palabras\n# anteriores y posteriores a MONSTER\n\n# divido las t√≠tulos de las pel√≠culas entre antes y despu√©s de la palabra\n# MONSTRUO\nmosters_pre_post &lt;- select(monster_movies, primary_title) |&gt; \n  mutate(primary_title = toupper(primary_title)) |&gt; \n  mutate(primary_title = str_replace_all(primary_title, \"-\", \"_\")) |&gt; \n  mutate(\n    div = str_replace(\n      primary_title, \"(.*)MONSTERS|MONSTER(.*)\", \"\\1-\\2\"\n    )\n  ) |&gt; \n  separate_wider_delim(\n    cols = div,\n    delim = \"-\",\n    names = c(\"pre_palabra\", \"post_palabra\")\n  )\n\n# selecciono las palabras m√°s frecuentes y remuevo las stopwords\n# divido los conjuntos en pre y post palabras\nn_top &lt;- 15\n\nstopwords &lt;- filter(stop_words, lexicon == \"SMART\") |&gt; \n  pull(word)\n\nd_pre &lt;- mosters_pre_post |&gt; \n  select(pre_palabra) |&gt; \n  unnest_tokens(\n    output = \"palabras\",\n    input = pre_palabra\n  ) |&gt; \n  filter(!palabras %in% stopwords) |&gt; \n  count(palabras, sort = TRUE) |&gt; \n  slice_max(order_by = n, n = n_top, with_ties = FALSE) |&gt; \n  pull(palabras) |&gt; \n  toupper() |&gt; \n  str_replace(\"_\", \"-\")\n\nd_post &lt;- mosters_pre_post |&gt; \n  select(post_palabra) |&gt; \n  unnest_tokens(\n    output = \"palabras\",\n    input = post_palabra\n  ) |&gt; \n  filter(!palabras %in% stopwords) |&gt; \n  count(palabras, sort = TRUE) |&gt; \n  slice_max(order_by = n, n = n_top, with_ties = FALSE) |&gt; \n  pull(palabras) |&gt; \n  toupper() |&gt; \n  str_replace(\"_\", \"-\")\n\n# figura ------------------------------------------------------------------\n\n# MONSTER\nlabel_monster &lt;- str_split(\"MONSTER\", \"\")[[1]] |&gt; \n  str_flatten(collapse = \"&lt;br&gt;\")\n\n# par√°metros de la figura\ntama√±o_label &lt;- 13\ntama√±o_monster &lt;- 38\nancho_linea &lt;- .3\n\nmi_subtitulo &lt;- glue(\n  \"T√©rminos m√°s frecuentes antes y despu√©s de la palabra \n  &lt;span style='font-family: creepster; color: {c1};'&gt;MONSTER&lt;/span&gt; en \n  &lt;b&gt;{nrow(monster_movies)}&lt;/b&gt; pel√≠culas.\"\n)\n\n# figura\ng &lt;- ggplot() +\n  # l√≠neas\n  annotate(\n    geom = \"segment\", x = -5, xend = 0, y = 1:15, yend = 7.7, color = c3,\n    linewidth = ancho_linea, linetype = 2\n  ) +\n  annotate(\n    geom = \"segment\", x = 5, xend = 0, y = 1:15, yend = 7.7, color = c3,\n    linewidth = ancho_linea, linetype = 2\n  ) +\n  # pre\n  annotate(\n    geom = \"richtext\", x = -5, y = 1:15, label = d_pre, hjust = 1, color = c2,\n    family = \"creepster\", size = tama√±o_label, fill = c1, label.color = c3,\n    label.size = unit(.7, \"mm\"), label.padding = unit(3, \"mm\"),\n    label.r = unit(3, \"mm\")\n  ) +\n  # post\n  annotate(\n    geom = \"richtext\", x = 5, y = 1:15, label = d_post, hjust = 0, color = c2,\n    family = \"creepster\", size = tama√±o_label, fill = c1, label.color = c3,\n    label.size = unit(.7, \"mm\"), label.padding = unit(3, \"mm\"),\n    label.r = unit(3, \"mm\")\n  ) +\n  # MONSTER\n  annotate(\n    geom = \"richtext\", x = 0, y = 7.5, label = label_monster, hjust = .42,\n    family = \"moul\", size = tama√±o_monster, lineheight = unit(.9, \"line\"),\n    fill = NA, label.color = NA, color = c1\n  ) +\n  scale_x_continuous(limits = c(-12, 12)) +\n  scale_y_continuous(limits = c(0, 15)) +\n  labs(subtitle = mi_subtitulo, caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(r = 5, l = 5, t = 1.5),\n    plot.background = element_rect(color = c3, fill = c2, linewidth = 3),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", color = c4, size = 20, hjust = .5,\n      margin = margin(t = 15, b = 20)\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 12, color = c1,\n      margin = margin(b = 10, r = 10, t = -20)\n    )\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s44/viz.png\",\n  width = 30,\n  height = 32,\n  units = \"cm\")\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s44/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 44"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_17.html",
    "href": "tidytuesday/2024/semana_17.html",
    "title": "Semana 17",
    "section": "",
    "text": "Lanzamientos de objetos espaciales por Argentina.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(sf)\nlibrary(patchwork)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\ncol &lt;- MoMAColors::moma.colors(palette_name = \"Exter\")\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\")\n\n# fuente: Bebas Neue\nfont_add(\n  family = \"bebas\", \n  regular = \"fuente/BebasNeue-Regular.ttf\")\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{col[3]};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {17}. \",\n  \"Online Index of Objects Launched into Outer Space (ONU), \",\n  \"Our World in Data&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{col[3]};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{col[3]};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 17)\nobj &lt;- tuesdata$outer_space_objects\n\n# me interesa la cantidad de objetos enviados por Argentina, y agregar el mapa\n# de Argentina\n\nd &lt;- obj |&gt; \n  filter(Entity == \"Argentina\") |&gt; \n  select(a√±o = Year, n = num_objects) |&gt; \n  mutate(s = cumsum(n))\n\n# mapa de Argentina, continental\narg &lt;- st_read(\"extra/arg_continental.gpkg\") |&gt; \n  st_transform(crs = 5346)\n\n# figura ------------------------------------------------------------------\n\n# extensi√≥n de Argentina continental\nbb_arg &lt;- st_bbox(arg)\n\n# centro de Argentina continental, para crear cuadrados conc√©ntricos\ncentro_x &lt;- (bb_arg$xmax + bb_arg$xmin)/2\ncentro_y &lt;- (bb_arg$ymax + bb_arg$ymin)/2\n\n# funci√≥n que genera sf de cuadrados conc√©ntricos a partir de la extensi√≥n\nf_bb &lt;- function(ext) {\n  \n  bb &lt;- c(centro_x - ext, centro_x + ext, centro_y - ext, centro_y + ext)\n  names(bb) &lt;- NULL\n  \n  bb_sf &lt;- st_bbox(\n    c(xmin = bb[1], xmax = bb[2], ymin = bb[3], ymax = bb[4]), \n    crs = st_crs(5346)) |&gt; \n    st_as_sfc()\n  \n  return(bb_sf)\n}\n\n# cuadrados alrededor de Argentina\nbb_sf1 &lt;- f_bb(3e6)\nbb_sf2 &lt;- f_bb(4e6)\n\n# √≠cono de sat√©lite\nsatelite &lt;- \"&lt;span style='font-family:jet;'&gt;&#xf0471;&lt;/span&gt;\"\n\n# subt√≠tulo\nmi_subtitle &lt;- glue(\n  \"Entre {min(d$a√±o)} y {max(d$a√±o)} &lt;b style='color:{col[2]};'&gt;Argentina&lt;/b&gt; \",\n  \"realiz√≥ {max(d$s)} lanzamientos espaciales.\"\n)\n\n# mapa de Argentina continental, con 2 recuadros conc√©ntricos\ng_arg &lt;- ggplot() +\n  # recuadros\n  geom_sf(data = bb_sf2, fill = col[10], color = NA) +\n  geom_sf(data = bb_sf1, fill = col[9], color = NA) +\n  # Argentina continental\n  geom_sf(data = arg, fill = col[8], color = NA, linewidth = .2) +\n  # subt√≠tulo\n  annotate(\n    geom = \"richtext\", x = centro_x, y = st_bbox(bb_sf1)$ymax*1.02, hjust = .5,\n    vjust = 0, label = mi_subtitle, color = col[3], family = \"ubuntu\",\n    size = 7, fill = NA, label.color = NA) +\n  coord_sf(expand = FALSE) +\n  theme_void()\n\n# figura de puntos, sat√©lites\ng_sat &lt;- ggplot(d, aes(a√±o, s)) +\n  # escalera\n  geom_step(color = col[5], linetype = \"55\", linewidth = .2, direction = \"vh\") +\n  # sat√©lite\n  geom_richtext(\n    aes(label = satelite), color = col[1], size = 13, fill = NA, \n    label.color = NA, angle = -90, nudge_x = -.15) +\n  scale_x_continuous(\n    breaks = scales::breaks_width(5), limits = c(NA, 2023)) +\n  scale_y_continuous(\n    limits = c(0, 25), breaks = c(0, 1, seq(5, 25, 5)), expand = c(0, 0),\n    labels = c(\"\", 1, seq(5, 25, 5))) +\n  coord_cartesian(clip = \"off\") +\n  theme_void() +\n  theme(\n    axis.text.x = element_text(\n      family = \"bebas\", color = col[2], size = 23,\n      margin = margin(t = 10)),\n    axis.text.y = element_text(\n      family = \"jet\", color = col[2], size = 15, vjust = 0),\n    panel.grid.major = element_line(\n      color = col[8], linewidth = .13, linetype = 1)\n  )\n\n# figura\ng &lt;- g_arg + \n  inset_element(\n    p = g_sat, \n    left = .065, bottom = .093, right = .875, top = .8745) +\n  plot_annotation(\n    caption = mi_caption,\n    theme = theme(\n      plot.background = element_rect(\n        fill = col[10], color = col[8], linewidth = 3),\n      plot.caption = element_markdown(\n        family = \"ubuntu\", color = col[1], \n        margin = margin(t = -25, r = 10, b = 10), size = 11,\n        lineheight = unit(1.1, \"line\")\n        )\n      )\n  )\n\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s17/viz.png\",\n  width = 30,\n  height = 30.25,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(\"2024/s17/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 17"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_34.html",
    "href": "tidytuesday/2024/semana_34.html",
    "title": "Semana 34",
    "section": "",
    "text": "Edades de reyes/reinas ingleses comparados con sus consortes.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#CD1076\"\nc2 &lt;- \"#679C35\"\nc3 &lt;- \"#B54EA3\"\nc4 &lt;- \"#80A1C1\"\nc5 &lt;- colorspace::lighten(c4, .9)\nc6 &lt;- colorspace::lighten(c4, .5)\nc7 &lt;- \"white\"\nc8 &lt;- \"black\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\n# fontawesome\nfont_add(\n  family = \"fa\", \n  regular = \"fuente/Font Awesome 6 Free-Solid-900.otf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {34}, \",\n  \"English Monarchs and Marriages, &lt;b&gt;ianvisits&lt;/b&gt;.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 34)\nmonarcas &lt;- tuesdata$english_monarchs_marriages_df\n\n# me interesa si el monarca es mayor o menor que su consorte\n\n# categor√≠as asociadas al diferencia de edad\ncategorias &lt;- c(\n  glue(\"El monarca es &lt;b style='color: {c1}'&gt;mayor&lt;/b&gt;&lt;br&gt;que el consorte\"),\n  glue(\"El monarca es &lt;b style='color: {c2}'&gt;menor&lt;/b&gt;&lt;br&gt;que el consorte\"),\n  glue(\"&lt;b style='color: {c3}'&gt;Igual&lt;/b&gt; edad\")\n) |&gt; \n  fct_inorder()\n\n# arreglo de datos y agrego categor√≠as\nd &lt;- monarcas |&gt; \n  mutate(\n    across(\n      .cols = ends_with(\"_age\"),\n      .fns = ~ if_else(.x == \"?\", NA, .x)\n    )\n  ) |&gt; \n  mutate(\n    across(\n      .cols = ends_with(\"_age\"),\n      .fns = ~ if_else(.x == \"‚Äì\", NA, .x)\n    )\n  ) |&gt; \n  mutate(\n    across(\n      .cols = ends_with(\"_age\"),\n      .fns = ~ str_replace(.x, \"\\(\\?\\)\", \"\")\n    )\n  ) |&gt;\n  mutate(\n    across(\n      .cols = ends_with(\"_age\"),\n      .fns = as.numeric\n    )\n  ) |&gt;\n  drop_na() |&gt; \n  mutate(dif = king_age - consort_age) |&gt;\n  mutate(es_mayor = case_when(\n    king_age &gt; consort_age ~ categorias[1],\n    king_age &lt; consort_age ~ categorias[2],\n    .default = categorias[3]\n  ))\n\n# matrimonio con m√°xima diferencia\nd_max &lt;- d |&gt; \n  slice_max(order_by = dif)\n\nmax_label &lt;- glue(\n  \"{d_max$king_name} ({d_max$king_age}) y\",\n  \"{d_max$consort_name} ({d_max$consort_age})\",\n  .sep = \"&lt;br&gt;\"\n)\n\n# matrimonio con la menor edad\nd_min &lt;- d |&gt; \n  slice_min(order_by = king_age)\n\nmin_label &lt;- glue(\n  \"{d_min$king_name} ({d_min$king_age}) y\",\n  \"{d_min$consort_name} ({d_min$consort_age})\",\n  .sep = \"&lt;br&gt;\"\n)\n\n# combino el matrimonio con la m√°xima diferencia y el de menor edad\nd_ext &lt;- bind_rows(d_max, d_min) |&gt; \n  mutate(\n    label = glue(\n      \"{king_name}: &lt;b style='font-family:jet; color: {c1}'&gt;{king_age}&lt;/b&gt;&lt;br&gt;\",\n      \"{consort_name}: &lt;b style='font-family:jet; color: {c1}'&gt;{consort_age}\",\n      \"&lt;/b&gt;&lt;br&gt;\",\n      \"Matrimonio: &lt;b style='font-family:jet; color: {c1}'&gt;{year_of_marriage}&lt;/b&gt;\"\n    )\n  )\n\n# figura ------------------------------------------------------------------\n\n# t√≠tulo y subt√≠tulo\ncorona &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe26e;&lt;/span&gt;\")\n\nmi_subtitulo &lt;- glue(\n  \"Los &lt;b style='color: {c3}'&gt;monarcas ingleses&lt;/b&gt; en general siempre \",\n  \"mayores que sus&lt;br&gt;\",\n  \"consortes. Puntos por encima de la diagonal a &lt;b&gt;45¬∞&lt;/b&gt; representan \",\n  \"&lt;br&gt;\",\n  \"matrimonios en los que el Rey/Reina son mayores que su pareja.\"\n)\n\n# √≠cono de rey/reina del ajedrez sobre la leyenda\nicono_rey &lt;- \"&lt;span style='font-family:fa;'&gt;&#xf43f;&lt;/span&gt;\"\nicono_reina &lt;- \"&lt;span style='font-family:fa;'&gt;&#xf445;&lt;/span&gt;\"\n\n# figura\ng &lt;- ggplot(\n  d,\n  aes(\n    consort_age, king_age, fill = es_mayor, shape = es_mayor)\n) +\n  # 45¬∞\n  geom_abline(color = c6, linetype = 1, linewidth = 2, alpha = .6) +\n  geom_abline(color = c4, linetype = \"44\", linewidth = 2, alpha = .3) +\n  # puntos\n  geom_point(size = 5.2, alpha = 1, color = c8, stroke = 1) +\n  # m√°ximo/m√≠nimo\n  geom_richtext(\n    data = d_ext, aes(label = label), fill = c5, color = c8, nudge_x = .7,\n    family = \"ubuntu\", size = 6, hjust = 0, label.color = c4, vjust = .5,\n    label.r = unit(0, \"mm\"), label.size = unit(.6, \"mm\"),\n    label.padding = unit(3, \"mm\")\n  ) +\n  # corona rey/reina\n  annotate(\n    geom = \"richtext\", x = I(1), y = I(.285), hjust = 1, vjust = 0, fill = c5,\n    label = glue(\"{icono_rey}{icono_reina}\"), label.color = NA, size = 25,\n    color = c4\n  ) +\n  scale_x_continuous(\n    limits = c(3, 60), breaks = scales::breaks_width(5), expand = c(0, 1)\n  ) +\n  scale_y_continuous(\n    limits = c(3, 60), breaks = scales::breaks_width(5), expand = c(0, 1)\n  ) +\n  scale_fill_manual(values = c(c1, c2, c3)) +\n  scale_shape_manual(values = c(21, 22, 23)) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    x = \"Edad del consorte\", y = \"Edad del monarca\", fill = NULL,\n    shape = NULL, caption = mi_caption, title = corona, subtitle = mi_subtitulo\n  ) +\n  guides(\n    fill = guide_legend(position = \"inside\", override.aes = list(size = 8)),\n    shape = guide_legend(position = \"inside\")\n  ) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(r = 35.6, l = 35),\n    plot.background = element_rect(fill = c5, color = c3, linewidth = 3),\n    plot.title = element_markdown(\n      color = c3, size = 140, margin = margin(b = -100, t = -10, l = 50)\n    ),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", color = c8, size = 18, lineheight = unit(1.2, \"line\"),\n      margin = margin(b = 50, l = 170)\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 13, color = c2, margin = margin(t = 20, b = 10),\n      lineheight = unit(1.2, \"line\")\n    ),\n    panel.grid.major = element_line(\n      linetype = \"FF\", linewidth = .15, color = c4\n    ),\n    panel.grid.minor = element_blank(),\n    axis.text = element_text(family = \"jet\", size = 15, color = c8),\n    axis.text.x = element_text(margin = margin(t = 10)),\n    axis.text.y = element_text(margin = margin(r = 10)),\n    axis.title = element_text(family = \"ubuntu\", size = 22),\n    axis.title.x = element_text(margin = margin(t = 20)),\n    axis.title.y = element_text(margin = margin(r = 20)),\n    legend.position.inside = c(.99, .08),\n    legend.justification.inside = c(1, 0),\n    legend.background = element_rect(fill = c5, color = c4),\n    legend.text = element_markdown(\n      family = \"ubuntu\", size = 16, margin = margin(l = 10), color = c8\n    ),\n    legend.margin = margin(20, 20, 20, 20),\n    legend.key.spacing.y = unit(.6, \"cm\")\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s34/viz.png\",\n  width = 30,\n  height = 34,\n  units = \"cm\")\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s34/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 34"
    ]
  },
  {
    "objectID": "tidytuesday/2024/semana_33.html",
    "href": "tidytuesday/2024/semana_33.html",
    "title": "Semana 33",
    "section": "",
    "text": "Ferias Internacionales y la relaci√≥n entre asistentes y superficie.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggthemes)\nlibrary(tidyverse)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#841859\"\nc2 &lt;- \"#005600\"\nc3 &lt;- \"#533600\"\nc4 &lt;- \"grey30\"\nc5 &lt;- \"grey95\"\n\n# fuente: Ubuntu\nfont_add(\n  family = \"ubuntu\", \n  regular = \"fuente/Ubuntu-Regular.ttf\",\n  bold = \"fuente/Ubuntu-Bold.ttf\",\n  italic = \"fuente/Ubuntu-Italic.ttf\"\n)\n\n# monoespacio & √≠conos\nfont_add(\n  family = \"jet\", \n  regular = \"fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana {33}, \",\n  \"&lt;b&gt;List of world expositions&lt;/b&gt;, Wikipedia.&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {usuario}\"\n)\n\n# datos -------------------------------------------------------------------\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, 33)\nworlds_fairs &lt;- tuesdata$worlds_fairs\n\n# me interesa la relaci√≥n entre tama√±o de la feria y cantidad de asistentes\n\nd &lt;- worlds_fairs |&gt; \n  mutate(\n    inicio = make_date(start_year, start_month, 1),\n    fin = make_date(end_year, end_month, 1)) |&gt; \n  mutate(duracion = fin - inicio) |&gt; \n  mutate(duracion_dias = as.numeric(duracion)) |&gt; \n  select(area, visitors, category, duracion_dias) |&gt; \n  drop_na() |&gt; \n  filter(duracion_dias != 0)\n\n# feria con m√°xima cantidad de personas y tama√±o\nd_max &lt;- d |&gt; \n  slice_max(order_by = area, n = 1) |&gt; \n  inner_join(worlds_fairs, by = join_by(area, visitors, category))\n\nd_max_inicio &lt;- format(\n  make_date(d_max$start_year, d_max$start_month, 1), \"%B/%Y\"\n) |&gt; \n  toupper()\n\nd_max_fin &lt;- format(\n  make_date(d_max$end_year, d_max$end_month, 1), \"%B/%Y\"\n) |&gt; \n  toupper()\n\nd_max_label &lt;- glue(\n  \"&lt;b style='color: {c1}'&gt;Ciudad&lt;/b&gt;: {d_max$city}\",\n  \"&lt;b style='color: {c1}'&gt;Inicio&lt;/b&gt;: {d_max_inicio}\",\n  \"&lt;b style='color: {c1}'&gt;Cierre&lt;/b&gt;: {d_max_fin}\",\n  \"&lt;b style='color: {c1}'&gt;Asistentes&lt;/b&gt;: {format(d_max$visitors, decimal.mark = ',')} millones\",\n  \"&lt;b style='color: {c1}'&gt;Superficie&lt;/b&gt;: {d_max$area} ha\",\n  .sep = \"&lt;br&gt;\"\n)\n\n# figura -----------------------------------------------------------------\n\n# traducci√≥n de las categor√≠as\ncategorias &lt;- c(\"Exposici√≥n Mundial\", \"Exposici√≥n Especializada\")\nnames(categorias) &lt;- unique(d$category)\n\n# t√≠tulos de eje\neje_x &lt;- \"Superficie&lt;br&gt;&lt;span style='font-size: 13px'&gt;(en hect√°reas)&lt;/span&gt;\"\neje_y &lt;- \"Asistentes&lt;br&gt;&lt;span style='font-size: 13px'&gt;(en millones)&lt;/span&gt;\"\neje_fill &lt;- \"Duraci√≥n de&lt;br&gt;la Feria&lt;br&gt;&lt;span style='font-size: 13px'&gt;(en d√≠as)&lt;/span&gt;\"\n\n# √≠cono y subt√≠tulo\nicono &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xeb01;&lt;/span&gt;\")\nmi_subtitulo &lt;- glue(\n  \"En las &lt;b style='color: {c1}'&gt;Exposiciones Universales&lt;/b&gt;, ya sean mundiales como en las\",\n  \"espec√≠ficas, a mayor tama√±o del lugar mayor la cantidad de asistentes.\",\n  .sep = \" \"\n)\n\n# figura\ng &lt;- ggplot(\n  d,\n  aes(area, visitors, shape = category, fill = duracion_dias)\n) +\n  # feria m√°xima\n  annotate(\n    geom = \"richtext\", x = d_max$area-4, y = d_max$visitors,\n    label = d_max_label, family = \"ubuntu\", hjust = 1, vjust = .5,\n    label.color = NA, fill = c5, label.padding = unit(2, \"mm\"), size = 4,\n    label.r = unit(0, \"mm\")\n  ) +\n  geom_point(alpha = .7, color = \"black\", size = 6, stroke = 1) +\n  scale_x_continuous(limits = c(0, 600), expand = c(.025, 0)) +\n  scale_y_continuous(limits = c(0, 80), expand = c(.025, 0)) +\n  scale_fill_gradientn(colors = hcl.colors(n = 5, palette = \"Roma\")) +\n  scale_shape_manual(\n    values = c(21, 23), breaks = names(categorias), labels = categorias\n  ) +\n  scale_radius(limits = c(30, 600), range = c(1, 10)) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    x = eje_x, y = eje_y, shape = NULL, fill = eje_fill, caption = mi_caption,\n    title = icono, subtitle = mi_subtitulo\n  ) +\n  guides(\n    shape = guide_legend(\n      override.aes = list(stroke = 1, alpha = 1),\n      theme = theme(\n        legend.text = element_text(family = \"ubuntu\"),\n        legend.key.spacing.y = unit(.6, \"cm\"),\n        legend.margin = margin(t = 70, l = 5)\n      )\n    ),\n    fill = guide_colorbar(\n      frame.colour = \"black\", ticks.colour = \"black\",\n      theme = theme(\n        legend.key.height = unit(7, \"cm\")\n      )\n    )\n  ) +\n  theme_par() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(t = 12, b = 12, r = 13.3, l = 13.3),\n    plot.background = element_rect(color = c1, linewidth = 3),\n    plot.title = element_markdown(\n      size = 80, color = c2, hjust = 0, margin = margin(b = -60),\n    ),\n    plot.subtitle = element_textbox_simple(\n      family = \"ubuntu\", size = 18, margin = margin(b = 30, l = 60), color = c3\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 13, color = c2, margin = margin(t = 30)\n    ),\n    axis.text = element_text(family = \"jet\", size = 14, color = c1),\n    axis.text.x = element_text(hjust = 0),\n    axis.text.y = element_text(vjust = 0),\n    axis.title = element_markdown(\n      family = \"ubuntu\", size = 18, lineheight = unit(.3, \"line\"), color = c2\n    ),\n    panel.grid.major = element_line(\n      linetype = \"FF\", linewidth = .1, color = c1\n    ),\n    legend.title = element_markdown(family = \"ubuntu\", size = 18, color = c3),\n    legend.text = element_text(family = \"jet\", color = c3)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2024/s33/viz.png\",\n  width = 30,\n  height = 28.5,\n  units = \"cm\")\n\n# abro\nbrowseURL(glue(\"{getwd()}/2024/s33/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2024",
      "Semana 33"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_14.html",
    "href": "tidytuesday/2025/semana_14.html",
    "title": "Semana 14",
    "section": "",
    "text": "Tiempo de espera en EE.UU. en caso de atenci√≥n de una emergencia m√©dica.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 14"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_14.html#paquetes",
    "href": "tidytuesday/2025/semana_14.html#paquetes",
    "title": "Semana 14",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 14"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_14.html#estilos",
    "href": "tidytuesday/2025/semana_14.html#estilos",
    "title": "Semana 14",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\ncol &lt;- MoMAColors::moma.colors(palette_name = \"Panton\", 7)\nc1 &lt;- \"#DFD3D1\"\nc2 &lt;- \"#DFAE9C\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 14"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_14.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_14.html#ep√≠grafe",
    "title": "Semana 14",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{col[5]};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 14, \",\n    \"&lt;b&gt;&lt;br&gt;Centers for Medicare and Medicaid Services&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{col[5]};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{col[5]};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 14"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_14.html#datos",
    "href": "tidytuesday/2025/semana_14.html#datos",
    "title": "Semana 14",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 14)\ncare_state &lt;- tuesdata$care_state",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 14"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_14.html#procesamiento",
    "href": "tidytuesday/2025/semana_14.html#procesamiento",
    "title": "Semana 14",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa agrupar los estados por tiempo promedio de espera en caso de emergencias.\nLos colores se asignan aleatoriamente.\n\n\nOcultar c√≥digo\nset.seed(111)\n\nd &lt;- care_state |&gt;\n  filter(condition == \"Emergency Department\") |&gt;\n  select(state, score) |&gt;\n  reframe(\n    m = mean(score, na.rm = TRUE),\n    .by = state\n  ) |&gt;\n  mutate(tiempo = hms::hms(minute = m)) |&gt;\n  mutate(\n    hora = hour(tiempo),\n    minuto = minute(tiempo)\n  ) |&gt;\n  mutate(label = paste0(hora, \"H \", minuto, \"M\")) %&gt;%\n  mutate(\n    col = rep(sample(col), length.out = nrow(.))\n  )",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 14"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_14.html#figura",
    "href": "tidytuesday/2025/semana_14.html#figura",
    "title": "Semana 14",
    "section": "Figura",
    "text": "Figura\nEtiquetas del tiempo de espera en el centro de la figura. Agrego subt√≠tulo y nivel de transparencia.\n\n\nOcultar c√≥digo\neje_v &lt;- map(\n  .x = 0:7,\n  ~hms::hms(period(c(2, 30*.x), c(\"hour\", \"minute\")))\n) |&gt;\n  list_c()\n\neje_v_label &lt;- paste0(\n  \"0\",\n  hour(eje_v), \":\",\n  if_else(minute(eje_v) == 0, \"00\", as.character(minute(eje_v)))\n)\n\nmi_subtitulo &lt;- glue(\n  \"Tiempos de espera en&lt;br&gt;&lt;b style='color: {col[1]}'&gt;emergencias m√©dicas&lt;/b&gt;\n  &lt;br&gt;en **EE.UU.**\"\n)\n\nalfa &lt;- .8\n\n\nFigura.\n\n\nOcultar c√≥digo\ng &lt;- d |&gt;\n  arrange(tiempo) %&gt;%\n  mutate(\n    x = rep(sample(c(-3:-1, 1:3)), length.out = nrow(.))\n  ) |&gt;\n  mutate(\n    hjust = if_else(x &lt; 0, 1, 0)\n  ) |&gt;\n  ggplot(aes(0, tiempo, color = col)) +\n  geom_vline(\n    xintercept = 0, linewidth = 2, linetype = 1, color = c2, alpha = alfa\n  ) +\n  geom_point(alpha = alfa) +\n  geom_segment(\n    aes(x = 0, xend = x), alpha = alfa, linewidth = 1\n  ) +\n  geom_label(\n    aes(x = x, label = state, hjust = hjust), size = 6, family = \"jet\",\n    fill = alpha(c1, alfa), label.size = .6\n  ) +\n  annotate(\n    geom = \"label\", x = 0, y = eje_v, label = eje_v_label, fill = col[5],\n    label.size = unit(0, \"mm\"), label.padding = unit(0.5, \"lines\"), size = 7,\n    family = \"jet\", color = \"white\", label.r = unit(0, \"mm\")\n  ) +\n  scale_y_continuous(expand = c(0, 0)) +\n  scale_color_identity() +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    subtitle = mi_subtitulo, caption = mi_caption\n  ) +\n  theme_void() +\n  theme(\n    aspect.ratio = 2.4,\n    text = element_text(family = \"ubuntu\"),\n    plot.background = element_rect(fill = c1, color = NA),\n    plot.subtitle = element_markdown(\n      color = col[7], size = 30, margin = margin(b = 30, t = 10), hjust = .5,\n      lineheight = 1.2\n    ),\n    plot.caption = element_markdown(\n      color = col[6], size = 14, margin = margin(t = 35, b = 10, r = -75),\n      lineheight = 1.2\n    ),\n    panel.background = element_blank()\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_14.png\",\n  width = 20,\n  height = 40,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 14"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_25.html",
    "href": "tidytuesday/2025/semana_25.html",
    "title": "Semana 25",
    "section": "",
    "text": "Cantidad de casos de rubeola y sarampi√≥n por regi√≥n.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 25"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_25.html#paquetes",
    "href": "tidytuesday/2025/semana_25.html#paquetes",
    "title": "Semana 25",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 25"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_25.html#estilos",
    "href": "tidytuesday/2025/semana_25.html#estilos",
    "title": "Semana 25",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"#666E9A\"\nc2 &lt;- \"#557A47\"\nc3 &lt;- \"#D6E0FF\"\nc4 &lt;- \"black\"\nc5 &lt;- \"grey90\"\nc6 &lt;- \"grey95\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 25"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_25.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_25.html#ep√≠grafe",
    "title": "Semana 25",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 25, \",\n  \"&lt;b&gt;World Health Organisation&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 25"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_25.html#datos",
    "href": "tidytuesday/2025/semana_25.html#datos",
    "title": "Semana 25",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 25)\ncases_month &lt;- tuesdata$cases_month\ncases_year &lt;- tuesdata$cases_year",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 25"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_25.html#procesamiento",
    "href": "tidytuesday/2025/semana_25.html#procesamiento",
    "title": "Semana 25",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa la cantidad de casos por regi√≥n, anualmente.\nSumo la cantidad anual, reordeno y agrego traducci√≥n a las regiones.\n\n\nOcultar c√≥digo\nregion_etq &lt;- c(\n  AFRO = \"√Åfrica\",\n  AMRO = \"Am√©ricas\",\n  EMRO = \"Mediterr√°neo Oriental\",\n  EURO = \"Europa\",\n  SEARO = \"Asia Sudoriental\",\n  WPRO = \"Pac√≠fico Occidental\"\n)\n\nd &lt;- cases_year |&gt; \n  reframe(\n    Sarampi√≥n = sum(measles_total),\n    Rubeola = sum(rubella_total),\n    .by = c(region, year)\n  ) |&gt; \n  pivot_longer(\n    cols = c(Sarampi√≥n, Rubeola),\n    names_to = \"caso\",\n    values_to = \"cantidad\"\n  ) |&gt; \n  mutate(reg = region_etq[region]) |&gt; \n  mutate(reg = fct_reorder(reg, cantidad)) |&gt; \n  mutate(\n    caso = if_else(\n      caso == \"Sarampi√≥n\",\n      glue(\"&lt;b style='color:{c1}'&gt;Sarampi√≥n&lt;/b&gt;\"),\n      glue(\"&lt;b style='color:{c2}'&gt;Rubeola&lt;/b&gt;\")\n    )\n  )",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 25"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_25.html#figura",
    "href": "tidytuesday/2025/semana_25.html#figura",
    "title": "Semana 25",
    "section": "Figura",
    "text": "Figura\nT√≠tulo y figura.\n\n\nOcultar c√≥digo\nmi_titulo &lt;- glue(\n  \"Cantidad de casos de &lt;b style='color: {c2}'&gt;rubeola&lt;/b&gt; y \n  &lt;b style='color: {c1}'&gt;sarampi√≥n&lt;/b&gt; por regi√≥n.\"\n)\n\ng &lt;- ggplot(d, aes(year, cantidad, color = caso)) +\n  geom_line(linewidth = 1, show.legend = FALSE) +\n  geom_point(size = 2, show.legend = FALSE) +\n  geom_point(size = .5, color = c6, show.legend = FALSE) +\n  facet_grid(caso ~ reg, scales = \"free_y\", switch = \"y\", axes = \"all_x\") +\n  scale_x_continuous(breaks = scales::breaks_width(4)) +\n  scale_y_continuous(\n    position = \"right\",\n    labels = scales::label_number(big.mark = \".\", decimal.mark = \",\")\n  ) +\n  scale_color_manual(\n    values = c(c2, c1)\n  ) +\n  labs(x = NULL, y = NULL, title = mi_titulo, caption = mi_caption) +\n  theme_bw(base_size = 10, base_family = \"ubuntu\") +\n  theme(\n    text = element_text(color = c4),\n    plot.margin = margin(r = 10, l = 10),\n    plot.background = element_rect(fill = c5, color = NA),\n    plot.title = element_markdown(color = c4, margin = margin(b = 15)),\n    plot.title.position = \"plot\",\n    plot.caption = element_markdown(\n      color = c2, size = rel(.9), margin = margin(t = 15), lineheight = 1.2\n    ),\n    aspect.ratio = 1,\n    axis.text = element_text(family = \"jet\", color = c4),\n    panel.background = element_rect(fill = c6),\n    panel.grid.minor = element_blank(),\n    panel.grid.major = element_line(color = c5, linewidth = .3),\n    panel.spacing = unit(1, \"line\"),\n    strip.background = element_rect(fill = c3, color = c4),\n    strip.background.y = element_blank(),\n    strip.text = element_markdown(face = \"bold\", color = c4),\n    strip.text.y = element_markdown(size = rel(1.6))\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_25.png\",\n  width = 30,\n  height = 13,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 25"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_20.html",
    "href": "tidytuesday/2025/semana_20.html",
    "title": "Semana 20",
    "section": "",
    "text": "Playas en Sydney, Australia, indicando la regi√≥n a la que pertenecen.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 20"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_20.html#paquetes",
    "href": "tidytuesday/2025/semana_20.html#paquetes",
    "title": "Semana 20",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(patchwork)\nlibrary(terra)\nlibrary(magick)\nlibrary(tidyterra)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 20"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_20.html#estilos",
    "href": "tidytuesday/2025/semana_20.html#estilos",
    "title": "Semana 20",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"#2539AF\"\nc2 &lt;- \"#CB5252\"\nc3 &lt;- \"#824290\"\nc4 &lt;- \"white\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 20"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_20.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_20.html#ep√≠grafe",
    "title": "Semana 20",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 20,&lt;br&gt;\",\n    \"&lt;b&gt;New South Wales State&lt;br&gt;Government Beachwatch&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 20"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_20.html#datos",
    "href": "tidytuesday/2025/semana_20.html#datos",
    "title": "Semana 20",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 20)\nwater_quality &lt;- tuesdata$water_quality",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 20"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_20.html#procesamiento",
    "href": "tidytuesday/2025/semana_20.html#procesamiento",
    "title": "Semana 20",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa la posici√≥n de las playas y la regi√≥n.\nRemuevo playas que se encuentran en el extremo Oeste, removiendo aquellas playas que tengan valores m√≠nimos de longitud geogr√°fica.\n\n\nOcultar c√≥digo\nlon &lt;- water_quality |&gt; \n  distinct(longitude) %&gt;%\n  slice_max(order_by = longitude, n = nrow(.)-7)\n\n\nAl combinar las longitudes geogr√°ficas con los datos, convierto a vector y obtengo su extensi√≥n.\n\n\nOcultar c√≥digo\nv &lt;- water_quality |&gt; \n  select(region, latitude, longitude) |&gt; \n  inner_join(lon, by = join_by(longitude)) |&gt; \n  distinct() |&gt; \n  vect(geom = c(\"longitude\", \"latitude\"), crs = \"EPSG:4326\")\n\nbbox &lt;- vect(ext(v), crs(v))\n\n\nObtengo el vector de Australia, recorto a la regi√≥n de las playas y descargo el r√°ster de elevaci√≥n.\n\n\nOcultar c√≥digo\naus &lt;- rgeoboundaries::gb_adm0(country = \"AUS\") |&gt; \n  vect()\n\naus_crop &lt;- terra::crop(aus, bbox)\n\nelev_r &lt;- elevatr::get_elev_raster(\n  locations = sf::st_as_sf(aus_crop),\n  z = 13,\n  clip = \"locations\"\n) |&gt; \n  rast()\n\n\nRemuevo valores anormales con una mediana de ventana 3x3 y renombro la variable.\n\n\nOcultar c√≥digo\nelev &lt;- terra::focal(elev_r, w = 3, fun = median)\nnames(elev) &lt;- \"altura\"\nelev[elev &lt; -50] &lt;- NA\n\n\nRecorto el vector de Australia.\n\n\nOcultar c√≥digo\nbbox_aus &lt;- ext(110, 157, ext(aus)$ymin, ext(aus)$ymax) |&gt; \n  vect(crs = crs(aus))\n\naus_mapa &lt;- crop(aus, bbox_aus)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 20"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_20.html#mapa-de-australia",
    "href": "tidytuesday/2025/semana_20.html#mapa-de-australia",
    "title": "Semana 20",
    "section": "Mapa de Australia",
    "text": "Mapa de Australia\nVector punto de la ciudad de Sydney.\n\n\nOcultar c√≥digo\nsydney &lt;- tibble(\n  x = 151.2,\n  y = -33.866667,\n  label = \"Sydney\"\n) |&gt; \n  vect(geom = c(\"x\", \"y\"), crs = crs(v))\n\n\nCreo mapa indicando la ubicaci√≥n y nombre de Sydney. Guardo figura.\n\n\nOcultar c√≥digo\ng_aus &lt;- ggplot() +\n  geom_spatvector(data = aus_mapa, fill = c1, color = NA) +\n  geom_spatvector(\n    data = sydney, size = 4, color = c3, shape = 21, fill = c4, stroke = 1\n  ) +\n  geom_spatvector_text(\n    data = sydney, aes(label = label), hjust = 1, vjust = -.6, color = c4,\n    family = \"ubuntu\", size = 7\n  ) +\n  coord_sf(expand = FALSE) +\n  theme_void() +\n  theme(\n    plot.margin = margin(0, 0, 0, 0),\n    plot.background = element_blank()\n  )\n\nggsave(\n  plot = g_aus,\n  filename = \"tidytuesday/2025/australia.png\",\n  width = 1000,\n  height = 1000,\n  units = \"px\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 20"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_20.html#mapa-de-playas",
    "href": "tidytuesday/2025/semana_20.html#mapa-de-playas",
    "title": "Semana 20",
    "section": "Mapa de playas",
    "text": "Mapa de playas\nCreo una funci√≥n para indicar la posici√≥n vertical de las anotaciones seg√∫n la fracci√≥n de la altura disponible.\n\n\nOcultar c√≥digo\naltura_label &lt;- function(x) ext(bbox)$ymin + (ext(bbox)$ymax-ext(bbox)$ymin)*x\n\n\nCreo subt√≠tulo, fuente de datos y autor.\n\n\nOcultar c√≥digo\nmi_subitulo_tbl &lt;- tibble(\n  x = ext(bbox)$xmax*1.0001,\n  y = altura_label(1),\n  label = \"Playas de\\nSydney\"\n) |&gt; \n  vect(geom = c(\"x\", \"y\"), crs = crs(v))\n\nmi_caption_tbl &lt;- tibble(\n  x = ext(bbox)$xmax*.9997,\n  y = altura_label(.1),\n  label = mi_caption\n)\n\n\nMapa con la ubicaci√≥n de las playas. Guardo la figura.\n\n\nOcultar c√≥digo\ng &lt;- ggplot() +\n  geom_spatraster(\n    data = elev, aes(fill = altura), \n    maxcell = prod(dim(elev)),\n    show.legend = FALSE\n  ) +\n  geom_spatvector(\n    data = v, aes(shape = region), size = 7, alpha = .8, fill = c3,\n    color = c4\n  ) +\n  geom_spatvector_text(\n    data = mi_subitulo_tbl, aes(label = label), family = \"ubuntu\", size = 23,\n    hjust = 0, vjust = 1, color = c3, fontface = \"bold\"\n  ) +\n  geom_richtext(\n    data = mi_caption_tbl, aes(x, y, label = label), inherit.aes = FALSE,\n    size = 24/.pt, hjust = 0, vjust = 1, family = \"ubuntu\", fill = NA,\n    label.colour = NA, color = c2\n  ) +\n  scale_fill_grass_c(palette = \"haxby\") +\n  scale_shape_manual(\n    breaks = unique(v$region),\n    values = c(21, 22, 23, 24),\n    labels = c(\n      \"Bah√≠a de Sydney\", \"Sydney Norte\", \"Sydney Sur\", \"Sidney Capital\"\n    )\n  ) +\n  coord_sf(expand = FALSE, clip = \"off\") +\n  labs(shape = NULL) +\n  theme_void(base_family = \"ubuntu\", base_size = 20) +\n  theme(\n    plot.margin = margin(r = 80, t = 15, l = 10, b = 15),\n    plot.background = element_rect(fill = c4, color = NA),\n    legend.position = \"right\",\n    legend.justification.right = c(.5, .3),\n    legend.text = element_text(size = rel(1.2), color = c2),\n    legend.key.spacing.y = unit(10, \"pt\")\n  )\n\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/playa.png\",\n  width = 30,\n  height = 46,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 20"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_20.html#mapa-compuesto",
    "href": "tidytuesday/2025/semana_20.html#mapa-compuesto",
    "title": "Semana 20",
    "section": "Mapa compuesto",
    "text": "Mapa compuesto\nLeo ambos mapas y agrego el de Australia, de menor tama√±o, sobre el mapa de playas. Guardo la figura final.\n\n\nOcultar c√≥digo\nimg_aus &lt;- image_read(\"tidytuesday/2025/australia.png\") |&gt; \n  image_scale(geometry = \"1300x\")\n\nimg_playa &lt;- image_read(\"tidytuesday/2025/playa.png\")\n\nimg_playa |&gt;\n  image_composite(img_aus, gravity = \"northeast\", offset = \"+150+1400\") |&gt;\n  image_write(path = \"tidytuesday/2025/semana_20.png\")",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 20"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_21.html",
    "href": "tidytuesday/2025/semana_21.html",
    "title": "Semana 21",
    "section": "",
    "text": "Tendencia entre tama√±o de monstruos y sus propiedades en Dungeons & Dragons.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 21"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_21.html#paquetes",
    "href": "tidytuesday/2025/semana_21.html#paquetes",
    "title": "Semana 21",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(patchwork)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 21"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_21.html#estilos",
    "href": "tidytuesday/2025/semana_21.html#estilos",
    "title": "Semana 21",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"#A41400\"\nc2 &lt;- \"#007E2E\"\nc3 &lt;- \"#00B7A7\"\nc4 &lt;- \"#E50712\"\n\n\nFuentes: Ubuntu, JetBrains Mono y Uncial Antiqua.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nfont_add_google(\n  name = \"Uncial Antiqua\",\n  family = \"uncial\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 21"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_21.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_21.html#ep√≠grafe",
    "title": "Semana 21",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 21, \",\n  \"&lt;b&gt;Dungeons & Dragons System Reference Document&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 21"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_21.html#datos",
    "href": "tidytuesday/2025/semana_21.html#datos",
    "title": "Semana 21",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 21)\nmonsters &lt;- tuesdata$monsters",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 21"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_21.html#procesamiento",
    "href": "tidytuesday/2025/semana_21.html#procesamiento",
    "title": "Semana 21",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa la relaci√≥n entre el tama√±o de los monstruos y el puntaje de las propiedades.\nTraducciones y orden correcto de tama√±os y propiedades.\n\n\nOcultar c√≥digo\ntama√±os_v &lt;- unique(monsters$size)\ntama√±os_trad &lt;- c(\n  \"Grande\",\n  \"Mediano\",\n  \"Peque√±o\",\n  \"Mediano/Peque√±o\",\n  \"Enorme\",\n  \"Gigantesco\",\n  \"Diminuto\"\n)\n\ntama√±os_v &lt;- set_names(tama√±os_trad, tama√±os_v)\ntama√±os_orden &lt;- c(\n  \"Diminuto\",\n  \"Peque√±o\",\n  \"Mediano/Peque√±o\",\n  \"Mediano\",\n  \"Grande\",\n  \"Enorme\",\n  \"Gigantesco\"\n)\n\nprop_v &lt;- c(\"str\", \"dex\", \"con\", \"int\", \"wis\", \"cha\")\nprop_trad &lt;- c(\n  \"Fuerza\",\n  \"Destreza\",\n  \"Constituci√≥n\",\n  \"Inteligencia\",\n  \"Sabidur√≠a\",\n  \"Carisma\"\n) |&gt;\n  toupper()\nprop_v &lt;- set_names(prop_trad, prop_v)\n\n\nSelecciono columnas de inter√©s e incorporo traducciones.\n\n\nOcultar c√≥digo\nd &lt;- monsters |&gt;\n  select(size, str, dex, con, int, wis, cha) |&gt;\n  pivot_longer(\n    cols = -size,\n    names_to = \"param\",\n    values_to = \"valor\"\n  ) |&gt;\n  mutate(\n    tama√±o = tama√±os_v[size]\n  ) |&gt;\n  mutate(\n    tama√±o = fct(tama√±o, tama√±os_orden)\n  ) |&gt;\n  mutate(\n    parametro = prop_v[param]\n  )",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 21"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_21.html#figura",
    "href": "tidytuesday/2025/semana_21.html#figura",
    "title": "Semana 21",
    "section": "Figura",
    "text": "Figura\nLa figura final est√° compuesta de los paneles de puntos para cada propiedad, y la leyenda indicando el tama√±o de los monstruos. Ambas figuras est√° combinadas con {patchwork}.\n\nFigura leyenda de tama√±os\nCreo un tibble con las posiciones y etiquetas de texto para la leyenda de tama√±os.\n\n\nOcultar c√≥digo\nabrev_v &lt;- c(\"DI\", \"PE\", \"MP\", \"ME\", \"GR\", \"EN\", \"GI\")\nabrev_tbl &lt;- tibble(\n  abr = abrev_v,\n  ext = tama√±os_orden\n) |&gt;\n  mutate(\n    x = 1:length(tama√±os_orden),\n    y = 1\n  )\n\n\nFigura mostrando la leyenda.\n\n\nOcultar c√≥digo\ng_legend &lt;- ggplot(abrev_tbl, aes(x, y)) +\n  geom_text(aes(label = abr), size = 4, family = \"jet\", color = c1) +\n  geom_text(aes(y = .4, label = ext), size = 4, family = \"ubuntu\", color = c2) +\n  coord_cartesian(\n    clip = \"off\",\n    expand = FALSE,\n    ylim = c(0, 1),\n    xlim = c(1.25, 7)\n  ) +\n  theme_void() +\n  theme(\n    aspect.ratio = .05,\n    plot.margin = margin(t = 16),\n    plot.background = element_rect(color = NA, fill = \"grey90\")\n  )\n\n\n\n\nFigura de puntos\nCada panel corresponde a una propiedad y tiene un color de fondo espec√≠fico.\n\n\nOcultar c√≥digo\ncuadro_tbl &lt;- distinct(d, parametro) |&gt;\n  mutate(\n    xmin = 0,\n    xmax = 7.5,\n    ymin = 0,\n    ymax = 30.5\n  )\n\n\nFigura de puntos por panel.\n\n\nOcultar c√≥digo\ng_points &lt;- ggplot(d, aes(as.numeric(tama√±o), valor, color = parametro)) +\n  geom_rect(\n    data = cuadro_tbl,\n    aes(\n      xmin = xmin,\n      xmax = xmax,\n      ymin = ymin,\n      ymax = ymax,\n      fill = parametro\n    ),\n    inherit.aes = FALSE,\n    show.legend = FALSE\n  ) +\n  geom_rect(\n    data = cuadro_tbl,\n    aes(\n      xmin = xmin,\n      xmax = xmax,\n      ymin = ymin,\n      ymax = ymax\n    ),\n    inherit.aes = FALSE,\n    fill = alpha(\"white\", .9)\n  ) +\n  geom_point(\n    alpha = 1 / 4,\n    show.legend = FALSE,\n    position = position_jitter(\n      seed = 2025,\n      width = .1\n    )\n  ) +\n  geom_smooth(\n    se = FALSE,\n    method = \"lm\",\n    formula = y ~ x,\n    show.legend = FALSE,\n    linewidth = 2,\n    lineend = \"round\"\n  ) +\n  geom_smooth(\n    se = FALSE,\n    method = \"lm\",\n    formula = y ~ x,\n    show.legend = FALSE,\n    color = \"white\",\n    linewidth = .6,\n    lineend = \"round\"\n  ) +\n  facet_wrap(vars(parametro), nrow = 2, scales = \"free\") +\n  scale_x_continuous(\n    breaks = 1:length(tama√±os_orden),\n    labels = abrev_v\n  ) +\n  scale_y_continuous(breaks = scales::breaks_width(5)) +\n  MetBrewer::scale_fill_met_d(\n    name = \"Austria\"\n  ) +\n  MetBrewer::scale_color_met_d(\n    name = \"Austria\"\n  ) +\n  coord_cartesian(ylim = c(0, 30), xlim = c(.5, 7.5), expand = FALSE) +\n  labs(x = NULL, y = NULL) +\n  ggthemes::theme_par(base_size = 15, base_family = \"ubuntu\") +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(),\n    plot.background = element_blank(),\n    panel.background = element_rect(fill = \"grey95\"),\n    panel.spacing = unit(1, \"cm\"),\n    axis.text = element_text(size = rel(.8), family = \"jet\"),\n    axis.ticks.length = unit(3, \"pt\"),\n    axis.ticks = element_line(linewidth = .3),\n    strip.text = element_text(\n      face = \"bold\",\n      family = \"uncial\",\n      size = rel(1.3)\n    ),\n    strip.background = element_blank(),\n    strip.clip = \"off\"\n  )\n\n\n\n\nComposici√≥n final\nDefino el logo de Dungeons & Dragons como t√≠tulo y agrego subt√≠tulo.\n\n\nOcultar c√≥digo\nlink &lt;- \"https://upload.wikimedia.org/wikipedia/en/thumb/8/8e/Dungeons_%26_Dragons_5th_Edition_logo.svg/1280px-Dungeons_%26_Dragons_5th_Edition_logo.svg.png\"\n\nlogo &lt;- glue(\"&lt;img src='{link}' width=120 /&gt;\")\n\nmi_subtitulo &lt;- glue(\n  \"Caracter√≠sticas de los &lt;b style='color: {c4}'&gt;monstruos&lt;/b&gt; de acuerdo al \n  tama√±o.\"\n)\n\n\nCombino ambas figuras y agrego los elementos restantes.\n\n\nOcultar c√≥digo\ng &lt;- g_points /\n  g_legend +\n  plot_layout(heights = c(20, 1)) +\n  plot_annotation(\n    title = logo,\n    subtitle = mi_subtitulo,\n    caption = mi_caption,\n    theme = theme(\n      text = element_text(family = \"ubuntu\"),\n      plot.margin = margin(t = 10),\n      plot.background = element_rect(fill = \"grey95\"),\n      plot.title = element_markdown(margin = margin(b = 15, l = 30)),\n      plot.subtitle = element_markdown(\n        margin = margin(t = -50, b = 25),\n        hjust = .5,\n        size = 20\n      ),\n      plot.caption = element_markdown(\n        color = c3,\n        hjust = .5,\n        size = 11,\n        lineheight = 1.3,\n        margin = margin(t = 10, b = 10)\n      )\n    )\n  )\n\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_21.png\",\n  width = 30,\n  height = 25,\n  units = \"cm\"\n)\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_21.png\",\n  width = 30,\n  height = 25,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 21"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_10.html",
    "href": "tidytuesday/2025/semana_10.html",
    "title": "Semana 10",
    "section": "",
    "text": "Duraci√≥n de pel√≠culas de P√≠xar y cambios entre franquicias.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 10"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_10.html#paquetes",
    "href": "tidytuesday/2025/semana_10.html#paquetes",
    "title": "Semana 10",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 10"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_10.html#funciones",
    "href": "tidytuesday/2025/semana_10.html#funciones",
    "title": "Semana 10",
    "section": "Funciones",
    "text": "Funciones\n\n\nOcultar c√≥digo\nf_est &lt;- function(x) {\n  paste0(\"&lt;b style='font-family: dynapuff; color: black'&gt;\", x, \"&lt;/b&gt;\")\n}",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 10"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_10.html#estilos",
    "href": "tidytuesday/2025/semana_10.html#estilos",
    "title": "Semana 10",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"#9D3151\"\nc2 &lt;- \"#A75529\"\nc3 &lt;- \"grey90\"\nc4 &lt;- \"grey75\"\nc5 &lt;- \"black\"\n\n\nFuentes: Ubuntu, JetBrains Mono y Barriecito.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nfont_add_google(name = \"DynaPuff\", family = \"dynapuff\", db_cache = FALSE)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 10"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_10.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_10.html#ep√≠grafe",
    "title": "Semana 10",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{c2};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 10, \",\n    \"&lt;b style='font-family:jet;'&gt;{{pixarfilms}}&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c2};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c2};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 10"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_10.html#datos",
    "href": "tidytuesday/2025/semana_10.html#datos",
    "title": "Semana 10",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 10)\npixar_films &lt;- tuesdata$pixar_films",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 10"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_10.html#procesamiento",
    "href": "tidytuesday/2025/semana_10.html#procesamiento",
    "title": "Semana 10",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa la diferencia de tiempo entre pel√≠culas de la misma franquicia, y ver la duraci√≥n total de cada pel√≠cula con su fecha de estreno.\n\n\nOcultar c√≥digo\nd &lt;- pixar_films |&gt;\n  drop_na() |&gt;\n  select(film, release_date, run_time, film_rating) |&gt;\n  mutate(\n    franq = case_when(\n      str_detect(film, \"Toy\") ~ \"Toy Story\",\n      str_detect(film, \"Cars\") ~ \"Cars\",\n      str_detect(film, \"Finding\") ~ \"Finding\",\n      str_detect(film, \"Incredibles\") ~ \"Incredibles\",\n      str_detect(film, \"Monsters\") ~ \"Monsters\",\n      .default = film\n    )\n  ) |&gt;\n  arrange(release_date) |&gt;\n  mutate(franq = fct_reorder(franq, release_date))\n\n\nAgrego √≠conos de flechas y extraigo todas las franquicias.\n\n\nOcultar c√≥digo\ni_arriba &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0737;&lt;/span&gt;\")\ni_abajo &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf072e;&lt;/span&gt;\")\n\nfranquicias &lt;- d |&gt;\n  count(franq) |&gt;\n  filter(n &gt; 1) |&gt;\n  pull(franq)\n\n\nObtengo el punto medio entre dos pel√≠culas para cada franquicia.\n\n\nOcultar c√≥digo\nd2 &lt;- d |&gt;\n  select(-film_rating) |&gt;\n  filter(franq %in% franquicias) |&gt;\n  nest(.by = franq) |&gt;\n  mutate(\n    dif_fecha = map(.x = data, ~ .x |&gt; mutate(l_fecha = lag(release_date))),\n    dif_time = map(.x = data, ~ .x |&gt; mutate(l_time = lag(run_time)))\n  ) |&gt;\n  unnest(dif_fecha, dif_time) |&gt;\n  select(-data, -ends_with(\"1\")) |&gt;\n  mutate(\n    fecha_m = release_date + (l_fecha - release_date)/2,\n    time_m = run_time - l_time\n  ) |&gt;\n  mutate(\n    time_m = if_else(\n      time_m &gt; 0,\n      paste0(i_arriba, time_m),\n      paste0(i_abajo, abs(time_m))\n    )\n  )",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 10"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_10.html#figura",
    "href": "tidytuesday/2025/semana_10.html#figura",
    "title": "Semana 10",
    "section": "Figura",
    "text": "Figura\nLogo de P√≠XAR, grilla de puntos para poder al fondo y t√≠tulo.\n\n\nOcultar c√≥digo\nlink &lt;- \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/40/Pixar_logo.svg/640px-Pixar_logo.svg.png\"\nlogo &lt;- glue(\"&lt;img src='{link}' width=230 /&gt;\")\n\np &lt;- expand_grid(\n  x = seq.Date(from = ymd(19960101), to = ymd(20220101), by = \"2 year\"),\n  y = unique(d$franq)\n)\n\nmi_titulo &lt;- glue(\n  \"Con excepci√≥n de {f_est('LUCA')}, todas\n  las pel√≠culas de {f_est('PIXAR')} duran menos de&lt;br&gt;\n  2 horas. Dentro de una misma franquicia, en algunos casos las&lt;br&gt;\n  secuelas duran menos ({f_est('CARS')}) o son m√°s extensas\n  ({f_est('MOSNTERS')})\"\n)\n\n\nFigura.\n\n\nOcultar c√≥digo\ng &lt;- ggplot(d, aes(release_date, franq, color = run_time)) +\n  geom_point(\n    data = p, aes(x, y), color = c4, size = .5, inherit.aes = FALSE\n  ) +\n  geom_point(size = 12, stroke = 1) +\n  geom_richtext(\n    data = d2, aes(fecha_m, label = time_m), size = 5, fill = NA,\n    label.size = unit(0, \"mm\"), family = \"jet\", color = c5\n  ) +\n  annotate(\n    geom = \"richtext\", x = I(-.25), y = I(-1.7), label = logo, fill = NA,\n    label.color = NA\n  ) +\n  scale_x_date(\n    date_breaks = \"2 year\",\n    date_labels = \"'%y\"\n  ) +\n  colorspace::scale_color_binned_sequential(\n    palette = \"Hawaii\"\n  ) +\n  coord_cartesian(\n    xlim = ymd(c(\"19940601\", \"20230101\")), ylim = c(.5, 16.5), expand = FALSE,\n    clip = \"off\"\n  ) +\n  labs(\n    x = NULL, y = NULL, fill = \"Duraci√≥n\\n(min)\", title = mi_titulo,\n    caption = mi_caption\n  ) +\n  ggthemes::theme_par(base_family = \"ubuntu\") +\n  theme(\n    aspect.ratio = 1.4,\n    plot.background = element_rect(fill = c3, color = NA),\n    plot.title = element_markdown(\n      color = c1, size = 25, margin = margin(b = 50, l = -65), lineheight = 1.3,\n      hjust = 0\n    ),\n    plot.title.position = \"plot\",\n    plot.caption = element_markdown(\n      size = 14, margin = margin(t = 15), lineheight = 1.3\n    ),\n    axis.text.x = element_text(family = \"jet\", size = 14),\n    axis.text.y = element_text(hjust = 1, family = \"dynapuff\", size = 22),\n    axis.ticks = element_blank(),\n    legend.position = \"bottom\",\n    legend.key.width = unit(50, \"pt\"),\n    legend.background = element_blank(),\n    legend.text = element_text(family = \"jet\"),\n    legend.title = element_text(\n      margin = margin(b = 15, r = 5), family = \"ubuntu\"\n    )\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_10.png\",\n  width = 30,\n  height = 35,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 10"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_19.html",
    "href": "tidytuesday/2025/semana_19.html",
    "title": "Semana 19",
    "section": "",
    "text": "Eventos s√≠smicos en el Monte Vesubio.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 19"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_19.html#paquetes",
    "href": "tidytuesday/2025/semana_19.html#paquetes",
    "title": "Semana 19",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(terra)\nlibrary(tidyterra)\nlibrary(marquee)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 19"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_19.html#estilos",
    "href": "tidytuesday/2025/semana_19.html#estilos",
    "title": "Semana 19",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"violetred\"\nc2 &lt;- \"#FEFED7\"\nc3 &lt;- \"#081C57\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 19"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_19.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_19.html#ep√≠grafe",
    "title": "Semana 19",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 19, \",\n  \"&lt;b&gt;Italian Istituto Nazionale di Geofisica e Vulcanologia&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 19"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_19.html#datos",
    "href": "tidytuesday/2025/semana_19.html#datos",
    "title": "Semana 19",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 19)\nvesuvius &lt;- tuesdata$vesuvius",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 19"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_19.html#procesamiento",
    "href": "tidytuesday/2025/semana_19.html#procesamiento",
    "title": "Semana 19",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa la cantidad de terremotos en el Vesubio, sobre un mapa, por los √∫ltimos nueve a√±os. El mapa es de la topograf√≠a del volc√°n.\nCreo un vector a partir de los datos desde 2016 inclusive.\n\n\nOcultar c√≥digo\nv &lt;- vesuvius |&gt;\n  drop_na(latitude, longitude) |&gt;\n  filter(year &gt;= 2016) |&gt; \n  terra::vect(\n    geom = c(\"longitude\", \"latitude\"), crs = \"EPSG:4326\"\n  )\n\nv_sf &lt;- sf::st_as_sf(v)\n\n\nCreo un c√≠rculo alrededor de las coordenadas del volc√°n y obtengo la elevaci√≥n del terreno.\n\n\nOcultar c√≥digo\nbuf_sf &lt;- data.frame(\n  x = 14.42599167,\n  y = 40.82166944\n) |&gt;\n  vect(geom = c(\"x\", \"y\"), crs = \"EPSG:4326\") |&gt;\n  buffer(2000, quadsegs = 500) |&gt;\n  sf::st_as_sf()\n\nelev &lt;- elevatr::get_elev_raster(\n  locations = buf_sf,\n  z = 13,\n  clip = \"locations\"\n) |&gt;\n  terra::rast()\n\nnames(elev) &lt;- \"altura\"\n\n\nRecorto los datos para conservar √∫nicamente los que coinciden con el r√°ster de elevaci√≥n.\n\n\nOcultar c√≥digo\nv_crop &lt;- sf::st_intersection(v_sf, buf_sf) |&gt; \n  vect()\n\n\nCuento la cantidad de eventos por a√±o y genero etiquetas para las facetas de la figura.\n\n\nOcultar c√≥digo\nv_crop_tbl &lt;- as.data.frame(v_crop, geom = \"xy\") |&gt; \n  as_tibble()\n\nv_n &lt;- count(v_crop_tbl, year) |&gt; \n  mutate(\n    label = glue(\"**{year}** ({n})\")\n  )\n\na√±o_label &lt;- v_n$label\na√±o_label &lt;- set_names(a√±o_label, as.character(v_n$year))",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 19"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_19.html#figura",
    "href": "tidytuesday/2025/semana_19.html#figura",
    "title": "Semana 19",
    "section": "Figura",
    "text": "Figura\nDefino un estilo para los t√≠tulos de las facetas.\n\n\nOcultar c√≥digo\nlabel_style &lt;- modify_style(\n  classic_style(),\n  \"body\",\n  family = \"JetBrains Mono\",\n  color = c1\n)\n\n\nCreo t√≠tulo y subt√≠tulo.\n\n\nOcultar c√≥digo\nmi_titulo &lt;- glue(\n  \"Actividad s√≠smica en el &lt;b style='color: {c1}'&gt;Monte Vesubio&lt;/b&gt;\"\n)\n\nmi_subtitulo &lt;- \"Los valores entre par√©ntesis corresponden a la cantidad de \neventos en ese a√±o.\"\n\n\nCreo los mapas con los eventos s√≠smicos por cada a√±o.\n\n\nOcultar c√≥digo\ng &lt;- ggplot() +\n  geom_spatraster(\n    data = elev, aes(fill = altura)\n  ) +\n  geom_spatvector(\n    data = v_crop, color = c1, size = 1, alpha = 1/3, shape = 16\n  ) +\n  scale_fill_whitebox_c(\n    palette = \"deep\",\n    name = \"Altura (m)\",\n    breaks = seq(500, 1250, 250),\n    labels = scales::label_number(big.mark = \".\", decimal.mark = \",\"),\n    limits = c(500, 1250)\n  ) +\n  facet_wrap(vars(year), ncol = 3, labeller = as_labeller(a√±o_label)) +\n  coord_sf(expand = FALSE) +\n  labs(title = mi_titulo, subtitle = mi_subtitulo, caption = mi_caption) +\n  theme_void(base_family = \"ubuntu\", base_size = 15) +\n  theme(\n    text = element_text(color = c2),\n    plot.margin = margin(r = 10, l = 10, b = 10),\n    plot.background = element_rect(fill = scales::col_darker(c3), color = NA),\n    plot.title = element_markdown(\n      size = rel(2.3), hjust = .5, margin = margin(b = 5, t = 10)\n    ),\n    plot.subtitle = element_markdown(\n      size = rel(1.5), hjust = .5, margin = margin(b = 10)\n    ),\n    plot.caption = element_markdown(\n      size = rel(1), lineheight = 1.3, margin = margin(t = 30)\n    ),\n    strip.text = element_marquee(\n      family = \"jet\", margin = margin(t = 10, b = 0), style = label_style,\n      size = rel(1.1)\n    ),\n    legend.position = \"bottom\",\n    legend.title = element_text(margin = margin(b = 18, r = 8)),\n    legend.key.width = unit(3, \"cm\"),\n    legend.box.spacing = unit(1, \"cm\"),\n    legend.text = element_text(family = \"jet\")\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_19.png\",\n  width = 30,\n  height = 39,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 19"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_18.html",
    "href": "tidytuesday/2025/semana_18.html",
    "title": "Semana 18",
    "section": "",
    "text": "Cantidad de proyectos de investigaci√≥n finalizados por estado en EE.UU.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 18"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_18.html#paquetes",
    "href": "tidytuesday/2025/semana_18.html#paquetes",
    "title": "Semana 18",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 18"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_18.html#estilos",
    "href": "tidytuesday/2025/semana_18.html#estilos",
    "title": "Semana 18",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"#420F75\"\nc2 &lt;- \"#552000\"\nc3 &lt;- \"white\"\nc4 &lt;- \"#E1C1C8\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 18"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_18.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_18.html#ep√≠grafe",
    "title": "Semana 18",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 18, \",\n    \"&lt;b&gt;U.S. National Science Foundation&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 18"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_18.html#datos",
    "href": "tidytuesday/2025/semana_18.html#datos",
    "title": "Semana 18",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 18)\nnsf_terminations &lt;- tuesdata$nsf_terminations",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 18"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_18.html#procesamiento",
    "href": "tidytuesday/2025/semana_18.html#procesamiento",
    "title": "Semana 18",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa ver la distribuci√≥n de proyectos cancelados por estado de EE.UU, mediante un mapa.\n\n\nOcultar c√≥digo\nd &lt;- nsf_terminations |&gt; \n  count(org_state) |&gt; \n  rename(state = org_state)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 18"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_18.html#figura",
    "href": "tidytuesday/2025/semana_18.html#figura",
    "title": "Semana 18",
    "section": "Figura",
    "text": "Figura\nSubt√≠tulo indicando la cantidad de proyectos afectados y el estado con mayor cantidad.\n\n\nOcultar c√≥digo\nmi_subtitulo &lt;- glue(\n  \"La administraci√≥n Trump decidi√≥ terminar con {{{c1} _**{nrow(nsf_terminations)}**_} \n  subvenciones a investigaci√≥n.\n  **California** fue el estado m√°s afectado con {{{c2} _**{d[d$n == max(d$n),]$n}**_} proyectos finalizados.\"\n)\n\n\n\n\nOcultar c√≥digo\ng &lt;- usmap::plot_usmap(\n  exclude = c(\"AK\", \"HI\"),\n  data = d,\n  values = \"n\",\n  color = c4,\n  linewidth = .6\n) +\n  coord_sf(expand = FALSE) +\n  scale_fill_steps2(\n    low = c1,\n    mid = c3,\n    high = c2,\n    midpoint = 64,\n    breaks = c(1, seq(25, 125, 25)),\n    limits = c(1, 125)\n  ) +\n  labs(\n    subtitle = mi_subtitulo,\n    fill = \"Cantidad de\\nproyectos afectados\",\n    caption = mi_caption\n  ) +\n  theme_void(base_family = \"ubuntu\", base_size = 20) +\n  theme(\n    plot.margin = margin(t = 10, b = 5, r = 15, l = 15),\n    plot.background = element_rect(fill = c4, color = NA),\n    plot.subtitle = marquee::element_marquee(\n      width = .92, lineheight = 1.3, size = rel(1.), margin = margin(b = 15)\n    ),\n    plot.caption = element_markdown(\n      color = c2, size = rel(.5), margin = margin(b = 10, t = 10),\n      lineheight = 1.3\n    ),\n    legend.position = \"inside\",\n    legend.position.inside = c(0, 0),\n    legend.justification.inside = c(0, 0),\n    legend.title = element_text(size = rel(.7)),\n    legend.text = element_text(family = \"jet\", size = rel(.5))\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_18.png\",\n  width = 30,\n  height = 22,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 18"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_27.html",
    "href": "tidytuesday/2025/semana_27.html",
    "title": "Semana 27",
    "section": "",
    "text": "Nombres de colores.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 27"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_27.html#paquetes",
    "href": "tidytuesday/2025/semana_27.html#paquetes",
    "title": "Semana 27",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 27"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_27.html#estilos",
    "href": "tidytuesday/2025/semana_27.html#estilos",
    "title": "Semana 27",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"grey10\"\nc2 &lt;- \"white\"\nc3 &lt;- \"#FE2C54\"\nc4 &lt;- \"#76FF7B\"\nc5 &lt;- \"#7BC8F6\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 27"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_27.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_27.html#ep√≠grafe",
    "title": "Semana 27",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{c4};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 27, \",\n    \"&lt;b&gt;xkcd Color Survey &lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c4};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c4};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 27"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_27.html#datos",
    "href": "tidytuesday/2025/semana_27.html#datos",
    "title": "Semana 27",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 27)\ncolor_ranks &lt;- tuesdata$color_ranks",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 27"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_27.html#procesamiento",
    "href": "tidytuesday/2025/semana_27.html#procesamiento",
    "title": "Semana 27",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesan los nombres que les dieron los encuestados a los colores, y poder visualizar los colores.\nDefino dos funciones auxiliares. Funci√≥n para asignar posiciones y el orden de los colores seleccionados.\n\n\nOcultar c√≥digo\nf_color &lt;- function(color_esp, color_eng, ancho = 7) {\n  color_tbl &lt;- color_ranks |&gt; \n    filter(str_detect(color, color_eng)) |&gt; \n    mutate(grupo = color_esp) |&gt; \n    mutate(rgb = map(hex, ~colorspace::hex2RGB(.x)@coords)) |&gt; \n    mutate(\n      r = map_dbl(rgb, ~.x[1]),\n      g = map_dbl(rgb, ~.x[2]),\n      b = map_dbl(rgb, ~.x[3])\n    ) |&gt; \n    arrange(r, g, b)\n\n  n_ancho &lt;- ancho\n  n_alto &lt;- ceiling(nrow(color_tbl)/n_ancho)\n  \n  expand_grid(\n    y = 30:(30-n_alto),\n    x = 1:n_ancho\n  ) |&gt; \n    mutate(id = row_number()) |&gt; \n    filter(id &lt;= nrow(color_tbl)) |&gt; \n    bind_cols(color_tbl)\n}\n\n\nFunci√≥n para agregar un color diferente a cada letra.\n\n\nOcultar c√≥digo\nf_label &lt;- function(x) {\n  n &lt;- nchar(x)\n  col &lt;- rep(c(c3, c4, c5), length.out = n)\n  l &lt;- str_split(x, \"\")[[1]]\n  glue(\n    \"&lt;b style='color:{col}'&gt;{l}&lt;/b&gt;\"\n  ) |&gt; \n    str_flatten()\n}\n\n\nIdentifico los colores de inter√©s, genero la base de datos y reordeno los colores.\n\n\nOcultar c√≥digo\nd &lt;- bind_rows(\n  f_color(\"azul\", \"blue\"),\n  f_color(\"rojo\", \"red\"),\n  f_color(\"verde\", \"green\"),\n) |&gt; \n  mutate(color = str_replace_all(color, \" \", \"\\n\")) |&gt; \n  mutate(grupo = factor(grupo, c(\"verde\", \"azul\", \"rojo\")))\ncolores_label &lt;- f_label(\"colores\")",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 27"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_27.html#figura",
    "href": "tidytuesday/2025/semana_27.html#figura",
    "title": "Semana 27",
    "section": "Figura",
    "text": "Figura\nGenero t√≠tulo y creo tibble para agregar a la figura de facetas.\n\n\nOcultar c√≥digo\nmi_titulo &lt;- glue(\n  \"En una encuesta de {colores_label}&lt;br&gt;se solicit√≥ a los participantes&lt;br&gt;que \n  nombren los colores que&lt;br&gt;ve√≠an.\"\n)\n\nmi_titulo_tbl &lt;- tibble(\n  x = 2,\n  y = 6,\n  label = mi_titulo,\n  grupo = factor(\"azul\")\n)\n\n\nFigura.\n\n\nOcultar c√≥digo\ng &lt;-  ggplot(d, aes(x, y, fill = hex)) +\n  geom_tile(color = c1, linewidth = .5, show.legend = FALSE) +\n  geom_text(\n    aes(x = x-.45, y = y+.45, label = color), size = 1.5, hjust = 0, vjust = 1,\n    family = \"ubuntu\", fontface = \"bold\", color = c1\n  ) +\n  geom_text(\n    aes(x = x+.45, y = y-.45, label = color), size = 1.5, hjust = 1, vjust = 0,\n    family = \"ubuntu\", fontface = \"bold\", color = c2\n  ) +\n  geom_richtext(\n    data = mi_titulo_tbl, aes(x, y, label = label), family = \"ubuntu\", size = 9,\n    color = c2, label.color = NA, inherit.aes = FALSE, hjust = 0,\n    fill = NA\n  ) +\n  facet_wrap(vars(grupo), nrow = 1) +\n  scale_fill_identity() +\n  coord_equal(expand = FALSE, clip = \"off\") +\n  labs(caption = mi_caption) +\n  theme_void(base_family = \"ubuntu\", base_size = 18) +\n  theme(\n    plot.margin = margin(10, 10, 10, 10),\n    plot.background = element_rect(fill = c1, color = NA),\n    plot.title = element_markdown(),\n    plot.caption = element_markdown(color = c3, lineheight = 1.3),\n    panel.spacing.x = unit(1, \"cm\"),\n    strip.text = element_blank()\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_27.png\",\n  width = 30,\n  height = 41,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 27"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_11.html",
    "href": "tidytuesday/2025/semana_11.html",
    "title": "Semana 11",
    "section": "",
    "text": "Relaci√≥n entre el ancho y el alto de cocos, seg√∫n su forma.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 11"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_11.html#paquetes",
    "href": "tidytuesday/2025/semana_11.html#paquetes",
    "title": "Semana 11",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggh4x)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 11"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_11.html#estilos",
    "href": "tidytuesday/2025/semana_11.html#estilos",
    "title": "Semana 11",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\ncol &lt;- MoMAColors::moma.colors(palette_name = \"Koons\")\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 11"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_11.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_11.html#ep√≠grafe",
    "title": "Semana 11",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{col[5]};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 11,&lt;br&gt;\",\n    \"&lt;b&gt;{{palmtrees}}&lt;/b&gt;&lt;/span&gt;, Emil Hvitfeldt.\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{col[5]};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{col[5]};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 11"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_11.html#datos",
    "href": "tidytuesday/2025/semana_11.html#datos",
    "title": "Semana 11",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 11)\npalmtrees &lt;- tuesdata$palmtrees",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 11"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_11.html#procesamiento",
    "href": "tidytuesday/2025/semana_11.html#procesamiento",
    "title": "Semana 11",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa la relaci√≥n entre el ancho y el largo de los cocos seg√∫n su forma.\nRemuevo formas con poca cantidad de datos y obtengo el m√°ximo valor entre largo y ancho.\n\n\nOcultar c√≥digo\nd &lt;- palmtrees |&gt;\n  drop_na(average_fruit_width_cm, average_fruit_length_cm, fruit_shape) |&gt;\n  filter(!fruit_shape %in% c(\"rounded\", \"fusiform\"))\n\nd_max &lt;- d |&gt;\n  reframe(\n    largo = max(average_fruit_length_cm),\n    ancho = max(average_fruit_width_cm),\n    .by = fruit_shape\n  ) |&gt;\n  mutate(l = if_else(largo &gt; ancho, largo, ancho)) |&gt;\n  arrange(fruit_shape) |&gt;\n  pull(l)\n\n\nModifico los l√≠mites convenientemente y genero los ejes (vertical y horizontal) de los paneles.\n\n\nOcultar c√≥digo\nd_max[2] &lt;- 10\nd_max[4] &lt;- 15\n\neje_y &lt;- list(\n  scale_y_continuous(\n    limits = c(0, d_max[1])\n  ),\n  scale_y_continuous(\n    limits = c(0, d_max[2]),\n    breaks = seq(0, d_max[2], 2)\n  ),\n  scale_y_continuous(\n    limits = c(0, d_max[3])\n  ),\n  scale_y_continuous(\n    limits = c(0, d_max[4])\n  ),\n  scale_y_continuous(\n    limits = c(0, d_max[5])\n  )\n)\n\neje_x &lt;- list(\n  scale_x_continuous(\n    limits = c(0, d_max[1])\n  ),\n  scale_x_continuous(\n    limits = c(0, d_max[2]),\n    breaks = seq(0, d_max[2], 2)\n  ),\n  scale_x_continuous(\n    limits = c(0, d_max[3])\n  ),\n  scale_x_continuous(\n    limits = c(0, d_max[4])\n  ),\n  scale_x_continuous(\n    limits = c(0, d_max[5])\n  )\n)\n\n\nAgrego las traducciones de las formas\n\n\nOcultar c√≥digo\nformas &lt;- sort(unique(d$fruit_shape))\nformas_trad &lt;- c(\"Elipsoide\", \"Elongado\", \"Globosa\", \"Ovoide\", \"Piramidal\")\nformas_trad &lt;- set_names(formas_trad, formas)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 11"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_11.html#figura",
    "href": "tidytuesday/2025/semana_11.html#figura",
    "title": "Semana 11",
    "section": "Figura",
    "text": "Figura\nLogo del paquete {palmtrees} y t√≠tulo.\n\n\nOcultar c√≥digo\nlink &lt;- \"https://raw.githubusercontent.com/EmilHvitfeldt/palmtrees/refs/heads/main/man/figures/logo.png\"\nlogo &lt;- glue(\"&lt;img src='{link}' width=100 /&gt;\")\n\nmi_titulo &lt;- glue(\n  \"Relaci√≥n entre ancho y alto de &lt;b style='color: {col[4]}'&gt;cocos&lt;/b&gt; seg√∫n\n  su forma\"\n)\n\n\nFigura.\n\n\nOcultar c√≥digo\ng &lt;- ggplot(\n  d, aes(\n    average_fruit_width_cm, average_fruit_length_cm, fill = fruit_shape,\n    shape = fruit_shape, color = fruit_shape\n  )\n) +\n  geom_smooth(method = \"lm\", se = FALSE, formula = y ~ x) +\n  geom_abline(linetype = 2, color = \"grey10\", linewidth = 1) +\n  geom_point(size = 7, color = \"grey20\", alpha = .8) +\n  facet_wrap(\n    vars(fruit_shape), nrow = 3, scales = \"free\", labeller = as_labeller(formas_trad)\n  ) +\n  facetted_pos_scales(x = eje_x, y = eje_y) +\n  scale_color_manual(\n    breaks = formas,\n    labels = formas_trad,\n    values = col\n  ) +\n  scale_fill_manual(\n    breaks = formas,\n    labels = formas_trad,\n    values = col\n  ) +\n  scale_shape_manual(\n    breaks = formas,\n    labels = formas_trad,\n    values = c(21, 24, 23, 21, 24, 23, 21)\n  ) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = mi_titulo,\n    tag = logo,\n    caption = mi_caption,\n    x = \"Ancho promedio de la fruta (cm)\",\n    y = \"Largo promedio de la fruta (cm)\"\n  ) +\n  theme_minimal(base_size = 20, base_family = \"ubuntu\") +\n  theme(\n    text = element_text(family = \"ubuntu\"),\n    aspect.ratio = 1,\n    plot.margin = margin(t = 50),\n    plot.background = element_rect(fill = \"grey90\", color = NA),\n    plot.title = element_markdown(\n      margin = margin(l = 60, b = 45), hjust = 0, color = col[1], face = \"bold\",\n      lineheight = 1.3, size = 26\n    ),\n    plot.tag = element_markdown(),\n    plot.tag.location = \"plot\",\n    plot.tag.position = c(.07, .99),\n    plot.caption = element_markdown(\n      color = col[4], face = \"bold\", lineheight = 1.3, size = 20,\n      margin = margin(t = -160, b = 80, r = -10)\n    ),\n    legend.position = \"none\",\n    panel.grid.major = element_line(color = \"grey80\"),\n    panel.grid.minor = element_blank(),\n    panel.spacing.y = unit(40, \"pt\"),\n    panel.spacing.x = unit(60, \"pt\"),\n    axis.text = element_text(family = \"jet\", color = \"black\"),\n    axis.title.y = element_text(hjust = 1),\n    axis.title.x = element_text(hjust = 0, margin = margin(t = 20)),\n    strip.text = element_text(face = \"bold\", hjust = 0, size = 21)\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_11.png\",\n  width = 30,\n  height = 47,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 11"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_03.html",
    "href": "tidytuesday/2025/semana_03.html",
    "title": "Semana 03",
    "section": "",
    "text": "Cantidad de personas muertas en expediciones al Himalaya.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 03"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_03.html#paquetes",
    "href": "tidytuesday/2025/semana_03.html#paquetes",
    "title": "Semana 03",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 03"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_03.html#estilos",
    "href": "tidytuesday/2025/semana_03.html#estilos",
    "title": "Semana 03",
    "section": "Estilos",
    "text": "Estilos\nColores\n\n\nOcultar c√≥digo\nc1 &lt;- \"grey5\"\nc2 &lt;- \"grey40\"\nc3 &lt;- \"grey70\"\nc4 &lt;- \"grey90\"\n\n\nFuentes: Ubuntu, JetBrains Mono y Bebas Neue\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nfont_add(\n  family = \"bebas\",\n  regular = \"././fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 03"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_03.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_03.html#ep√≠grafe",
    "title": "Semana 03",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{c4};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 03, \",\n    \"&lt;b&gt;Himalayan Database&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c4};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c4};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 03"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_03.html#datos",
    "href": "tidytuesday/2025/semana_03.html#datos",
    "title": "Semana 03",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 03)\nexped &lt;- tuesdata$exped_tidy",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 03"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_03.html#procesamiento",
    "href": "tidytuesday/2025/semana_03.html#procesamiento",
    "title": "Semana 03",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa la cantidad de muertes que ocurrieron en cada a√±o.\nSumo las muertes de integrantes y personal de la expedici√≥n\n\n\nOcultar c√≥digo\nd &lt;- exped |&gt;\n  select(PEAKID, YEAR, contains(\"DEATH\")) |&gt;\n  mutate(\n    m = MDEATHS + HDEATHS\n  ) |&gt;\n  reframe(\n    s = sum(m),\n    .by = YEAR\n  )",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 03"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_03.html#figura",
    "href": "tidytuesday/2025/semana_03.html#figura",
    "title": "Semana 03",
    "section": "Figura",
    "text": "Figura\nSubt√≠tulo, nota y s√≠mbolo de calavera.\n\n\nOcultar c√≥digo\nmi_subtitulo &lt;- glue(\n  \"Cantidad de muertes en expediciones al &lt;b style='color: {c4}'&gt;Himalaya&lt;/b&gt;\"\n)\n\nnota &lt;- str_wrap(\n  \"Las muertes incluyen a los integrantes de la expedici√≥n y al personal\n  contratado.\",\n  30\n)\n\ncalavera &lt;- \"&lt;span style='font-family:jet;'&gt;&#xf068c;&lt;/span&gt;\"\n\n\nGradiente de color para la figura\n\n\nOcultar c√≥digo\nrelleno &lt;- grid::linearGradient(\n  colours = colorRampPalette(c(c1, c2, c3, c4), bias =.25)(10),\n  x1 = 0,\n  y1 = 0,\n  x2 = 0,\n  y2 = 1\n)\n\n\nFigura.\n\n\nOcultar c√≥digo\ng &lt;- ggplot(d, aes(YEAR, s)) +\n  geom_area(fill = relleno) +\n  annotate(\n    geom = \"richtext\", x = 2020, y = seq(5, 25, 5), label = calavera, size = 10,\n    color = c3, fill = NA, label.color = NA, hjust = 1\n  ) +\n  annotate(\n    geom = \"text\", x = 2020.1, y = 24, label = nota, color = c3, size = 6,\n    hjust = 0, lineheight = .8\n  ) +\n  scale_y_continuous(\n    limits = c(0, 25),\n    expand = c(0, 0),\n    breaks = seq(0, 25, 5)\n  ) +\n  labs(subtitle = mi_subtitulo, caption = mi_caption) +\n  coord_cartesian(expand = FALSE, clip = \"off\") +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(l = 0, r = 20),\n    plot.background = element_rect(fill = c1, color = NA),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", color = c3, size = 30, hjust = .5,\n      margin = margin(b = 30, t = 20)\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", size = 12, color = c3, margin = margin(b = 10, t = 20),\n      lineheight = 1.5\n    ),\n    panel.grid.major.y = element_line(\n      color = c2, linewidth = .2, linetype = \"FF\"\n    ),\n    axis.text.y = element_markdown(\n      color = c3, family = \"jet\", size = 15, margin = margin(r = 25)\n    ),\n    axis.text.x = element_text(\n      color = c3, family = \"bebas\", size = 25, margin = margin(t = 15)\n    )\n  )\n\n\nGuardo\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_03.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 03"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_26.html",
    "href": "tidytuesday/2025/semana_26.html",
    "title": "Semana 26",
    "section": "",
    "text": "Relaci√≥n entre la gasolina regular respecto de la premium.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 26"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_26.html#paquetes",
    "href": "tidytuesday/2025/semana_26.html#paquetes",
    "title": "Semana 26",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 26"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_26.html#estilos",
    "href": "tidytuesday/2025/semana_26.html#estilos",
    "title": "Semana 26",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"gold\"\nc2 &lt;- \"grey50\"\nc3 &lt;- \"grey40\"\nc4 &lt;- \"grey20\"\nc5 &lt;- \"grey10\"\nc6 &lt;- \"white\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nfont_add(\n  family = \"bebas neue\",\n  regular = \"././fuente/BebasNeue-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 26"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_26.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_26.html#ep√≠grafe",
    "title": "Semana 26",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{c2};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 26, \",\n    \"&lt;b&gt;U.S. Energy Information Administration&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c2};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c2};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 26"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_26.html#datos",
    "href": "tidytuesday/2025/semana_26.html#datos",
    "title": "Semana 26",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 26)\ngas_prices &lt;- tuesdata$weekly_gas_prices",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 26"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_26.html#procesamiento",
    "href": "tidytuesday/2025/semana_26.html#procesamiento",
    "title": "Semana 26",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa la evoluci√≥n de la relaci√≥n entre el precio de la gasolina com√∫n respecto de la premium.\n\n\nOcultar c√≥digo\nd &lt;- gas_prices |&gt; \n  filter(\n    fuel == \"gasoline\",\n    grade %in% c(\"regular\", \"premium\"),\n    formulation == \"all\"\n  ) |&gt; \n  select(-fuel, -formulation) |&gt; \n  pivot_wider(\n    names_from = grade,\n    values_from = price,\n    id_cols = date\n  ) |&gt; \n  drop_na() |&gt; \n  mutate(r = (premium-regular)/regular)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 26"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_26.html#figura",
    "href": "tidytuesday/2025/semana_26.html#figura",
    "title": "Semana 26",
    "section": "Figura",
    "text": "Figura\nEl paquete {ggfx} sirve para generar el brillo de la caja de texto y la l√≠nea de evoluci√≥n.\nCreo dos t√≠tulos: mi_titulo1 para generar el espacio y darle brillo al contorno, y mi_titulo2 para mostrar el texto, quitando el contorno.\n\n\nOcultar c√≥digo\nmi_titulo1 &lt;- glue(\n  \"Costo extra de la gasolina&lt;br&gt;&lt;b style='color: white'&gt;premium&lt;/b&gt; respecto \n  de la&lt;br&gt;&lt;b style='color: white'&gt;com√∫n&lt;/b&gt; en **EE.UU.**\"\n)\n\nmi_titulo2 &lt;- glue(\n  \"Costo extra de la gasolina&lt;br&gt;premium respecto \n  de la&lt;br&gt;com√∫n en **EE.UU.**\"\n)\n\n\nFigura.\n\n\nOcultar c√≥digo\ng &lt;- ggplot(d, aes(date, r)) +\n  ggfx::with_blur(\n    geom_line(color = c1, lineend = \"round\", linewidth = 1, alpha = 1),\n    sigma = 14\n  ) +\n  geom_line(color = c1, lineend = \"round\", linewidth = .5, alpha = 1) +\n  ggfx::with_blur(\n    geom_richtext(\n      x = I(.02), y = I(.98), label = mi_titulo2, hjust = 0, vjust = 1,\n      color = NA, family = \"ubuntu\", size = 9, label.r = unit(0, \"mm\"),\n      label.padding = unit(4, \"mm\"), fill = c5, label.color = c6,\n      label.size = unit(.6, \"mm\")\n    ),\n    sigma = 10,\n    stack = TRUE\n  ) +\n  annotate(\n    geom = \"richtext\",\n    x = I(.02),\n    y = I(.98),\n    label = mi_titulo1,\n    hjust = 0,\n    vjust = 1,\n    family = \"ubuntu\",\n    fill = NA,\n    color = c3,\n    label.color = NA,\n    label.r = unit(0, \"mm\"),\n    label.padding = unit(4, \"mm\"),\n    size = 9\n  ) +\n  scale_x_date(\n    date_labels = \"'%y\",\n    breaks = seq.Date(ymd(19900101), ymd(20270101), \"5 year\"),\n    minor_breaks = \"1 year\",\n    limits = c(ymd(19940101), ymd(20260101)),\n    expand = c(0, 0)\n  ) +\n  scale_y_continuous(\n    labels = scales::label_percent(), \n    breaks = scales::breaks_width(.1),\n    minor_breaks = scales::breaks_width(.02),\n    limits = c(.05, .4),\n    expand = c(0, 0)\n  ) +\n  coord_cartesian(clip = \"off\") +\n  labs(x = NULL, y = NULL, caption = mi_caption) +\n  theme_void(base_size = 20, base_family = \"bebas neue\") +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(20, 20, 20, 20),\n    plot.background = element_rect(fill = c5, color = NA),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c3, size = rel(.7), lineheight = 1.3,\n      margin = margin(b = 5, t = 20)\n    ),\n    panel.background = element_blank(),\n    panel.grid.major = element_line(\n      linetype = \"55\", linewidth = .2, color = c3\n    ),\n    panel.grid.minor = element_line(\n      linetype = \"55\", linewidth = .2, color = c4\n    ),\n    axis.text = element_text(size = rel(1.4), color = c2),\n    axis.text.x = element_text(margin = margin(t = 5)),\n    axis.text.y = element_text(margin = margin(r = 5))\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_26.png\",\n  width = 30,\n  height = 31,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 26"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_15.html",
    "href": "tidytuesday/2025/semana_15.html",
    "title": "Semana 15",
    "section": "",
    "text": "Mapa de elevaci√≥n de las islas de ping√ºinos del paquete palmerpenguins.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 15"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_15.html#paquetes",
    "href": "tidytuesday/2025/semana_15.html#paquetes",
    "title": "Semana 15",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(terra)\nlibrary(ggspatial)\nlibrary(tidyterra)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 15"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_15.html#estilos",
    "href": "tidytuesday/2025/semana_15.html#estilos",
    "title": "Semana 15",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"#2C3563\"\nc2 &lt;- \"#AE9E59\"\nc3 &lt;- \"#AEDF87\"\nc4 &lt;- \"white\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 15"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_15.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_15.html#ep√≠grafe",
    "title": "Semana 15",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 15, \",\n    \"&lt;b&gt;{{palmerpenguins}}&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 15"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_15.html#datos",
    "href": "tidytuesday/2025/semana_15.html#datos",
    "title": "Semana 15",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 15)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 15"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_15.html#procesamiento",
    "href": "tidytuesday/2025/semana_15.html#procesamiento",
    "title": "Semana 15",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa crear un mapa con las islas de los ping√ºinos.\nObtengo de Wikipedia las coordenadas de las islas Biscoe, Dream y Torgersen. Convierto a vector de puntos.\n\n\nOcultar c√≥digo\np &lt;- tribble(\n  ~x, ~y, ~isla,\n  -65.5, -65.433333, \"Biscoe\",\n  -64.233333, -64.733333, \"Dream\",\n  -64.083333, -64.766667, \"Torgersen\"\n) |&gt; \n  vect(geom = c(\"x\", \"y\"), crs = \"EPSG:4326\") |&gt; \n  project(\"EPSG:3031\")\n\n\nCalculo el centroide de las tres islas y creo una circunferencia alrededor. Luego, descargo un modelo de elevaci√≥n de la regi√≥n de inter√©s. Guardo el r√°ster descargado.\n\n\nOcultar c√≥digo\ncent &lt;- as.lines(p) |&gt; \n  centroids()\n\nbuf &lt;- buffer(cent, 100000, quadsegs = 500)\n\nr &lt;- elevatr::get_elev_raster(\n  locations = sf::st_as_sf(buf),\n  z = 10,\n  clip = \"locations\"\n) |&gt;\n  rast()\n\nwriteRaster(r, \"tidytuesday/2025/semana_15.tif\", overwrite = TRUE)\n\nr &lt;- rast(\"tidytuesday/2025/semana_15.tif\")",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 15"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_15.html#figura",
    "href": "tidytuesday/2025/semana_15.html#figura",
    "title": "Semana 15",
    "section": "Figura",
    "text": "Figura\nDefino el estilo de la fecha que se√±ala el Norte y el subt√≠tulo de la figura.\n\n\nOcultar c√≥digo\nnorte &lt;- north_arrow_orienteering(\n  fill = c(c1, c2),\n  line_col = c4\n)\n\nmi_subtitulo &lt;- glue(\n  \"**Los ping√ºinos del reconocido conjunto de datos `palmerpenguins` provienen \n  de las islas** {{{c1} Biscoe}}, {{{c1} Dream}} **y** {{{c1} Torgersen}}, **en \n  la Ant√°rtida.**\"\n)\n\n\nMapa.\n\n\nOcultar c√≥digo\ng &lt;- ggplot() +\n  geom_spatraster(data = r, interpolate = FALSE, maxcell = dim(r)[1]*dim(r)[2]) +\n  geom_spatvector(\n    data = as.lines(buf), fill = NA, color = \"white\", linewidth = 2\n  ) +\n  geom_spatvector_label(\n    data = p, aes(label = isla), fill = NA, label.size = unit(0, \"pt\"),\n    family = \"ubuntu\", size = 5.5\n  ) +\n  scale_fill_hypso_c(palette = \"arctic\", name = \"Altura (m)\") +\n  annotation_north_arrow(\n    width = unit(1.3, \"cm\"),\n    height = unit(1.6, \"cm\"),\n    location = \"tr\",\n    style = norte\n  ) +\n  annotation_scale(\n    location = \"bl\", text_family = \"ubuntu\", height = unit(.5, \"cm\"), \n    text_cex = 1.2, bar_cols = c(c1, c2), line_col = c4\n  ) +\n  coord_sf(expand = FALSE, clip = \"off\") +\n  labs(\n    subtitle = mi_subtitulo,\n    caption = mi_caption\n  ) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(fill = c4, color = NA),\n    plot.subtitle = marquee::element_marquee(\n      size = 22, width = 1, color = c2, lineheight = 1.3,\n      margin = margin(b = 10, t = 10)\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c2, size = 15, margin = margin(t = 20, b = 10),\n      lineheight = 1.2, hjust = .5\n    ),\n    legend.position = \"inside\",\n    legend.title = element_text(family = \"ubuntu\", size = 17),\n    legend.text = element_text(family = \"jet\", size = 13),\n    legend.position.inside = c(1, 0),\n    legend.justification.inside = c(.93, 0),\n    legend.key.height = unit(25, \"pt\")\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_15.png\",\n  width = 30,\n  height = 32,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 15"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_28.html",
    "href": "tidytuesday/2025/semana_28.html",
    "title": "Semana 28",
    "section": "",
    "text": "Financiamiento de la Biblioteca Brit√°nica.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 28"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_28.html#paquetes",
    "href": "tidytuesday/2025/semana_28.html#paquetes",
    "title": "Semana 28",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 28"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_28.html#estilos",
    "href": "tidytuesday/2025/semana_28.html#estilos",
    "title": "Semana 28",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"#0069B3\"\nc2 &lt;- scales::col_darker(c1, 5)\nc3 &lt;- scales::col_lighter(c1, 20)\nc4 &lt;- \"white\"\nc5 &lt;- \"#DB002A\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 28"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_28.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_28.html#ep√≠grafe",
    "title": "Semana 28",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{c5};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 28, \",\n    \"&lt;b&gt;British Library's Annual Report&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c5};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c5};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 28"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_28.html#datos",
    "href": "tidytuesday/2025/semana_28.html#datos",
    "title": "Semana 28",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 28)\nbl_funding &lt;- tuesdata$bl_funding",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 28"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_28.html#procesamiento",
    "href": "tidytuesday/2025/semana_28.html#procesamiento",
    "title": "Semana 28",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesa la financiaci√≥n anual de la Biblioteca Brit√°nica, actualizada al 2000.\n\n\nOcultar c√≥digo\nset.seed(2025)\n\nd &lt;- bl_funding |&gt; \n  select(year, total_y2000_gbp_millions) |&gt; \n  mutate(total_y2000_gbp_millions = round(total_y2000_gbp_millions/10)) |&gt; \n  mutate(monto = map(total_y2000_gbp_millions, ~0:.x)) |&gt; \n  unnest(monto) %&gt;%\n  mutate(\n    color = sample(c(c2, c1), size = nrow(.), replace = TRUE)\n  ) |&gt; \n  mutate(\n    label = glue(\n      \"&lt;span style='font-family:jet;color: {color}'&gt;&#xf00c0;&lt;/span&gt;\"\n    )\n  )",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 28"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_28.html#figura",
    "href": "tidytuesday/2025/semana_28.html#figura",
    "title": "Semana 28",
    "section": "Figura",
    "text": "Figura\n√çcono de libro, logo y t√≠tulo.\n\n\nOcultar c√≥digo\nlibro &lt;- glue(\n  \"&lt;span style='font-family:jet; font-size: 30pt;'&gt;&#xf00c0;&lt;/span&gt;\"\n)\n\nmi_titulo &lt;- glue(\n  \"Financiaci√≥n anual de la &lt;b style='color: {c5}'&gt;Biblioteca Brit√°nica&lt;/b&gt;\"\n)\n\nlogo &lt;- \"https://www.imagesonline.bl.uk/wp-content/uploads/2020/07/BL-Logo_RGB-resized.jpg\"\n\n\nFigura.\n\n\nOcultar c√≥digo\ng &lt;- d |&gt; \n  ggplot(aes(year, monto)) +\n  ggimage::geom_image(\n    x = I(.96),\n    y = I(.85),\n    image = logo,\n    size = .055,\n    inherit.aes = FALSE\n  ) +\n  geom_richtext(\n    aes(label = label), fill = NA, label.color = NA, size = 12\n  ) +\n  annotate(\n    geom = \"richtext\",\n    x = I(1),\n    y = I(1),\n    label = glue(\"{libro} = 10 millones \\u00A3, a√±o 2000\"),\n    hjust = 1,\n    vjust = 0,\n    fill = NA,\n    label.color = NA,\n    size = 6,\n    family = \"ubuntu\",\n    color = c4\n  ) +\n  scale_y_continuous(breaks = scales::breaks_width(2)) +\n  coord_cartesian(\n    xlim = c(1997, 2024), ylim = c(-.2, 14.1), expand = FALSE, clip = \"off\"\n  ) +\n  labs(x = NULL, y = NULL, title = mi_titulo, caption = mi_caption) +\n  theme_void(base_size = 16, base_family = \"ubuntu\") +\n  theme(\n    plot.margin = margin(20, 20, 20, 20),\n    plot.background = element_rect(fill = c3, color = NA),\n    plot.title = element_markdown(\n      margin = margin(b = 25), color = c4, size = 25\n    ),\n    plot.caption = element_markdown(\n      color = c4, size = rel(.8), lineheight = 1.2, margin = margin(t = 20)\n    ),\n    axis.text = element_text(\n      family = \"jet\", size = rel(1.1), color = c4, margin = margin(t = 20)\n    ),\n    panel.grid.major = element_line(linewidth = .1, color = c4, linetype = \"FF\")\n  )\n\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_28.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\"\n)\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_28.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 28"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_17.html",
    "href": "tidytuesday/2025/semana_17.html",
    "title": "Semana 17",
    "section": "",
    "text": "Palabras clave de las conferencias del evento userR! 2025.",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 17"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_17.html#paquetes",
    "href": "tidytuesday/2025/semana_17.html#paquetes",
    "title": "Semana 17",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(marquee)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 17"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_17.html#estilos",
    "href": "tidytuesday/2025/semana_17.html#estilos",
    "title": "Semana 17",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"dodgerblue4\"\nc2 &lt;- \"lightblue1\"\nc3 &lt;- \"navyblue\"\nc4 &lt;- \"darkslateblue\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 17"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_17.html#ep√≠grafe",
    "href": "tidytuesday/2025/semana_17.html#ep√≠grafe",
    "title": "Semana 17",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n    \"Datos: &lt;span style='color:{c1};'&gt;&lt;span style='font-family:jet;'&gt;\",\n    \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 17, \",\n    \"&lt;b&gt;useR! 2025&lt;/b&gt;.&lt;/span&gt;\"\n)\n\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n    \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n    \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 17"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_17.html#datos",
    "href": "tidytuesday/2025/semana_17.html#datos",
    "title": "Semana 17",
    "section": "Datos",
    "text": "Datos\n\n\nOcultar c√≥digo\ntuesdata &lt;- tidytuesdayR::tt_load(2025, 17)\nuser2025 &lt;- tuesdata$user2025",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 17"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_17.html#procesamiento",
    "href": "tidytuesday/2025/semana_17.html#procesamiento",
    "title": "Semana 17",
    "section": "Procesamiento",
    "text": "Procesamiento\nMe interesan los temas principales (keywords) m√°s frecuentes entre todas las conferencias.\nAgrego a cada keywords un √≠cono obtenido de Iconify .\n\n\nOcultar c√≥digo\nd &lt;- user2025 |&gt; \n  separate_longer_delim(\n    cols = keywords,\n    delim = \", \"\n  ) |&gt; \n  mutate(\n    keywords = if_else(\n      keywords == \"data visualisation\",\n      \"data visualization\",\n      keywords\n    )\n  ) |&gt; \n  count(keywords, sort = TRUE) |&gt; \n  slice_max(order_by = n, n = 20, with_ties = FALSE) |&gt; \n  mutate(\n    y = -row_number()\n  ) |&gt; \n  mutate(\n    icon = case_match(\n      keywords,\n      \"shiny\" ~ \"fa6-brands:r-project\",\n      \"workflow\" ~ \"mdi:workflow\",\n      \"ai\" ~ \"healthicons:artificial-intelligence\",\n      \"automation\" ~ \"arcticons:automation\",\n      \"machine learning\" ~ \"carbon:machine-learning\",\n      \"data visualization\" ~ \"carbon:qq-plot\",\n      \"quarto\" ~ \"simple-icons:quarto\",\n      \"r package\" ~ \"fa6-brands:r-project\",\n      \"causal inference\" ~ \"ix:logic-diagram\",\n      \"data science\" ~ \"material-symbols:chart-data\",\n      \"reproducibility\" ~ \"pepicons-pop:repeat-circle-filled\",\n      \"api\" ~ \"material-symbols:api\",\n      \"big data\" ~ \"eos-icons:big-data\",\n      \"community\" ~ \"fluent:people-community-28-filled\",\n      \"clinical trials\" ~ \"healthicons:clinical-f-24px\",\n      \"consulting\" ~ \"mdi:dialogue\",\n      \"docker\" ~ \"simple-icons:docker\",\n      \"duckdb\" ~ \"devicon-plain:duckdb\",\n      \"healthcare\" ~ \"streamline:medical-cross-sign-healthcare-solid\",\n      \"ide\" ~ \"ant-design:code-filled\"\n    )\n  ) |&gt; \n  separate_wider_delim(\n    cols = icon, delim = \":\", names = c(\"prefix\", \"name\")\n  ) |&gt; \n  mutate(\n    svg = paste0(\n      \"https://api.iconify.design/\", prefix, \"/\", name, \".svg\"\n    )\n  ) |&gt; \n  mutate(\n    label = paste0(\"![](\", svg, \") \", keywords)\n  ) |&gt; \n  mutate(\n    tama√±o = seq(15, 7, length.out = 20)\n  ) |&gt; \n  mutate(\n    x = seq(0, 1, length.out = 20)\n  )",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 17"
    ]
  },
  {
    "objectID": "tidytuesday/2025/semana_17.html#figura",
    "href": "tidytuesday/2025/semana_17.html#figura",
    "title": "Semana 17",
    "section": "Figura",
    "text": "Figura\nCreo un estilo personalizado, con fuente y color.\n\n\nOcultar c√≥digo\nlabel_style &lt;- modify_style(\n  classic_style(),\n  \"body\",\n  family = \"JetBrains Mono\",\n  color = c4\n)\n\n\nSubt√≠tulo y figura.\n\n\nOcultar c√≥digo\nmi_subtitulo &lt;- glue(\n  \"En el evento &lt;b style='color: {c3}'&gt;useR! 2025&lt;/b&gt; hay planificadas \n  {nrow(user2025)} conferencias.&lt;br&gt;\n  Se muetran algunas de las palabras clave m√°s frecuentes.\"\n)\n\ng &lt;- ggplot(d, aes(x, y, label = label, size = tama√±o)) +\n  geom_marquee(style = label_style, hjust = 0) +\n  scale_size_identity() +\n  coord_cartesian(xlim = c(-2, 10), ylim = c(-19, -2), clip = \"off\") +\n  labs(\n    subtitle = mi_subtitulo,\n    caption = mi_caption\n  ) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(fill = c2, color = NA),\n    plot.subtitle = element_markdown(\n      family = \"ubuntu\", color = c1, size = 27, lineheight = 1.3, hjust = 0,\n      margin = margin(b = 40, t = 10, l = 10)\n    ),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c3, size = 13, margin = margin(b = 10, r = 10),\n      lineheight = 1.3\n    )\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"tidytuesday/2025/semana_17.png\",\n  width = 30,\n  height = 36,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2025",
      "Semana 17"
    ]
  },
  {
    "objectID": "tidytuesday/index.html",
    "href": "tidytuesday/index.html",
    "title": "¬øQu√© es tidytuesday?",
    "section": "",
    "text": "¬øQu√© es tidytuesday?\nTidyTuesday es un proyecto para compartir datos y que cualquiera pueda utilizarlos para practicar trabajar con datos. Tidytuesday est√° organizado por Data Science Learning Community, iniciado en 2018.\nTodas las semanas en el repositorio de GitHub suben un nuevo set de datos, con la fuente y una breve descripci√≥n.\nPara facilitar el acceso a los datos existe el paquete tidytuesdayR.\n\n\n\nMotivaci√≥n\nTidytuesday ofrece datos de los m√°s variados e interesantes. Te permite practicar las habilidades de manipulaci√≥n de datos, creaci√≥n de figuras y modelado con conjuntos de datos reales.\nSe incluyen los metadatos que dan una introducci√≥n, describiendo cada variable y explicando el contenido.\nLa comunidad que participa en tidytuesday comparte tus resultados en redes sociales, que motivan a otros a crear sus propias figuras y an√°lisis.\n\n\nMi participaci√≥n\nInici√© mis pasos con TidyTuesday en 2023, y gracias a eso he aprendido much√≠simo de R, a generar mejores visualizaciones, a escribir mejor c√≥digo y a explorar otros paquetes.\nEn esta secci√≥n pueden encontrar todas las figuras que he creado semana a semana.\n2025\n2024\n2023\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "Inicio"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_41.html",
    "href": "tidytuesday/2023/semana_41.html",
    "title": "Semana 41",
    "section": "",
    "text": "Universidades y cementerios embrujados en EEUU.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#E78429\"\nc2 &lt;- \"#F6C200\"\nc3 &lt;- \"#BAD6F9\"\nc4 &lt;- \"grey30\"\nc5 &lt;- \"grey10\"\nc6 &lt;- \"grey15\"\nc7 &lt;- \"grey90\"\nc8 &lt;- \"white\"\n\n# texto gral, ubicaci√≥n, ciudad\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# descripci√≥n\nfont_add_google(name = \"Creepster\", family = \"creepster\", db_cache = FALSE)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 41. Haunted Places in USA, **Tim Renner**&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-10-10/readme.md\")\n\nhaunted_places &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-10-10/haunted_places.csv')\n\n# me interesan los sitios relacionados a cementerios y universidades\n# incluyo una (breve) descripci√≥n de c/u, ubicados en lados opuestos\n\n# mapa de EEUU, sacando algunos territorios\nus &lt;- rgeoboundaries::gb_adm1(country = \"USA\")\n\nus_otros &lt;- c(\n  \"Puerto Rico\", \"Alaska\", \"American Samoa\", \"United States Virgin Islands\",\n  \"Commonwealth of the Northern Mariana Islands\", \"Guam\", \"Hawaii\", \n  \"Commonwealth of the Northern Mariana Islands\")\n\nus_cont &lt;- us |&gt; \n  filter(!shapeName %in% us_otros)\n\n# hay un sitio por fuera de EEUU? Lo remuevo\nlawrence &lt;- haunted_places |&gt; \n  filter(between(longitude, -82, -78) & between(latitude, 44, 46)) |&gt; \n  pull(location)\n\n# creo un objeto sf, y remuevo el sitio sospechoso\nhaunted_places_sf &lt;- haunted_places |&gt; \n  drop_na(longitude, latitude) |&gt; \n  st_as_sf(coords = c(\"longitude\", \"latitude\")) |&gt; \n  st_set_crs(value = 4326) |&gt; \n  st_crop(st_bbox(us_cont)) |&gt; \n  filter(location != lawrence)\n\n# convierto a EPGS:5070, para un mapa m√°s agradable\nbrowseURL(\"https://epsg.io/5070\")\n\nd &lt;- st_transform(haunted_places_sf, crs = 5070)\nus_cont_trans &lt;- st_transform(us_cont, crs = 5070)\n\n# contorno de EEUU\ncontorno &lt;- st_union(us_cont_trans)\n\n# simplifico los sitios: otros, cementerio y universidad\nd_lugares &lt;- d |&gt; \n  select(location) |&gt; \n  mutate(location = str_to_lower(location)) |&gt; \n  mutate(location = case_when(\n    str_detect(location, \"cemetery\") ~ \"cemetery\",\n    str_detect(location, \"university\") ~ \"university\",\n    .default = \"otros\"))\n\n# divido los datos en otros, y universidades & cementerios\nd_otros &lt;- d_lugares |&gt; \n  filter(location == \"otros\")\n\nd_interes &lt;- d_lugares |&gt; \n  filter(location != \"otros\")\n\n# cantidades de universidades, cementerios y sitios en gral\nn_uni &lt;- d_interes |&gt; \n  filter(location == \"university\") |&gt; \n  nrow()\n\nn_cem &lt;- d_interes |&gt; \n  filter(location == \"cemetery\") |&gt; \n  nrow()\n\nn_sitios &lt;- nrow(haunted_places) |&gt; \n  gt::vec_fmt_number(sep_mark = \".\", dec_mark = \",\", decimals = 0)\n\n# descripci√≥n BREVE de cementerio y universidad\n# elijo una descripci√≥n de cementerio de Florida, y una descripci√≥n de \n# universidad de Montana (lados opuestos)\nej_cem &lt;- haunted_places |&gt; \n  filter(state_abbrev == \"FL\") |&gt; \n  mutate(location = str_to_lower(location)) |&gt; \n  filter(str_detect(location, \"cemetery\")) |&gt; \n  mutate(n = nchar(description)) |&gt; \n  slice_min(order_by = n, n = 1) |&gt; \n  mutate(description = str_wrap(description, 35))\n\nej_uni &lt;- haunted_places |&gt; \n  filter(state_abbrev == \"MT\") |&gt; \n  mutate(location = str_to_lower(location)) |&gt; \n  filter(str_detect(location, \"university\")) |&gt; \n  mutate(n = nchar(description)) |&gt; \n  slice_min(order_by = n, n = 1) |&gt; \n  mutate(description = str_remove(description, \"Main Hall - \")) |&gt; \n  mutate(description = str_wrap(description, 35))\n\n# unifico ambas descripciones y creo la etiqueta\nej_ambos &lt;- bind_rows(ej_uni, ej_cem) |&gt; \n  mutate(description = str_replace_all(description, \"\\n\", \"&lt;br&gt;\")) |&gt; \n  mutate(location = str_to_title(location)) |&gt; \n  mutate(label = glue(\n    \"&lt;b style='font-size:25px;font-family:creepster;'&gt;{description}&lt;/b&gt;&lt;br&gt;\",\n    \"&lt;span style='font-family:ubuntu; color:white'&gt;*{location}*, *{city}*, *{state_abbrev}*&lt;/span&gt;\"))\n\n# ubicaci√≥n de las cajas de las descripciones\ncaja_longitud &lt;- c(-110, -90)\ncaja_latitud &lt;- c(50, 25)\n\n# modifico las coordenadas de las descripciones a EPSG:5070\nej_label &lt;- ej_ambos |&gt; \n  mutate(location = str_to_lower(location)) |&gt; \n  mutate(location = if_else(\n    str_detect(location, \"cemetery\"), \"cemetery\", \"university\")) |&gt; \n  # mutate(location = case_when(\n  #   str_detect(location, \"cemetery\") ~ \"cemetery\",\n  #   str_detect(location, \"university\") ~ \"university\",\n  #   .default = \"otros\")) |&gt; \n  mutate(latitude = caja_latitud) |&gt; \n  mutate(longitude = caja_longitud) |&gt; \n  st_as_sf(coords = c(\"longitude\", \"latitude\")) |&gt; \n  st_set_crs(value = 4326) |&gt; \n  st_transform(crs = 5070) |&gt; \n  mutate(vjust = c(0, 1)) |&gt; \n  mutate(hjust = c(0, 0))\n\n# ubicaci√≥n de los sitios que corresponden a las descripciones\nej_puntos &lt;- bind_rows(ej_uni, ej_cem) |&gt; \n  mutate(location = str_to_lower(location)) |&gt; \n  mutate(location = case_when(\n    str_detect(location, \"cemetery\") ~ \"cemetery\",\n    str_detect(location, \"university\") ~ \"university\",\n    .default = \"otros\")) |&gt; \n  st_as_sf(coords = c(\"longitude\", \"latitude\")) |&gt; \n  st_set_crs(value = 4326) |&gt; \n  st_transform(crs = 5070)\n\n# figura ------------------------------------------------------------------\n\n# flechas que unen las descripciones con los sitios\n# inicio de la flecha\nflecha &lt;- tibble(\n  x = caja_longitud, y = caja_latitud) |&gt; \n  st_as_sf(coords = c(\"x\", \"y\")) |&gt; \n  st_set_crs(value = 4326) |&gt; \n  st_transform(crs = 5070) |&gt; \n  st_coordinates() |&gt; \n  as_tibble() |&gt; \n  rename(x = X, y = Y)\n\n# final de la flecha\nflecha_end &lt;- ej_puntos |&gt; \n  st_coordinates() |&gt; \n  as_tibble() |&gt;\n  st_as_sf(coords = c(\"X\", \"Y\")) |&gt; \n  st_set_crs(value = 5070) |&gt; \n  st_coordinates() |&gt; \n  as_tibble() |&gt; \n  rename(xend = X, yend = Y)\n\nflecha_tbl &lt;- bind_cols(flecha, flecha_end)\n\n# ubicaci√≥n de la caja con el t√≠tulo\ncaja_tit &lt;- tibble(x = -110, y = 26) |&gt; \n  st_as_sf(coords = c(\"x\", \"y\")) |&gt; \n  st_set_crs(value = 4326) |&gt; \n  st_transform(crs = 5070) |&gt; \n  st_coordinates() |&gt; \n  as_tibble() |&gt; \n  rename(x = X, y = Y)\n\n# figura\ng &lt;- ggplot() +\n  # mapa de EEUU, con los Estados\n  geom_sf(data = us_cont_trans, fill = c4, color = c5) +\n  # contorno de EEUU\n  geom_sf(data = contorno, fill = NA, color = c8) +\n  # sitios 'otros'\n  geom_sf(data = d_otros, alpha = 1/2, color = c5, size = .25) +\n  # universidades y cementerios\n  geom_sf(data = d_interes, aes(color = location), alpha = 1/3, size = 4) +\n  # t√≠tulos\n  annotate(\n    geom = \"richtext\", x = caja_tit$x, y = caja_tit$y, hjust = .5, vjust = 1,\n    label = glue(\n      \"En **EEUU** hay {n_sitios} sitios embrujados,&lt;br&gt;\",\n      \"de los cuales hay {n_uni} en &lt;b style='color:{c3};'&gt;universidades&lt;/b&gt; y&lt;br&gt;\",\n      \"{n_cem} en &lt;b style='color:{c1};'&gt;cementerios&lt;/b&gt;.\"),\n    label.color = NA, fill = NA, family = \"ubuntu\", size = 6, color = c7) +\n  # descripciones\n  geom_richtext(\n    data = ej_label, \n    aes(label = label, hjust = hjust, vjust = vjust, geometry = geometry), \n    stat = \"sf_coordinates\", family = \"ubuntu\", color = c2, fill = c6,\n    lineheight = unit(2, \"line\"),\n    label.color = NA) +\n  # flechas\n  geom_curve(\n    data = flecha_tbl[1, ], aes(x, y, xend = xend, yend = yend), \n    inherit.aes = FALSE, color = c7, curvature = .25,\n    arrow = arrow(angle = 15, length = unit(.5, \"line\"), type = \"closed\")) +\n  geom_curve(\n    data = flecha_tbl[2, ], aes(x, y, xend = xend, yend = yend), \n    inherit.aes = FALSE, color = c7, curvature = -.25,\n    arrow = arrow(angle = 15, length = unit(.5, \"line\"), type = \"closed\")) +\n  scale_color_manual(values = c(c1, c3)) +\n  coord_sf(clip = \"off\") +\n  labs(x = NULL, y = NULL, caption = mi_caption) +\n  theme_minimal() +\n  theme(\n    plot.margin = margin(41, 6, 11, 6),\n    plot.background = element_rect(fill = c5, color = c4, linewidth = 3),\n    plot.caption = element_markdown(\n      color = c7, family = \"ubuntu\", size = 10, margin = margin(70, 15, 5, 0)),\n    legend.position = \"none\",\n    panel.grid = element_blank(),\n    axis.text = element_blank()\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_41/viz.png\",\n  width = 30,\n  height = 24,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_41/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 41"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_25.html",
    "href": "tidytuesday/2023/semana_25.html",
    "title": "Semana 25",
    "section": "",
    "text": "Nube de palabras a partir de las descripciones de avistamientos de OVNIs.\n\nScript\n\n\nC√≥digo\n# paqute ------------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(tidytext)\nlibrary(ggwordcloud)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuentes -----------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#341648\"\nc2 &lt;- \"#05A3BD\"\nc3 &lt;- \"#FFD352\"\nc4 &lt;- \"#621F5E\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\", db_cache = FALSE)\n\n# fuente del t√≠tulo\nfont_add(\"starseeds\", \"fuente/Starseeds.ttf\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 25&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-06-20/readme.md\")\n\nufo_sightings &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-06-20/ufo_sightings.csv')\n\n# figura ------------------------------------------------------------------\n\n# palabras comunes p/remover del listado de las descripciones (summary)\npalabras_comunes &lt;- c(tm::stopwords(\"en\"), 1:100, \"seen\", \"saw\", \"pd\", \"nuforc\")\n\n# obtengo las palabras individuales\novni_palabras &lt;- ufo_sightings |&gt; \n  # conservo summary\n  select(summary) |&gt; \n  # separo p/palabra\n  unnest_tokens(word, summary) |&gt; \n  # remuevo las palabras comunes\n  anti_join(tibble(word = palabras_comunes), by = join_by(word)) |&gt; \n  # arreglo algunas palabras manualmente\n  mutate(word = case_match(\n    word,\n    \"lights\" ~ \"light\",\n    \"objects\" ~ \"object\", \n    \"shaped\" ~ \"shape\",\n    .default = word)\n  )\n\n# top de palabras m√°s frecuentes\nn_ovni &lt;- 40\n\n# funci√≥n p/generar la paleta de colores\nf_color &lt;- colorRampPalette(MetBrewer::met.brewer(palette_name = \"Egypt\"))\n\n# colores\novni_color &lt;- f_color(n = n_ovni)\n\n# tibble con las 'n_top_tit' palabras m√°s frecuentes\novni_conteo &lt;- ovni_palabras |&gt; \n  # cuento la cantidad de palabras\n  count(word, sort = TRUE) |&gt; \n  # conservo s√≥lo el top\n  slice_max(n, n = n_ovni, with_ties = FALSE) |&gt; \n  # agrego color, aleatoriamente\n  mutate(color = sample(ovni_color)) |&gt; \n  # agrego el √°ngulo, con 40% de probabilidad de rotaci√≥n de 90¬∞\n  mutate(angle = 90 * sample(c(0, 1), n(), replace = TRUE, prob = c(60, 40))) |&gt; \n  # convierto a may√∫scula\n  mutate(word = str_to_upper(word))\n\n# rotaci√≥n de las palabras\nbrowseURL(\"https://lepennec.github.io/ggwordcloud/articles/ggwordcloud.html#word-cloud-and-rotation\")\n\n# cantidad de reportes, p/el subt√≠tulo\nnro &lt;- nrow(ufo_sightings) |&gt; \n  format(big.mark = \".\", decimal.mark = \",\")\n\n# figura de un OVNI\nbrowseURL(\"https://www.svgrepo.com/svg/480707/ufo-sucking-up-something\")\n\novni &lt;- \"2023/semana_25/ovni.png\"\n\n# imagen p/tag\novni_tag &lt;- glue(\"&lt;img src='{ovni}' width='40'&gt;&lt;/img&gt;\")\n\n# figura\ng_nube_tit &lt;- ggplot(data = ovni_conteo) + \n  # palabras\n  geom_text_wordcloud_area(\n    aes(label = word, size = n, \n        color = I(color),\n        angle = angle),\n    seed = 2023, \n    shape = \"square\", \n    area_corr = TRUE) +\n  scale_size_area(max_size = 80) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = \"OVNIS\",\n    subtitle = glue(\n      \"Nube de palabras a partir de las descripciones aportadas\n      por quienes avistaron OVNIs.&lt;br&gt;Se analizaron {nro} testimonios en todo \n      el mundo.\"),\n    tag = ovni_tag,\n    caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.background = element_rect(fill = c1, color = c4, linewidth = 3),\n    plot.title = element_markdown(\n      size = 150, family = \"starseeds\", color = c3, hjust = .5,\n      margin = margin(5, 0, 15, 0)),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_markdown(\n      color = c2, size = 20, family = \"ubuntu\", hjust = .5),\n    plot.tag.position = c(.9, .83),\n    plot.tag = element_markdown(),\n    plot.caption.position = \"plot\",\n    plot.caption = element_markdown(\n      color = c2, hjust = 1, family = \"ubuntu\", size = 13),\n    plot.margin = margin(5, 14, 5, 14)\n  )\n\n# guardo\nggsave(\n  plot = g_nube_tit,\n  filename = \"2023/semana_25/viz.png\",\n  width = 30, height = 35,\n  units = \"cm\", dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_25/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 25"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_32.html",
    "href": "tidytuesday/2023/semana_32.html",
    "title": "Semana 32",
    "section": "",
    "text": "Distribuci√≥n de intensidad del picante de las salsas de Hot Ones.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggpath)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#cc2c29\"\nc2 &lt;- \"#E4332F\"\nc3 &lt;- \"#FFCE00\"\nc4 &lt;- \"white\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# eje vertical, scoville\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# eje horizontal, temporadas\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = FALSE)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 32. **List of Hot Ones episodes**, Wikipedia&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-08-08/readme.md\")\n\nsauces &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-08/sauces.csv')\n\n# me interesa la distribuci√≥n de la escala Scoville para cada salsa\n#  (del 1 al 10), en todas las temporadas\nd &lt;- sauces |&gt; \n  mutate(sauce_number = factor(sauce_number)) |&gt; \n  select(sauce_number, scoville)\n\n# figura ------------------------------------------------------------------\n\n# tibble con la ubicaci√≥n del logo\n\ncamino_logo &lt;- \"2023/semana_32/logo.png\"\n\nlogo_tbl &lt;- tibble(\n  x = 1, \n  y = 1e6, \n  path = camino_logo)\n\n# subt√≠tulo\nsub_tbl &lt;- tibble(\n  x = 10,\n  y = 1000,\n  label = glue(\n    \"&lt;b style='color:{c3}'&gt;Hot Ones&lt;/b&gt; es un programa de **YouTube** donde celebridades son&lt;br&gt;\n    entrevistadas mientras *disfrutan* comida picante,  con 10 salsas&lt;br&gt;\n    en orden creciente de picor. Se muestra la intensidad de las&lt;br&gt;\n    salsas para las 21 temporadas del programa.\"))\n\n# explicaci√≥n escala Scoville\nscoville_tbl &lt;- tibble(\n  x = 10,\n  y = 300,\n  label = glue(\n    \"&lt;sup style='color:white;'&gt;**U2020**&lt;/sup&gt;La **escala Scoville** mide la\n    intensidad de un picante.&lt;br&gt;El valor m√°s bajo (1) corresponde al \n    morr√≥n verde.\"))\n\n# valores MIN y MAX de la escala Scoville\nd_min &lt;- d |&gt; \n  slice_min(order_by = scoville, n = 1) |&gt; \n  mutate(label = glue(\"‚Üê {scoville}nMIN\"))\n\nd_max &lt;- d |&gt; \n  slice_max(order_by = scoville, n = 1, with_ties = FALSE) |&gt; \n  mutate(label = gt::vec_fmt_number(\n    scoville, \n    decimals = 0,\n    sep_mark = \".\",\n    dec_mark = \",\")) |&gt; \n  mutate(label = glue(\"{label} ‚ÜínMAX\"))\n\n# figura\ng &lt;- ggplot(data = d, aes(sauce_number, scoville, color = sauce_number)) +\n  # puntos\n  geom_point(alpha = 1/1, size = 7, shape = 1, \n             position = position_jitter(width = .1, seed = 2023)) +\n  # logo\n  geom_from_path(\n    data = logo_tbl, aes(x, y, path = path),\n    width = .4, inherit.aes = FALSE, hjust = 0, vjust = .5) +\n  # subt√≠tulo\n  geom_richtext(\n    data = sub_tbl, aes(x, y, label = label), \n    label.color = NA, fill = NA, color = c4, family = \"ubuntu\", size = 6,\n    hjust = 1, vjust = 1) +\n  # explicaci√≥n escala Scoville\n  geom_richtext(\n    data = scoville_tbl, aes(x, y, label = label),\n    label.color = NA, fill = NA, color = c3, family = \"ubuntu\", size = 5,\n    hjust = 1, vjust = 1) +\n  # m√≠nimo\n  geom_text(\n    data = d_min, aes(label = label), \n    family = \"victor\", nudge_x = .6, size = 3.5, fontface = \"bold\", \n    hjust = 1, vjust = .75) +\n  # m√°ximo\n  geom_text(\n    data = d_max, aes(label = label), \n    family = \"victor\", nudge_x = -1.3, size = 3.5, fontface = \"bold\",\n    hjust = 0, vjust = .6) +\n  # ejes\n  scale_y_log10(\n    labels = scales::label_number(big.mark = \".\", decimal.mark = \",\"),\n    limits = c(100, NA),\n    expand = c(0, .1)) +\n  scale_color_manual(values = rep(c(c3, c4), length.out = 10)) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    x = \"\\# de salsa\",\n    y = \"Escala Scoville&lt;sup style='color:white;'&gt;**U2020**&lt;/sup&gt;&lt;br&gt;\n    &lt;span style='font-size:15pt'&gt;*logar√≠tmica*&lt;/style&gt;\",\n    caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    legend.position = \"none\",\n    plot.margin = margin(70.3, 10, 5.3, 10),\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    plot.caption = element_markdown(\n      color = c4, family = \"ubuntu\", margin = margin(10, 0, 10, 0), \n      size = 12),\n    panel.grid.major.y = element_line(\n      color = c4,linetype = \"f8\", linewidth = .1),\n    axis.title.x = element_markdown(\n      size = 26, color = c3, family = \"ubuntu\", margin = margin(20, 0, 0, 0)),\n    axis.title.y = element_markdown(\n      size = 26, color = c3, family = \"ubuntu\", angle = 90, lineheight = .2),\n    axis.text.x = element_text(\n      family = \"bebas\",\n      color = rep(c(c3, c4), length.out = 10),\n      size = 30),\n    axis.text.y = element_text(\n      family = \"victor\", color = c4, size = 16, hjust = 1)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_32/viz.png\",\n  width = 30,\n  height = 31,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_32/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 32"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_20.html",
    "href": "tidytuesday/2023/semana_20.html",
    "title": "Semana 20",
    "section": "",
    "text": "Tornados en EEUU.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(ggtext)\nlibrary(glue)\n\n# fuente ------------------------------------------------------------------\n\n# eje vertical, a√±os\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\")\n# eje horizontal, meses\nfont_add_google(name = \"Inconsolata\", family = \"inconsolata\")\n# t√≠tulo\nfont_add_google(name = \"Gloock\", family = \"gloock\", db_cache = FALSE)\n# resto del texto\nfont_add_google(name = \"Schibsted Grotesk\", family = \"grotesk\", db_cache = FALSE)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# MetBrewer: Monet\nc1 &lt;- \"#e3cacf\"\nc2 &lt;- \"#c399a2\"\nc3 &lt;- \"#9f6d71\"\nc4 &lt;- \"#41507b\"\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 20&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-05-16/readme.md\")\n\ntornados &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-16/tornados.csv')\n\n# sumas mensuales, desde 1960\ndatos &lt;- tornados |&gt; \n  group_by(yr, mo) |&gt; \n  summarise(n = n()) |&gt; \n  ungroup() |&gt; \n  filter(yr &gt;= 1960)\n\n# iniciales de los meses, para el eje x\nm &lt;- tibble(x = seq(ymd(20200101), ymd(20201201), by = \"1 month\")) |&gt; \n  mutate(m = format(x, \"%B\")) |&gt; \n  mutate(mes = str_sub(m, 1, 1) |&gt; str_to_upper())\n\n# mes con la mayor cantidad de tornados\nmax_n &lt;- datos |&gt;\n  slice_max(order_by = n)\n\nfecha_max &lt;- ymd(glue(\"{max_n$yr}-{max_n$mo}-01\"))\n\n# figura ------------------------------------------------------------------\n\n# breaks\nb &lt;- classInt::classIntervals(var = datos$n, n = 6, style = \"pretty\")$brks\n\n# figura\ng &lt;- ggplot(data = datos, aes(x = mo, y = yr, fill = n)) +\n  # tile\n  geom_tile(\n    color = c1, linewidth = 1) +\n  # manual\n  scale_y_continuous(\n    breaks = seq(1950, 2020, 10),\n    sec.axis = dup_axis()) +\n  scale_x_continuous(\n    breaks = seq(1, 12, 1),\n    labels = m$mes,\n    sec.axis = dup_axis()) +\n  scale_fill_viridis_c(\n    option = \"turbo\",\n    breaks = b) +\n  coord_fixed(ylim = c(1960, 2022), expand = FALSE, clip = \"off\") +\n  # ejes\n  labs(x = NULL, y = NULL, fill = \"Cantidadnde eventosnpor mes\",\n       title = \"TWISTER!\",\n       subtitle = glue(\n         \"Cantidad mensual de **tornados** en EEUU, entre 1950 y 2022. El mes \n         con mayor cantidad de eventos fue en {format(fecha_max, '%B')} de \n         {format(fecha_max, '%Y')} con **{max_n$n}** tornados.\"),\n       caption = mi_caption) +\n  # tema\n  theme_minimal() +\n  theme(\n    plot.background = element_rect(\n      fill = c1, color = c2, linewidth = 3),\n    plot.margin = margin(0, 55, 0, 55),\n    plot.title.position = \"plot\",\n    plot.title = element_text(\n      color = c4, family = \"gloock\", size = 135, hjust = .5, \n      margin = margin(10, 0, 0, 0)),\n    plot.subtitle = element_textbox_simple(\n      color = c4, size = 30, family = \"grotesk\",\n      margin = margin(5, -10, 25, -40)),\n    plot.caption = element_markdown(\n      color = c4, hjust = .19, size = 21, family = \"grotesk\", \n      margin = margin(20, 0, 5, 0)),\n    panel.grid = element_blank(),\n    axis.text.y = element_text(\n      color = c3, family = \"bebas\", size = 45),\n    axis.text.x = element_text(\n      color = c3, family = \"inconsolata\", size = 40),\n    axis.text.x.bottom = element_text(\n      margin = margin(15, 0, 0, 0), face = \"bold\"),\n    axis.text.x.top = element_text(\n      margin = margin(0, 0, 15, 0), face = \"bold\"),\n    legend.box.margin = margin(0, 0, 0, 80),\n    legend.title = element_text(\n      colour = c4, size = 30, family = \"grotesk\"),\n    legend.text = element_text(\n      color = c4, size = 35, family = \"inconsolata\"),\n    legend.key.height = unit(3.5, \"cm\"),\n    legend.key.width = unit(2, \"cm\")\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_20/viz.png\",\n  width = 30,\n  height = 75,\n  units = \"cm\",\n  dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_20/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 20"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_21.html",
    "href": "tidytuesday/2023/semana_21.html",
    "title": "Semana 21",
    "section": "",
    "text": "Ardillas en Central Park.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuentes -----------------------------------------------------------------\n\n# t√≠tulo\nfont_add_google(name = \"Playfair Display\", family = \"playfair\", db_cache = TRUE)\n# resto del texto\nfont_add_google(name = \"Schibsted Grotesk\", family = \"grotesk\", db_cache = FALSE)\n# cantidad (n)\nfont_add_google(name = \"Inconsolata\", family = \"inconsolata\", db_cache = FALSE)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# MetBrewer: Manet\nc1 &lt;- \"#ede2cc\"\nc2 &lt;- \"#7ec5f4\"\nc3 &lt;- \"#4585b7\"\nc4 &lt;- \"#215e92\"\nc5 &lt;- \"#d29c44\"\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 21&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-05-23/readme.md\")\n\nardillas &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-23/squirrel_data.csv')\n\n# convierto tibble a sf\nardillas_sf &lt;- ardillas |&gt; \n  st_as_sf(coords = c(\"X\", \"Y\")) |&gt; \n  st_set_crs(value = 4326)\n\n# funci√≥n que permite la rotaci√≥n de las geometr√≠as\nbrowseURL(\"https://r-spatial.github.io/sf/articles/sf3.html#affine-transformations\")\n\nrot = function(a) matrix(c(cos(a), sin(a), -sin(a), cos(a)*2), 2, 2)\n\n# rotaci√≥n de los datos\nardillas_sf_rot &lt;- ardillas_sf %&gt;% \n  mutate(geom_rot = st_geometry(.)*rot(-36.5*pi/180)) %&gt;%\n  st_drop_geometry() %&gt;%\n  rename(geometry = geom_rot) %&gt;%\n  st_set_geometry(\"geometry\")\n\n# colores\ncolores &lt;- MetBrewer::met.brewer(\n  palette_name = \"Wissing\", n = 5, override.order = TRUE) |&gt; \n  as.character()\n\n# traducciones de las actividades\ntr &lt;- c(Chasing = \"Persiguiendo\", Eating = \"Comiendo\", Climbing = \"Escalando\",\n        Running = \"Corriendo\", Foraging = \"Recolectando&lt;br&gt;comida\")\n\n# asigno los colores a cada actividad\nnames(colores) &lt;- names(tr)\n\n# quito los nombres del vector p/usar en ggplot()\ncolores2 &lt;- colores\nnames(colores2) &lt;- NULL\n\n# acomodo datos\ndatos &lt;- ardillas_sf_rot |&gt; \n  # selecciono actividades\n  select(ends_with(\"ing\")) |&gt; \n  # tabla larga\n  pivot_longer(cols = -geometry, \n               names_to = \"actividad\") |&gt; \n  # s√≥lo las actividades que s√≠ estaban sucediendo\n  filter(value == TRUE) |&gt; \n  select(-value) |&gt; \n  # agrego traducciones\n  mutate(ac = tr[actividad]) |&gt; \n  # agrego colores\n  mutate(col = colores[actividad]) |&gt; \n  # agrego color a las actividades (strip)\n  mutate(accion = glue(\"&lt;b style='color:{col};'&gt;{ac}&lt;/span&gt;\")) |&gt; \n  select(-actividad, -ac)\n\n# cantidad de observaciones por actividad\nn_datos &lt;- datos |&gt; \n  count(accion, col)\n\n# leo .geojson con mapa de Central Park, de Open Street Map\njs &lt;- st_read(\"2023/semana_21/OSM_central_park.geojson\")\n\n# selecciono √∫nicamente los cuerpos de agua\nw &lt;- js |&gt; \n  filter(landcover_class == \"water\")\n\n# rotaci√≥n de los pol√≠gonos\nw_rot &lt;- w %&gt;% \n  mutate(geom_rot = st_geometry(.)*rot(-36.5*pi/180)) %&gt;%\n  st_drop_geometry() %&gt;%\n  rename(geometry = geom_rot) %&gt;%\n  st_set_geometry(\"geometry\")\n\n# regi√≥n de inter√©s de Central Park\nroi &lt;- st_bbox(datos) |&gt; \n  st_as_sfc()\n\n# incorporo el color al roi, p/las facetas\nroi2 &lt;- distinct(datos, col, accion) |&gt; \n  mutate(geometry = roi) |&gt; \n  st_as_sf()\n\n# recordo pol√≠gonos de agua a la regi√≥n de inter√©s\nw_rot_crop &lt;- st_crop(w_rot, roi)\n\n# figura ------------------------------------------------------------------\n\ng &lt;- ggplot() +\n  geom_sf(data = roi2, aes(color = I(col)), fill = NA, linewidth = .25) +\n  # pol√≠gonos de agua\n  geom_sf(data = w_rot_crop, fill = \"grey60\", color = \"grey40\") +\n  # ardillas\n  geom_sf(\n    data = datos, aes(color = I(col)), \n    alpha = .4, show.legend = FALSE, size = 4) +\n  # cantidad de observaciones\n  geom_text(\n    data = n_datos, aes(label = glue(\"n = {n}\"), x = -Inf, y = -Inf, color = col),\n    hjust = 0, vjust = 0, family = \"inconsolata\", size = 7) +\n  # faceta\n  facet_wrap(~ accion, nrow = 1) +\n  # ejes\n  labs(title = \"¬øQu√© hacen las ardillas en **Central Park**?\",\n       subtitle = glue(\n         \"Distribuci√≥n espacial de {nrow(datos)} **ardillas** en \n         Central Park de acuerdo a las actividades que estaban \n         llevando a cabo al momento de ser avistadas. En la parte \n         inferior de cada panel se indica la cantidad de \n         observaciones. Las superficies en gris representan **cuerpos \n         de agua**.\"),\n       caption = mi_caption) +\n  scale_y_continuous(limits = c(21.53485, 21.60479), expand = c(0, 0)) +\n  # scale_y_continuous(expand = c(0, .0005)) +\n  # coord_sf(expand = FALSE) +\n  # tema\n  theme_void() +\n  theme(panel.background = element_rect(color = NA, linewidth = 2),\n    plot.background = element_rect(\n      fill = c1, color = c5, linewidth = 3),\n    plot.margin = margin(5, 25, 5, 25),\n    plot.title = element_markdown(\n      size = 45, family = \"playfair\", margin = margin(10, 5, 5, -5), color = c4),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_textbox_simple(\n      color = c4, size = 18, margin = margin(25, 0, 25, 0)),\n    plot.caption = element_markdown(\n      size = 15, hjust = .5, color = c2, margin = margin(25, 0, 5, 0)),\n    panel.spacing.x = unit(2, \"line\"),\n    strip.text = element_markdown(size = 20, vjust = 1))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_21/viz.png\",\n  width = 30,\n  height = 40.84,\n  units = \"cm\",\n  dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_21/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 21"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_12.html",
    "href": "tidytuesday/2023/semana_12.html",
    "title": "Semana 12",
    "section": "",
    "text": "Lenguajes de programaci√≥n y sus comentarios.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(here)\nlibrary(ggtext)\nlibrary(glue)\nlibrary(fontawesome)\n\n# fuentes -----------------------------------------------------------------\n\nfont_add_google(name = \"Share Tech Mono\", family = \"share\") # nombres de programas\nfont_add_google(name = \"Heebo\", family = \"heebo\") # resto del texto\nfont_add_google(name = \"Roboto Mono\", family = \"roboto\") # t√≠tulo\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# √≠conos\nfont_add(\"fa-reg\", here(\"icon/Font Awesome 5 Free-Regular-400.otf\"))\nfont_add(\"fa-brands\", here(\"icon/Font Awesome 5 Brands-Regular-400.otf\"))\nfont_add(\"fa-solid\", here(\"icon/Font Awesome 5 Free-Solid-900.otf\"))\n\n# Sys.getenv(\"GITHUB_PAT\")\n# Sys.unsetenv(\"GITHUB_PAT\")\n\n# funciones ---------------------------------------------------------------\n\n# funci√≥n p/agregar el punto de las unidades de mil\nf_punto &lt;- scales::label_number(big.mark = \".\", decimal.mark = \",\")\n\n# funci√≥n p/escribir en mono, en blanco\nf_code &lt;- function(x) {\n  glue(\"&lt;span style='font-family:share; color:white'&gt;{x}&lt;/span&gt;\")\n}\n\n# datos -------------------------------------------------------------------\n\n# browseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-03-21/readme.md\")\ndatos_raw &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-03-21/languages.csv')\n\nglimpse(datos_raw)\n\ndatos_raw |&gt; \n  drop_na(line_comment_token) |&gt; \n  count(line_comment_token, sort = TRUE)\n\n# selecciono y renombro\ndatos_sub &lt;- datos_raw |&gt; \n  select(title, line_comment_token, wikipedia_daily_page_views, appeared) |&gt; \n  drop_na()\n\n# escribo los datos y leo\n# write_tsv(datos_saved, here(\"2023/semana 12/datos_saved.tsv\"))\n# datos_saved &lt;- read_tsv(here(\"2023/semana 12/datos_saved.tsv\"))\n\n# datos p/la figura\ndatos &lt;- datos_sub |&gt; \n  group_by(line_comment_token) |&gt; \n  slice_max(wikipedia_daily_page_views, n = 10) |&gt; \n  mutate(suma = sum(wikipedia_daily_page_views)) |&gt; \n  arrange(desc(suma), desc(wikipedia_daily_page_views)) |&gt; \n  ungroup() |&gt; \n  slice(1:50) |&gt; \n  rename(nombre = title, comentario = line_comment_token, \n         visitas = wikipedia_daily_page_views, a√±o = appeared) |&gt; \n  mutate(nombre = fct_inorder(nombre)) |&gt; \n  mutate(nombre = fct_rev(nombre)) |&gt; \n  mutate(comentario = fct_reorder(comentario, -suma)) |&gt; \n  mutate(decada = a√±o - (a√±o %% 10)) |&gt; \n  mutate(decada = factor(decada)) |&gt; \n  mutate(suma = f_punto(x = suma)) |&gt; \n  mutate(comentario_label = glue(\"&lt;span style='font-size:25pt;background-color:#003354'&gt;{comentario}&lt;br&gt;&lt;/span&gt;&lt;br&gt;&lt;span style='font-size:9pt;'&gt;{suma}&lt;br&gt;visitas&lt;br&gt;totales&lt;/span&gt;\")) |&gt; \n  mutate(comentario_label = fct_inorder(comentario_label))\n\n# c√≠rculo que encierra el signo del comentario\ncirculo &lt;- datos |&gt; \n  distinct(comentario_label) |&gt; \n  mutate(x = 7600,\n         y = 5)\n\n# lenguaje m√°s nuevo/viejo\nmin_max &lt;- bind_rows(datos |&gt; slice_max(a√±o, n = 1),\n                     datos |&gt; slice_min(a√±o, n = 1))\n\n# figura ------------------------------------------------------------------\n\n# caption\nicon_twitter &lt;- \"&lt;span style='font-family:fa-brands; color:white;'&gt;&#xf099;&lt;/span&gt;\"\nicon_github &lt;- \"&lt;span style='font-family:fa-brands; color:white;'&gt;&#xf09b;&lt;/span&gt;\"\nfuente &lt;- \"&lt;span style='color:white;'&gt;Datos:&lt;/span&gt; &lt;span style='color:#003354;'&gt;&lt;span style='font-family:share;'&gt;{**tidytuesdayR**}&lt;/span&gt; semana 12&lt;/span&gt;\"\nautor &lt;- \"&lt;span style='color:white;'&gt;Autor:&lt;/span&gt; &lt;span style='color:#003354;'&gt;**V√≠ctor Gauto**&lt;/span&gt;\"\nsep &lt;- glue(\"&lt;span style = 'color:#a4cac8;'&gt;**|**&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style = 'color:#003354;'&gt;**vhgauto**&lt;/span&gt;\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# plot\ng1 &lt;- ggplot(data = datos, aes(x = visitas, y = nombre)) +\n  # segmentos\n  geom_segment(aes(x = 0, xend = visitas, yend = nombre), \n               linewidth = .5, color = \"#0970a5\") +\n  # puntos de cantidad de visitas\n  geom_point(aes(shape = decada), size = 1, color = \"white\", fill = \"#a4cac8\") +\n  # c√≠rculo alrededor del comentario\n  annotation_custom(grid::circleGrob(default.units=\"npc\",\n                                     x = 1.055,\n                                     y = .7,\n                                     r = .18,\n                                     gp = grid::gpar(col = \"white\", \n                                                     vjust = 0.5, \n                                                     hjust = 0.5, \n                                                     fill = \"#a4cac8\"))) +\n  # lenguajes m√°s nuevo/viejo\n  geom_label(data = min_max[1, ], \n             aes(x = visitas+150, y = nombre, label = glue(\"El lenguaje m√°s nuevo, {nombre}, aparece en {a√±o} \")),\n             hjust = 0, vjust = .5, color = \"white\", family = \"mono\", size = 3,\n             fill = \"#5fb0b8\", label.size = 0, label.r = unit(0, \"line\")) +\n  geom_label(data = min_max[2, ], \n             aes(x = visitas+150, y = nombre, label = glue(\"El lenguaje m√°s viejo, {nombre}, aparece en {a√±o} \")),\n             hjust = 0, vjust = .5, color = \"white\", family = \"mono\", size = 3,\n             fill = \"#5fb0b8\", label.size = 0, label.r = unit(0, \"line\")) +\n  # faceta\n  facet_wrap(~ comentario_label, ncol = 1, scales = \"free\", \n             strip.position = \"right\") +\n  # manual\n  scale_x_continuous(breaks = seq(0, 7000, 1000),\n                     limits = c(0, 7500),\n                     expand = c(0, 0)) +\n  scale_shape_manual(values = c(3, 8, 21:24)) +\n  coord_cartesian(clip = \"off\") +\n  # ejes\n  labs(x = \"Visitas diarias a la entrada del lenguaje en Wikipedia\", y = NULL,\n       shape = \"D√©cada de aparici√≥n:\",\n       title = \"Su &lt;span style='color:white'&gt;comentario&lt;/span&gt; no molesta\",\n       subtitle = glue(\n         \"Cada lenguaje de programaci√≥n posee un caracter especial \n         que habilita los &lt;span style='color:white'&gt;comentarios&lt;/span&gt; en el \n         script. Se muestra una selecci√≥n de &lt;span style='color:white'&gt;5&lt;/span&gt; \n         caracteres: [{f_code('//')}], [{f_code('#')}], [{f_code('-')}], \n         [{f_code('%')}] y [{f_code(';')}] y los 10 lenguajes m√°s populares que \n         lo utilizan, de acuerdo a la cantidad de &lt;span style='color:white'&gt;visitas \n         diarias&lt;/span&gt; de sus correspondientes entradas en \n         &lt;span style='color:white'&gt;Wikipedia&lt;/span&gt;. Se indica tambi√©n la \n         &lt;span style='color:white'&gt;decada&lt;/span&gt; de salida del lenguaje.\"),\n       caption = mi_caption) +\n  # guide\n  guides(shape = guide_legend(nrow = 1, override.aes = list(size = 3))) +\n  # tema\n  theme(aspect.ratio = .25,\n        legend.position = c(.45, 1.03),\n        legend.key.size = unit(1, \"line\"),\n        legend.text = element_text(family = \"share\"),\n        legend.title = element_text(hjust = .5, family = \"heebo\", color = \"#003354\"),\n        legend.direction = \"horizontal\",\n        legend.key = element_rect(fill = \"#5fb0b8\", color = NA),\n        legend.background = element_rect(fill = \"#5fb0b8\", color = NA),\n        plot.background = element_rect(fill = \"#5fb0b8\", color = \"white\",\n                                       linewidth = 3),\n        plot.title = element_markdown(size = 35, margin = margin(0, 5, 5, 5),\n                                      family = \"roboto\", color = \"#003354\"),\n        plot.title.position = \"plot\",\n        plot.subtitle = element_textbox_simple(margin = margin(5, 5, 30, 5),\n                                               color = \"#003354\"),\n        plot.caption = element_markdown(hjust = .5, size = 10, \n                                        margin = margin(20, 0, 0, 0)),\n        plot.caption.position = \"plot\",\n        plot.margin = margin(16.4, 16, 16.4, 16),\n        panel.grid = element_line(linewidth = .1, color = \"grey90\"),\n        panel.grid.minor = element_blank(),\n        panel.background = element_rect(fill = \"#a4cac8\", color = NA),\n        panel.grid.major.y = element_blank(),\n        axis.ticks = element_blank(),\n        axis.title.x = element_text(family = \"heebo\", color = \"#003354\",\n                                    margin = margin(5, 0, 0, 0)),\n        axis.text = element_text(family = \"share\", color = \"black\"),\n        strip.background.y = element_rect(fill = NA, color = NA),\n        strip.text.y.right = element_markdown(angle = 0, color = \"#003354\",\n                                              family = \"heebo\"))\n\n# guardo\nggsave(plot = g1,\n       filename = here(\"2023/semana 12/viz.png\"),\n       width = 19,\n       height = 27,\n       dpi = 300,\n       units = \"cm\")\n# abro\nbrowseURL(here(\"2023/semana 12/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 12"
    ]
  },
  {
    "objectID": "tidytuesday/2023/index.html",
    "href": "tidytuesday/2023/index.html",
    "title": "Introducci√≥n",
    "section": "",
    "text": "2023\n\n\n   \n    \n    \n      Ordenar por\n      Por defecto\n      \n        T√≠tulo\n      \n      \n        Fecha - Menos reciente\n      \n      \n        Fecha - M√°s reciente\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nSemana 52\n\n\n\ngeom_tile\n\n\n\n\n\n\n\n\n\n2023-12-31\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 51\n\n\n\ngeom_point\n\ngeom_curve\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2023-12-24\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 50\n\n\n\ngeom_richtext\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2023-12-17\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 49\n\n\n\ngeom_line\n\ngeom_point\n\ngeom_flag\n\ngeom_richtext\n\ngeom_curve\n\nargentina\n\n\n\n\n\n\n\n\n\n2023-12-10\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 48\n\n\n\ngeom_dotplot\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2023-12-03\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 47\n\n\n\ngeom_sf\n\ngeom_segment\n\ngeom_richtext\n\nargentina\n\n\n\n\n\n\n\n\n\n2023-11-26\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 46\n\n\n\ngeom_sf_pattern\n\ngeom_sf\n\n\n\n\n\n\n\n\n\n2023-11-19\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 45\n\n\n\ngeom_line\n\ngeom_point\n\ngeom_text\n\n\n\n\n\n\n\n\n\n2023-11-12\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 44\n\n\n\ngeom_sf\n\ngeom_sf_text\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2023-11-05\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 43\n\n\n\ngeom_line\n\ngeom_point\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2023-10-29\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 42\n\n\n\ngeom_vline\n\ngeom_hline\n\ngeom_text\n\ngeom_segment\n\ngeom_curve\n\ngeom_richtext\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2023-10-22\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 41\n\n\n\ngeom_sf\n\ngeom_richtext\n\ngeom_curve\n\n\n\n\n\n\n\n\n\n2023-10-15\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 40\n\n\n\ngeom_point\n\ngeom_text_repel\n\n\n\n\n\n\n\n\n\n2023-10-08\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 39\n\n\n\ngeom_rect\n\ngeom_hline\n\ngeom_text\n\ngeom_richtext\n\ngeom_step\n\ngeom_from_path\n\n\n\n\n\n\n\n\n\n2023-10-01\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 38\n\n\n\ngeom_edge_arc\n\ngeom_node_point\n\ngeom_node_text\n\n\n\n\n\n\n\n\n\n2023-09-24\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 37\n\n\n\ngeom_col\n\ngeom_point\n\ngeom_richtext\n\nargentina\n\n\n\n\n\n\n\n\n\n2023-09-17\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 36\n\n\n\ngeom_line\n\ngeom_richtext\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2023-09-10\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 35\n\n\n\ngeom_vline\n\ngeom_segment\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2023-09-03\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 34\n\n\n\ngeom_sf\n\ngeom_hline\n\ngeom_line\n\ngeom_point\n\nargentina\n\n\n\n\n\n\n\n\n\n2023-08-27\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 33\n\n\n\ngeom_hline\n\ngeom_text\n\ngeom_freqpoly\n\n\n\n\n\n\n\n\n\n2023-08-20\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 32\n\n\n\ngeom_point\n\ngeom_from_path\n\ngeom_richtext\n\ngeom_text\n\n\n\n\n\n\n\n\n\n2023-08-13\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 31\n\n\n\ngeom_are\n\ngeom_textbox\n\ngeom_ribbon\n\ngeom_line\n\ngeom_point\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2023-08-06\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 30\n\n\n\ngeom_col\n\ngeom_vline\n\ngeom_hline\n\n\n\n\n\n\n\n\n\n2023-07-30\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 29\n\n\n\ngeom_col\n\ngeom_text\n\n\n\n\n\n\n\n\n\n2023-07-23\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 28\n\n\n\ngeom_raster\n\ngeom_hline\n\ngeom_text\n\ngeom_line\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2023-07-16\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 27\n\n\n\ngeom_sf\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2023-07-09\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 26\n\n\n\ngeom_sf\n\ngeom_from_path\n\n\n\n\n\n\n\n\n\n2023-07-02\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 25\n\n\n\ngeom_text_wordcloud_area\n\n\n\n\n\n\n\n\n\n2023-06-25\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 24\n\n\n\ngeom_text\n\ngeom_textbox\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2023-06-18\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 23\n\n\n\ngeom_textpath\n\ngeom_richtext\n\ngeom_textbox\n\nargentina\n\n\n\n\n\n\n\n\n\n2023-06-11\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 22\n\n\n\ngeom_hline\n\ngeom_segment\n\ngeom_text_repel\n\ngeom_richtext\n\ngeom_point\n\nargentina\n\n\n\n\n\n\n\n\n\n2023-06-04\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 21\n\n\n\ngeom_rot\n\ngeom_sf\n\ngeom_text\n\n\n\n\n\n\n\n\n\n2023-05-28\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 20\n\n\n\ngeom_tile\n\n\n\n\n\n\n\n\n\n2023-05-21\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 19\n\n\n\ngeom_hline\n\ngeom_density_ridges\n\ngeom_text\n\n\n\n\n\n\n\n\n\n2023-05-14\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 18\n\n\n\ngeom_segment\n\ngeom_point\n\ngeom_from_path\n\n\n\n\n\n\n\n\n\n2023-05-07\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 17\n\n\n\ngeom_vline\n\ngeom_hline\n\ngeom_smooth\n\ngeom_richtext\n\ngeom_textbox\n\n\n\n\n\n\n\n\n\n2023-04-30\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 16\n\n\n\ngeom_sf\n\ngeom_label_repel\n\n\n\n\n\n\n\n\n\n2023-04-23\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 15\n\n\n\ngeom_vline\n\ngeom_smooth\n\ngeom_segment\n\ngeom_richtext\n\ngeom_from_path\n\n\n\n\n\n\n\n\n\n2023-04-16\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 14\n\n\n\ngeom_segment\n\ngeom_label\n\ngeom_text\n\ngeom_richtext\n\n\n\n\n\n\n\n\n\n2023-04-09\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 13\n\n\n\ngeom_sf\n\ngeom_label_repel\n\ngeom_rect\n\ngeom_richtext\n\ngeom_text\n\nargentina\n\n\n\n\n\n\n\n\n\n2023-04-02\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 12\n\n\n\ngeom_segment\n\ngeom_point\n\ngeom_label\n\n\n\n\n\n\n\n\n\n2023-03-26\n\n\n\n\n\n\n\n\n\n\n\n\nSemana 07\n\n\n\ngeom_vline\n\ngeom_point\n\n\n\n\n\n\n\n\n\n2023-02-19\n\n\n\n\n\nNo hay resultados\n\n  \n\n\nAdi√≥s.\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_13.html",
    "href": "tidytuesday/2023/semana_13.html",
    "title": "Semana 13",
    "section": "",
    "text": "Husos horarios.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(here)\nlibrary(ggtext)\nlibrary(glue)\nlibrary(fontawesome)\nlibrary(sf)\nlibrary(patchwork)\nlibrary(ggrepel)\nlibrary(ggtext)\n\n# fuentes -----------------------------------------------------------------\n\nfont_add_google(name = \"Share Tech Mono\", family = \"share\") # n√∫meros\nfont_add_google(name = \"Heebo\", family = \"heebo\") # resto del texto\nfont_add_google(name = \"Domine\", family = \"domine\") # t√≠tulo\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# √≠conos\nfont_add(\"fa-reg\", here(\"icon/Font Awesome 5 Free-Regular-400.otf\"))\nfont_add(\"fa-brands\", here(\"icon/Font Awesome 5 Brands-Regular-400.otf\"))\nfont_add(\"fa-solid\", here(\"icon/Font Awesome 5 Free-Solid-900.otf\"))\n\n# caption\nicon_twitter &lt;- \"&lt;span style='font-family:fa-brands; color:white;'&gt;&#xf099;&lt;/span&gt;\"\nicon_github &lt;- \"&lt;span style='font-family:fa-brands; color:white;'&gt;&#xf09b;&lt;/span&gt;\"\nfuente &lt;- \"&lt;span style='color:white;'&gt;Datos:&lt;/span&gt; &lt;span style='color:#16317d;'&gt;&lt;span style='font-family:mono;'&gt;{**tidytuesdayR**}&lt;/span&gt; semana 13&lt;/span&gt;\"\nautor &lt;- \"&lt;span style='color:white;'&gt;Autor:&lt;/span&gt; &lt;span style='color:#16317d;'&gt;**V√≠ctor Gauto**&lt;/span&gt;\"\nsep &lt;- glue(\"&lt;span style = 'color:#a4cac8;'&gt;**|**&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style = 'color:#16317d;'&gt;**vhgauto**&lt;/span&gt;\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\n# browseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-03-28/readme.md\")\n\n# husos horarios\ntransitions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-03-28/transitions.csv')\ntimezones &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-03-28/timezones.csv')\n\n# mapa del mundo, p/obtener el CRS √∫nicamente\n# si uso 'crs = 4326' no queda igual, as√≠ que lo extraigo de 'world'\n# world &lt;- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n# husos horarios Argentina\ntz_arg_tbl &lt;- timezones |&gt; \n  filter(str_detect(zone, \"Argentina\")) |&gt; \n  mutate(zone = str_remove(zone, \"America/Argentina/\"))\n\n# convierto a 'sf', 4326\ntz_arg &lt;- st_as_sf(tz_arg_tbl, coords = c(\"longitude\", \"latitude\"), crs = 4326)\n\n# provincias argentinas\n# descargado del Instituto Geogr√°fico Nacional y convertido a .gpkg\n# https://www.ign.gob.ar/NuestrasActividades/InformacionGeoespacial/CapasSIG\n# 4326\npcias &lt;- st_read(here(\"2023/semana_13/pcias.gpkg\"))\n\n# corrijo los nombres de las zonas\ntz_arg &lt;- tz_arg |&gt; \n  mutate(zone = str_replace(zone, \"_\", \" \"))\n\n# fechas de inicio/fin de horarios de verano\nverano &lt;- transitions |&gt; \n  filter(str_detect(zone, \"Argentina/Buenos_Aires\")) |&gt; \n  mutate(begin = as_datetime(begin),\n         end = as_datetime(end)) |&gt; \n  select(-zone, -offset, -abbreviation) |&gt; \n  mutate(inicio = as_date(begin),\n         fin = as_date(end)) |&gt; \n  drop_na() \n\neje_y_lbl &lt;- tibble(y = seq.Date(min(verano$inicio), ymd(20100101), \"1 year\")) |&gt; \n  mutate(fecha = ymd(glue(\"{year(y)}0101\"))) |&gt; \n  mutate(a√±o = year(fecha)) |&gt; \n  mutate(decena = a√±o %% 10 == 0) |&gt; \n  mutate(label = if_else(decena == TRUE, glue(\"¬∑{as.character(a√±o)}\"), \"\")) |&gt; \n  mutate(largo = if_else(decena == TRUE, 3, 1))\n\n# indicaci√≥n 1er uso de horario de verano\nverano_1 &lt;- verano |&gt; \n  filter(dst == TRUE) |&gt; \n  slice(1) |&gt; \n  mutate(label = glue(\"En {format(inicio, '%B')} de {year(inicio)}&lt;br&gt;fue la primera vez en&lt;br&gt;aplicarse horario de verano\"))\n\n# figuras -----------------------------------------------------------------\n\n# mapa\ng1 &lt;- ggplot() +\n  # l√≠mites provinciales, borde grueso azul\n  geom_sf(data = pcias, color = \"#16317d\", fill = NA, linewidth = 1) +\n  # l√≠mites provinciales, borde fino amarillo\n  geom_sf(data = pcias, color = \"#f6b40e\", fill = NA, linewidth = .5) +\n  \n  # ciudades\n  geom_sf(data = tz_arg, shape = 23, color = \"white\", fill = \"#16317d\",\n          size = 2) +\n  # etiquetas de las ciudades\n  geom_label_repel(data = tz_arg, aes(label = zone, geometry = geometry),\n                  stat = \"sf_coordinates\", min.segment.length = Inf,\n                  fill = alpha(\"#74acdf\", .7), label.size = 0,\n                  family = \"heebo\",\n                  size = 5, color = \"#16317d\", force = 10, seed = 2023) +\n  # manual\n  coord_sf(clip = \"on\", ylim = c(-56, -21), xlim = c(-75, -50), expand = FALSE) +\n  # tema\n  theme_void() +\n  theme(plot.background = element_rect(fill = \"#74acdf\", color = NA),\n        panel.background = element_rect(fill = \"#74acdf\", color = NA))\n\n\n# horarios de verano\ng2 &lt;- ggplot(data = verano,\n             aes(ymin = inicio, ymax = fin, xmin = 0, xmax = 1, fill = dst)) +\n  geom_rect() +\n  # borde\n  geom_rect(ymin = min(verano$inicio), ymax = max(verano$fin), \n            xmin = 0, xmax = 1, color = \"#16317d\", fill = NA) +\n  # 1er a√±o\n  geom_richtext(data = verano_1, aes(x = -.1, y = inicio+months(12), label = label),\n                color = \"#16317d\", fill = NA, label.color = NA, size = 4,\n                hjust = 1, vjust = 1, family = \"heebo\") +\n  geom_text(data = verano_1, aes(x = -.1, y = inicio, label = \"u25B6\"),\n            color = \"#16317d\", size = 6) +\n  # manual\n  scale_y_date(sec.axis = sec_axis(trans =  ~ .x,\n                                   breaks = eje_y_lbl$fecha,\n                                   labels = eje_y_lbl$label)) +\n  scale_fill_manual(values = c(\"#74acdf\", \"#f6b40e\"),\n                    breaks = c(TRUE, FALSE),\n                    labels = c(\"S√≠     \", \"No\")) +\n  coord_cartesian(clip = \"off\", xlim = c(-1, 1), \n                  ylim = c(ymd(18900101), ymd(20100101))) +\n  # ejes\n  labs(fill = \"¬øFue a√±o con horarionde verano?\") +\n  # gu√≠a\n  guides(fill = guide_legend(override.aes = list(shape = 22,\n                                                 color = \"#16317d\"))) +\n  theme(aspect.ratio = 7,\n        legend.position = c(.35, 0.03),\n        legend.spacing.x = unit(1, \"line\"),\n        legend.direction = \"horizontal\",\n        legend.title = element_text(family = \"heebo\", color = \"#16317d\", size = 12,\n                                    hjust = 1),\n        legend.text = element_text(color = \"#16317d\", family = \"heebo\", size = 12),\n        legend.key.width = unit(1.5, \"line\"),\n        legend.key.height = unit(1.5, \"line\"),\n        legend.background = element_rect(fill = \"#74acdf\", color = NA),\n        plot.margin = margin(0, 40, 0, 0),\n        plot.background = element_rect(fill = \"#74acdf\", color = NA),\n        panel.background = element_rect(fill = \"#74acdf\", color = NA),\n        panel.grid = element_blank(),\n        axis.title = element_blank(),\n        axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        axis.ticks.length = unit(.3, \"line\"),\n        axis.ticks.y.right = element_line(color = \"#16317d\"),\n        axis.text.y.right = element_text(color = \"white\", size = 15,\n                                         family = \"share\", vjust = .45,\n                                         margin = margin(0, 0, 0, 3)))\n\n# figura compuesta\ng3 &lt;- g1 + g2 &\n  plot_layout(widths = c(1, .25)) &\n  plot_annotation(\n    title = glue(\"Husos horarios en &lt;span style='color:#f6b40e'&gt;**Argentina**&lt;/span&gt;\"),\n    subtitle = glue(\"&lt;span style='color:white'&gt;**Argentina**&lt;/span&gt; tiene \n                    &lt;span style='color:white'&gt;**12**&lt;/span&gt; zonas horarias, \n                    cuyas ciudades principales se muestran en&lt;br&gt;el mapa. El \n                    primer registro data del &lt;span style='color:white'&gt;**{year(min(verano$inicio))}**&lt;/span&gt;. \n                    Los ciclos de a√±os con &lt;span style='color:white'&gt;**horarios de&lt;br&gt;verano**&lt;/span&gt; \n                    son dispares. A la derecha se muestran los per√≠odos en los \n                    que tuvimos&lt;br&gt;que cambiar los relojes.\"),\n    caption = mi_caption,\n    theme = theme(plot.background = element_rect(color = NA, fill = \"#74acdf\"),\n                  plot.title.position = \"plot\",\n                  plot.title = element_markdown(size = 38,\n                                                family = \"domine\",\n                                                color = \"#16317d\"),\n                  plot.subtitle = element_markdown(color = \"#16317d\",\n                                                   size = 15,\n                                                   family = \"heebo\",\n                                                   margin = margin(2, 0, 2, 5)),\n\n                  plot.caption = element_markdown(hjust = .5,\n                                                  family = \"heebo\",\n                                                  margin = margin(10, 0, 0, 0),\n                                                  size = 12),\n                  plot.caption.position = \"plot\"))\n\n# guardo\nggsave(plot = g3,\n       filename = here(\"2023/semana_13/viz.png\"),\n       width = 2300,\n       height = 3300,\n       units = \"px\",\n       dpi = 300)\n\n# abro\nbrowseURL(here(\"2023/semana_13/viz.png\"))\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 13"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_43.html",
    "href": "tidytuesday/2023/semana_43.html",
    "title": "Semana 43",
    "section": "",
    "text": "Riesgo de padecer demencia, sordera y Parkinson.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nMoMAColors::moma.colors(palette_name = \"Flash\") |&gt; \n  as.character()\nc1 &lt;- \"#E3C0DB\"\nc2 &lt;- \"#41045A\"\nc3 &lt;- \"#900C7E\"\nc4 &lt;- \"#DB95CB\"\nc5 &lt;- \"#140E3A\"\nc6 &lt;- \"#C049A6\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# rango de a√±os, eje horizontal\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\")\n# porcentajes, eje vertical\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# t√≠tulo\nfont_add_google(name = \"Abril Fatface\", family = \"abril\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\nfont_add(\"fa-regular\", \"icon/Font Awesome 6 Free-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 43. \",\n  \"R/Pharma Conference, \",\n  \"**Jenna Reps**&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-10-24/readme.md\")\n\npatient_risk_profiles &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-10-24/patient_risk_profiles.csv')\n\n# me interesa el riesgo de padecer sordera, demencia y Parkinson\n\n# rangos de edad, como factores\nrango_orden &lt;- patient_risk_profiles |&gt; \n  select(contains(\"age group\")) |&gt; \n  pivot_longer(cols = everything()) |&gt; \n  distinct(rango = name) |&gt; \n  mutate(rango = str_remove(rango, \"age group:  \")) |&gt; \n  mutate(rango = str_remove_all(rango, \" \")) |&gt; \n  separate_wider_delim(\n    rango, delim = \"-\", names = c(\"i_rango\", NA), cols_remove = FALSE) |&gt; \n  mutate(i_rango = as.numeric(i_rango)) |&gt; \n  mutate(rango = fct_reorder(rango, i_rango)) |&gt; \n  arrange(rango)\n\n# enfermedades de inter√©s\nenfermedad &lt;- c(\n  \"predicted risk of Sudden Hearing Loss, No congenital anomaly or middle or inner ear conditions\",\n  \"predicted risk of Dementia\",\n  \"predicted risk of Parkinson's disease, inpatient or with 2nd diagnosis\")\n\n# agrupo por enfermedad y rango de edad\nd &lt;- patient_risk_profiles |&gt;\n  select(any_of(enfermedad), contains(\"age group\")) |&gt;\n  select(oido = 1, demencia = 2, parkinson = 3, everything()) |&gt; \n  pivot_longer(\n    cols = -c(oido, demencia, parkinson),\n    names_to = \"rango\", \n    values_to = \"es_rango\") |&gt;\n  pivot_longer(\n    cols = -c(rango, es_rango),\n    names_to = \"enfermedad\",\n    values_to = \"frac_enfermedad\") |&gt;\n  mutate(rango = str_remove(rango, \"age group:  \")) |&gt;\n  mutate(rango = str_remove_all(rango, \" \")) |&gt; \n  filter(es_rango == 1) |&gt;\n  mutate(rango = fct(rango, levels = as.character(rango_orden$rango))) |&gt; \n  arrange(rango) |&gt; \n  mutate(rango = fct_inorder(rango)) |&gt; \n  reframe(\n    n_rango = n(),\n    frac_enfermedad = mean(frac_enfermedad),\n    .by = c(rango, enfermedad)) |&gt; \n  arrange(rango) |&gt; \n  mutate(rango = fct_inorder(rango))\n\n# figura ------------------------------------------------------------------\n\n# etiquetas de las enfermedades para cada l√≠nea\netq_tbl &lt;- tibble(\n  enf = c(\"demencia\", \"sordera\", \"parkinson\") |&gt; str_to_upper(),\n  color = c(c6, c3, c2),\n  x = c(3, 3, 14),\n  y = c(0.012, .15, .078)/100,\n  angle = c(60, 30, 0)) |&gt; \n  mutate(label = glue(\"&lt;b style='color:{color}'&gt;{enf}&lt;/b&gt;\"))\n\n# t√≠tulo y subt√≠tulo\ng_tit &lt;- glue(\"Los a√±os no vienen solos\")\ng_sub &lt;- glue(\n  \"A partir de los datos simulados de **100** pacientes, se&lt;br&gt;\",\n  \"muestra el riesgo (en %) de padecer &lt;b style='color:{c6}'&gt;demencia&lt;/b&gt;, &lt;br&gt;\",\n  \"&lt;b style='color:{c3}'&gt;sordera&lt;/b&gt; y &lt;b style='color:{c2}'&gt;Parkinson&lt;/b&gt;, \",\n  \"para diferentes rangos de edad.\")\n\n# figura\ng &lt;- ggplot(d, aes(rango, frac_enfermedad, color = enfermedad, group = enfermedad)) +\n  geom_line(\n    show.legend = FALSE, linewidth = 2.5, alpha = .6) +\n  geom_point(\n    show.legend = FALSE, alpha = 1) +\n  geom_richtext(\n    data = etq_tbl, aes(x, y, label = label, angle = angle), show.legend = FALSE,\n    inherit.aes = FALSE, hjust = 0, vjust = 1, label.color = NA, fill = NA,\n    family = \"ubuntu\", size = 5) +\n  annotate(\n    geom = \"richtext\", label = g_tit, color = c5, x = 1, y = .1,\n    hjust = 0, vjust = 0, family = \"abril\", size = 19, fill = NA, \n    label.color = NA) +\n  annotate(\n    geom = \"richtext\", label = g_sub, color = c2, x = 1, y = .1,\n    hjust = 0, vjust = 1, family = \"ubuntu\", size = 7, fill = NA, \n    label.color = NA) +\n  scale_color_manual(values = c(c6, c3, c2)) +\n  scale_y_log10(labels = scales::label_percent(\n    big.mark = \"\", decimal.mark = \",\")) +\n  coord_cartesian(clip = \"off\") +\n  labs(caption = mi_caption) +\n  guides(\n    x = guide_axis(n.dodge = 2)) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(20, 16.3, 5, 16.3),\n    plot.background = element_rect(\n      fill = c1, color = c2, linewidth = 3),\n    plot.caption = element_markdown(\n      family = \"ubuntu\", margin = margin(25, 0, 5, 0), size = 12),\n    axis.text = element_text(color = c5),\n    axis.text.x = element_text(\n      margin = margin(5, 0, 0, 0), size = 21, family = \"bebas\"),\n    axis.text.y = element_text(\n      vjust = 0, margin = margin(0, 5, 0, 0), family = \"victor\", size = 15),\n    panel.grid.major.x = element_line(\n      color = c4, linetype = 3, linewidth = .2),\n    panel.grid.major.y = element_line(\n      color = c4, linetype = 1, linewidth = .2),\n    panel.grid.minor.y = element_line(\n      color = c4, linetype = \"ff\", linewidth = .2)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_43/viz.png\",\n  width = 30,\n  height = 31,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_43/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 43"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_45.html",
    "href": "tidytuesday/2023/semana_45.html",
    "title": "Semana 45",
    "section": "",
    "text": "Participaci√≥n femenina en las elecciones de EE.UU.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(fontawesome)\nlibrary(gender)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#88C0D0\"\nc2 &lt;- \"#81A1C1\"\nc3 &lt;- \"#5E81AC\"\nc4 &lt;- \"grey90\"\nc5 &lt;- \"#306489\"\nc6 &lt;- \"#222B4C\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# algoritmos, eje vertical\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# eje horizontal, a√±os\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = FALSE)\n# t√≠tulo\nfont_add_google(name = \"Vast Shadow\", family = \"vast\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\nfont_add(\"fa-regular\", \"icon/Font Awesome 6 Free-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;\",\n  \"{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 45. \",\n  \"MIT Election Data and Science Lab, \",\n  \"**Harvard Dataverse**&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-11-07/readme.md\")\n\nhouse &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-11-07/house.csv')\n\n# me interesa el g√©nero de los candidatos y la proporci√≥n en el tiempo\n\n# funci√≥n para obtener el 1er nombre, y si es una sola letra, el segundo\nget_first_name &lt;- function(name) {\n  name_parts &lt;- str_split(name, \" \")[[1]]\n  if (nchar(name_parts[1]) == 1) {\n    return(name_parts[2])\n  } else {\n    return(name_parts[1])\n  }\n}\n\n# primer nombre de cada candidato, agrupado por a√±o\n# se agrupan, por a√±o, los mismos nombres\nd &lt;- house |&gt; \n  filter(!writein) |&gt; \n  select(year, candidate) |&gt; \n  mutate(primer = map(.x = candidate, ~ get_first_name(name = .x))) |&gt; \n  unnest(primer) |&gt; \n  count(primer, .by = year) |&gt; \n  arrange(.by) |&gt; \n  rename(year = .by)\n\n# por cada algoritmo, obtengo el g√©nero del candidato\nd_ipums &lt;- d |&gt; \n  mutate(genero = map(\n    .x = primer,\n    (x) gender(x, countries = \"United States\", method = \"ipums\")$gender))\n\nd_ssa &lt;- d |&gt; \n  mutate(genero = map(\n    .x = primer,\n    (x) gender(x, countries = \"United States\", method = \"ssa\")$gender))\n\nd_napp &lt;- d |&gt; \n  mutate(genero = map(\n    .x = primer,\n    (x) gender(x, method = \"napp\")$gender))\n\n# unifico los resultados de todos los algoritmos\ne &lt;- bind_rows(\n  d_ipums |&gt; mutate(tipo = \"ipums\"), \n  d_napp |&gt; mutate(tipo = \"napp\"), \n  d_ssa |&gt; mutate(tipo = \"ssa\")) |&gt; \n  mutate(genero = as.character(genero)) |&gt;\n  filter(genero != \"logical(0)\") |&gt;\n  mutate(g = genero == \"male\") |&gt;\n  reframe(p = sum(g*n)/sum(n), .by = c(year, tipo)) |&gt; \n  mutate(p = 1 - p)\n\n# la asignaci√≥n del g√©nero a partir del nombre, por cada algoritmo, lleva mucho\n# tiempo. Entonces, guardo los resultados y leo desde el archivo .tsv\ne |&gt; \n  write_tsv(\"2023/semana_45/datos.tsv\")\n\ne &lt;- read_tsv(\"2023/semana_45/datos.tsv\")\n\n# figura ------------------------------------------------------------------\n\n# etiquetas de los algoritmos, para agregar en el borde derecho\nalgoritmo_label &lt;- e |&gt; \n  filter(year == max(e$year))\n\n# funci√≥n para aplicar fuente mono (victor) a los nombres de los algortimos\nf_mono_it &lt;- (x) glue(\"&lt;span style='font-family:victor'&gt;{x}&lt;/span&gt;\")\n\n# puntos de la grilla, de fondo de la figura\np &lt;- expand.grid(\n  x = seq(1980, 2020, 10),\n  y = seq(.1, .3, .05)) |&gt; \n  as_tibble()\n\n# t√≠tulo, subt√≠tulo y aclaraci√≥n del la asignaci√≥n del g√©nero a partir de\n# los algoritmos\nmi_tit &lt;- glue(\n  \"A√±o a a√±o, hay m√°snmujeres candidatasnal Congreso de EE.UU.\") |&gt;\n  str_to_upper()\n\nmi_sub &lt;- glue(\n  \"Hace 40 a√±os, hubo **10%** de candidatas mujeres a la C√°mara&lt;br&gt;\",\n  \"de Representantes de **EE.UU.** Actualmente ronda el **30%**,&lt;br&gt;\",\n  \"todav√≠a lejos de una total paridad.&lt;br&gt;\")\n\nmi_texto &lt;- glue(\n  \"El porcentaje se calcul√≥ a partir del nombre del candidato&lt;br&gt;\",\n  \"utilizando tres algoritmos diferentes ({f_mono_it('IPUMS')},\",\n  \"{f_mono_it('NAPP')} y {f_mono_it('SSA')}).\")\n\n# figura\ng &lt;- ggplot(e, aes(year, p, color = tipo)) +\n  # puntos de la grilla\n  annotate(geom = \"point\", x = p$x, y = p$y, color = c5, shape = 18) +\n  # l√≠neas de los algoritmos de g√©nero\n  geom_line(alpha = .4, linewidth = 1.5, show.legend = FALSE) +\n  # puntos\n  geom_point(shape = 15, size = 4)  +\n  geom_point(shape = 18, size = 6)  +\n  geom_point(size = 1, color = \"white\", shape = 20) +\n  # etiquetas de los algoritmos\n  geom_text(\n    data = algoritmo_label, aes(year, p, label = str_to_upper(tipo)), size = 6,\n    hjust = 0, vjust = 1, nudge_x = .3, nudge_y = -.005, family = \"victor\")+\n  # t√≠tulo\n  annotate(\n    geom = \"text\", x = 1976, y = .3, hjust = 0, vjust = 0, label = mi_tit, \n    family = \"vast\", size = 12, color = c4) +\n  # subt√≠tulo\n  annotate(\n    geom = \"richtext\", x = 1976, y = .295, hjust = 0, vjust = 1, label = mi_sub, \n    family = \"ubuntu\", size = 7, color = c1, fill = NA, label.color = NA) +\n  # aclaraci√≥n algoritmos\n  annotate(\n    geom = \"richtext\", x = 2022, y = .05, hjust = 1, vjust = 0, \n    label = mi_texto, family = \"ubuntu\", size = 5, color = c1, fill = NA, \n    label.color = NA) +\n  scale_y_continuous(\n    breaks = seq(.05, .35, .05), limits = c(.05, .35), expand = c(0, .01),\n    labels = scales::label_percent(decimal.mark = \",\", big.mark = \".\")) +\n  scale_color_manual(values = c(c1, c2, c3)) +\n  coord_cartesian(clip = \"off\") +\n  labs(caption = mi_caption) +\n  theme_void() +\n  theme(\n    plot.margin = margin(10, 20, 10, 10),\n    plot.background = element_rect(fill = c6, color = c5,linewidth = 3),\n    plot.caption = element_markdown(\n      color = c4, size = 12, family = \"ubuntu\", margin = margin(15, 0, 10, 0)),\n    plot.caption.position = \"plot\",\n    panel.grid.major = element_line(\n      color = \"#306489\", linetype = \"8f\", linewidth = .2),\n    axis.text = element_text(color = c4),\n    axis.text.x = element_text(family = \"bebas\", size = 35),\n    axis.text.y = element_text(family = \"victor\", size = 15, vjust = 0),\n    legend.position = \"none\"\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_45/viz.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_45/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 45"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_24.html",
    "href": "tidytuesday/2023/semana_24.html",
    "title": "Semana 24",
    "section": "",
    "text": "Encuestas a granjeros de Tanzania y Mozambique muestran sus pertenencias.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(fontawesome)\nlibrary(ggtext)\nlibrary(glue)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores\n# paleta 'Kandinsky' de MetBrewer\nc1 &lt;- \"#3B3A3E\"\nc2 &lt;- \"#898E9F\"\nc3 &lt;- \"#CE9642\"\nc4 &lt;- \"#3B7C70\"\n\nfont_add_google(name = \"DM Serif Display\", family = \"dmserif\") # t√≠tulo\nfont_add_google(name = \"Inconsolata\", family = \"inconsolata\") # n√∫meros\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\", db_cache = FALSE) # texto gral\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# √≠conos\nfont_add(\"fa-reg\", \"icon/Font Awesome 6 Free-Regular-400.otf\")\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solid\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 24&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-06-13/readme.md\")\n\nsafi &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-06-13/safi_data.csv')\n\n# traducci√≥n de los √≠tems\ntraduccion &lt;- c(\n  mobile_phone = \"celular\", radio = \"radio\", cow_plough = \"arado\", \n  solar_panel = \"panel solar\", bicycle = \"bicicleta\", \n  solar_torch = \"linterna solar\", table = \"mesa\", motorcyle = \"motocicleta\",\n  television = \"televisi√≥n\", cow_cart = \"carro\", sterio = \"est√©reo\", \n  sofa_set = \"juego de sof√°s\", electricity = \"electricidad\", fridge = \"heladera\",\n  lorry = \"cami√≥n\", car = \"auto\", computer = \"PC\")\n\n# arreglo los datos\nd &lt;- safi |&gt; \n  # selecciono la columna de √≠tems\n  select(items_owned) |&gt; \n  # remuevo las celdas vac√≠as\n  filter(items_owned != \"NULL\") |&gt; \n  # separo el contenido de las celdas de √≠tems, y agrego filas\n  separate_longer_delim(cols = items_owned, delim = \";\") |&gt; \n  # cuento la cantidad de √≠tems\n  count(items_owned) |&gt; \n  # ordeno\n  arrange(desc(n)) |&gt; \n  # traduzco\n  mutate(items_owned = traduccion[items_owned]) |&gt; \n  # convierto a factor los √≠tems individuales\n  mutate(items_owned = fct_reorder(items_owned, n)) \n\n\n# figura ------------------------------------------------------------------\n\n# t√≠tulo\ntit &lt;- \"Granjas en √Åfrica\"\n\n# subt√≠tulos\nsub1 &lt;- glue(\n  \"A partir de encuestas a &lt;b&gt;{length(unique(safi$key_ID))}&lt;/b&gt; granjeros en \n  &lt;b style='color:{c2}'&gt;Tanzania&lt;/b&gt; y &lt;b style='color:{c2}'&gt;Mozambique&lt;/b&gt;, se \n  recolect√≥ informac√≥n sobre los art√≠culos que pose√≠an en el hogar.\")\nsub2 &lt;- glue(\n  \"Pueden observarse elementos tecnol√≥gicos, de transporte y trabajo de campo.\")\n\n# figura\ng &lt;- ggplot(data = d, aes(x = n, y = items_owned, fill = items_owned)) +\n  # t√≠tulo\n  geom_text(\n    x = 1, y = 17, label = tit,\n    color = c3, size = 25, hjust = 0, vjust = 1, family = \"dmserif\") +\n  # subt√≠tulo I\n  geom_textbox(\n    x = 1, y = 14.5, label = sub1,\n    color = c4, size = 8, box.color = NA, fill = NA, hjust = 0,\n    width = unit(14, \"cm\"), family = \"ubuntu\") +\n  # subt√≠tulo II\n  geom_textbox(\n    x = 60, y = 5, label = sub2,\n    color = c4, size = 8, box.color = NA, fill = NA, hjust = 0,\n    width = unit(12, \"cm\"), family = \"ubuntu\") +\n  # puntos\n  geom_point(\n    show.legend = FALSE, color = c4, size = 10, shape = 16) +\n  geom_point(\n    show.legend = FALSE, color = c3, size = 5,shape = 16) +\n  geom_point(\n    show.legend = FALSE, color = c1, size = 2, shape = 16) +\n  # √≠tems\n  geom_text(\n    aes(label = str_to_sentence(items_owned)),\n    hjust = 0, nudge_x = 3, color = c3, size = 6, family = \"ubuntu\") +\n  # ejes\n  labs(\n    x = \"Cantidad\", y = NULL, caption = mi_caption) +\n  scale_x_continuous(\n    limits = c(0, 100), expand = c(0, 0), breaks = seq(0, 100, 20)) +\n  coord_cartesian(clip = \"off\") +\n  # tema\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(5, 21.5, 5, 21.5),\n    plot.background = element_rect(\n      fill = c1, color = c2, linewidth = 3),\n    plot.caption = element_markdown(\n      color = c4, size = 12, family = \"ubuntu\", margin = margin(10, 0, 5, 0)),\n    panel.grid.major.x = element_line(\n      color = c2, linewidth = .07, linetype = \"ff\"),\n    axis.text.x = element_text(\n      size = 20, family = \"inconsolata\", color = c2),\n    axis.text.y = element_blank(),\n    axis.title.x = element_text(\n      color = c3, size = 30, family = \"ubuntu\", margin = margin(15, 0, 5, 0)))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_24/viz.png\",\n  width = 30,\n  height = 32,\n  units = \"cm\",\n  dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_24/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 24"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_23.html",
    "href": "tidytuesday/2023/semana_23.html",
    "title": "Semana 23",
    "section": "",
    "text": "Consumo energ√©tico argentino, y su comparaci√≥n con los valores medios mundiales. En combustibles f√≥siles y renovables.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(geomtextpath)\nlibrary(glue)\nlibrary(showtext)\nlibrary(ggtext)\n\n# fuentes -----------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#183471\"\nc2 &lt;- \"#43429B\"\nc3 &lt;- \"#DF9ED4\"\nc4 &lt;- \"#EACC62\"\nc5 &lt;- \"#7EC5F4\"\nc6 &lt;- \"#FFCD11\"\nc7 &lt;- \"grey90\"\n\n# a√±os, eje horizontal\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = TRUE)\n# eje vertical\nfont_add_google(name = \"Inconsolata\", family = \"inconsolata\", db_cache = FALSE)\n# resto del texto\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\", db_cache = FALSE)\n# t√≠tulo\nfont_add_google(name = \"Yeseva One\", family = \"yeseva\", db_cache = FALSE)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 23&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-06-06/readme.md\")\n\nenergia &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-06-06/owid-energy.csv')\n\n# limpio los datos, enfoc√°ndome en el mundo y Argentina, renovable y f√≥siles\nd &lt;- energia |&gt; \n  # filtro por Argentina y el mundo\n  filter(country %in% c(\"Argentina\", \"World\")) |&gt; \n  # selecciono energ√≠as renovables y f√≥siles\n  select(year, country, renewables_energy_per_capita, fossil_energy_per_capita) |&gt; \n  # tabla larga\n  pivot_longer(cols = -c(year, country)) |&gt; \n  # remuevo NA\n  drop_na(value) |&gt; \n  # acomodo los nombres\n  mutate(name = str_remove(name, \"_energy_per_capita\")) |&gt;\n  mutate(name = str_replace(name, \"_\", \" \")) |&gt;\n  # traduzco\n  mutate(country = case_match(country, \"World\" ~ \"Mundo\", .default = country)) |&gt; \n  # agrego justificaci√≥n horizontal p/usar en la figura (geom_textpath)\n  mutate(hjust = case_when(\n    country == \"Argentina\" & name == \"fossil\" ~ .9,\n    country == \"Argentina\" & name == \"renewables\" ~ .3,\n    country == \"Mundo\" & name == \"fossil\" ~ .42,\n    country == \"Mundo\" & name == \"renewables\" ~ .01))\n\n# figura ------------------------------------------------------------------\n\n# {geomtextpath} \nbrowseURL(\"https://github.com/AllanCameron/geomtextpath\")\n\n# t√≠tulo\nti &lt;- tibble(\n  year = 1969,\n  value = 11000,\n  label = \"Argentina sigue la tendencia&lt;br&gt;energ√©tica mundial\")\n\n# subt√≠tulo\nsu &lt;- tibble(\n  year = 1969,\n  value = 8500,\n  label = glue(\n    \"El consumo energ√©tico per c√°pita de &lt;b style='color:{c3};'&gt;combustibles f√≥siles&lt;/b&gt;\n    se mantiene a√∫n por encima de las &lt;b style='color:{c4};'&gt;energ√≠as renovables&lt;/b&gt;. \n    **Argentina** tiene una evoluci√≥n energ√©tica que se asemeja a los valores \n    medios mundiales.\"))\n\n# figura\ng &lt;- ggplot(data = d, aes(x = year, y = value, color = name, linetype = country)) +\n  # l√≠neas y texto\n  geom_textpath(\n    aes(label = glue(\"**{country}**\"), hjust = I(hjust)),\n    vjust = -0.2, show.legend = FALSE, text_smoothing = 30, family = \"ubuntu\",\n    size = 7, linewidth = 1, rich = TRUE, lineend = \"round\") +\n  # t√≠tulo\n  geom_richtext(\n    data = ti, aes(x = year, y = value, label = label), inherit.aes = FALSE,\n    fill = NA, label.color = NA, color = c7, size = 14, show.legend = FALSE,\n    hjust = 0, vjust = 1, family = \"yeseva\") +\n  # subt√≠tulo\n  geom_textbox(\n    data = su, aes(x = year, y = value, label = label), inherit.aes = FALSE,\n    fill = NA, box.color = NA, color = c7, size = 6, show.legend = FALSE,\n    hjust = 0, vjust = 1, family = \"ubuntu\", width = unit(20, \"cm\")) +\n  # ejes\n  scale_x_continuous(\n    breaks = seq(1960, 2021, 10), limits = c(1965, 2021), expand = c(0, 1)) +\n  scale_y_continuous(\n    breaks = seq(0, 20e3, 5e3), limits = c(-250, 21e3), expand = c(0, 0),\n    labels = scales::label_number(scale = .001)) +\n  scale_color_manual(guide = \"none\", values = c(c3, c4)) +\n  scale_linetype_manual(name = NULL, values = c(\"solid\", \"dotted\")) +\n  coord_cartesian(clip = \"off\") +\n  labs(x = NULL, y = \"Consumo energ√©tico, miles de kW-h per c√°pita\",\n       caption = mi_caption) +\n  # tema\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(5, 12, 5, 12),\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    plot.caption = element_markdown(\n      color = c7, hjust = .436, size = 11, margin = margin(20, 0, 3, 0)),\n    axis.text.x = element_text(color = c5, family = \"bebas\", size = 30),\n    axis.text.y = element_text(color = c5, family = \"inconsolata\", size = 20),\n    axis.title.y = element_text(\n      color = c5, family = \"ubuntu\", size = 15, margin = margin(0, 10, 0, 0)),\n    panel.grid.major = element_line(color = c2, linewidth = .1),\n    panel.grid.minor = element_blank(),\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_23/viz.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\",\n  dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_23/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 23"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_26.html",
    "href": "tidytuesday/2023/semana_26.html",
    "title": "Semana 26",
    "section": "",
    "text": "Ubicaci√≥n de sitios asociados a molinos en EE.UU.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tidytext)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(ggpath)\n\n# fuentes -----------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#3C0D02\"\nc2 &lt;- \"#8D1C06\"\nc3 &lt;- \"white\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# t√≠tulo\nfont_add_google(name = \"STIX Two Text\", family = \"stix\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 26&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-06-27/readme.md\")\nus_place_names &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-06-27/us_place_names.csv')\n\n# m√°s datos\nbrowseURL(\"https://www.usgs.gov/us-board-on-geographic-names/what-geographic-names-information-system-gnis#1\")\n\n# sistema de coordenadas de EEUU\ncrs_eeuu &lt;- \"+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs\"\n\n# mapa de EEUU, entero\neeuu &lt;- giscoR::gisco_get_countries(country = \"US\", resolution = \"01\") |&gt; \n  # transformo las coordenadas\n  st_transform(crs = crs_eeuu)\n\n# extenci√≥n de la parte continental de EEUU, tbl\nbb_tbl &lt;- tibble(\n  lon = c(-129, -62.5, -62.5, -129, -129),\n  lat = c(20, 20, 50.5, 50.5, 20))\n\n# convierto a sf\nbb &lt;- bb_tbl |&gt; \n  # uso coordenadas 4326\n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326) |&gt; \n  mutate(geometry = st_combine(geometry)) |&gt; \n  # convierto a pol√≠gono\n  st_cast(\"POLYGON\") |&gt; \n  # transformo a sistema de coordenadas EEUU\n  st_transform(crs = crs_eeuu)\n\n# recorto el mapa de EEUU a la regi√≥n continental\neeuu_bb &lt;- st_crop(eeuu, bb)\n\n# convierto los datos de nombres de lugares a sf\nnombres_sf2 &lt;- us_place_names |&gt; \n  # remuevo sitios sin coordenadas\n  drop_na(prim_lat_dec, prim_long_dec) |&gt; \n  # indico columnas de coordenadas , CRS\n  st_as_sf(coords = c(\"prim_long_dec\", \"prim_lat_dec\"), crs = 4326) |&gt; \n  # transformo a sistema de coordendas de EEUU\n  st_transform(crs = crs_eeuu)\n\n# recorto los datos a la regi√≥n continental\nnombres_sf &lt;- st_crop(nombres_sf2, bb)\n\n# me intereso en molinos (mill)\nd &lt;- nombres_sf |&gt; \n  # convierto todo a min√∫scula\n  mutate(feature_name = str_to_lower(feature_name)) |&gt; \n  # molinos\n  filter(str_detect(feature_name, \"mill\")) |&gt; \n  # columnas de inter√©s\n  select(geometry)\n\n# figura ------------------------------------------------------------------\n\n# cantidad de molinos\nn_molinos &lt;- nrow(d) |&gt; \n  gt::vec_fmt_number(dec_mark = \",\", sep_mark = \".\", decimals = 0)\n\n# .png molino\nmolino &lt;-(\"2023/semana_26/molino.svg\")\n\n# figura\ng &lt;- ggplot() +\n  geom_sf(data = eeuu_bb, fill = c2, color = NA) +\n  geom_sf(data = d, color = c3, alpha = .6, size = .75, shape = 16) +\n  geom_from_path(aes(x = -2100000, y = -1600000, path = molino), width = .05) +\n  annotate(\n    geom = \"richtext\", x = -2200000, y = -2000000, \n    label = glue(\n      \"Cada punto representa la ubicaci√≥n&lt;br&gt;de los {n_molinos}\n      sitios en **EE.UU.**&lt;br&gt;asociados a **molinos**, en el&lt;br&gt;\n      territorio continental.\"),\n    label.color = NA, color = c3, fill = NA, hjust = 0, family = \"ubuntu\", \n    size = 5) +\n  coord_sf() +\n  labs(\n    title = \"Molinos en EE.UU.\",\n    caption = mi_caption) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(fill = c1, color = c2, linewidth = 3),\n    # plot.margin = margin(7.3, 0, 7.3, 0),\n    plot.margin = margin(6.9, 0, 6.9, 0),\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(\n      family = \"stix\", size = 36, color = c3, hjust = .5, \n      margin = margin(0, 0, -30, 0)),\n    plot.caption = element_markdown(\n      color = c2, margin = margin(0, 10, 0, 0), family = \"ubuntu\"))\n\n# guardo\nggsave(\n    plot = g,\n    filename = \"2023/semana_26/viz.png\",\n    width = 30,\n    height = 19,\n    units = \"cm\",\n    dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_26/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 26"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_15.html",
    "href": "tidytuesday/2023/semana_15.html",
    "title": "Semana 15",
    "section": "",
    "text": "Producci√≥n de huevos.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(fontawesome)\nlibrary(showtext)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(ggpath)\n\n# fuentes -----------------------------------------------------------------\n\nfont_add_google(name = \"Share Tech Mono\", family = \"share\") # rendimiento, eje y\nfont_add_google(name = \"Lato\", family = \"lato\") # resto del texto\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\") # a√±os, eje x\nfont_add_google(name = \"Merriweather\", family = \"merriweather\") # t√≠tulo\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# √≠conos\nfont_add(\"fa-reg\", \"icon/Font Awesome 5 Free-Regular-400.otf\")\nfont_add(\"fa-brands\", \"icon/Font Awesome 5 Brands-Regular-400.otf\")\nfont_add(\"fa-solid\", \"icon/Font Awesome 5 Free-Solid-900.otf\")\n\n# caption\nicon_twitter &lt;- \"&lt;span style='font-family:fa-brands; color:grey90;'&gt;&#xf099;&lt;/span&gt;\"\nicon_github &lt;- \"&lt;span style='font-family:fa-brands; color:grey90;'&gt;&#xf09b;&lt;/span&gt;\"\nfuente &lt;- \"&lt;span style='color:grey90;'&gt;Datos:&lt;/span&gt; &lt;span style='color:gold;'&gt;&lt;span style='font-family:mono;'&gt;{**tidytuesdayR**}&lt;/span&gt; semana 15&lt;/span&gt;\"\nautor &lt;- \"&lt;span style='color:grey90;'&gt;Autor:&lt;/span&gt; &lt;span style='color:gold;'&gt;**V√≠ctor Gauto**&lt;/span&gt;\"\nsep &lt;- glue(\"&lt;span style = 'color:grey90;'&gt;**|**&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style = 'color:gold;'&gt;**vhgauto**&lt;/span&gt;\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-04-11/readme.md\")\n\neggproduction  &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-04-11/egg-production.csv')\n\n# acomodo datos\ndatos &lt;- eggproduction |&gt; \n  filter(prod_type == \"table eggs\" & prod_process == \"all\") |&gt; \n  mutate(rendimiento = n_eggs/n_hens) |&gt; \n  mutate(a√±o = factor(year(observed_month))) |&gt; \n  select(a√±o, gallina = n_hens, huevo = n_eggs, rendimiento)\n\n# valores m√≠nimos 2017-2020, todos en febrero\nflecha &lt;- eggproduction |&gt; \n  filter(prod_type == \"table eggs\" & prod_process == \"all\") |&gt; \n  mutate(rendimiento = n_eggs/n_hens) |&gt; \n  mutate(a√±o = factor(year(observed_month))) |&gt; \n  group_by(a√±o) |&gt; \n  slice_min(order_by = rendimiento, n = 1) |&gt; \n  filter(month(observed_month) == 2) |&gt; \n  select(a√±o, rendimiento) |&gt; \n  ungroup() |&gt; \n  mutate(xend = 2:5,\n         x = 4.8,\n         yend = rendimiento - 0,\n         y = 21.95)\n\n# figura ------------------------------------------------------------------\n\ng &lt;- ggplot(data = datos, aes(x = a√±o, y = rendimiento)) +\n  # verticales\n  geom_vline(xintercept = 1.5:5.5, color = \"grey30\", linewidth = .1) +\n  # tendencia\n  geom_smooth(aes(x = as.numeric(a√±o), y = rendimiento), linewidth = 4,\n              color = \"gold\",\n              inherit.aes = FALSE, se = FALSE, formula = y ~ x, method = \"lm\") +\n  # flechas\n  geom_segment(data = flecha, aes(x = x, xend = xend, y = y, yend = yend),\n               color = \"grey40\", linewidth = .5, alpha = 1) +\n  geom_richtext(aes(x = 4.8, y = 21.95, \n                    label = \"Los valores m√°s bajos&lt;br&gt;de **rendimiento** se&lt;br&gt;\n                    dieron en febrero por&lt;br&gt;**4** a√±os consecutivos\"), \n                inherit.aes = FALSE, color = \"grey90\", size = 3.5, vjust = 1,\n                fill = \"grey10\", label.color = \"grey40\", hjust = 0, family = \"lato\") +\n  # huevo .png, jitter\n  geom_from_path(aes(path = \"2023/semana_15/egg.png\"), width = .05,\n                 position = position_jitter(width = .1, seed = 2023)) +\n  # leyenda\n  geom_richtext(aes(x = 4.5, y = 26, \n                    label = \"&lt;img src='2023/semana_15/egg.png' width='10'&gt; = Rendimiento mensual\"),\n                color = \"grey90\", fill = NA, inherit.aes = FALSE, hjust = 0,\n                label.color = NA, vjust = 0, size = 3.7, family = \"lato\") +\n  # manual\n  scale_y_continuous(breaks = seq(21, 26, 1),\n                     limits = c(20.75, 26),\n                     expand = c(0, 0)) +\n  scale_x_discrete(breaks = 2016:2021,\n                   labels = glue(\"'{16:21}\")) +\n  coord_cartesian(clip = \"off\") +\n  # ejes\n  labs(x = NULL, y = \"Rendimiento\",\n       title = \"A√±o a a√±o, las &lt;span style='color:gold;'&gt;gallinas&lt;/span&gt;&lt;br&gt;ponen \n       m√°s huevo(s)\",\n       subtitle = \"La tendencia (l√≠nea &lt;span style='color:gold;'&gt;**amarilla**&lt;/span&gt;) \n       muestra que el rendimiento de huevos de mesa en **Estados Unidos** se ha \n       incrementado levemente. Se entiende el **rendimiento** como la cantidad de huevos \n       que pone una gallina, por mes.\",\n       caption = mi_caption) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    axis.text.x = element_text(\n      family = \"bebas\", size = 27, color = \"gold\", margin = margin(0, 0, 20, 0)),\n    axis.text.y = element_text(family = \"share\", size = 13, color = \"gold\"),\n    axis.title.y = element_text(color = \"gold\", family = \"lato\", size = 16),\n    plot.background = element_rect(fill = \"grey10\", color = \"gold\", linewidth = 2),\n    plot.title = element_markdown(\n      family = \"merriweather\", size = 40, margin = margin(10, 0, 5, 0),\n      color = \"grey90\"),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_textbox_simple(\n      size = 12, family = \"lato\", margin = margin(10, 0, 25, 0),\n      color = \"grey90\"),\n    plot.caption = element_markdown(\n      hjust = .3, size = 9, margin = margin(0, 0, 5, 0)),\n    plot.margin = margin(5, 17, 5, 17),\n    panel.background = element_rect(fill = \"grey10\", color = NA),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(color = \"grey30\", linewidth = .2)\n  )\n\n# guardo\nggsave(plot = g,\n       filename = \"2023/semana_15/viz.png\",\n       width = 2000,\n       height = 2700,\n       units = \"px\",\n       dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_15/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 15"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_29.html",
    "href": "tidytuesday/2023/semana_29.html",
    "title": "Semana 29",
    "section": "",
    "text": "Los detectores de IA tienen serias limitaciones en detectar texto escrito en ingl√©s por quienes no son nativos del idioma.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(ggwaffle)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuentes -----------------------------------------------------------------\n\n# colores, Renoir\nc1 &lt;- \"#17164F\"\nc2 &lt;- \"#9D9CD5\"\nc3 &lt;- \"#6C5D9E\"\nc4 &lt;- \"#E69B00\"\nc5 &lt;- \"#BF3728\"\nc6 &lt;- \"#F6B3B0\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# t√≠tulo y porcentajes\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 29, **GPT Detectors Are Biased Against Non-Native English Writers**. Weixin Liang, Mert Yuksekgonul, Yining Mao, Eric Wu, James Zou. arXiv: **2304.02819**&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-07-18/readme.md\")\n\ndetectors &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-07-18/detectors.csv')\n\n# aciertos/errores en la detecci√≥n de texto HUMANO\ndetectors |&gt; \n  filter(kind == \"Human\") |&gt; \n  summarise(acierto = mean(kind == .pred_class)) |&gt; \n  mutate(error = 1 - acierto)\n\n# aciertos/errores en la detecci√≥n de texto IA\ndetectors |&gt; \n  filter(kind == \"AI\") |&gt; \n  summarise(acierto = mean(kind == .pred_class)) |&gt; \n  mutate(error = 1 - acierto)\n\n# aciertos/errores en la detecci√≥n de texto HUMANO, entre nativos/NO nativos\ndetectors |&gt; \n  filter(kind == \"Human\") |&gt; \n  group_by(native) |&gt; \n  summarise(acierto = mean(kind == .pred_class)) |&gt; \n  mutate(error = 1 - acierto)\n\n# porcentaje de aciertos entre texto generado por nativos del ingl√©s\nporc_nativo &lt;- detectors |&gt; \n  filter(kind == \"Human\" & native == \"Yes\") |&gt; \n  summarise(acierto = mean(kind == .pred_class)) |&gt; \n  pull(acierto) |&gt; \n  gt::vec_fmt_percent(decimals = 0, sep_mark = \".\", dec_mark = \",\")\n\n# porcentaje de aciertos entre texto generado por NO nativos del ingl√©s\nporc_no_nativo &lt;- detectors |&gt; \n  filter(kind == \"Human\" & native == \"No\") |&gt; \n  summarise(acierto = mean(kind == .pred_class)) |&gt; \n  pull(acierto) |&gt; \n  gt::vec_fmt_percent(decimals = 0, sep_mark = \".\", dec_mark = \",\")\n\n# me interesa el porcentaje de aciertos, entre nativos/NO nativos, para los\n# siete detectores\nd &lt;- detectors |&gt; \n  filter(!is.na(native)) |&gt; \n  group_by(detector, native) |&gt; \n  reframe(prop = mean(kind == .pred_class)) |&gt; \n  mutate(detector = fct_reorder(detector, prop, max))\n\n# figura ------------------------------------------------------------------\n\n# t√≠tulo y subt√≠tulo\ntit &lt;- glue(\"Si no habl√°s ingl√©s nativo,&lt;br&gt;las IA dudan de tu humanidad\")\n\nsubtit &lt;- glue(\n  \"Se solicit√≥ a &lt;span style='color:{c6}'&gt;**siete detectores de IA**&lt;/span&gt; que\n  identifiquen si texto, en ingl√©s escrito por humanos, **fue o no generado&lt;br&gt;\n  por una IA**. Para los textos creados por \n  &lt;span style='color:{c5};'&gt;**nativos del ingles**&lt;/span&gt;, en promedio, \n  hubo un **{porc_nativo}** de aciertos. Sin embargo, &lt;br&gt;\n  para los &lt;span style='color:{c4};'&gt;**no nativos del ingl√©s**&lt;/span&gt;, \n  disminuye al **{porc_no_nativo}**.\"\n)\n\n# figura\ng &lt;- ggplot(data = d, aes(x = prop, y = detector, fill = native)) +\n  # columnas\n  geom_col(\n    position = position_dodge(), show.legend = FALSE, width = .5, color = c2) +\n  # porcentajes\n  geom_text(\n    aes(label = gt::vec_fmt_percent(\n      prop, decimals = 0, dec_mark = \",\", sep_mark = \".\")),\n    position = position_dodge(width = .5), color = c6, size = 5,\n    hjust = -.25, family = \"victor\") +\n  scale_x_continuous(\n    limits = c(0, 1), expand = c(0, 0), breaks = c(0, .5, 1),\n    labels = scales::label_percent()) +\n  scale_fill_manual(values = c(c4, c5)) +\n  labs(\n    x = NULL, y = NULL, title = tit, subtitle = subtit, caption = mi_caption) +\n  coord_cartesian(clip = \"off\") +\n  theme(\n    aspect.ratio = 1,\n    plot.background = element_rect(fill = c1, color = c3, linewidth = 3),\n    plot.margin = margin(8, 40, 8, 13),\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(\n      color = c2, size = 45, family = \"victor\", hjust = .5),\n    plot.subtitle = element_markdown(\n      color = c2, family = \"ubuntu\", size = 16, margin = margin(2, 2, 10, 2), \n      lineheight = 1.3),\n    plot.caption = element_markdown(color = c2),\n    panel.background = element_blank(),\n    panel.grid = element_blank(),\n    panel.grid.major.x = element_line(\n      linewidth = .2, linetype = \"8f\", color = c2),\n    axis.text.y = element_text(\n      hjust = 1, color = c6, family = \"ubuntu\", size = 15,face = \"bold\"),\n    axis.text.x = element_text(\n      color = c3, size = 15, family = \"victor\", hjust = 0),\n    axis.ticks = element_blank()\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_29/viz.png\",\n  width = 30,\n  height = 32.5,\n  units = \"cm\"\n)\n\n# abro\nbrowseURL(\"2023/semana_29/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 29"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_35.html",
    "href": "tidytuesday/2023/semana_35.html",
    "title": "Semana 35",
    "section": "",
    "text": "Veredictos de uso leg√≠timo, por categor√≠as, en EEUU.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores, Nord, afternoon praire\nc1 &lt;- \"#009B9F\"\nc2 &lt;- \"#C75DAA\"\nc3 &lt;- \"#7DC5C7\"\nc4 &lt;- \"#DEA9CC\"\nc5 &lt;- \"grey90\"\nc6 &lt;- \"grey30\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# cantidad, eje vertical\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# t√≠tulo\nfont_add_google(name = \"Playfair Display SC\", family = \"playfair\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 35.  U.S. Copyright Office Fair Use Index&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-08-29/readme.md\")\n\nfair_use_cases &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-29/fair_use_cases.csv')\n\n# m√°xima cantidad de categor√≠as por observaci√≥n\n# sirve p/definir la cantidad de columnas en las que voy a separar 'categories'\nfair_use_cases |&gt; \n  select(categories, fair_use_found) |&gt; \n  mutate(cantidad = str_count(categories, \";\")) |&gt; \n  slice_max(cantidad, n = 1, with_ties = FALSE) |&gt; \n  pull(cantidad)\n# son 4, as√≠ que son 4+1 = 5 categor√≠as\n\n# 10 categor√≠as m√°s frecuentes\ntop_cat &lt;- fair_use_cases |&gt; \n  select(categories, fair_use_found) |&gt; \n  separate_wider_delim(\n    cols = categories,\n    delim = \"; \", \n    names = glue(\"a{1:5}\"), \n    too_few = \"align_start\") |&gt; \n  pivot_longer(\n    cols = starts_with(\"a\"),\n    names_to = \"n\",\n    values_to = \"cat\"\n  ) |&gt; \n  select(-n) |&gt; \n  drop_na(cat) |&gt; \n  mutate(cat = str_to_lower(cat)) |&gt; \n  count(cat, sort = TRUE) |&gt; \n  slice_max(order_by = n, n = 10) |&gt; \n  pull(cat)\n\n# traducci√≥n\ntop_cat_trad &lt;- c(\n  \"texto\", \"film/audiovisual\", \"educaci√≥n/becas/investigaci√≥n\", \"fotograf√≠a\",\n  \"internet/digitalizaci√≥n\", \"revisi√≥n/comentario\", \"reporte de noticias\",\n  \"parodia/s√°tira\", \"pintura/dibujo/gr√°fico\", \"m√∫sica\"\n)\n\nnames(top_cat_trad) &lt;- top_cat\n\n# resoluci√≥n VERDADERO/FALSO por las 10 categor√≠as m√°s frecuentes\nd &lt;- fair_use_cases |&gt; \n  select(categories, fair_use_found) |&gt; \n  separate_wider_delim(\n    cols = categories,\n    delim = \"; \", \n    names = glue(\"a{1:5}\"), \n    too_few = \"align_start\") |&gt; \n  pivot_longer(\n    cols = starts_with(\"a\"),\n    names_to = \"n\",\n    values_to = \"cat\"\n  ) |&gt; \n  select(-n) |&gt; \n  drop_na(cat) |&gt; \n  mutate(cat = str_to_lower(cat)) |&gt; \n  filter(cat %in% top_cat) |&gt; \n  count(cat, fair_use_found) |&gt; \n  mutate(n = if_else(fair_use_found == FALSE, -n, n)) |&gt; \n  pivot_wider(names_from = fair_use_found, values_from = n) |&gt; \n  rename(falso = `FALSE`, verdadero = `TRUE`) |&gt; \n  mutate(cat = top_cat_trad[cat]) |&gt; \n  mutate(cat = str_to_sentence(cat)) |&gt; \n  mutate(cat = fct_reorder(cat, verdadero))\n\n# totales\nd_tot_v &lt;- sum(d$verdadero)\nd_tot_f &lt;- abs(sum(d$falso))\nd_tot &lt;- d_tot_v + d_tot_f\n\n# figura ------------------------------------------------------------------\n\n# t√≠tulo y subt√≠tulo\ng_tit &lt;- \"leg√≠timo &lt;span style='font-size:40pt'&gt;v&lt;/span&gt; no leg√≠timo\"\n\ng_sub &lt;- glue(\"El derecho de autor permite el uso de obras protegidas en caso de \n**uso leg√≠timo**. Sin embargo,&lt;br&gt;muchas veces eso lleva a conflictos que se resuelven\nen la Justicia. Se muestran las 10 categor√≠as&lt;br&gt;m√°s frecuentes de {d_tot} casos en EEUU,\ny si el veredicto fue de uso &lt;span style='color:{c2};'&gt;**leg√≠timo**&lt;/span&gt; ({d_tot_v}) o \n&lt;span style='color:{c1};'&gt;**no leg√≠timo**&lt;/span&gt; ({d_tot_f}).\")\n\n# tama√±o de los puntos\nt_grande &lt;- 7\nt_peque√±o &lt;- 6\n\n# figura\ng &lt;- ggplot(d, aes(x = 0, y = cat, yend = cat)) +\n  geom_vline(xintercept = 0, color = \"grey90\", linewidth = .1, linetype = \"8f\") +\n  geom_segment(aes(xend = falso), color = c6) +\n  geom_segment(aes(xend = verdadero), color = c6) +\n  geom_point(aes(x = falso), size = t_grande, color = c5) +\n  geom_point(aes(x = verdadero), size = t_grande, color = c5) +\n  geom_point(aes(x = falso, color = \"f\"), size = t_peque√±o) +\n  geom_point(aes(x = verdadero, color = \"v\"), size = t_peque√±o) +\n  scale_x_continuous(\n    breaks = seq(-50, 50, 25),\n    limits = c(-55, 50),\n    labels = abs(seq(-50, 50, 25))) +\n  scale_y_discrete(expand = c(0, 0)) +\n  scale_color_manual(values = c(c1, c2)) +\n  coord_cartesian(ylim = c(.75, 10.25)) +\n  labs(\n    x = \"Cantidad de casos\",\n    y = NULL,\n    color = NULL,\n    title = g_tit,\n    subtitle = g_sub,\n    caption = mi_caption) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"grey20\", color = c5, linewidth = 3),\n    plot.margin = margin(19, 19, 10, 19),\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(\n      size = 55, family = \"playfair\", color = \"white\", hjust = .5),\n    plot.subtitle = element_markdown(\n      color = c5, family = \"ubuntu\", size = 15, margin = margin(5, 70, 25, 70),\n      hjust = .5, lineheight = 1.25),\n    plot.caption = element_markdown(\n      color = c4, family = \"ubuntu\", size = 12, margin = margin(10, 0, 5, 0)),\n    panel.grid.major.y = element_blank(),\n    panel.grid.major.x = element_line(linewidth = .05, color = \"grey40\"),\n    panel.grid.minor.x = element_line(linewidth = .05, color = \"grey30\"),\n    axis.text.y = element_text(color = c3, family = \"ubuntu\", size = 15),\n    axis.text.x = element_text(color = c4, family = \"victor\", size = 12),\n    axis.title.x = element_text(\n      family = \"ubuntu\", color = c4, size = 20, margin = margin(15, 0, 0, 0))\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_35/viz.png\",\n  width = 30,\n  height = 30,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_35/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 35"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_16.html",
    "href": "tidytuesday/2023/semana_16.html",
    "title": "Semana 16",
    "section": "",
    "text": "Alimentaci√≥n del per√≠odo Neol√≠tico.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(ggrepel)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(fontawesome)\n\n# fuentes -----------------------------------------------------------------\n\nfont_add_google(name = \"Poltawski Nowy\", family = \"poltawski\", db_cache = FALSE) # t√≠tulo\nfont_add_google(name = \"Anuphan\", family = \"anuphan\", db_cache = FALSE) # resto del texto\nfont_add_google(name = \"Share Tech Mono\", family = \"share\", db_cache = FALSE) # coordenadas\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# √≠conos\nfont_add(\"fa-reg\", \"icon/Font Awesome 5 Free-Regular-400.otf\")\nfont_add(\"fa-brands\", \"icon/Font Awesome 5 Brands-Regular-400.otf\")\nfont_add(\"fa-solid\", \"icon/Font Awesome 5 Free-Solid-900.otf\")\n\n# caption\nicon_twitter &lt;- \"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\"\nicon_github &lt;- \"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\"\nfuente &lt;- \"Datos: &lt;span style='color:#a41400;'&gt;&lt;span style='font-family:mono;'&gt;{**tidytuesdayR**}&lt;/span&gt; semana 16&lt;/span&gt;\"\nautor &lt;- \"Autor: &lt;span style='color:#a41400;'&gt;**V√≠ctor Gauto**&lt;/span&gt;\"\nsep &lt;- glue(\"**|**\")\nusuario &lt;- glue(\"&lt;span style='color:#a41400;'&gt;**vhgauto**&lt;/span&gt;\")\n\nmi_caption &lt;- glue(\"{fuente} {sep} {autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-04-18/readme.md\")\n\nfounder_crops &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-04-18/founder_crops.csv')\n\n# convierto las coordenadas a sf\nfounder_crops_sf &lt;- st_as_sf(founder_crops,\n                             coords = c(\"longitude\", \"latitude\"),\n                             crs = st_crs(4326))\n\n# mapa del mundo\nworld &lt;- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n# regi√≥n de inter√©s, bbox de la base de datos\nl &lt;- st_bbox(founder_crops_sf) |&gt; \n  st_as_sfc() |&gt; \n  st_as_sf()\n\n# evito errores al recortar el mapa del mundo\nsf_use_s2(FALSE)\n\n# recorto el mapa del mundo a la base de datos\nworld_subset &lt;- st_crop(world, l)\n\n# me interesan las ubicaciones y 'comestibilidad', solo tomo datos √∫nicos\n# incluye 'Edible seed/fruit'\nsub &lt;- founder_crops_sf |&gt; \n  drop_na(edibility) |&gt; \n  distinct(geometry, edibility) |&gt;  \n  mutate(edibility2 = fct_lump_n(f = edibility, n = 3))\n\n# remuevo la categor√≠a que se repite en TODOS los puntos (Edible seed/fruit)\n# conservo las restantes, elijo las 3 m√°s frecuentes y lump el resto\nsub2 &lt;- founder_crops_sf |&gt; \n  # remuevo NA\n  drop_na(edibility) |&gt; \n  # mantengo ubicaciones √∫nicas\n  distinct(geometry, edibility) |&gt; \n  # remuevo la categor√≠a que se repite en todas las ubicaciones\n  filter(edibility != \"Edible seed/fruit\") |&gt; \n  # lump categor√≠as poco frecuentes\n  mutate(edibility2 = fct_lump_n(\n    f = edibility, \n    n = 3, \n    ties.method = \"first\",\n    other_level = \"Otros\")) |&gt;\n  # traduzco\n  mutate(edibility2 = case_match(\n    edibility2,\n    \"leaves, stems\" ~ \"Hoja, tallo\",\n    \"flowers, stems\" ~ \"Flor, tallo\",\n    \"leaves, root\" ~ \"Hoja, ra√≠z\", \n    .default = edibility2))\n\n# categor√≠a Otros\nsub3 &lt;- sub2 |&gt; \n  filter(edibility2 == \"Otros\") |&gt; \n  mutate(edibility = case_match(\n    edibility,\n    \"stems\" ~ \"Tallo\",\n    \"rhizomes, stems and leaves,\" ~ \"Rizoma, tallo, hoja\",\n    \"bulbs\" ~ \"Bulbo\",\n    \"flowers\" ~ \"Flor\",\n    \"leaves\" ~ \"Hoja\",\n    .default = edibility))\n\n# figura ------------------------------------------------------------------\n\n# funci√≥n p/colorear palabras\nf_c &lt;- function(x) {\n  glue(\"&lt;span style='color:#a41400'&gt;**{x}**&lt;/span&gt;\")\n}\n\n# figura\ng1 &lt;- sub2 |&gt; \n  ggplot() +\n  # mundo\n  geom_sf(data = world_subset, fill = \"grey90\", color = \"grey20\", \n          linewidth = .2, linetype = 2) +\n  # todos los puntos\n  geom_sf(data = sub |&gt; select(-edibility2),\n          color = \"#007e2e\", alpha = 1, size = 1) +\n  # puntos de las facetas\n  geom_sf(alpha = .8, color = \"#a41400\", size = 3, show.legend = TRUE) +\n  # otros\n  geom_label_repel(\n    data = sub3,\n    aes(label = edibility, geometry = geometry),\n    color = \"#59386c\",\n    label.size = 0,\n    label.padding = unit(.1, \"line\"),\n    fill = alpha(\"white\", .75),\n    stat = \"sf_coordinates\",\n    force = 7,\n    size = 4.25,\n    family = \"anuphan\",\n    max.overlaps = 20,\n    min.segment.length = 0) +\n  # manual\n  coord_sf(expand = FALSE, clip = \"off\") +\n  labs(x = NULL, y = NULL, \n       title = \"Dieta neol√≠tica\",\n       subtitle = glue(\n         \" {f_c('Flores')}, {f_c('tallos')}, {f_c('hojas')}, {f_c('ra√≠ces')}, \n         {f_c('bulbos')} y {f_c('rizomas')} eran parte de la dieta de nuestros \n         antepasados. Se muestra la distribuci√≥n geogr√°fica de estas partes \n         comestibles de las plantas en el **sudoeste asi√°tico**. En todos los \n         paneles se indican las ubicaciones de \n         &lt;span style='color:#007e2e'&gt;**semillas**&lt;/span&gt; y \n         &lt;span style='color:#007e2e'&gt;**frutas**&lt;/span&gt;.\"),\n       caption = mi_caption) +\n  # faceta\n  facet_wrap(~ edibility2, ncol = 2, nrow = 2) +\n  # tema\n  theme_minimal() +\n  theme(\n    plot.background = element_rect(\n      fill = \"#e7e5cc\", color = \"#59386c\", linewidth = 2),\n    plot.title.position = \"panel\",\n    plot.title = element_markdown(\n      size = 65, family = \"poltawski\", color = \"#59386c\"),\n    plot.subtitle = element_textbox_simple(\n      size = 16, family = \"anuphan\", color = \"#59386c\", \n      margin = margin(10, 0, 10, 0)),\n    plot.caption = element_markdown(\n      size = 12, hjust = .46, family = \"anuphan\", margin = margin(15, 0, 5, 0),\n      color = \"#59386c\"),\n    plot.margin = margin(5, 10, 0, 10),\n    strip.text = element_markdown(\n      family = \"anuphan\", size = 16, color = \"#59386c\", face = \"bold\"),\n    axis.text = element_markdown(family = \"share\", size = 12, color = \"#59386c\"),\n    axis.ticks = element_line(color = \"#59386c\"),\n    panel.grid = element_blank(),\n    panel.ontop = TRUE,\n    panel.background = element_rect(fill = NA, color = \"#59386c\", linewidth = .3),\n    panel.spacing.x = unit(1, \"line\"),\n    panel.spacing.y = unit(1.25, \"line\"))\n\n# guardo\nggsave(\n  plot = g1,\n  filename = \"2023/semana_16/viz.png\",\n  width = 30,\n  height = 27.37,\n  units = \"cm\",\n  dpi = 300)\n\n# abro\nbrowseURL(\"2023/semana_16/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 16"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_39.html",
    "href": "tidytuesday/2023/semana_39.html",
    "title": "Semana 39",
    "section": "",
    "text": "Cantidad de veces que los personajes de Ted Lasso dicen fuck.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(showtext)\nlibrary(ggtext)\nlibrary(ggpath)\n\n# fuente ------------------------------------------------------------------\n\n# colores\nc1 &lt;- \"#E1C8AF\"\nc2 &lt;- \"#E1E1E1\"\nc3 &lt;- \"#EDDAEB\"\nc4 &lt;- \"#647D96\"\nc5 &lt;- \"#3B4252\"\nc6 &lt;- \"#2E87C9\"\nc7 &lt;- \"#4C566A\"\n\n# texto gral, t√≠tulos de eje\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# eje horizontal & vertical\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# temporada\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\", db_cache = FALSE)\n# fuck's\nfont_add_google(name = \"Permanent Marker\", family = \"marker\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:victor;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 39. &lt;span style='font-family:victor;'&gt;{{richmondway}}&lt;/span&gt;, **Deepsha Menghani**&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-09-26/readme.md\")\n\ndatos &lt;- richmondway::richmondway\n\nfuck &lt;- \"&lt;b style='font-family:marker'&gt;FUCK&lt;/b&gt;\"\n\n# me interesa el conteo acumulado de 'fuck' a lo largo de todos los episodios\n\n# posici√≥n de los finales de temporada, para indicar los l√≠mites de las √°reas\nv &lt;- datos |&gt; \n  group_by(Season) |&gt; \n  slice_max(Episode) |&gt; \n  mutate(Episode_order = if_else(\n    Episode_order != max(datos$Episode_order), \n    Episode_order + 1, \n    Episode_order)) |&gt; \n  pull(Episode_order)\n\n# ubicaci√≥n de texto 'Temporada' en la parte superior\ne &lt;- datos |&gt; \n  mutate(m = median(Episode), ult = max(Episode), .by = Season) |&gt; \n  slice_min(Episode) |&gt; \n  mutate(eje_x = Episode_order + m - 1) |&gt; \n  select(eje_x, Episode_order) |&gt; \n  mutate(label = glue(\"Temporada {c('I', 'II', 'III')}\")) |&gt; \n  mutate(v1 = v)\n\n# promedio de 'fuck' por episodio, por temporada\nh &lt;- datos |&gt; \n  summarise(prom = sum(F_count_total)/n(), .by = Season) |&gt; \n  mutate(prom = gt::vec_fmt_number(prom, decimals = 1, sep_mark = \"\", dec_mark = \",\")) |&gt; \n  mutate(eje_x = e$eje_x) |&gt; \n  mutate(label = glue(\"{prom} {fuck}&lt;br&gt;por episodio\"))\n\n# figura ------------------------------------------------------------------\n\n# logo de Ted Lasso\nlogo &lt;- \"2023/semana_39/logo.png\"\n\n# tibble para ubicar el logo\nl &lt;- tibble(\n  x = 22,\n  y = 80,\n  path = logo\n)\n\n# l√≠mite del eje vertical, para ubicar el texto de 'Temporada' y los promedios\nlim_eje_y &lt;- 750\n\n# t√≠tulo del eje vertical\ntit_eje_y &lt;- glue(\n  \"Suma acumulada de {fuck}&lt;br&gt;\",\n  \"&lt;span style='font-size:15px'&gt;*Incluyendo todos los personajes*&lt;/span&gt;\")\n\n# figura\ng &lt;- ggplot(datos, aes(Episode_order, cum_total_overall)) +\n  # rect√°ngulos que delimitan las temporadas\n  geom_rect(\n    data = e, \n    aes(xmin = Episode_order, xmax = v1, ymin = 1, ymax = lim_eje_y, fill = label), \n    show.legend = FALSE, inherit.aes = FALSE) +\n  # l√≠neas horizontales\n  geom_hline(\n    yintercept = seq(50, lim_eje_y, 50), linetype = \"8f\", color = c4, \n    linewidth = .25) +\n  # texto 'Temporada' en la parte superior\n  geom_text(\n    data = e, aes(x = eje_x, y = lim_eje_y - 5, label = label),\n    vjust = 1, hjust = .5, color = c3, family = \"bebas\", size = 10) +\n  # texto de promedio de 'fuck' por episodio, por temporada\n  geom_richtext(\n    data = h, aes(x = eje_x, y = lim_eje_y - 33, label = label),\n    color = c3, family = \"ubuntu\", size = 5, fill = NA, label.color = NA,\n    vjust = 1) +\n  # escalera\n  geom_step(color = c6, direction = \"vh\", linewidth = 2) +\n  # logo\n  geom_from_path(data = l, aes(x, y, path = path), width = .7) +\n  # recuadro del panel\n  geom_rect(\n    aes(xmin = 1, xmax = 34, ymin = 1, ymax = lim_eje_y), color = c6,\n    fill = NA, linewidth = 1) +\n  # manual\n  scale_x_continuous(labels = datos$Episode, breaks = seq(1, 34, 1)) +\n  scale_y_continuous(\n    breaks = c(1, seq(50, lim_eje_y, 50))) +\n  nord::scale_fill_nord(palette = \"polarnight\", reverse = TRUE) +\n  coord_cartesian(expand = FALSE, clip = \"on\", ylim = c(1, lim_eje_y)) +\n  labs(\n    x = \"Episodio\",\n    y = tit_eje_y,\n    caption = mi_caption) +\n  theme_void() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(30, 22.7, 10, 22.7),\n    axis.ticks.x = element_line(color = c3),\n    axis.ticks.y = element_line(color = c1),\n    axis.ticks.length = unit(1, \"line\"),\n    plot.background = element_rect(fill = c5, color = c7, linewidth = 3),\n    plot.caption = element_markdown(\n      color = c1, family = \"ubuntu\", size = 11, margin = margin(10, 0, 5, 0)),\n    axis.text.x = element_text(\n      family = \"victor\", color = c3, size = 14, margin = margin(5, 0, 0, 0),\n      face = \"bold\"),\n    axis.text.y = element_text(\n      color = c1, family = \"victor\", vjust = c(rep(c(0, .5, .5), 5), 0), hjust = 1,\n      margin = margin(0, 5, 0, 0), size = c(rep(c(15, 8, 8), 5), 15)),\n    axis.title.x = element_text(\n      color = c3, family = \"ubuntu\", size = 20, margin = margin(10, 0, 0, 0)),\n    axis.title.y = element_markdown(\n      color = c1, family = \"ubuntu\", size = 20, angle = 90, \n      margin = margin(0, 10, 0, 0))\n  ); ggsave(\n    plot = g,\n    filename = \"2023/semana_39/viz.png\",\n    width = 30,\n    height = 30,\n    units = \"cm\"\n  ); browseURL(\"2023/semana_39/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 39"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_37.html",
    "href": "tidytuesday/2023/semana_37.html",
    "title": "Semana 37",
    "section": "",
    "text": "D√≠a cotidiano argentino, comparado con el resto del mundo.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores, RColorBrewer, Set1\nc1 &lt;- \"grey10\"\nc2 &lt;- \"#EE9569\"\nc3 &lt;- \"#75AEE0\"\nc4 &lt;- \"#CAB2D6\"\nc5 &lt;- \"#FDBF6F\"\nc6 &lt;- \"grey90\"\nc7 &lt;- \"grey40\"\n\n# texto gral, categor√≠as (eje vertical)\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# horas, porcentajes\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# t√≠tulo\nfont_add_google(name = \"Taviraj\", family = \"taviraj\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:victor;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 37. The Human Chronome Project&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-09-12/readme.md\")\n\nall_countries &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-09-12/all_countries.csv')\nglobal_human_day &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-09-12/global_human_day.csv')\n\n# me interesan una selecci√≥n de categor√≠as, y comparo Argentina con el mundo\n\n# traducci√≥n de las categor√≠as\nsubcat_trad &lt;- c(\n  `Food preparation` = \"Preparaci√≥n de comida\",\n  `Sleep & bedrest` = \"Dormir y descanso\",\n  `Physical child care` = \"Cuidado de ni√±os\",\n  `Health care` = \"Cuidado de la salud\",\n  `Hygiene & grooming` = \"Higiene y aseo\",\n  `Schooling & research` = \"Escuela e investigaci√≥n\",\n  `Religious practice` = \"Pr√°ctica religiosa\",\n  `Social` = \"Actividades sociales\",\n  `Active recreation` = \"Actividades recreativas\",\n  `Meals` = \"Comidas\"\n)\n\n# categor√≠as de inter√©s, en ingl√©s\nsubcat_interes &lt;- names(subcat_trad)\n\n# Argentina\narg &lt;- all_countries |&gt; \n  filter(country_iso3 == \"ARG\") |&gt; \n  rename_with(.cols = everything(), .fn = str_to_lower) |&gt; \n  rename(hr = hoursperdaycombined) |&gt; \n  filter(subcategory %in% subcat_interes) |&gt; \n  mutate(categ = subcat_trad[subcategory]) |&gt; \n  select(categ, hr)\n\n# mundo\nmundo &lt;- global_human_day |&gt; \n  rename_with(.cols = everything(), .fn = str_to_lower) |&gt; \n  rename(hr = hoursperday) |&gt; \n  filter(subcategory %in% subcat_interes) |&gt; \n  mutate(categ = subcat_trad[subcategory]) |&gt; \n  select(categ, hr)\n\n# calculo la diferencia entre horas por categor√≠as, Argentina y el mundo\n# agrego el porcentaje del d√≠a que representa c/categor√≠a\nd1 &lt;- bind_rows(\n  arg |&gt; mutate(grupo = \"Argentina\"),\n  mundo |&gt; mutate(grupo = \"Mundo\")) |&gt; \n  pivot_wider(names_from = grupo, values_from = hr) |&gt; \n  mutate(porcent = Argentina/24) |&gt; \n  mutate(porcent = gt::vec_fmt_percent(porcent, decimals = 1, dec_mark = \",\", sep_mark = \"\")) |&gt; \n  mutate(label = glue(\"&lt;span style='font-size:30px'&gt;{porcent}&lt;/span&gt;\")) |&gt; \n  rowwise() |&gt; \n  mutate(x = max(c(Argentina, Mundo))) |&gt; \n  mutate(categ = str_wrap(categ, width = 15))\n  \n# transformo a tabla larga para graficar\nd2 &lt;- d1 |&gt; \n  pivot_longer(cols = c(Argentina, Mundo), names_to = \"grupo\", values_to = \"hm\") |&gt; \n  mutate(grupo = fct(grupo, levels = c(\"Mundo\", \"Argentina\"))) |&gt; \n  mutate(categ = str_wrap(categ, width = 15)) |&gt; \n  mutate(categ = fct_reorder(categ, hm))\n\n# figura ------------------------------------------------------------------\n\n# t√≠tulo y subt√≠tulo\nmi_tit &lt;- \"UN D√çA ARGENTINO\"\nmi_sub &lt;- glue(\n  \"M√°s de un tercio del d√≠a la pasamos&lt;br&gt;descansando y durmiendo.&lt;br&gt;&lt;br&gt;\n  Se comparan las horas dedicadas&lt;br&gt;\n  por &lt;b style='color:{c3}'&gt;argentinos&lt;/b&gt; y el &lt;b style='color:{c2}'&gt;promedio\n  mundial&lt;/b&gt;&lt;br&gt;en 10 actividades cotidianas seleccionadas.&lt;br&gt;&lt;br&gt;\n  Se agregan los porcentajes que cada&lt;br&gt;\n  actividad nos ocupa en el d√≠a.\")\n\n# figura\ng &lt;- ggplot(d2, aes(hm, categ, color = grupo, fill = grupo)) +\n  geom_col(\n    position = position_dodge(width = .9), show.legend = FALSE, width = .1) +\n  geom_point(\n    position = position_dodge(width = .9), show.legend = FALSE, size = 4) +\n  geom_richtext(\n    data = d1, aes(x+.25, categ, label = label), inherit.aes = FALSE,\n    family = \"victor\", color = c6,\n    label.color = NA, fill = NA, hjust = 0, position = position_dodge(width = .9)) +\n  annotate(\n    geom = \"richtext\", x = 3.25, y = 2, hjust = 0, vjust = 0, label = mi_sub,\n    label.color = c7, label.margin = unit(rep(2, 4), \"lines\"), fill = c1, \n    color = c6, size = 7.5, family = \"ubuntu\") +\n  scale_x_continuous(\n    breaks = seq(1, 10, 1),\n    expand = c(0, 0),\n    limits = c(0, 10),\n    labels = scales::label_number(suffix = \"H\")) +\n  scale_color_manual(values = c(c2, c3)) +\n  scale_fill_manual(values = c(c2, c3)) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = mi_tit,\n    caption = mi_caption,\n    x = \"Horas diarias dedicadas a la actividad\", y = NULL) +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(8.25, 40, 8.25, 20),\n    plot.background = element_rect(fill = c1, color = c6, linewidth = 3),\n    plot.title = element_text(\n      family = \"taviraj\", size = 70, color = \"white\", hjust = .5,\n      margin = margin(15, 0, 5, 0)),\n    plot.title.position = \"plot\",\n    plot.caption = element_markdown(\n      color = c6, family = \"ubuntu\", hjust = 1, size = 10, \n      margin = margin(10, 0, 0, 0)),\n    panel.background = element_rect(fill = c1, color = NA),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_line(\n      linewidth = .1, linetype = \"8f\", color = c7),\n    panel.grid.major.y = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title.x = element_text(\n      family = \"ubuntu\", color = c6, size = 20, margin = margin(10, 0, 0, 0)),\n    axis.text.y = element_text(\n      size = 20, family = \"sans\", color = c6, margin = margin(0, 10, 0, 0)),\n    axis.text.x = element_text(size = 15, family = \"victor\", color = c6)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_37/viz.png\",\n  width = 30,\n  height = 29,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_37/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 37"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_34.html",
    "href": "tidytuesday/2023/semana_34.html",
    "title": "Semana 34",
    "section": "",
    "text": "Cantidad anual de refugiados que llegan y provienen de Argentina.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(patchwork)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores, MoMA, Koons\nc1 &lt;- \"#CC3A6A\"\nc2 &lt;- \"#5DBBA3\"\nc3 &lt;- \"#E9C063\"\nc4 &lt;- \"#4A1910\"\nc5 &lt;- \"#A41620\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# cantidad, eje vertical\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# a√±os, eje horizontal\nfont_add_google(name = \"Bebas Neue\", family = \"bebas\")\n# t√≠tulo\nfont_add_google(name = \"Vidaloka\", family = \"vidaloka\")\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 34. UNHCR, {{refugees}}&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-08-22/readme.md\")\n\npopulation &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-22/population.csv')\n\n# me interesa saber la cantidad total, anual, de refugiados que ingresan y salen\n# de Argentina\nd &lt;- population |&gt; \n  select(\n    a√±o = year, origen = coo_name, origen_iso = coo_iso, llegada = coa_name,\n    llegada_iso = coa_iso, n = refugees) |&gt; \n  select(a√±o, starts_with(\"o\"), starts_with(\"l\"), n)\n\n# entran a Argentina\narg_in &lt;- d |&gt; \n  filter(llegada == \"Argentina\") |&gt; \n  summarise(n = sum(n), .by = a√±o) |&gt; \n  mutate(estado = \"entran\")\n\n# se originan en Argentina\narg_out &lt;- d |&gt; \n  filter(origen == \"Argentina\") |&gt; \n  summarise(n = sum(n), .by = a√±o) |&gt; \n  mutate(estado = \"salen\")\n\n# combino ambos\narg &lt;- bind_rows(arg_in, arg_out)\n\n# vector del contorno de Argentina\narg_sf &lt;- st_read(\"extra/arg_continental.gpkg\")\n\n# figura ------------------------------------------------------------------\n\n# mapa de Argentina\ngg_arg &lt;- ggplot() +\n  geom_sf(data = arg_sf, fill = alpha(\"#90A8C0\", .2), color = NA) +\n  theme_void()\n\n# labels del eje horizontal, a√±os\neje_x_label &lt;- tibble(xx = 10:22) |&gt; \n  mutate(eje_x = if_else(xx %% 5 == 0, glue(\"20{xx}\"), glue(\"'{xx}\"))) |&gt; \n  pull(eje_x)\n\n# t√≠tulo y subt√≠tulo\nmi_title &lt;- \"Refugiados desde y en Argentina\"\n\nmi_subtitle &lt;- glue(\n  \"El **Alto Comisionado de la ONU para los Refugiados** (UNHCR)\n  registra estad√≠sticas&lt;br&gt;\n  anuales de personas en busca de asilo. \n  Se muestran las cantidades de desplazados&lt;br&gt;\n  que &lt;span style='color:{c2}'&gt;**llegan**&lt;/span&gt; y \n  &lt;span style='color:{c3}'&gt;**provienen**&lt;/span&gt; de **Argentina**.\"\n)\n\n# figura de l√≠neas, cantidad de refugiados ~ a√±os\ngg_ref &lt;- arg |&gt; \n  ggplot(aes(a√±o, n, color = estado)) +\n  geom_hline(\n    yintercept = seq(0, 4000, 1000), color = c5, linewidth = .1, linetype = \"ff\") +\n  geom_line(show.legend = FALSE, linewidth = 3, lineend = \"round\") +\n  geom_point(show.legend = FALSE, color = \"white\", size = .4) +\n  scale_x_continuous(breaks = 2010:2022, labels = eje_x_label) +\n  scale_y_continuous(\n    breaks = seq(0, 4000, 1000),\n    labels = scales::label_number(big.mark = \".\", decimal.mark = \",\"),\n    expand = c(0, 0)) +\n  scale_color_manual(values = c(c2, c3)) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    x = NULL,\n    y = \"Cantidad de refugiados\",\n    title = mi_title,\n    subtitle = mi_subtitle,\n    caption = mi_caption) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    plot.margin = margin(5.5, 11, 5.5, 11),\n    plot.title.position = \"plot\",\n    plot.title = element_text(size = 58, family = \"vidaloka\", color = c5),\n    plot.subtitle = element_markdown(\n      size = 18, color = c4, family = \"ubuntu\", margin = margin(5, 0, 25, 0)),\n    plot.caption = element_markdown(\n      color = c2, size = 12, margin = margin(20, 0, 5, 0)),\n    axis.title.y = element_text(color = c4, family = \"ubuntu\", size = 20),\n    axis.text.x = element_text(color = c4, family = \"bebas\", size = 25, margin = margin(5, 0, 0, 0)),\n    axis.text.y = element_text(color = c4, family = \"ubuntu\", size = 20),\n    axis.ticks.x = element_line(color = c4),\n    axis.ticks.length.x = unit(.25, \"line\"),\n    panel.grid = element_blank()\n  )\n\n# combino ambas figuras, con el mapa de Argentina de fondo\ng &lt;- gg_ref + \n  inset_element(\n    gg_arg, left = .2, bottom = 0, right = .8, top = 1) +\n  plot_annotation(\n    theme = theme(\n      plot.background = element_rect(fill = c1, color = c4, linewidth = 3)\n    ))\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_34/viz.png\",\n  width = 30,\n  height = 34.5,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_34/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 34"
    ]
  },
  {
    "objectID": "tidytuesday/2023/semana_33.html",
    "href": "tidytuesday/2023/semana_33.html",
    "title": "Semana 33",
    "section": "",
    "text": "Distribuci√≥n de elementos relacionados al dinero en e-mails considerados spam.\n\nScript\n\n\nC√≥digo\n# paquetes ----------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\n\n# fuente ------------------------------------------------------------------\n\n# colores, Nord\nc1 &lt;- \"#AD8CAE\"\nc2 &lt;- \"#EDDAEB\"\nc3 &lt;- \"#222B4C\"\nc4 &lt;- \"white\"\nc5 &lt;- \"black\"\n\n# texto gral\nfont_add_google(name = \"Ubuntu\", family = \"ubuntu\")\n# n√∫meros, porcentajes, cantidades\nfont_add_google(name = \"Victor Mono\", family = \"victor\", db_cache = FALSE)\n# eje horizontal, temporadas\nfont_add_google(name = \"Tilt Prism\", family = \"tilt\", db_cache = FALSE)\n\n# √≠conos\nfont_add(\"fa-brands\", \"icon/Font Awesome 6 Brands-Regular-400.otf\")\nfont_add(\"fa-solids\", \"icon/Font Awesome 6 Free-Solid-900.otf\")\n\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# caption\nfuente &lt;- glue(\"Datos: &lt;span style='color:{c3};'&gt;&lt;span style='font-family:mono;'&gt;{{&lt;b&gt;tidytuesdayR&lt;/b&gt;}}&lt;/span&gt; semana 33. *spam* dataset en {{kernlab}}&lt;/span&gt;\")\nautor &lt;- glue(\"Autor: &lt;span style='color:{c3};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf099;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:fa-brands;'&gt;&#xf09b;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {usuario}\")\n\n# datos -------------------------------------------------------------------\n\nbrowseURL(\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-08-15/readme.md\")\n\nspam &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-15/spam.csv')\n\n# me interesan los elementos relativos al dinero: money, dollar, n000\n# c√≥mo se diferencian los e-mails que son o NO son spam\n\n# tiene que tener los elementos: porcentajes &gt; 0\nd &lt;- spam |&gt; \n  select(dollar, money, n000, yesno) |&gt; \n  pivot_longer(cols = -yesno, names_to = \"param\", values_to = \"valor\") |&gt; \n  filter(valor != 0)\n\n# figura ------------------------------------------------------------------\n\n# l√≠neas de referencia horizontales\nlineas_tbl &lt;- tibble(\n  y = c(120, 60, 80, 40, 80, 40),\n  param = c(\"dollar\", \"dollar\", \"money\", \"money\", \"n000\", \"n000\")\n)\n\n# cantidad de datos, para agregar en las esquinas\nd_cantidad &lt;- d |&gt; \n  count(yesno, param) |&gt; \n  inner_join(\n    slice_max(\n      lineas_tbl, \n      order_by = y, \n      n = 3), \n    by = join_by(param))\n\n# cantidad de e-mails que S√ç son spam\nd_yes &lt;- d_cantidad |&gt; \n  filter(yesno == \"y\") |&gt; \n  mutate(label = glue(\"n = {n}\"))\n\n# cantidad de e-mails que NO son spam\nd_no &lt;- d_cantidad |&gt; \n  filter(yesno == \"n\") |&gt; \n  mutate(label = glue(\"n = {n}\"))\n\n# etiquetas para los strips\netiq &lt;- c(\n  dollar = \"**$**\",\n  money = \"**money**\",\n  n000 = \"**000**\"\n)\n\n# colores para representar S√ç/NO es spam\nyesno_colores &lt;- c(S√ç = alpha(\"white\", .9), NO = alpha(\"black\", .9))\n\n# t√≠tulo y subt√≠tulo\n# palabra SPAM en blanco y negro\nspam_blanco &lt;- \"&lt;b style='color:white;'&gt;SPAM&lt;/b&gt;\"\nspam_negro &lt;- \"&lt;b style='color:black;'&gt;SPAM&lt;/b&gt;\"\n\nmi_title &lt;- glue(\"{spam_blanco}{spam_negro}{spam_blanco}{spam_negro}\")\n\nmi_subt &lt;- glue(\n  \"¬øQu√© caracteriza al **spam**? Por lo visto, hablar de plata. \n  Al analizar {nrow(d)} e-mails, se\n  contabiliz√≥ el porcentaje de t√©rminos relativos al dinero: \n  el signo **$**, la palabra **money** y tres ceros **000**.\n  Se indican las cantidades (n) de e-mails en cada panel.\")\n\n# figura\ng &lt;- d |&gt; \n  mutate(yesno = if_else(yesno == \"y\", \"S√ç\", \"NO\")) |&gt; \n  mutate(yesno = factor(yesno, levels = c(\"S√ç\", \"NO\"))) |&gt;\n  ggplot(aes(valor, fill = yesno, color = yesno)) +\n  # horizontales\n  geom_hline(\n    data = lineas_tbl, aes(yintercept = y), \n    linetype = 3, color = c2) +\n  # cantidad, eje vertical, l√≠nea horizontal\n  geom_text(\n    data = lineas_tbl, aes(x = 0, y = y, label = y), inherit.aes = FALSE,\n    hjust = 0, vjust = 0, nudge_y = 1, family = \"victor\", color = c2, size = 3) +\n  # l√≠nea de frecuencia\n  geom_freqpoly(\n    binwidth = .075, alpha = .9) +\n  # cantidades, n, YES\n  geom_text(\n    data = d_yes, aes(2, y, label = label), inherit.aes = FALSE,\n    hjust = 0, vjust = 0, color = yesno_colores[\"S√ç\"], nudge_y = +1,\n    family = \"victor\", size = 4, fontface = \"bold\") +\n  # cantidades, n, NO\n  geom_text(\n    data = d_no, aes(2, y, label = label), inherit.aes = FALSE,\n    hjust = 0, vjust = 1, color = yesno_colores[\"NO\"], nudge_y = -1,\n    family = \"victor\", size = 4, fontface = \"bold\") +\n  # facetas\n  facet_wrap(vars(param), scales = \"free\", labeller = as_labeller(etiq)) +\n  # escalas\n  scale_x_log10(\n    breaks = c(.01, .1, 1, 10),\n    labels = c(\"0,01%\", \"0,1%\", \"1%\", \"10%\")) +\n  scale_y_continuous(expand = c(0, 0)) +\n  scale_color_manual(\n    values = yesno_colores, \n    labels = c(\"&lt;b style='color:white;'&gt;S√ç&lt;/b&gt;\", \"&lt;b style='color:black;'&gt;NO&lt;/b&gt;\")) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = mi_title,\n    subtitle = mi_subt,\n    x = \"Porcentaje del total de caracteres del e-mail&lt;br&gt;&lt;span style='font-size:10pt'&gt;*escala logar√≠tmica*&lt;/span&gt;\",\n    y = \"Cantidad\",\n    color = \"¬øEs spam?    \",\n    caption = mi_caption) +\n  guides(\n    color = guide_legend(\n      override.aes = list(linewidth = 4))\n  ) +\n  theme_minimal() +\n  theme(\n    aspect.ratio = 1,\n    plot.background = element_rect(\n      fill = c1, color = c2, linewidth = 3),\n    plot.margin = margin(15, 20, 10, 15),\n    plot.title = element_markdown(size = 76, family = \"tilt\"),\n    plot.subtitle = element_textbox_simple(\n      family = \"ubuntu\", size = 14, color = c3),\n    plot.caption = element_markdown(\n      hjust = 1, color = c2, margin = margin(10, 0, 0, 0)),\n    axis.text.x = element_text(color = c2, family = \"victor\"),\n    axis.text.y = element_blank(),\n    axis.title.x = element_markdown(\n      color = c3, margin = margin(10, 0, 5, 0), family = \"ubuntu\", size = 17),\n    axis.title.y = element_markdown(color = c3, family = \"ubuntu\", size = 17),\n    axis.ticks.x = element_line(color = c2),\n    panel.spacing.x = unit(1, \"cm\"),\n    panel.grid = element_blank(),\n    strip.text = element_markdown(\n      color = c3, family = \"ubuntu\", size = 15,\n      margin = margin(5, 0, 30, 0)),\n    legend.position = \"top\",\n    legend.margin = margin(10, 0, 5, 0),\n    legend.title = element_text(family = \"ubuntu\", color = c3, size = 14),\n    legend.text = element_markdown(family = \"ubuntu\", size = 12)\n  )\n\n# guardo\nggsave(\n  plot = g,\n  filename = \"2023/semana_33/viz.png\",\n  width = 30,\n  height = 19.17,\n  units = \"cm\")\n\n# abro\nbrowseURL(\"2023/semana_33/viz.png\")\n\n\n\n\nFigura\n\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify fa6-brands:r-project >}} Tidytuesday",
      "2023",
      "Semana 33"
    ]
  },
  {
    "objectID": "index.html#educaci√≥n",
    "href": "index.html#educaci√≥n",
    "title": "V√≠ctor Gauto ",
    "section": "Educaci√≥n",
    "text": "Educaci√≥n\n\n\n\n\n\n\n\n\nDoctorado en Geom√°tica y Sistemas Espaciales\n\n\n\n\n\n\n\n\n\n\n\nInstituto Gulich\n\n\n\n\n\n\n\n\n\n\n\nC√≥rdoba, Argentina\n\n\n\n\n\n\n\n\n\n\n\nEn proceso\n\n\n\n\n\n\n\n\n\n\n\n\nMaestr√≠a en Aplicaciones de Im√°genes Espaciales\n\n\n\n\n\n\n\n\n\n\n\nInstituto Gulich\n\n\n\n\n\n\n\n\n\n\n\nC√≥rdoba, Argentina\n\n\n\n\n\n\n\n\n\n\n\n2023\n\n\n\n\n\n\n\n\n\n\n\n\nMS in Chemical and Biomolecular Engineering\n\n\n\n\n\n\n\n\n\n\n\nSogang University\n\n\n\n\n\n\n\n\n\n\n\nSeoul, Corea del Sur\n\n\n\n\n\n\n\n\n\n\n\n2019\n\n\n\n\n\n\n\n\n\n\n\n\nIngenier√≠a Qu√≠mica\n\n\n\n\n\n\n\n\n\n\n\nUniversidad Tecnol√≥gica Nacional Facultad Regional Resistencia\n\n\n\n\n\n\n\n\n\n\n\nChaco, Argentina\n\n\n\n\n\n\n\n\n\n\n\n2014"
  },
  {
    "objectID": "index.html#investigaci√≥n",
    "href": "index.html#investigaci√≥n",
    "title": "V√≠ctor Gauto ",
    "section": "Investigaci√≥n",
    "text": "Investigaci√≥n\n\n\n\n\n\n\n\n\nGrupo de Investigaci√≥n Sobre Temas Ambientales y Qu√≠micos\n\n\n\n\n\n\n\n\n\n\n\nChaco, Argentina\n\n\n\n\n\n\n\n\n\n\n\nActualmente\n\n\n\n\n\n\n\n\n\n\n\n\nEl Instituto de Detecci√≥n Electromagn√©tica del Medio Ambiente\n\n\n\n\n\n\n\n\n\n\n\nMil√°n, Italia\n\n\n\n\n\n\n\n\n\n\n\n2022\n\n\n\n\n\n\n\n\n\n\n\n\nLaboratorio de Catalizadores a Nanoescala e Ingenier√≠a de Reacciones\n\n\n\n\n\n\n\n\n\n\n\nSe√∫l, Corea del Sur\n\n\n\n\n\n\n\n\n\n\n\n2019"
  },
  {
    "objectID": "index.html#sudoku",
    "href": "index.html#sudoku",
    "title": "V√≠ctor Gauto ",
    "section": "Sudoku",
    "text": "Sudoku\nDisfruto mucho resolver los sudokus de New York Times .\nLlevo registro de los tiempos que me lleva resolver los tres niveles de dificultad.  \n\n\n\n\n\n\n\n\n\n\n\n\n\n574 sudokus\n\n\n72 horas\n\n\n\n\n\n\n\n2025-07-20"
  },
  {
    "objectID": "publicaciones/index.html",
    "href": "publicaciones/index.html",
    "title": " Publicaciones",
    "section": "",
    "text": "Lista de publicaciones y trabajos en los que he participado.  \n\n\n    Spatio-temporal characterization of precipitation in the Middle and Lower Paraguay Basin based on satellite products and weather station data\n\n    \n    \n        \n             Rossana Villalba \n        \n         | \n    \n        \n             Anabella Ferral \n        \n         | \n    \n        \n            Juli√°n Ba√©z\n        \n         | \n    \n        \n             Jorge Kurita \n        \n         | \n    \n        \n             V√≠ctor Hugo Gauto \n        \n         | \n    \n        \n            Juan Carlos Bertoni\n        \n        \n    \n    \n\n    \n         10.5194/isprs-archives-XLVIII-2-W6-2024-65-2024\n    \n\n     2024\n\n    \n    \n         IMERG \n    \n         CHIRPS \n    \n         El Ni√±o \n    \n         Validation \n    \n         Accumulated precipitation \n    \n         Anomalies \n    \n\n    \n\n    Comparison of water surface temperature retrieval methods from Landsat 9 satellite data\n\n    \n    \n        \n             Matias Bonansea \n        \n         | \n    \n        \n            Sof√≠a Guti√©rrez\n        \n         | \n    \n        \n            Mariana Correa\n        \n         | \n    \n        \n             Sof√≠a Pan√° \n        \n         | \n    \n        \n             V√≠ctor Hugo Gauto \n        \n         | \n    \n        \n             Francisco Nemi√±a \n        \n         | \n    \n        \n             Alba Germ√°n \n        \n         | \n    \n        \n             Giuliana Beltramone \n        \n         | \n    \n        \n             Lucio Pinotti \n        \n         | \n    \n        \n             Anabella Ferral \n        \n        \n    \n    \n\n    \n         10.5194/isprs-archives-XLVIII-2-W6-2024-1-2024\n    \n\n     2024\n\n    \n    \n         Landsat Collection 2 Level 2 products \n    \n         Single-Channel method \n    \n         Split-Window algorithm \n    \n         Surface temperature \n    \n\n    \n\n    Remote Sensing Regression Models to Estimate Water Quality Indicators in Continental Waters in North-East Argentina\n\n    \n    \n        \n             V√≠ctor Hugo Gauto \n        \n         | \n    \n        \n             Enid Marta Utg√©s \n        \n         | \n    \n        \n            Elsa Ivonne Hervot\n        \n         | \n    \n        \n             Mar√≠a Daniela Tenev \n        \n         | \n    \n        \n             Alejandro Far√≠as \n        \n         | \n    \n        \n             Mat√≠as Bonansea \n        \n         | \n    \n        \n             Anabella Ferral \n        \n        \n    \n    \n\n    \n         10.1109/ARGENCON62399.2024.10735875\n    \n\n     2024\n\n    \n    \n         Remote sensing \n    \n         Water quality \n    \n         Empirical algorithm \n    \n         Chlorophyll-a \n    \n         Turbidity \n    \n         Sentinel-2 \n    \n\n    \n\n    Modelling of Phosphorus and Nitrogen Delivery in a Strategic River Basin\n\n    \n    \n        \n             Sof√≠a Pan√° \n        \n         | \n    \n        \n             Mat√≠as Bonansea \n        \n         | \n    \n        \n            Vera Camacho Vald√©z\n        \n         | \n    \n        \n            In√©s del Valle As√≠s\n        \n         | \n    \n        \n             V√≠ctor Hugo Gauto \n        \n         | \n    \n        \n             Anabella Ferral \n        \n        \n    \n    \n\n    \n         10.1109/ARGENCON62399.2024.10735960\n    \n\n     2024\n\n    \n    \n         Water quality \n    \n         Ecosystem services \n    \n         Nutrients \n    \n         InVEST \n    \n\n    \n\n    Changes in Land Covers in Two River Basins in Central Argentina Region. Monitoring the SDG 15.3. 1 Indicator\n\n    \n    \n        \n             Sof√≠a Pan√° \n        \n         | \n    \n        \n             V√≠ctor Hugo Gauto \n        \n         | \n    \n        \n             Mattia Terzaghi \n        \n         | \n    \n        \n             Anabella Ferral \n        \n         | \n    \n        \n             Fransisco Nemi√±a \n        \n         | \n    \n        \n            In√©s del Valle As√≠s\n        \n         | \n    \n        \n             Mat√≠as Bonansea \n        \n        \n    \n    \n\n    \n         10.1109/RPIC59053.2023.10530795\n    \n\n     2023\n\n    \n    \n         Land degradation \n    \n         Urbanization \n    \n         Basin scale \n    \n         Riverine scale \n    \n\n    \n\n    Caracterizaci√≥n √≥ptica de aguas superficiales a partir de im√°genes satelitales multi e hiperespectrales en la regi√≥n de Gran Resistencia, Chaco\n\n    \n    \n        \n             V√≠ctor Hugo Gauto \n        \n        \n    \n    \n\n    \n\n     2023\n\n    \n    \n         Aguas interiores \n    \n         Sentinel-2 \n    \n         PRISMA \n    \n         Sensor hiperespectral \n    \n         An√°lisis crom√°tico \n    \n\n    \n\n    Studies of Adsorption-Desorption of Methylene Blue in a Fixed-Bed Reactor Filled with Cotton and Tanine Industry Waste\n\n    \n    \n        \n             Mar√≠a Daniela Tenev \n        \n         | \n    \n        \n            Camila Torre\n        \n         | \n    \n        \n            Gimena Fontana\n        \n         | \n    \n        \n             V√≠ctor Hugo Gauto \n        \n         | \n    \n        \n             Mario Sergio Cleva \n        \n         | \n    \n        \n             N√©stor Caracciolo \n        \n         | \n    \n        \n             Susana Boeykens \n        \n        \n    \n    \n\n    \n         10.18687/LACCEI2023.1.1.1594\n    \n\n     2023\n\n    \n    \n         Methylene blue \n    \n         fixed-bed reactor \n    \n         cotton husk \n    \n         quebracho chip \n    \n\n    \n\n    First results of PRISMA satellite data applied to water quality monitoring in Argentina\n\n    \n    \n        \n             V√≠ctor Hugo Gauto \n        \n         | \n    \n        \n             Anabella Ferral \n        \n         | \n    \n        \n             Matias Bonansea \n        \n         | \n    \n        \n             Alejandro Far√≠as \n        \n         | \n    \n        \n             Marcelo Scavuzzo \n        \n         | \n    \n        \n             Osvaldo Cardozo \n        \n         | \n    \n        \n             Alba Germ√°n \n        \n         | \n    \n        \n             Claudia Giardino \n        \n        \n    \n    \n\n    \n         10.1109/ARGENCON55245.2022.9939810\n    \n\n     2022\n\n    \n    \n         PRISMA \n    \n         Sentinel 2 \n    \n         Hyperspectral \n    \n         Turbid waters \n    \n         Atmospheric correction \n    \n         Cromaticity \n    \n         Spectral signature \n    \n\n    \n\nNo hay resultados\n\n\n\n\n\n Subir"
  },
  {
    "objectID": "viz/index.html",
    "href": "viz/index.html",
    "title": "Visualizaciones",
    "section": "",
    "text": "Mis proyectos de figuras\nFiguras que he creado utilizando {ggplot2}.\n\n\n\n\n Subir",
    "crumbs": [
      "{{< iconify material-symbols-light:scatter-plot >}} Visualizaciones",
      "Inicio"
    ]
  },
  {
    "objectID": "argentina/animaciones/torres_celulares.html",
    "href": "argentina/animaciones/torres_celulares.html",
    "title": "üóºTorres de telecomunicaciones",
    "section": "",
    "text": "Animaci√≥n del avance de las torres de telecomunicaciones en Argentina, entr 2009 y 2024, para redes GSM, UMTS y LTE.",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones",
      "üóºTorres de telecomunicaciones"
    ]
  },
  {
    "objectID": "argentina/animaciones/torres_celulares.html#paquetes",
    "href": "argentina/animaciones/torres_celulares.html#paquetes",
    "title": "üóºTorres de telecomunicaciones",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(glue)\nlibrary(showtext)\nlibrary(ggtext)\nlibrary(sf)\nlibrary(magick)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones",
      "üóºTorres de telecomunicaciones"
    ]
  },
  {
    "objectID": "argentina/animaciones/torres_celulares.html#estilos",
    "href": "argentina/animaciones/torres_celulares.html#estilos",
    "title": "üóºTorres de telecomunicaciones",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"#76BE72\"\nc2 &lt;- \"#F04C44\"\nc3 &lt;- \"#442224\"\nc4 &lt;- \"grey95\"\nc5 &lt;- \"grey92\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones",
      "üóºTorres de telecomunicaciones"
    ]
  },
  {
    "objectID": "argentina/animaciones/torres_celulares.html#ep√≠grafe",
    "href": "argentina/animaciones/torres_celulares.html#ep√≠grafe",
    "title": "üóºTorres de telecomunicaciones",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n  \"Datos: &lt;span style='color:{c2}; font-size: 8px'&gt;**OpenCelliD Project** is\n  licensed under a Creative&lt;br&gt;Commons Attribution-ShareAlike 4.0 International\n  License&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c2};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c2};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones",
      "üóºTorres de telecomunicaciones"
    ]
  },
  {
    "objectID": "argentina/animaciones/torres_celulares.html#funciones",
    "href": "argentina/animaciones/torres_celulares.html#funciones",
    "title": "üóºTorres de telecomunicaciones",
    "section": "Funciones",
    "text": "Funciones\nConvierte la cantidad de torres por per√≠odo a largo del segmento, para mostrar avance.\n\n\nOcultar c√≥digo\nf_escala &lt;- function(x) {\n  eje_x_min + x*(eje_x_max - eje_x_min)/l_max\n}\n\n\nGeneraci√≥n y almacenamiento de cada mapa.\n\n\nOcultar c√≥digo\nf_mapa &lt;- function(a√±o_mes) {\n\n  # contador para seguimiento en consola\n  l &lt;- length(v_a√±o_mes)\n  n &lt;- which(v_a√±o_mes == a√±o_mes)\n\n  n &lt;- case_when(\n    n &lt;= 9 ~ glue(\"00{n}\"),\n    n &lt;= 99 ~ glue(\"0{n}\"),\n    .default = glue(\"{n}\")\n  )\n\n  print(glue(\"-- {n} de {l} --\"))\n\n  # etiquetas de a√±o y mes\n  a√±o_label &lt;- year(a√±o_mes)\n  mes_label &lt;- str_to_upper(format(a√±o_mes, \"%B\"))\n\n  mi_title &lt;- glue(\n    \"&lt;span style='font-size:20px;'&gt;{a√±o_label}&lt;/span&gt;&lt;br&gt;\",\n    \"&lt;span style='font-size:10px;'&gt;{mes_label}&lt;/span&gt;\")\n\n  # filtro los datos\n  e &lt;- d |&gt;\n    filter(primero &lt;= a√±o_mes)\n\n  # color de la leyenda\n  label_tbl &lt;- count(e, radio) |&gt;\n    mutate(color = paleta_radio[radio]) |&gt;\n    mutate(label = glue(\"{radio}&lt;br&gt;&lt;span style='color:{color}'&gt;{n}&lt;/span&gt;\")) |&gt;\n    arrange(radio)\n\n  scale_color_names &lt;- pull(label_tbl, radio)\n  scale_color_labels &lt;- pull(label_tbl, label)\n  scale_color_values &lt;- pull(label_tbl, color)\n\n  # extensi√≥n\n  d_l &lt;- count(tibble(e), radio) |&gt;\n    arrange(radio) |&gt;\n    mutate(\n      x = eje_x_min,\n      xend = f_escala(n),\n      y = eje_y_radio[radio]\n    ) |&gt;\n    mutate(yend = y) |&gt;\n    mutate(color = paleta_radio[radio])\n\n  # figura\n  g &lt;- ggplot() +\n    # Argentina\n    geom_sf(data = arg_sf, fill = c5, color = NA, linewidth = .1) +\n    # torres de radio\n    geom_sf(data = e, aes(color = radio, size = radio), alpha = .5) +\n    # l√≠neas horizontales\n    geom_segment(\n      data = d_l, aes(x, y, xend = xend, yend = yend),  color = d_l$color,\n      linewidth = 1) +\n    # a√±o\n    annotate(\n      geom = \"text\", x = I(.85), y = I(.95), label = a√±o_label, vjust = 0,\n      family = \"jet\", size = 6, color = c3) +\n    # mes\n    annotate(\n      geom = \"text\", x = I(.85), y = I(.944), label = mes_label, vjust = 1,\n      family = \"jet\", size = 3, color = c3) +\n    scale_color_manual(\n      breaks = scale_color_names,\n      labels = scale_color_labels,\n      values = scale_color_values) +\n    scale_size_manual(values = c(.1, .4, .7)) +\n    labs(color = NULL, caption = mi_caption) +\n    coord_sf(\n      xlim = c(bb_sf$xmin, bb_sf$xmax),\n      ylim = c(bb_sf$ymin, bb_sf$ymax),\n      expand = FALSE) +\n    guides(\n      color = guide_legend(\n        position = \"inside\",\n        override.aes = list(size = 3, alpha = 1)),\n      size = guide_none()\n    ) +\n    theme_void() +\n    theme(\n      plot.background = element_rect(fill = c4, color = c3, linewidth = 1),\n      plot.margin = margin(r = 4, b = 3, l = 4),\n      plot.caption = element_markdown(\n        family = \"ubuntu\", color = c1, size = 7, lineheight = unit(1.1, \"line\"),\n        margin = margin(t = -15, r = 5)),\n      legend.position.inside = c(0.6, 0.4),\n      legend.key.spacing.y = unit(.7, \"line\"),\n      legend.justification.inside = c(0, 1),\n      legend.text = element_markdown(family = \"jet\")\n    )\n\n  # guardo\n  ggsave(\n    plot = g,\n    filename = glue(\"./argentina/animaciones/torres_celulares/{n}.png\"),\n    width = 1000,\n    height = 2140,\n    units = \"px\"\n  )\n\n}",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones",
      "üóºTorres de telecomunicaciones"
    ]
  },
  {
    "objectID": "argentina/animaciones/torres_celulares.html#datos",
    "href": "argentina/animaciones/torres_celulares.html#datos",
    "title": "üóºTorres de telecomunicaciones",
    "section": "Datos",
    "text": "Datos\nLos datos de las torres de celulares se encuentran en OpenCellid. Es requisito tener una cuenta para poder solicitar un token de acceso y descargar los datos.\n\n\nOcultar c√≥digo\nd &lt;- read_csv(\n  \"./argentina/vectores/722X.csv\",\n  col_names = 1:14,\n  col_select = c(1, 7, 8, 12, 13)) |&gt;\n  rename(radio = X1, lon = X7, lat = X8, primero = X12, ultimo = X13) |&gt;\n  mutate(primero = as_datetime(primero)) |&gt;\n  mutate(ultimo = as_datetime(ultimo)) |&gt;\n  mutate(primero = as.Date(primero)) |&gt;\n  mutate(ultimo = as.Date(ultimo)) |&gt;\n  mutate(a√±o = year(primero), mes = month(primero)) |&gt;\n  mutate(radio = fct(radio, levels = c(\"GSM\", \"UMTS\", \"LTE\"))) |&gt;\n  st_as_sf(coords = c(\"lon\", \"lat\")) |&gt;\n  st_set_crs(value = 4326) |&gt;\n  st_transform(crs = 5346)\n\n\nVector de Argentina y contorno.\n\n\nOcultar c√≥digo\narg_sf &lt;- st_read(\"./argentina/vectores/arg_continental.gpkg\") |&gt;\n  st_transform(crs = 5346)\n\n# extensi√≥n de Argentina, para ampliar el mapa\nbb &lt;- st_bbox(arg_sf)\next &lt;- terra::vect(arg_sf) |&gt; terra::ext()\nbb_sf &lt;- terra::vect(ext*1.1, crs = \"EPSG:5346\") |&gt;\n  st_as_sf() |&gt;\n  st_bbox()\n\n\nExtraigo los meses y a√±os de la base de datos.\n\n\nOcultar c√≥digo\nv_a√±o_mes &lt;- tibble(d) |&gt;\n  distinct(a√±o, mes) |&gt;\n  mutate(dia = 1) |&gt;\n  mutate(fecha = make_date(year = a√±o, month = mes, day = dia)) |&gt;\n  arrange(fecha) |&gt;\n  pull(fecha)\n\n# m√°xima cantidad de torres de radio\nl_max &lt;- count(tibble(d), radio, sort = TRUE) |&gt;\n  arrange(radio) |&gt;\n  pull(n) |&gt;\n  max()",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones",
      "üóºTorres de telecomunicaciones"
    ]
  },
  {
    "objectID": "argentina/animaciones/torres_celulares.html#figura",
    "href": "argentina/animaciones/torres_celulares.html#figura",
    "title": "üóºTorres de telecomunicaciones",
    "section": "Figura",
    "text": "Figura\nPaleta de colores por tipo de red.\n\n\nOcultar c√≥digo\npaleta_radio &lt;- c(c1, c2, c3)\nnames(paleta_radio) &lt;- c(\"GSM\", \"UMTS\", \"LTE\")\n\n\nPosici√≥n de cada segmento seg√∫n tipo de torre.\n\n\nOcultar c√≥digo\neje_x_min &lt;- bb_sf$xmax*.895\neje_x_max &lt;- bb_sf$xmax*.99\n\n# posici√≥n vertical, de los segmentos seg√∫n tipo de radio\neje_y_gsm &lt;- bb_sf$ymin*1.402\neje_y_umts &lt;- eje_y_gsm - 2.22e5\neje_y_lte &lt;- eje_y_gsm - 2*2.22e5\n\neje_y_radio &lt;- c(eje_y_gsm, eje_y_umts, eje_y_lte)\nnames(eje_y_radio) &lt;- c(\"GSM\", \"UMTS\", \"LTE\")\n\n\nGenero todas las figuras.\n\n\nOcultar c√≥digo\nwalk(v_a√±o_mes, f_mapa)\nbeepr::beep(2)\nSys.sleep(1.5)\nbeepr::beep(2)\nSys.sleep(1.5)\nbeepr::beep(2)\nSys.sleep(1.5)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones",
      "üóºTorres de telecomunicaciones"
    ]
  },
  {
    "objectID": "argentina/animaciones/torres_celulares.html#animaci√≥n",
    "href": "argentina/animaciones/torres_celulares.html#animaci√≥n",
    "title": "üóºTorres de telecomunicaciones",
    "section": "Animaci√≥n",
    "text": "Animaci√≥n\nA partir de las figuras genero la animaci√≥n.\n\n\nOcultar c√≥digo\nav::av_encode_video(\n  input = list.files(\n    path = \"./argentina/animaciones/torres_celulares/\",\n    full.names = TRUE, pattern = \".png\"\n  )[-c(1, 2)],\n  framerate = 7,\n  output = \"./argentina/animaciones/torres_celulares.mp4\"\n)\n\n\nElimino la carpeta con todas las im√°genes.\n\n\nOcultar c√≥digo\nunlink(\"./argentina/animaciones/torres_celulares/\", recursive = TRUE)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Animaciones",
      "üóºTorres de telecomunicaciones"
    ]
  },
  {
    "objectID": "argentina/instalaciones/buzones.html",
    "href": "argentina/instalaciones/buzones.html",
    "title": "üìÆ Buzones",
    "section": "",
    "text": "Mapa de buzones en Argentina, con detalle de la Provincia de Buenos Aires y Ciudad Aut√≥noma de Buenos Aires.",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üìÆ Buzones"
    ]
  },
  {
    "objectID": "argentina/instalaciones/buzones.html#paquetes",
    "href": "argentina/instalaciones/buzones.html#paquetes",
    "title": "üìÆ Buzones",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(sf)\nlibrary(glue)\nlibrary(patchwork)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üìÆ Buzones"
    ]
  },
  {
    "objectID": "argentina/instalaciones/buzones.html#estilos",
    "href": "argentina/instalaciones/buzones.html#estilos",
    "title": "üìÆ Buzones",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nc1 &lt;- \"#FFCE00\"\nc2 &lt;- \"white\"\nc3 &lt;- \"#152663\"\nc4 &lt;- \"#BE5660\"\n\n\nFuentes: Ubuntu, JetBrains Mono y Diphylleia.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nfont_add_google(name = \"Diphylleia\", family = \"diphylleia\", db_cache = FALSE)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üìÆ Buzones"
    ]
  },
  {
    "objectID": "argentina/instalaciones/buzones.html#ep√≠grafe",
    "href": "argentina/instalaciones/buzones.html#ep√≠grafe",
    "title": "üìÆ Buzones",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n  \"&lt;b&gt;Datos:&lt;/b&gt; &lt;span style='color:{c1};'&gt;@matiasprofeta&lt;/span&gt;\n  &lt;span style='color:{c1};'&gt;@rescatandobuzones&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c1};'&gt;V√≠ctor Gauto&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xeb72;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bluesky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c1};'&gt;vhgauto&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente} {sep} {autor} {sep} &lt;b&gt;{icon_github} {icon_twitter} \",\n  \"{icon_instagram} {icon_mastodon} {icon_bluesky}&lt;/b&gt; {usuario}\"\n)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üìÆ Buzones"
    ]
  },
  {
    "objectID": "argentina/instalaciones/buzones.html#datos",
    "href": "argentina/instalaciones/buzones.html#datos",
    "title": "üìÆ Buzones",
    "section": "Datos",
    "text": "Datos\nVectores de las provincias y sus departamentos, obtenidos del Instituto Geogr√°fico Nacional.\n\n\nOcultar c√≥digo\npcias &lt;- st_read(\"argentina/vectores/pcias_continental.gpkg\") |&gt;\n  select(provincia = NAM)\n\ndptos &lt;- st_read(\"argentina/vectores/dptos_continental.gpkg\") |&gt;\n  st_transform(crs = 5346) |&gt;\n  st_make_valid() |&gt;\n  st_crop(pcias) |&gt;\n  select(departamento = NAM)\n\n\nSelecciono la Provincia de Buenas y la Ciudad Aut√≥noma de Buenos Aires para ver con mayor detalle. Incluyo los departamentos y comunas, respectivamente.\n\n\nOcultar c√≥digo\nbsas &lt;- pcias |&gt;\n  filter(provincia == \"Buenos Aires\")\n\ncaba &lt;- pcias |&gt;\n  filter(provincia == \"Ciudad Aut√≥noma de Buenos Aires\")\n\ndptos_bsas &lt;- terra::crop(terra::vect(dptos), terra::vect(bsas)) |&gt;\n  st_as_sf()\n\ndptos_caba &lt;- filter(dptos, str_detect(departamento, \"Comuna\"))\n\n\nLos buzones provienen de un mapa en Google Maps. Leo las capas del archivo .kml.\n\n\nOcultar c√≥digo\nlayers &lt;- st_layers(\"argentina/vectores/buzones.kml\")\ncapas &lt;- layers$name\n\n\nDefino una funci√≥n para la lectura de cada capa disponible y aplico.\n\n\nOcultar c√≥digo\nf_kml &lt;- function(x) {\n  l &lt;- st_read(\n    dsn = \"argentina/vectores/buzones.kml\",\n    layer = x) |&gt;\n    st_transform(crs = 5346)\n\n  return(l)\n}\n\nbuzones &lt;- map(capas, f_kml) |&gt;\n  list_rbind() |&gt;\n  st_as_sf() |&gt;\n  st_geometry() |&gt;\n  st_sf() |&gt;\n  rename(geometry = 1) |&gt;\n  mutate(nro = row_number())\n\n\nExtraigo los buzones ubicados en Provincia de Buenos Aires y Ciudad Aut√≥noma de Buenos Aires.\n\n\nOcultar c√≥digo\nbuzones_bsas &lt;- st_intersection(bsas, buzones)\nbuzones_caba &lt;- st_intersection(caba, buzones)\n\n\nCuento la cantidad de buzones en Provincia de Buenos Aires y Ciudad Aut√≥noma de Buenos Aires. Para ello cuento la cantidad existente en cada departamento, luego combino con los vectores de las regiones.\n\n\nOcultar c√≥digo\ncentros_dptos &lt;- st_point_on_surface(dptos)\n\ncentros_pcias &lt;- st_join(centros_dptos, pcias)\n\npolig_dptos &lt;- st_join(dptos, centros_pcias) |&gt;\n  rename(departamento = departamento.x) |&gt;\n  select(-departamento.y)\n\nbuzones_dptos &lt;- st_join(polig_dptos, buzones)\n\n\nCantidad de buzones por regi√≥n y porcentaje.\n\n\nOcultar c√≥digo\nn_bsas &lt;- buzones_dptos |&gt;\n  filter(provincia == \"Buenos Aires\") |&gt;\n  drop_na() |&gt;\n  nrow()\n\nn_caba &lt;- buzones_dptos |&gt;\n  filter(provincia == \"Ciudad Aut√≥noma de Buenos Aires\") |&gt;\n  drop_na() |&gt;\n  nrow()\n\nn_buzones &lt;- nrow(buzones)\n\nporcentaje_bsas &lt;- gt::vec_fmt_percent(x = n_bsas/n_buzones, decimals = 0)\nporcentaje_caba &lt;- gt::vec_fmt_percent(x = n_caba/n_buzones, decimals = 0)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üìÆ Buzones"
    ]
  },
  {
    "objectID": "argentina/instalaciones/buzones.html#figura",
    "href": "argentina/instalaciones/buzones.html#figura",
    "title": "üìÆ Buzones",
    "section": "Figura",
    "text": "Figura\nT√≠tulo y subt√≠tulo\n\n\nOcultar c√≥digo\nmi_title &lt;- \"Buzones Argentinos\"\n\nmi_subtitle &lt;- glue(\n  \"En **Argentina** hay {n_buzones} buzones. En Provincia de Buenos Aires&lt;br&gt;\",\n  \"se encuentra el {porcentaje_bsas}. Capital Federal posee el \",\n  \"{porcentaje_caba}.\")\n\n\nIncluyo la imagen de una estampilla dedicada a los buzones, emitida en 2011.\n\n\nOcultar c√≥digo\nestampilla_label &lt;- glue(\n  \"Estampilla emitida por&lt;br&gt;\",\n  \"el **Correo Argentino**.&lt;br&gt;\",\n  \"Am√©rica UPAEP-Buzones,&lt;br&gt;\",\n  \"2011.\")\n\n\nFigura de la estampilla.\n\n\nOcultar c√≥digo\nestampilla &lt;- ggplot() +\n  annotate(\n    geom = \"richtext\", x = 0, y = 0, fill = NA, label.color = NA, hjust = 0,\n    label = glue(\n      \"&lt;img src='argentina/extras/buzones_estampilla.jpg' width='140'&gt;&lt;/img&gt;&lt;br&gt;\",\n      \"{estampilla_label}\"), family = \"ubuntu\", size = 5, color = c2) +\n  coord_cartesian(xlim = c(-.01, .01), ylim = c(-.01, .01), expand = FALSE) +\n  theme_void()\n\n\nLogo del Correo Argentino.\n\n\nOcultar c√≥digo\nlogo &lt;- ggplot() +\n  annotate(\n    geom = \"richtext\", x = 0, y = 0, fill = NA, label.color = NA, hjust = 0,\n    label = glue(\n      \"&lt;img src='argentina/extras/buzones_logo.png' width='100'&gt;&lt;/img&gt;\")\n  ) +\n  coord_cartesian(xlim = c(-.01, .01), ylim = c(-.01, .01), expand = FALSE) +\n  theme_void()\n\n\nMapa de Argentina, Provincia de Buenos Aires y Ciudad Aut√≥noma de Buenos Aires.\n\n\nOcultar c√≥digo\ng1 &lt;- ggplot() +\n  geom_sf(data = pcias, fill = c1, color = c2, linewidth = .5) +\n  geom_sf(\n    data = buzones, color = c3, size = 2, alpha = .6, shape = 4, stroke = 1) +\n  coord_sf(clip = \"off\") +\n  theme_void()\n\ng2 &lt;- ggplot() +\n  geom_sf(data = dptos_bsas, fill = c1, color = c2, linewidth = .4) +\n  geom_sf(\n    data = buzones_bsas, color = c3, size = 2, alpha = .5, shape = 4,\n    stroke = 1) +\n  theme_void()\n\ng3 &lt;- ggplot() +\n  geom_sf(data = dptos_caba, fill = c1, color = c2, linewidth = .4) +\n  geom_sf(\n    data = buzones_caba, color = c3, size = 3, alpha = .6, shape = 4,\n    stroke = 1) +\n  theme_void()\n\n\nCombino los mapas de acuerdo con el dise√±o dado.\n\n\nOcultar c√≥digo\ndise√±o &lt;- \"\nAB\nAC\n\"\n\ng &lt;- g1 + g2 + g3 + plot_layout(design = dise√±o)\n\n\nCombino los mapas de las regiones con el logo de Correo Argentino y la estampilla de los buzones.\n\n\nOcultar c√≥digo\ngg &lt;- g +\n  inset_element(estampilla, left = 1.2, bottom = 1.1, top = .3, right = -2.2) +\n  inset_element(logo, left = -3.25, bottom = -.95, top = .9, right = .9) +\n  plot_annotation(\n    title = mi_title,\n    subtitle = mi_subtitle,\n    caption = mi_caption,\n    theme = theme(\n      aspect.ratio = 1,\n      plot.background = element_rect(\n        fill = c4, color = c3, linewidth = 3\n      ),\n      plot.title.position = \"plot\",\n      plot.title = element_text(\n        family = \"diphylleia\", size = 80, color = c1,\n        hjust = .5, margin = margin(t = 5)\n      ),\n      plot.subtitle = element_markdown(\n        color = c2, family = \"ubuntu\", size = 20, hjust = .5,\n        lineheight = 1.3\n      ),\n      plot.caption = element_markdown(\n        color = c2, family = \"ubuntu\", size = 15,\n        margin = margin(b = 10, r = 10)\n      )\n    )\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = gg,\n  filename = \"argentina/instalaciones/buzones.png\",\n  width = 30,\n  height = 40,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üìÆ Buzones"
    ]
  },
  {
    "objectID": "argentina/instalaciones/plantas_potabilizadoras.html",
    "href": "argentina/instalaciones/plantas_potabilizadoras.html",
    "title": "üö∞Plantas potabilizadoras",
    "section": "",
    "text": "Mapa de plantas de tratamiento de agua de Argentina.",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üö∞Plantas potabilizadoras"
    ]
  },
  {
    "objectID": "argentina/instalaciones/plantas_potabilizadoras.html#paquetes",
    "href": "argentina/instalaciones/plantas_potabilizadoras.html#paquetes",
    "title": "üö∞Plantas potabilizadoras",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(sf)\nlibrary(glue)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üö∞Plantas potabilizadoras"
    ]
  },
  {
    "objectID": "argentina/instalaciones/plantas_potabilizadoras.html#estilos",
    "href": "argentina/instalaciones/plantas_potabilizadoras.html#estilos",
    "title": "üö∞Plantas potabilizadoras",
    "section": "Estilos",
    "text": "Estilos\nPaleta de colores.\n\n\nOcultar c√≥digo\ncol &lt;- MoMAColors::moma.colors(palette_name = \"Smith\")\nc1 &lt;- \"#FFFFFF\"\nc2 &lt;- \"#000000\"\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üö∞Plantas potabilizadoras"
    ]
  },
  {
    "objectID": "argentina/instalaciones/plantas_potabilizadoras.html#ep√≠grafe",
    "href": "argentina/instalaciones/plantas_potabilizadoras.html#ep√≠grafe",
    "title": "üö∞Plantas potabilizadoras",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n  \"&lt;b&gt;Datos:&lt;/b&gt; &lt;span style='color:{col[4]};'&gt;IGN&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{col[4]};'&gt;V√≠ctor Gauto&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xeb72;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bluesky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{col[4]};'&gt;vhgauto&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente} {sep} {autor} {sep} &lt;b&gt;{icon_github} {icon_twitter} \",\n  \"{icon_instagram} {icon_mastodon} {icon_bluesky}&lt;/b&gt; {usuario}\"\n)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üö∞Plantas potabilizadoras"
    ]
  },
  {
    "objectID": "argentina/instalaciones/plantas_potabilizadoras.html#datos",
    "href": "argentina/instalaciones/plantas_potabilizadoras.html#datos",
    "title": "üö∞Plantas potabilizadoras",
    "section": "Datos",
    "text": "Datos\nVectores de las provincias con sus departamentos. Obtengo el vector de plantas potabilizadoras del Instituto Geogr√°fico Nacional, y conservo √∫nicamente los que se encuentran en actividad. Asigno a cada provincia un color de la gama del azul.\n\n\nOcultar c√≥digo\ndeptos &lt;- st_read(\"argentina/vectores/dptos_continental.gpkg\") |&gt;\n  st_transform(crs = 5346) |&gt;\n  st_geometry()\n\ncol_pcias &lt;- colorRampPalette(\n  c(col[5], scales::muted(col[5])), alpha = .6)(24)\n\npcias &lt;- st_read(\"argentina/vectores/pcias_continental.gpkg\") |&gt;\n  mutate(fill_pcias = col_pcias)\n\nv &lt;- st_read(\n  \"argentina/vectores/extras/puntos_de_fabricacion_y_procesamiento_BH220.json\") |&gt;\n  filter(fun == 6) |&gt;\n  st_transform(crs = 5346)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üö∞Plantas potabilizadoras"
    ]
  },
  {
    "objectID": "argentina/instalaciones/plantas_potabilizadoras.html#figura",
    "href": "argentina/instalaciones/plantas_potabilizadoras.html#figura",
    "title": "üö∞Plantas potabilizadoras",
    "section": "Figura",
    "text": "Figura\nSubt√≠tulo y posici√≥n.\n\n\nOcultar c√≥digo\nx_sub &lt;- st_bbox(deptos)$xmax\ny_sub &lt;- st_bbox(deptos)$ymax\n\nmi_subtitle &lt;- glue(\n  \"En &lt;b style='color: {c1}'&gt;Argentina&lt;/b&gt; hay en\",\n  \"funcionamiento &lt;b style='color:#EF7923'&gt;{nrow(v)}&lt;/b&gt;\",\n  \"plantas de tratamiento\",\n  \"de agua.\",\n  .sep = \"&lt;br&gt;\"\n)\n\n\nFigura.\n\n\nOcultar c√≥digo\ng &lt;- ggplot() +\n  # provincias\n  geom_sf(\n    data = pcias, aes(fill = fill_pcias), linewidth = .4, color = c1,\n    show.legend = TRUE\n  ) +\n  # departamentos\n  geom_sf(\n    data = deptos, fill = NA, color = c1, linewidth = .1, linetype = \"55\"\n  ) +\n  # plantas potabilizadoras\n  geom_sf(\n    data = v, shape = 21, fill = col[4], size = 7, color = c2, alpha = .9\n  ) +\n  # subt√≠tulo\n  annotate(\n    geom = \"richtext\", x = x_sub*.84, y = y_sub*.66, label = mi_subtitle,\n    fill = NA, label.color = NA, size = 12, color = col[4], hjust = 0,\n    family = \"ubuntu\"\n  ) +\n  scale_fill_identity() +\n  scale_shape_identity() +\n  labs(caption = mi_caption) +\n  theme_void() +\n  theme(\n    plot.margin = margin(r = 8, l = 8, t = 2),\n    plot.background = element_rect(\n      fill = col[5], color = col[2], linewidth = 3),\n    plot.caption = element_markdown(\n      family = \"jet\", color = c1, hjust = .5, size = 20,\n      margin = margin(b = 10))\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"argentina/instalaciones/plantas_potabilizadoras.png\",\n  width = 30,\n  height = 65,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üö∞Plantas potabilizadoras"
    ]
  },
  {
    "objectID": "argentina/instalaciones/educacion.html",
    "href": "argentina/instalaciones/educacion.html",
    "title": "üè´ Ciencia y educaci√≥n",
    "section": "",
    "text": "Mapa de instituciones de ciencia y educaci√≥n.",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üè´ Ciencia y educaci√≥n"
    ]
  },
  {
    "objectID": "argentina/instalaciones/educacion.html#paquetes",
    "href": "argentina/instalaciones/educacion.html#paquetes",
    "title": "üè´ Ciencia y educaci√≥n",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(terra)\nlibrary(glue)\nlibrary(tidyterra)\nlibrary(ggfx)\nlibrary(showtext)\nlibrary(ggtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üè´ Ciencia y educaci√≥n"
    ]
  },
  {
    "objectID": "argentina/instalaciones/educacion.html#estilos",
    "href": "argentina/instalaciones/educacion.html#estilos",
    "title": "üè´ Ciencia y educaci√≥n",
    "section": "Estilos",
    "text": "Estilos\nColores aleatorios a partir de una gama de rosados.\n\n\nOcultar c√≥digo\nc1 &lt;- \"lightblue\"\nc2 &lt;- \"orange\"\nc3 &lt;- \"white\"\nc4 &lt;- \"grey5\"\nc5 &lt;- \"grey30\"\n\n\nFuentes: Ubuntu, JetBrains Mono y fontawesome.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üè´ Ciencia y educaci√≥n"
    ]
  },
  {
    "objectID": "argentina/instalaciones/educacion.html#ep√≠grafe",
    "href": "argentina/instalaciones/educacion.html#ep√≠grafe",
    "title": "üè´ Ciencia y educaci√≥n",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n  \"&lt;b&gt;Datos:&lt;/b&gt; &lt;span style='color:{c3};'&gt;IGN&lt;/span&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;V√≠ctor Gauto&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xeb72;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bluesky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;vhgauto&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente} {sep} {autor} {sep} &lt;b&gt;{icon_github} {icon_twitter} \",\n  \"{icon_instagram} {icon_mastodon} {icon_bluesky}&lt;/b&gt; {usuario}\"\n)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üè´ Ciencia y educaci√≥n"
    ]
  },
  {
    "objectID": "argentina/instalaciones/educacion.html#datos",
    "href": "argentina/instalaciones/educacion.html#datos",
    "title": "üè´ Ciencia y educaci√≥n",
    "section": "Datos",
    "text": "Datos\nObtengo los datos del Instituto Geogr√°fico Nacional, en la categor√≠a Ciencia y educaci√≥n, Universidad.\n\n\nOcultar c√≥digo\nu &lt;- vect(\"argentina/vectores/puntos_de_ciencia_y_educacion_020602.json\") |&gt;\n  project(\"EPSG:5346\")\n\n\nLeo los datos de las provincias y departamentos de Argentina.\n\n\nOcultar c√≥digo\ndptos &lt;- vect(\"argentina/vectores/dptos_continental.gpkg\")\npcias &lt;- vect(\"argentina/vectores/pcias_continental.gpkg\")\n\n\nMe interesa la Universidad Tecnol√≥gica Nacional (UTN).\n\n\nOcultar c√≥digo\nd &lt;- u |&gt;\n  mutate(\n    es_utn = str_detect(gna, \"Universidad Tecnol√≥gica Nacional\")\n  ) |&gt;\n  mutate(\n    es_utn = if_else(\n      is.na(es_utn),\n      FALSE,\n      es_utn\n    )\n  )\n\n\nDivido los datos seg√∫n si son de la UTN o del resto de instituciones.\n\n\nOcultar c√≥digo\nd_utn &lt;- filter(d, es_utn)\nd_otra &lt;- filter(d, !es_utn)\n\n\nCantidad total de UTN.\n\n\nOcultar c√≥digo\nn_u &lt;- format(nrow(u), big.mark = \".\", decimal.mark = \",\")",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üè´ Ciencia y educaci√≥n"
    ]
  },
  {
    "objectID": "argentina/instalaciones/educacion.html#figura",
    "href": "argentina/instalaciones/educacion.html#figura",
    "title": "üè´ Ciencia y educaci√≥n",
    "section": "Figura",
    "text": "Figura\nDescripci√≥n y subt√≠tulo del mapa.\n\n\nOcultar c√≥digo\nleyenda_tbl &lt;- tibble(\n  x = 5.1e6,\n  y = c(7.5e6, 7.38e6),\n  label = c(\n    \"Universidad Tecnol√≥gica\\nNacional (UTN)\",\n    \"Otras instituciones\\neducativas\")\n) |&gt;\n  mutate(x_label = x+.5e5)\n\nmi_subtitle &lt;- glue(\n  \"En &lt;b&gt;Argentina&lt;/b&gt; hay {n_u} &lt;b style='color:{c1}'&gt;instituciones&lt;/b&gt;&lt;br&gt;\",\n  \"dedicadas al desarrollo cient√≠fico y&lt;br&gt;\",\n  \"educativo. Del total, {nrow(d_utn)} son facultades&lt;br&gt;\",\n  \"regionales de la \",\n  \"&lt;b style='color:{c2}'&gt;Universidad&lt;br&gt;Tecnol√≥gica Nacional&lt;/b&gt;.\"\n)\n\n\nFigura.\n\n\nOcultar c√≥digo\ng &lt;- ggplot() +\n  # departamentos\n  geom_sf(data = dptos, fill = c4, color = c5, linewidth = .1) +\n  # provincias\n  geom_sf(data = pcias, fill = NA, color = c5, linewidth = .5) +\n  # otras universidades\n  with_blur(\n    geom_sf(\n      data = d_otra, color = c1, size = 4, shape = 20),\n    sigma = 8\n  ) +\n  geom_sf(\n    data = d_otra, color = c1, size = .5, shape = 20) +\n  # Universidad Tecnol√≥gica Nacional\n  with_blur(\n    geom_sf(\n      data = d_utn, color = c2, size = 4, shape = 20),\n    sigma = 8\n  ) +\n  geom_sf(\n    data = d_utn, color = c2, size = .5, shape = 20) +\n  # leyenda\n  with_blur(\n    geom_point(\n      data = leyenda_tbl, aes(x, y), color = c(c2, c1), size = 7),\n    sigma = 8\n  ) +\n  geom_point(\n    data = leyenda_tbl, aes(x, y), color = c(c2, c1), size = 2\n  ) +\n  geom_text(\n    data = leyenda_tbl, aes(x_label, y, label = label), family = \"ubuntu\",\n    color = c3, hjust = 0, size = 7, lineheight = unit(.8, \"line\")\n  ) +\n  annotate(\n    geom = \"richtext\", x = 4.7e6, y = 5e6, label = mi_subtitle, size = 8,\n    family = \"ubuntu\", color = c3, fill = NA, label.color = NA, hjust = 0,\n    lineheight = 1.2\n  ) +\n  coord_sf(clip = \"off\") +\n  labs(caption = mi_caption) +\n  theme_void() +\n  theme(\n    plot.margin = margin(r = 160, t = .6, b = .6),\n    plot.background = element_rect(fill = c4, color = c3, linewidth = 3),\n    plot.caption.position = \"plot\",\n    plot.caption = element_markdown(\n      family = \"ubuntu\", color = c1, size = 20, hjust = .5,\n      margin = margin(b = 10, r = -160)\n    )\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"argentina/instalaciones/educacion.png\",\n  width = 30,\n  height = 54,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üè´ Ciencia y educaci√≥n"
    ]
  },
  {
    "objectID": "argentina/instalaciones/parques_nacionales.html",
    "href": "argentina/instalaciones/parques_nacionales.html",
    "title": "üèûÔ∏è Parques Nacionales",
    "section": "",
    "text": "Parques Nacionales y su extensi√≥n.",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üèûÔ∏è Parques Nacionales"
    ]
  },
  {
    "objectID": "argentina/instalaciones/parques_nacionales.html#paquetes",
    "href": "argentina/instalaciones/parques_nacionales.html#paquetes",
    "title": "üèûÔ∏è Parques Nacionales",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(sf)\nlibrary(ggrepel)\nlibrary(patchwork)\nlibrary(showtext)\nlibrary(ggtext)\nlibrary(glue)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üèûÔ∏è Parques Nacionales"
    ]
  },
  {
    "objectID": "argentina/instalaciones/parques_nacionales.html#estilos",
    "href": "argentina/instalaciones/parques_nacionales.html#estilos",
    "title": "üèûÔ∏è Parques Nacionales",
    "section": "Estilos",
    "text": "Estilos\nColores.\n\n\nOcultar c√≥digo\nMetBrewer::met.brewer(name = \"Moreau\")\nc1 &lt;- \"#421600\"\nc2 &lt;- \"#792503\"\nc3 &lt;- \"white\"\nc4 &lt;- \"#BC7524\"\nc5 &lt;- \"#8DADCA\"\nc6 &lt;- \"#527BAA\"\nc7 &lt;- \"#082844\"\n\n\nFuentes de texto.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"bebas\",\n  regular = \"././fuente/BebasNeue-Regular.ttf\"\n)\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üèûÔ∏è Parques Nacionales"
    ]
  },
  {
    "objectID": "argentina/instalaciones/parques_nacionales.html#ep√≠grafe",
    "href": "argentina/instalaciones/parques_nacionales.html#ep√≠grafe",
    "title": "üèûÔ∏è Parques Nacionales",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n  \"&lt;b&gt;Datos: &lt;/b&gt; &lt;span style='color:{c3};'&gt;IGN&lt;/span&gt;,\n  &lt;/b&gt; &lt;span style='color:{c3};'&gt;Instituto Geogr√°fico Nacional&lt;/span&gt;\"\n)\nautor &lt;- glue(\"&lt;span style='color:{c3};'&gt;V√≠ctor Gauto&lt;/span&gt;\")\nicon_twitter &lt;- glue(\n  \"&lt;span style='font-family:jet;'&gt;&#xeb72;&lt;/span&gt;\"\n)\nicon_instagram &lt;- glue(\n  \"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\"\n)\nicon_github &lt;- glue(\n  \"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\"\n)\nicon_mastodon &lt;- glue(\n  \"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\"\n)\nicon_bluesky &lt;- glue(\n  \"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\"\n)\nusuario &lt;- glue(\"&lt;span style='color:{c3};'&gt;vhgauto&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} &lt;b&gt;{icon_github} {icon_twitter} \",\n  \"{icon_instagram} {icon_mastodon} {icon_bluesky}&lt;/b&gt; {usuario}\"\n)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üèûÔ∏è Parques Nacionales"
    ]
  },
  {
    "objectID": "argentina/instalaciones/parques_nacionales.html#datos",
    "href": "argentina/instalaciones/parques_nacionales.html#datos",
    "title": "üèûÔ∏è Parques Nacionales",
    "section": "Datos",
    "text": "Datos\nVector de pol√≠gonos de √Åreas Protegidas de Argentina, descargado del Instituto Geogr√°fico Nacional (Geodesia y demarcaci√≥n / L√≠mites / Pol√≠gono / √Årea protegida).\n\n\nOcultar c√≥digo\nap &lt;- st_read(\"argentina/vectores/extras/area_protegida.json\") |&gt;\n  st_transform(\"EPSG:5346\")\n\n\nConservo √∫nicamente los Parques Nacionales. Unifico el Parque Nacional Iber√°, que est√° dividido en varias partes.\n\n\nOcultar c√≥digo\npn &lt;- ap |&gt;\n  filter(gna == \"Parque Nacional\") |&gt;\n  mutate(nam = if_else(str_detect(nam, \"Iber√°\"), \"Iber√°\", nam))\n\n\nCombino los pol√≠gonos, calculo el √°reas y recorto los nombres de los Parques Nacionales.\n\n\nOcultar c√≥digo\npn &lt;- pn |&gt;\n  summarise(geometry = st_union(geometry), .by = nam) |&gt;\n  mutate(a = st_area(geometry)) |&gt;\n  mutate(a = as.numeric(a)) |&gt;\n  mutate(a = a * 1e-6) |&gt;\n  mutate(nam_corto = str_wrap(nam, width = 15)) |&gt;\n  mutate(nam = fct_reorder(nam, a)) |&gt;\n  mutate(nam_corto = fct_reorder(nam_corto, a)) |&gt;\n  arrange(nam) |&gt;\n  mutate(fila = row_number())\n\n\nVector de Argentina continental.\n\n\nOcultar c√≥digo\narg &lt;- st_read(\"argentina/vectores/arg_continental.gpkg\") |&gt;\n  st_transform(\"EPSG:5346\")",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üèûÔ∏è Parques Nacionales"
    ]
  },
  {
    "objectID": "argentina/instalaciones/parques_nacionales.html#figura",
    "href": "argentina/instalaciones/parques_nacionales.html#figura",
    "title": "üèûÔ∏è Parques Nacionales",
    "section": "Figura",
    "text": "Figura\nLa figura est√° compuesta por dos gr√°ficos: un mapa con las ubicaciones de los Parques Nacionales y un gr√°fico de puntos indicando la extensi√≥n de cada uno.\n\n√Årea de los Parques Nacionales\nLos ejes y sus t√≠tulos.\n\n\nOcultar c√≥digo\neje_x &lt;- tibble(\n  x = seq(0, 6000, 1000),\n  y = 0,\n  label = seq(0, 6000, 1000)\n) |&gt;\n  mutate(label = format(label, big.mark = \".\", decimal.mark = \",\"))\n\ntit_eje_x &lt;- tibble(\n  x = 3000,\n  y = -.5,\n  label = \"√Årea (km&lt;sup&gt;2&lt;/sup&gt;)\"\n)\n\nverticales &lt;- tibble(\n  x = seq(0, 6000, 1000),\n  xend = x,\n  y = .5,\n  yend = nrow(pn) + .5\n)\n\n\nFigura de puntos.\n\n\nOcultar c√≥digo\ng1 &lt;- pn |&gt;\n  ggplot(aes(x = a, y = fila)) +\n  geom_segment(\n    data = verticales,\n    aes(x = x, xend = xend, y = y, yend = yend),\n    color = c2,\n    linewidth = .1\n  ) +\n  geom_segment(aes(x = 0, xend = a, yend = fila), color = c4, linewidth = .25) +\n  geom_point(color = c5, fill = c7, size = 4, shape = 23) +\n  geom_point(shape = 16, color = c5, size = .6) +\n  geom_text(\n    aes(label = nam),\n    nudge_x = 150,\n    hjust = 0,\n    color = c3,\n    family = \"ubuntu\",\n    size = 4.5\n  ) +\n  scale_x_continuous(\n    breaks = seq(0, 6000, 1000),\n    expand = c(0, 0),\n    labels = scales::label_number(big.mark = \".\", decimal.mark = \",\")\n  ) +\n  scale_y_continuous(\n    labels = c(nrow(pn):10, glue(\"0{9:1}\")),\n    breaks = 1:nrow(pn)\n  ) +\n  labs(y = NULL, x = \"√Årea (km&lt;sup&gt;2&lt;/sup&gt;)\") +\n  coord_cartesian(clip = \"off\", expand = FALSE) +\n  theme_void(base_size = 13) +\n  theme(\n    aspect.ratio = 2,\n    plot.margin = margin(10, 70, 10, 10),\n    axis.title.x = element_markdown(\n      family = \"ubuntu\",\n      color = c5,\n      size = rel(1.3),\n      hjust = 1,\n      margin = margin(t = 5)\n    ),\n    axis.text.x = element_text(\n      family = \"jet\",\n      color = c5,\n      margin = margin(t = 3)\n    ),\n    axis.text.y = element_text(\n      color = c5,\n      family = \"jet\",\n      hjust = 0,\n      margin = margin(0, 10, 0, 0)\n    ),\n    axis.ticks.y = element_blank()\n  )\n\n\n\n\nMapa de Parques Nacionales\nCalculo los centroides de cada Parque Nacional.\n\n\nOcultar c√≥digo\ncen &lt;- pn |&gt;\n  st_centroid() |&gt;\n  st_geometry()\n\n\nMapa de los Parque Nacionales, indicando sus ubicaciones centrales. Los nombres se colocaron evitando que se superpongan mediante el paquete {ggrepel}.\n\n\nOcultar c√≥digo\ng2 &lt;- ggplot() +\n  geom_sf(data = arg, fill = c2, color = c4, linewidth = .1) +\n  geom_sf(data = cen, shape = 23, color = c5, fill = c7, size = 4) +\n  geom_sf(data = cen, shape = 16, color = c5, size = .6) +\n  geom_label_repel(\n    data = pn,\n    aes(label = nam_corto, geometry = geometry),\n    stat = \"sf_coordinates\",\n    size = 4.5,\n    point.padding = 20,\n    hjust = 0,\n    family = \"ubuntu\",\n    seed = 2025,\n    fill = NA,\n    color = c3,\n    label.size = unit(0, \"line\"),\n    label.padding = unit(.1, \"line\")\n  ) +\n  coord_sf(clip = \"off\", expand = FALSE) +\n  theme_void()\n\n\n\n\nComposici√≥n final\nSe combinan ambas figuras (g_col y g_sf) mediante {patchwork}.\nDefino el dise√±o de la composici√≥n de figuras.\n\n\nOcultar c√≥digo\ndise√±o &lt;- \"\n  A#B\n  A#B\n\"\n\n\nDefino el t√≠tulo de la figura.\n\n\nOcultar c√≥digo\nargentina &lt;- glue(\n  \"&lt;span style='color:{c6};'&gt;Ar&lt;/span&gt;ge&lt;span style='color:gold;'&gt;n&lt;/span&gt;ti&lt;span style='color:{c6};'&gt;na&lt;/span&gt;\"\n)\n\nmi_titulo &lt;- glue(\"Parques Nacionales de {argentina}\")\n\n\nFigura compuesta.\n\n\nOcultar c√≥digo\ng &lt;- g2 +\n  g1 +\n  plot_layout(design = dise√±o, widths = c(1, .1, 1)) +\n  plot_annotation(\n    title = mi_titulo,\n    caption = mi_caption,\n    theme = theme(\n      plot.background = element_rect(\n        fill = c1,\n        color = c2,\n        linewidth = 3\n      ),\n      plot.margin = margin(10, 10, 10, 10),\n      plot.title.position = \"plot\",\n      plot.title = element_markdown(\n        hjust = .5,\n        size = 65,\n        family = \"bebas\",\n        color = \"white\",\n        margin = margin(r = -75)\n      ),\n      plot.caption.position = \"plot\",\n      plot.caption = element_markdown(\n        hjust = .5,\n        lineheight = 1.3,\n        color = c5,\n        size = 14,\n        family = \"jet\",\n        margin = margin(t = 10, r = -75)\n      )\n    )\n  )\n\n\nGuardo la figura.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"argentina/instalaciones/parques_nacionales.png\",\n  width = 35,\n  height = 35,\n  units = \"cm\"\n)\n\nbrowseURL(paste0(getwd(), \"/argentina/instalaciones/parques_nacionales.png\"))",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üèûÔ∏è Parques Nacionales"
    ]
  },
  {
    "objectID": "argentina/instalaciones/estaciones_smn.html",
    "href": "argentina/instalaciones/estaciones_smn.html",
    "title": "üå¶Ô∏èEstaciones meteorol√≥gicas",
    "section": "",
    "text": "Mapa de estaciones del Servicio Meteorol√≥gico Nacional de Argentina.",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üå¶Ô∏èEstaciones meteorol√≥gicas"
    ]
  },
  {
    "objectID": "argentina/instalaciones/estaciones_smn.html#paquetes",
    "href": "argentina/instalaciones/estaciones_smn.html#paquetes",
    "title": "üå¶Ô∏èEstaciones meteorol√≥gicas",
    "section": "Paquetes",
    "text": "Paquetes\n\n\nOcultar c√≥digo\nlibrary(sf)\nlibrary(patchwork)\nlibrary(ggpattern)\nlibrary(ggtext)\nlibrary(glue)\nlibrary(showtext)\nlibrary(tidyverse)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üå¶Ô∏èEstaciones meteorol√≥gicas"
    ]
  },
  {
    "objectID": "argentina/instalaciones/estaciones_smn.html#estilos",
    "href": "argentina/instalaciones/estaciones_smn.html#estilos",
    "title": "üå¶Ô∏èEstaciones meteorol√≥gicas",
    "section": "Estilos",
    "text": "Estilos\nColores aleatorios a partir de una gama de rosados.\n\n\nOcultar c√≥digo\ncol &lt;- monochromeR::generate_palette(\n  color = \"#D485AA\",\n  modification = \"go_both_ways\",\n  n_colours = 9\n)\n\n\nFuentes: Ubuntu y JetBrains Mono.\n\n\nOcultar c√≥digo\nfont_add(\n  family = \"ubuntu\",\n  regular = \"././fuente/Ubuntu-Regular.ttf\",\n  bold = \"././fuente/Ubuntu-Bold.ttf\",\n  italic = \"././fuente/Ubuntu-Italic.ttf\"\n)\n\nfont_add(\n  family = \"jet\",\n  regular = \"././fuente/JetBrainsMonoNLNerdFontMono-Regular.ttf\"\n)\n\nshowtext_auto()\nshowtext_opts(dpi = 300)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üå¶Ô∏èEstaciones meteorol√≥gicas"
    ]
  },
  {
    "objectID": "argentina/instalaciones/estaciones_smn.html#ep√≠grafe",
    "href": "argentina/instalaciones/estaciones_smn.html#ep√≠grafe",
    "title": "üå¶Ô∏èEstaciones meteorol√≥gicas",
    "section": "Ep√≠grafe",
    "text": "Ep√≠grafe\n\n\nOcultar c√≥digo\nfuente &lt;- glue(\n  \"Datos: &lt;b style='color:{col[9]};'&gt;IGN&lt;/b&gt;, &lt;b style='color:{col[9]};'&gt;SMN&lt;/b&gt;\")\nautor &lt;- glue(\"&lt;span style='color:{col[9]};'&gt;**V√≠ctor Gauto**&lt;/span&gt;\")\nicon_twitter &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf099;&lt;/span&gt;\")\nicon_instagram &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf16d;&lt;/span&gt;\")\nicon_github &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf09b;&lt;/span&gt;\")\nicon_mastodon &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xf0ad1;&lt;/span&gt;\")\nicon_bsky &lt;- glue(\"&lt;span style='font-family:jet;'&gt;&#xe28e;&lt;/span&gt;\")\nusuario &lt;- glue(\"&lt;span style='color:{col[9]};'&gt;**vhgauto**&lt;/span&gt;\")\nsep &lt;- glue(\"**|**\")\n\nmi_caption &lt;- glue(\n  \"{fuente}&lt;br&gt;{autor} {sep} {icon_github} {icon_twitter} {icon_instagram} \",\n  \"{icon_mastodon} {icon_bsky} {usuario}\"\n)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üå¶Ô∏èEstaciones meteorol√≥gicas"
    ]
  },
  {
    "objectID": "argentina/instalaciones/estaciones_smn.html#datos",
    "href": "argentina/instalaciones/estaciones_smn.html#datos",
    "title": "üå¶Ô∏èEstaciones meteorol√≥gicas",
    "section": "Datos",
    "text": "Datos\nVectores de las provincias con sus departamentos. Obtengo el vector de estaciones meteorol√≥gicas del Instituto Geogr√°fico Nacional.\n\n\nOcultar c√≥digo\np &lt;- st_read(\"argentina/vectores/extras/smn_estaciones_meteorologicas.json\") |&gt;\n  st_transform(crs = 5346) |&gt;\n  select(nombre)\n\npcias_cont &lt;- st_read(\"argentina/vectores/pcias_continental.gpkg\")\n\ndptos_cont &lt;- st_read(\"argentina/vectores/dptos_continental.gpkg\")\n\ndptos_antart &lt;- st_read(\"argentina/vectores/dptos_antartida.gpkg\")\n\np_cont &lt;- st_crop(p, dptos_cont)\np_antart &lt;- st_crop(p, dptos_antart)\n\n\nCreo buffer alrededor de los puntos de las estaciones. NO pueden ser puntos para el difuminado de los colores, tiene que ser un pol√≠gono.\nComo el mapa de Ant√°rtida es m√°s peque√±o, los pol√≠gonos tiene que ser m√°s grandes.\n\n\nOcultar c√≥digo\np_cont_buffer &lt;- st_buffer(p_cont, dist = 12000)\np_antart_buffer &lt;- st_buffer(p_antart, dist = 30000)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üå¶Ô∏èEstaciones meteorol√≥gicas"
    ]
  },
  {
    "objectID": "argentina/instalaciones/estaciones_smn.html#figura",
    "href": "argentina/instalaciones/estaciones_smn.html#figura",
    "title": "üå¶Ô∏èEstaciones meteorol√≥gicas",
    "section": "Figura",
    "text": "Figura\nLogo del SMN y subt√≠tulo de la figura.\n\n\nOcultar c√≥digo\nsmn &lt;- \"&lt;img src='https://upload.wikimedia.org/wikipedia/commons/7/72/SMN_Logo_Alta.png' width='200'&gt;&lt;/img&gt;\"\n\nmi_subtitle &lt;- glue(\n  \"En &lt;b style='color: {col[9]}'&gt;Argentina&lt;/b&gt; hay {nrow(p)}&lt;br&gt;estaciones meteorol√≥gicas.&lt;br&gt;\"\n)\n\n\nContorno del mapa y dise√±o de la figura compuesta.\n\n\nOcultar c√≥digo\nbb &lt;- st_bbox(pcias_cont)\n\ndise√±o &lt;- \"\nA#\nAB\n\"\n\n\nMapa del sector Ant√°rtico.\n\n\nOcultar c√≥digo\ng_antart &lt;- ggplot() +\n  # departamentos\n  geom_sf(data = dptos_antart, fill = col[3], color = col[5]) +\n  # estaciones meteorol√≥gicas\n  geom_sf_pattern(\n    data = p_antart_buffer, color = NA, pattern = \"gradient\",\n    pattern_orientation = \"radial\",\n    pattern_fill = col[3], # centro\n    pattern_fill2 = col[8], # exterior\n    pattern_density = 1) +\n  scale_fill_viridis_d(option = \"turbo\") +\n  coord_sf(clip = \"off\", expand = TRUE) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(color = NA, linewidth = 2, fill = col[2])\n  )\n\n\nMapa de Argentina continental.\n\n\nOcultar c√≥digo\ng_cont &lt;- ggplot() +\n  # departamentos\n  geom_sf(data = dptos_cont, fill = col[2], color = col[5]) +\n  # provincias\n  geom_sf(data = pcias_cont, fill = NA, color = col[7], linewidth = .25) +\n  # estaciones meteorol√≥gicas\n  geom_sf_pattern(\n    data = p_cont_buffer, color = NA, pattern = \"gradient\",\n    pattern_orientation = \"radial\",\n    pattern_fill = col[3], # centro\n    pattern_fill2 = col[8], # exterior\n    pattern_density = 1) +\n  # subt√≠tulo\n  annotate(\n    geom = \"richtext\", x = bb[\"xmax\"], y = bb[\"ymax\"], label = mi_subtitle,\n    fill = NA, label.color = NA, hjust = 0, size = 9, color = col[7],\n    family = \"ubuntu\", vjust = 1\n  ) +\n  # logo SMN\n  annotate(\n    geom = \"richtext\", x = bb[\"xmax\"], y = 5.5e6,\n    label.padding = unit(rep(1, 4), \"lines\"),\n    label.margin = unit(rep(4, 4), \"lines\"),\n    label = smn, fill = NA, label.color = NA, hjust = 0, vjust = 0\n  ) +\n  scale_fill_viridis_d(option = \"turbo\") +\n  coord_sf(clip = \"off\", expand = FALSE) +\n  theme_void()\n\n\nComposici√≥n final del mapa.\n\n\nOcultar c√≥digo\ng &lt;- g_cont + g_antart +\n  plot_layout(widths = c(1, .6), design = dise√±o) +\n  plot_annotation(\n    caption = mi_caption,\n    theme = theme(\n      plot.margin = margin(t = 25, r = 25, b = 25, l = 25),\n      plot.background = element_rect(\n        fill = col[1], color = col[4], linewidth = 3),\n      plot.caption = element_markdown(\n        family = \"ubuntu\", size = 15, color = col[7], lineheight = 1.2)\n    )\n  )\n\n\nGuardo.\n\n\nOcultar c√≥digo\nggsave(\n  plot = g,\n  filename = \"argentina/instalaciones/estaciones_smn.png\",\n  width = 30,\n  height = 40,\n  units = \"cm\"\n)",
    "crumbs": [
      "{{< iconify hugeicons:maps >}} Mapas de Argentina {{< iconify emojione:flag-for-argentina >}}",
      "Instalaciones",
      "üå¶Ô∏èEstaciones meteorol√≥gicas"
    ]
  }
]